var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.134,1,2.491]],["body/injectables/AbstractAssetService.html",[0,1.596,1,3.506,2,1.974,3,0.136,4,0.233,5,0.123,6,5.533,7,3.138,8,0.385,9,0.695,10,1.939,11,4.471,12,1.426,13,1.594,14,0.807,15,1.487,16,4.596,17,4.596,18,4.596,19,4.596,20,3.839,21,4.596,22,4.596,23,1.406,24,1.12,25,5.808,26,3.949,27,1.887,28,4.302,29,1.052,30,0.012,31,0.872,32,0.673,33,0.805,34,2.06,35,1.037,36,2.209,37,3.949,38,5.354,39,4.302,40,3.949,41,4.236,42,4.302,43,4.236,44,4.302,45,4.236,46,4.302,47,1.013,48,4.236,49,4.302,50,3.766,51,4.236,52,4.302,53,1.997,54,0.784,55,0.734,56,1.129,57,4.302,58,0.136,59,0.238,60,2.448,61,3.138,62,3.138,63,0.184,64,1.387,65,2.597,66,3.71,67,0.15,68,3.405,69,3.761,70,3.761,71,3.761,72,1.111,73,3.761,74,3.761,75,1.384,76,3.761,77,3.761,78,3.761,79,5.077,80,5.077,81,3.761,82,3.761,83,3.138,84,3.761,85,3.138,86,3.761,87,0.008,88,0.008]],["title/classes/AbstractCacheService.html",[67,0.144,89,2.636]],["body/classes/AbstractCacheService.html",[3,0.177,4,0.177,5,0.159,6,5.279,8,0.499,9,0.822,10,1.825,12,1.529,14,0.953,15,1.312,24,1.033,27,1.792,29,0.953,30,0.012,31,0.791,32,0.586,33,0.73,35,0.919,50,4.446,53,1.947,54,1.016,55,1.172,56,1.335,60,2.286,63,0.177,67,0.195,75,1.401,87,0.01,88,0.01,89,4.385,90,4.065,91,4.871,92,5.662,93,5.006,94,4.752,95,4.667,96,5.573,97,5.006,98,5.573,99,4.959,100,5.006,101,5.573,102,7.763,103,5.573,104,5.573,105,5.573,106,5.573,107,5.573,108,7.438,109,5.573,110,5.573]],["title/directives/AbstractCamera.html",[111,0.573,112,1.247]],["body/directives/AbstractCamera.html",[3,0.138,4,0.138,5,0.124,8,0.391,9,0.703,10,1.827,12,1.523,14,0.815,15,1.343,23,1.256,24,1.148,29,0.92,30,0.012,31,0.763,32,0.684,33,0.705,35,1.019,36,1.563,47,1.164,54,0.797,55,0.746,58,0.21,59,0.242,63,0.138,67,0.153,72,1.829,87,0.008,88,0.008,111,0.92,112,1.774,113,1.027,114,7.267,115,3.821,116,1.719,117,5.244,118,3.451,119,3.451,120,5.606,121,5.606,122,5.606,123,1.774,124,2.701,125,4.282,126,1.719,127,2.003,128,5.606,129,5.606,130,5.244,131,5.244,132,1.456,133,2.158,134,5.87,135,1.801,136,4.371,137,4.371,138,4.371,139,1.61,140,2.068,141,4.371,142,4.371,143,4.371,144,4.371,145,1.774,146,2.141,147,4.371,148,1.774,149,4.371,150,4.645,151,4.371,152,2.972,153,4.371,154,2.534,155,1.613,156,1.505,157,4.371,158,4.371,159,4.371,160,3.821,161,4.371,162,4.371,163,4.371,164,5.87,165,2.178,166,4.371,167,5.244,168,4.371,169,2.639,170,1.364,171,2.089,172,3.75,173,4.371,174,4.371,175,4.371,176,4.371,177,4.371,178,1.79,179,4.371,180,3.188,181,4.371,182,1.556,183,3.459,184,3.821,185,4.371,186,4.371,187,3.821,188,4.371,189,1.321]],["title/directives/AbstractComposeEffect.html",[111,0.573,190,1.469]],["body/directives/AbstractComposeEffect.html",[3,0.148,4,0.148,5,0.133,8,0.418,9,0.734,10,1.857,12,1.553,14,0.852,15,1.368,23,1.312,24,1.126,29,0.951,30,0.012,31,0.789,32,0.621,33,0.803,35,1.059,36,1.634,47,1.154,54,0.851,55,0.797,58,0.23,59,0.258,63,0.148,67,0.163,75,0.879,87,0.009,88,0.009,111,0.852,113,1.097,116,1.796,118,3.566,123,1.854,132,1.555,133,2.199,139,2.259,145,1.854,146,2.388,148,1.854,156,1.608,171,3.272,190,2.183,191,7.156,192,5.566,193,4.082,194,3.272,195,3.022,196,4.946,197,4.474,198,3.624,199,4.166,200,5.305,201,1.937,202,1.937,203,4.375,204,2.344,205,6.133,206,4.474,207,4.669,208,4.669,209,4.669,210,4.669,211,4.669,212,4.669,213,4.669,214,2.706,215,1.72,216,3.175,217,4.082,218,4.669,219,2.983,220,4.853,221,4.669,222,4.082,223,4.669,224,6.133,225,4.669,226,4.669,227,4.669,228,4.669,229,3.695,230,4.669,231,4.669]],["title/directives/AbstractConnector.html",[111,0.573,232,1.469]],["body/directives/AbstractConnector.html",[3,0.1,4,0.217,5,0.09,8,0.282,9,0.559,10,1.709,12,1.519,14,0.648,15,1.483,24,1.184,27,1.563,29,0.951,30,0.012,31,0.893,32,0.709,33,0.728,35,1.096,36,1.633,47,1.146,54,1.248,55,1.169,58,0.194,59,0.175,60,1.052,63,0.1,67,0.11,72,0.815,75,0.595,87,0.007,88,0.007,111,0.648,113,0.742,116,1.366,123,1.41,124,2.116,126,1.366,127,1.41,135,1.667,145,0.954,146,1.41,148,0.954,154,1.848,155,1.282,165,2.325,178,1.293,182,1.124,189,1.677,195,2.449,201,1.478,202,1.633,232,1.661,233,6.356,234,2.76,235,1.131,236,2.146,237,5.549,238,5.549,239,2.059,240,1.665,241,6.13,242,2.705,243,6.13,244,1.976,245,6.13,246,2.059,247,2.449,248,2.449,249,2.449,250,2.449,251,2.059,252,2.449,253,2.449,254,2.059,255,2.059,256,2.059,257,2.449,258,6.54,259,2.059,260,2.059,261,2.059,262,1.982,263,1.982,264,2.059,265,2.059,266,2.059,267,2.059,268,1.982,269,2.908,270,3.157,271,3.157,272,2.549,273,1.449,274,1.393,275,1.449,276,1.449,277,1.393,278,1.393,279,1.393,280,1.293,281,1.393,282,1.247,283,1.247,284,1.449,285,1.449,286,2.141,287,1.449,288,1.449,289,1.449,290,1.393,291,1.293,292,1.393,293,1.393,294,2.358,295,1.393,296,1.393,297,1.341,298,1.247,299,1.449,300,1.449,301,1.247,302,1.449,303,3.157,304,4.079,305,2.269,306,3.692,307,3.157,308,2.43,309,3.157,310,3.692,311,4.666,312,3.692,313,4.666,314,4.666,315,4.666,316,4.666,317,3.157,318,1.393,319,1.509,320,1.574,321,1.449,322,1.449,323,1.449,324,1.393,325,1.449,326,1.449,327,1.41,328,1.449,329,1.449,330,1.574,331,1.449,332,1.393,333,1.449,334,1.393,335,1.393,336,1.449,337,1.393,338,1.449,339,1.509,340,5.176,341,3.157,342,3.157,343,1.449,344,1.449,345,2.303,346,3.157,347,3.157,348,3.157,349,3.157,350,3.157,351,3.157,352,4.666,353,3.157,354,3.157,355,1.247,356,2.76,357,3.157,358,3.157]],["title/directives/AbstractEmptyDirective.html",[111,0.573,359,1.421]],["body/directives/AbstractEmptyDirective.html",[3,0.117,4,0.117,5,0.105,8,0.329,9,0.624,10,1.226,12,1.489,14,0.724,15,1.5,24,1.186,27,1.638,29,1.002,30,0.012,31,0.92,32,0.712,33,0.767,35,1.104,36,1.389,47,1.149,54,1.316,55,1.232,56,0.716,58,0.192,59,0.204,63,0.117,67,0.129,72,0.951,75,0.693,87,0.007,88,0.007,111,0.724,113,0.865,123,1.576,124,2.309,126,1.527,127,1.576,135,1.726,145,1.113,146,1.576,148,1.113,155,1.433,178,1.508,182,1.311,189,1.83,201,1.613,202,1.613,235,1.265,236,2.158,239,2.301,240,1.634,242,2.906,246,2.301,247,2.672,248,2.672,249,2.672,250,2.672,251,2.301,252,2.672,253,2.672,254,2.301,255,2.301,256,2.301,257,2.672,259,2.301,260,2.301,261,2.301,262,2.216,263,2.216,264,2.301,265,2.301,266,2.301,267,2.301,268,2.216,269,2.216,272,2.581,273,1.69,274,1.625,275,1.69,276,1.69,277,1.625,278,1.625,279,1.625,280,1.508,281,1.625,282,1.454,283,1.454,284,1.69,285,1.69,286,1.69,287,1.69,288,1.69,289,1.69,290,1.625,291,1.508,292,1.625,293,1.625,294,1.564,295,1.625,296,1.625,297,1.564,298,1.454,299,1.69,300,1.69,301,1.454,302,1.69,308,3.153,318,1.625,319,1.759,320,1.835,321,1.69,322,1.69,323,1.69,324,1.625,325,1.69,326,1.69,327,1.576,328,1.69,329,1.69,330,1.835,331,1.69,332,1.625,333,1.69,334,1.625,335,1.625,336,1.69,337,1.625,338,1.69,339,1.759,343,1.69,344,1.69,359,1.795,360,2.686,361,2.504,362,3.219,363,3.219,364,1.918]],["title/directives/AbstractLazyObject3D.html",[111,0.573,365,1.421]],["body/directives/AbstractLazyObject3D.html",[3,0.095,4,0.095,5,0.085,8,0.268,9,0.715,10,1.637,12,1.537,14,0.83,15,1.465,20,2.448,24,1.174,27,1.537,29,0.933,30,0.012,31,0.883,32,0.697,33,0.714,35,1.084,36,1.195,47,1.126,54,1.269,55,1.189,56,0.583,58,0.17,59,0.166,63,0.095,67,0.209,72,0.774,75,0.564,87,0.006,88,0.006,94,2.867,99,2.867,111,0.623,113,0.704,116,1.314,123,1.356,124,2.051,126,1.314,127,1.356,135,1.646,140,1.401,145,0.906,146,1.356,148,0.906,155,1.234,170,0.935,171,2.145,178,1.227,182,1.067,189,1.626,195,2.374,198,1.494,201,1.433,202,1.591,219,3.437,235,1.088,236,2.141,239,1.98,240,1.822,242,2.636,244,1.915,246,1.98,247,2.636,248,2.374,249,2.374,250,2.374,251,1.98,252,2.374,253,2.374,254,1.98,255,1.98,256,1.98,257,2.374,259,1.98,260,1.98,261,1.98,262,1.907,263,1.907,264,1.98,265,1.98,266,1.98,267,1.98,268,1.907,269,1.907,272,2.538,273,1.375,274,1.322,275,1.375,276,1.375,277,1.322,278,1.322,279,1.322,280,1.227,281,1.322,282,1.184,283,1.184,284,1.375,285,1.375,286,1.375,287,1.375,288,1.375,289,1.375,290,1.322,291,1.227,292,1.322,293,1.322,294,1.273,295,1.322,296,1.322,297,1.273,298,1.184,299,1.375,300,2.059,301,1.184,302,1.375,305,0.935,308,3.332,318,1.322,319,1.432,321,1.375,322,1.375,323,1.375,324,1.322,325,1.375,326,1.375,327,1.356,328,1.375,329,1.375,330,1.494,331,1.375,332,1.322,333,1.375,334,1.322,335,1.322,336,1.375,337,1.322,338,1.375,339,1.432,343,1.375,344,1.375,355,1.773,360,4.667,361,2.038,365,1.545,366,5.99,367,2.186,368,4.704,369,4.704,370,5.223,371,5.223,372,2.62,373,5.314,374,3.923,375,2.62,376,2.62,377,2.997,378,1.907,379,2.372,380,3.923,381,4.704,382,3.923,383,2.62,384,3.923,385,3.923,386,3.552,387,3.923,388,4.358,389,3.923,390,1.032,391,3.923,392,3.923,393,3.923,394,3.923,395,3.923,396,1.809,397,1.915,398,2.372,399,2.997,400,2.997,401,5.975,402,2.997,403,2.997,404,2.997,405,4.488,406,2.997,407,2.997,408,2.62,409,2.997,410,0.85,411,2.997,412,2.997,413,2.62,414,2.997,415,2.997,416,2.372,417,2.62,418,2.997,419,5.381,420,4.488,421,2.62,422,1.717,423,0.998,424,2.997,425,2.997,426,2.186,427,2.997,428,2.997,429,2.997]],["title/directives/AbstractMesh.html",[111,0.573,430,1.469]],["body/directives/AbstractMesh.html",[3,0.099,4,0.099,5,0.089,8,0.279,9,0.554,10,1.432,12,1.507,14,0.642,15,1.489,24,1.184,27,1.686,29,0.98,30,0.012,31,0.9,32,0.712,33,0.75,35,1.095,36,1.467,47,1.134,54,1.373,55,1.285,58,0.193,59,0.173,63,0.099,67,0.109,72,0.805,75,0.871,87,0.007,88,0.007,111,0.642,113,0.733,116,1.354,118,2.869,123,1.397,124,2.101,126,1.354,127,1.397,135,1.707,139,2.029,140,0.973,145,1.397,146,1.842,148,1.397,154,2.27,155,1.271,167,4.36,169,1.883,170,2.202,171,1.49,178,1.277,182,1.11,189,1.665,201,1.467,202,1.467,235,1.121,236,2.136,239,2.04,240,1.529,242,2.431,246,2.04,247,2.431,248,2.431,249,2.431,250,2.431,251,2.04,252,2.431,253,2.431,254,2.04,255,2.04,256,2.04,257,2.431,259,2.04,260,2.04,261,2.04,262,1.964,263,1.964,264,2.04,265,2.04,266,2.04,267,2.04,268,1.964,269,1.964,272,2.547,273,1.431,274,1.376,275,1.431,276,1.431,277,1.376,278,1.376,279,1.376,280,1.277,281,1.376,282,1.232,283,1.232,284,1.431,285,1.431,286,1.431,287,1.431,288,1.431,289,1.431,290,1.376,291,1.277,292,1.376,293,1.376,294,1.325,295,1.376,296,1.376,297,1.325,298,1.232,299,1.431,300,2.122,301,1.232,302,1.431,306,5.958,318,1.376,319,1.49,320,1.554,321,1.431,322,1.431,323,1.431,324,1.376,325,1.431,326,1.431,327,1.397,328,1.431,329,1.431,331,1.431,332,1.376,333,1.431,334,1.376,335,1.376,336,1.431,337,1.376,338,1.431,339,1.49,343,1.431,344,1.431,355,1.232,364,1.624,367,2.275,379,2.468,383,2.726,430,1.646,431,6.469,432,6.093,433,4.623,434,6.093,435,5.509,436,4.816,437,4.822,438,5.327,439,5.509,440,3.119,441,3.119,442,3.119,443,4.623,444,3.119,445,3.119,446,4.623,447,4.816,448,3.119,449,3.659,450,3.119,451,2.468,452,1.624,453,3.119,454,2.726,455,3.119,456,3.119,457,3.119,458,3.119,459,3.119,460,2.275,461,3.119,462,3.119,463,3.119,464,3.119,465,3.119]],["title/directives/AbstractModelLoader.html",[111,0.573,390,1.421]],["body/directives/AbstractModelLoader.html",[3,0.094,4,0.231,5,0.084,8,0.265,9,0.64,10,1.496,12,1.521,14,0.742,15,1.47,20,1.614,24,1.18,27,1.707,29,0.963,30,0.012,31,0.891,32,0.704,33,0.737,35,1.087,36,1.184,47,1.124,54,1.264,55,1.184,56,1.3,58,0.141,59,0.164,63,0.094,67,0.207,72,0.764,75,0.557,87,0.006,88,0.006,94,1.891,99,1.891,111,0.618,113,0.696,123,1.344,124,2.036,126,1.302,127,1.344,135,1.641,140,0.924,145,0.895,146,1.344,148,0.895,154,1.481,178,1.212,182,1.054,189,1.614,201,1.422,202,1.422,219,3.412,235,1.078,236,2.128,239,1.962,240,1.496,242,2.357,244,1.583,246,1.962,247,2.357,248,2.357,249,2.357,250,2.357,251,1.962,252,2.357,253,2.357,254,1.962,255,1.962,256,1.962,257,2.357,259,1.962,260,1.962,261,1.962,262,1.889,263,1.889,264,1.962,265,1.962,266,1.962,267,1.962,268,1.889,269,1.889,272,2.553,273,1.358,274,1.306,275,1.358,276,1.358,277,1.306,278,1.306,279,1.306,280,1.212,281,1.306,282,1.169,283,1.169,284,1.358,285,1.358,286,1.358,287,1.358,288,1.358,289,1.358,290,1.306,291,1.212,292,1.306,293,1.306,294,2.523,295,1.306,296,1.306,297,1.257,298,1.169,299,1.358,300,2.04,301,1.169,302,1.358,308,2.316,318,1.306,319,1.414,321,1.358,322,1.358,323,1.358,324,1.306,325,1.358,326,1.358,327,1.344,328,1.358,329,1.358,330,1.475,331,1.358,332,1.306,333,1.358,334,1.306,335,1.306,336,1.358,337,1.306,338,1.358,339,1.414,343,1.358,344,1.358,365,2.387,366,4.226,368,3.887,369,3.887,370,4.669,371,4.669,373,4.226,374,5.191,375,2.588,376,2.588,378,1.257,380,2.588,381,2.588,382,2.588,384,2.588,385,2.588,386,2.342,387,2.588,388,3.243,389,2.588,390,1.839,391,2.588,392,2.588,393,2.588,394,5.191,395,2.588,410,2.329,417,4.669,422,3.059,466,5.564,467,2.588,468,1.891,469,3.519,470,1.388,471,3.887,472,1.531,473,5.341,474,3.519,475,4.446,476,5.203,477,6.364,478,6.364,479,5.341,480,4.669,481,5.341,482,5.341,483,4.669,484,5.341,485,5.341,486,5.341,487,4.226,488,2.96,489,2.96,490,2.96,491,2.96,492,2.96,493,2.96,494,2.96,495,3.887,496,2.96,497,5.341,498,2.342,499,2.96,500,2.96,501,4.446,502,2.342,503,2.96]],["title/directives/AbstractObject3D.html",[111,0.573,236,1.032]],["body/directives/AbstractObject3D.html",[3,0.082,4,0.082,5,0.074,8,0.441,9,0.482,10,1.412,12,1.471,14,0.559,15,1.49,23,0.862,24,1.153,27,1.586,29,0.92,30,0.013,31,0.917,32,0.684,33,0.747,35,1.047,36,1.692,47,1.146,54,1.158,55,1.085,56,0.506,58,0.176,59,0.144,60,1.342,63,0.082,67,0.141,72,1.917,75,1.196,87,0.006,88,0.006,111,0.559,113,0.611,116,1.179,117,3.902,118,2.568,123,1.217,124,2.117,126,1.179,127,1.49,132,0.866,133,1.802,135,1.712,140,0.812,145,1.217,146,1.678,148,1.678,154,2.473,155,1.355,156,0.895,160,2.273,169,2.976,170,1.539,171,2.653,178,1.649,189,2.07,194,2.356,195,2.176,198,1.296,201,1.479,202,1.479,214,1.777,222,3.521,236,1.904,239,2.176,240,1.979,242,2.45,246,2.176,247,2.45,248,2.45,249,2.45,250,2.45,251,1.777,252,2.45,253,2.45,254,1.777,255,1.777,256,1.777,257,2.45,259,2.45,260,2.45,261,2.176,262,2.359,263,2.359,264,2.176,265,2.45,266,2.45,267,2.176,268,1.711,269,2.095,274,2.176,277,1.777,278,1.777,279,1.777,280,1.649,281,1.777,282,1.591,283,1.591,290,1.777,291,1.649,292,1.777,293,1.777,294,1.711,295,1.777,296,1.777,297,1.711,298,1.591,301,1.947,305,0.812,318,1.777,324,1.777,327,1.49,332,1.777,334,1.777,335,1.777,337,1.777,360,6.068,361,1.768,367,1.897,372,2.273,379,2.058,396,1.57,397,1.661,408,5.555,416,3.188,502,5.244,504,2.689,505,4.028,506,2.6,507,2.6,508,2.6,509,2.6,510,2.6,511,2.6,512,2.6,513,2.6,514,2.6,515,2.6,516,2.6,517,2.6,518,2.6,519,2.6,520,2.6,521,2.6,522,2.6,523,2.6,524,2.6,525,2.6,526,2.6,527,2.6,528,2.6,529,2.6,530,2.6,531,2.6,532,2.6,533,2.6,534,2.938,535,2.6,536,2.273,537,2.058,538,0.895,539,2.273,540,2.6,541,2.6,542,4.754,543,2.6,544,4.028,545,2.6,546,4.028,547,2.6,548,4.028,549,2.6,550,2.6,551,2.6,552,2.6,553,2.6,554,2.6,555,2.6,556,2.6,557,2.6,558,2.273,559,2.6,560,2.6,561,2.6,562,2.6,563,2.6,564,2.6,565,2.6,566,2.6,567,2.6,568,2.6,569,2.6,570,2.6,571,2.6,572,2.6,573,2.6,574,2.6,575,2.6,576,2.6,577,1.768,578,1.768,579,2.058,580,2.6,581,2.6,582,2.6,583,2.6,584,2.6,585,2.6,586,2.6,587,2.6,588,4.028,589,2.6,590,4.931,591,2.6,592,2.058,593,2.6,594,2.6,595,2.6,596,2.568,597,2.6,598,2.6,599,4.028,600,2.6,601,2.6]],["title/directives/AbstractOrbitControls.html",[111,0.573,602,1.469]],["body/directives/AbstractOrbitControls.html",[3,0.127,4,0.127,5,0.114,8,0.359,9,0.759,10,1.607,12,1.459,14,0.769,15,0.708,23,1.185,24,1.105,29,0.769,30,0.012,31,0.638,32,0.634,33,0.589,35,0.961,36,1.475,47,1.094,56,1.233,58,0.241,59,0.222,63,0.127,67,0.14,75,0.756,83,4.04,87,0.008,88,0.008,111,0.769,112,1.213,113,0.943,116,1.622,118,3.303,119,2.09,123,1.674,126,1.622,132,1.337,133,2.104,140,1.729,145,1.674,146,2.067,148,1.213,154,2.112,155,1.522,156,1.382,170,1.729,171,2.647,180,2.928,183,3.176,194,3.03,195,2.799,201,1.821,202,1.821,240,1.491,244,2.258,269,1.705,297,1.705,378,2.353,483,3.509,498,3.176,602,1.972,603,7.026,604,2.906,605,3.509,606,5.019,607,5.019,608,4.313,609,5.411,610,5.411,611,5.019,612,3.488,613,5.539,614,4.626,615,4.014,616,2.642,617,4.383,618,4.383,619,3.767,620,5.019,621,4.04,622,4.369,623,3.344,624,4.383,625,4.04,626,4.04,627,4.383,628,4.383,629,4.383,630,4.383,631,4.626,632,4.383,633,4.014,634,4.014,635,4.014,636,4.014,637,4.014,638,5.019,639,3.767,640,4.383,641,4.383,642,4.014,643,2.112,644,4.383,645,3.539,646,4.014,647,4.014,648,4.014,649,4.988,650,3.176,651,2.73,652,3.176,653,4.014,654,3.509,655,4.014,656,5.539,657,3.509,658,4.014,659,4.014,660,3.509,661,3.509,662,4.383,663,4.014,664,1.53,665,3.509,666,4.014,667,4.014,668,4.014,669,5.539,670,5.539,671,3.509,672,3.509,673,4.014,674,4.014,675,4.014,676,4.014,677,4.014,678,4.014,679,4.014,680,4.014,681,4.014,682,4.014,683,5.539,684,4.014,685,3.509,686,4.014,687,3.176,688,4.014,689,4.014]],["title/directives/AbstractServerActor.html",[111,0.573,690,1.469]],["body/directives/AbstractServerActor.html",[3,0.1,4,0.1,5,0.09,8,0.281,9,0.557,10,0.739,12,1.421,14,0.646,15,1.501,24,1.189,27,1.727,29,0.949,30,0.012,31,0.892,32,0.716,33,0.727,34,1.429,35,1.096,36,1.239,47,1.145,54,1.324,55,1.24,56,1.19,58,0.147,59,0.174,63,0.1,67,0.11,72,0.812,87,0.007,88,0.007,111,0.646,113,0.739,123,1.406,124,2.111,126,1.362,127,1.406,135,1.71,139,1.158,145,0.95,146,1.406,148,0.95,154,2.038,170,1.452,178,1.287,189,1.673,201,1.475,202,1.475,235,1.128,236,2.129,239,2.053,240,1.535,242,2.443,246,2.053,247,2.443,248,2.443,249,2.443,250,2.443,251,2.053,252,2.443,253,2.443,254,2.053,255,2.053,256,2.053,257,2.443,259,2.053,260,2.053,261,2.053,262,1.976,263,1.976,264,2.053,265,2.053,266,2.053,267,2.053,268,1.976,269,1.976,272,2.549,273,1.443,274,1.388,275,1.443,276,1.443,277,1.388,278,1.388,279,1.388,280,1.287,281,1.388,282,1.242,283,1.242,284,1.443,285,1.443,286,1.443,287,1.443,288,1.443,289,1.443,290,1.388,291,1.287,292,1.388,293,1.388,294,1.336,295,1.388,296,1.388,297,1.336,298,1.242,299,1.443,300,1.443,301,2.98,302,1.443,308,1.638,318,1.388,319,1.502,320,1.567,321,1.443,322,1.443,323,1.443,324,1.388,325,1.443,326,1.443,327,1.406,328,1.443,329,1.443,330,1.567,331,1.443,332,1.388,333,1.443,334,1.388,335,1.388,336,1.443,337,1.388,338,1.443,339,1.502,343,1.443,344,1.443,359,1.906,363,2.749,364,1.638,534,4.763,690,1.656,691,3.701,692,6.771,693,2.666,694,2.749,695,2.883,696,4.841,697,6.118,698,6.118,699,3.171,700,5.536,701,5.536,702,5.536,703,3.537,704,4.381,705,3.144,706,3.144,707,3.144,708,3.144,709,3.144,710,3.144,711,3.144,712,3.144,713,3.144,714,3.144,715,4.038,716,3.144,717,3.144,718,5.536,719,3.144,720,3.144,721,3.144,722,3.144,723,3.144]],["title/injectables/ActorRepositoryService.html",[0,1.134,724,2.806]],["body/injectables/ActorRepositoryService.html",[0,1.733,2,2.235,3,0.154,4,0.154,5,0.139,8,0.436,9,0.755,12,1.503,14,0.876,15,1.384,23,1.349,24,1.063,27,1.805,29,0.971,30,0.012,31,0.805,32,0.691,33,0.743,35,0.845,47,0.907,53,1.788,54,0.888,55,0.832,56,1.226,58,0.2,59,0.269,60,2.328,63,0.154,67,0.17,75,1.187,87,0.009,88,0.009,165,2.428,378,3.391,398,3.855,592,6.059,691,3.748,693,1.677,724,4.287,725,6.856,726,4.258,727,6.99,728,6.99,729,6.305,730,6.305,731,4.871,732,7.656,733,6.305,734,6.305,735,6.305,736,4.871,737,6.856,738,7.392,739,6.305,740,1.437,741,4.871,742,4.871,743,2.17,744,2.17,745,2.17,746,2.17,747,2.17,748,2.17,749,4.871,750,4.871,751,4.871,752,4.871,753,4.871,754,4.871,755,4.871,756,4.871,757,4.871,758,6.99,759,4.871,760,6.99,761,6.99,762,6.305,763,4.871,764,4.871]],["title/components/AmbientLightComponent.html",[740,0.802,765,1.421]],["body/components/AmbientLightComponent.html",[3,0.083,4,0.083,5,0.074,8,0.234,9,0.484,10,0.615,12,1.418,13,0.981,14,0.562,15,1.451,23,0.865,24,1.158,27,1.555,29,0.922,30,0.012,31,0.941,32,0.691,33,0.749,34,0.675,35,1.048,36,1.077,47,1.07,53,0.742,54,1.251,55,1.171,56,0.508,58,0.191,59,0.145,60,0.871,63,0.083,67,0.091,72,0.675,75,0.492,87,0.006,88,0.006,111,0.363,112,0.79,113,0.615,123,1.223,124,1.886,126,1.184,127,1.495,132,0.871,133,1.806,135,1.663,145,0.79,146,1.223,148,0.79,154,1.648,155,1.112,156,0.9,178,1.071,182,0.931,189,1.495,190,0.931,201,1.318,202,1.318,204,0.843,214,1.785,215,0.963,232,0.931,235,0.981,236,2.119,239,1.785,240,1.497,242,2.457,246,1.785,247,2.183,248,2.183,249,2.183,250,2.183,251,1.785,252,2.183,253,2.183,254,1.785,255,1.785,256,1.785,257,2.183,259,1.785,260,1.785,261,1.785,262,1.719,263,1.719,264,1.785,265,1.785,266,1.785,267,1.785,268,1.719,269,1.719,272,2.505,273,1.2,274,1.154,275,1.2,276,1.856,277,1.154,278,1.154,279,1.154,280,1.071,281,1.154,282,1.033,283,1.033,284,1.2,285,1.2,286,1.2,287,1.2,288,1.2,289,1.2,290,1.154,291,1.071,292,1.154,293,1.154,294,1.111,295,1.154,296,1.154,297,1.111,298,1.033,299,1.2,300,1.2,301,1.033,302,1.2,305,0.816,318,1.154,319,1.249,320,1.303,321,1.2,322,1.2,323,1.2,324,1.154,325,1.2,326,1.2,327,1.223,328,1.2,329,1.2,330,1.303,331,1.2,332,1.154,333,1.2,334,1.154,335,1.154,336,1.2,337,1.154,338,1.2,339,1.249,343,1.2,344,1.2,355,1.598,359,0.9,364,1.362,365,0.9,390,0.9,410,0.742,423,0.871,430,0.931,452,1.362,470,0.816,472,0.9,504,3.037,538,0.9,602,0.931,604,0.931,616,1.49,643,0.871,664,0.997,690,0.931,693,1.917,695,2.576,715,2.951,740,0.962,743,0.9,744,0.9,745,0.9,746,0.9,747,0.9,748,0.9,765,1.917,766,1.347,767,1.033,768,4.868,769,2.069,770,0.816,771,3.201,772,2.869,773,2.671,774,1.886,775,4.868,776,1.542,777,4.325,778,3.536,779,2.286,780,4.045,781,1.303,782,1.154,783,2.615,784,2.615,785,2.286,786,0.559,787,1.542,788,2.199,789,1.033,790,2.199,791,0.9,792,0.997,793,1.598,794,0.9,795,1.033,796,0.931,797,0.963,798,2.781,799,0.9,800,0.997,801,1.033,802,0.931,803,0.997,804,0.931,805,1.82,806,1.033,807,0.931,808,1.033,809,0.931,810,1.033,811,0.931,812,1.033,813,0.931,814,0.963,815,1.033,816,0.931,817,0.997,818,0.9,819,1.033,820,0.9,821,0.997,822,1.033,823,1.033,824,0.9,825,1.033,826,0.9,827,1.033,828,0.931,829,0.963,830,0.931,831,1.822,832,2.781,833,0.9,834,0.931,835,0.9,836,0.997,837,0.931,838,0.931,839,1.033,840,0.931,841,0.9,842,1.598,843,0.931,844,2.199,845,0.9,846,0.9,847,0.997,848,1.598,849,0.9,850,0.997,851,0.931,852,0.963,853,0.931,854,0.963,855,0.9,856,1.033,857,0.843,858,1.033,859,0.963,860,0.963,861,0.963,862,0.931,863,0.997,864,0.931,865,0.997,866,0.931,867,0.931,868,0.931,869,1.49,870,0.931,871,0.931,872,0.997,873,0.931,874,0.997,875,1.033,876,1.033,877,0.871,878,0.931,879,1.033,880,0.871,881,1.544,882,1.033,883,0.871,884,1.033,885,0.843,886,1.033,887,0.871,888,0.931,889,0.997,890,1.033]],["title/injectables/AnimationService.html",[0,1.134,891,2.491]],["body/injectables/AnimationService.html",[0,1.671,2,2.114,3,0.146,4,0.146,5,0.131,8,0.412,9,0.728,14,0.844,15,1.427,23,1.301,24,1.073,29,0.64,30,0.012,31,0.531,32,0.394,33,0.49,35,0.911,47,0.979,54,1.108,55,1.038,56,1.182,58,0.193,59,0.255,63,0.146,67,0.161,72,1.189,87,0.009,88,0.009,132,1.535,133,2.191,140,2.123,156,1.586,170,1.438,171,2.202,183,4.811,244,2.576,298,2.401,301,2.687,312,5.384,388,5.277,468,2.944,623,3.67,665,6.325,703,4.805,766,2.505,829,2.665,855,1.586,891,4.968,892,4.028,893,4.811,894,6.325,895,6.079,896,6.079,897,4.144,898,4.811,899,6.079,900,6.079,901,6.079,902,6.079,903,6.079,904,6.804,905,5.948,906,5.725,907,7.235,908,6.753,909,6.753,910,6.079,911,4.608,912,4.608,913,4.608,914,6.079,915,4.608,916,4.811,917,6.079,918,4.435,919,6.079,920,6.079,921,6.079,922,6.079,923,6.079,924,4.608,925,4.608,926,6.113,927,4.608,928,4.608,929,6.079,930,4.608,931,4.608,932,4.608,933,4.608,934,3.646,935,4.608,936,4.608]],["title/modules/AtftAnimationModule.html",[937,0.829,938,2.806]],["body/modules/AtftAnimationModule.html",[3,0.199,4,0.199,5,0.179,13,1.898,30,0.012,58,0.234,59,0.347,63,0.199,67,0.219,87,0.01,88,0.01,786,1.342,891,5.037,937,1.26,938,5.674,939,2.16,940,2.09,941,2.311,942,2.311,943,2.311,944,5.486,945,5.486,946,2.538,947,2.16,948,2.234,949,6.275,950,6.275,951,2.811,952,6.275]],["title/modules/AtftCameraModule.html",[937,0.829,953,2.806]],["body/modules/AtftCameraModule.html",[3,0.186,4,0.186,5,0.167,13,1.426,30,0.012,58,0.25,59,0.325,63,0.186,67,0.205,87,0.01,88,0.01,786,1.258,846,2.948,847,2.242,849,2.948,850,2.242,937,1.181,939,2.024,940,1.959,941,2.805,942,2.166,943,2.805,946,2.442,947,2.024,948,2.093,951,2.704,953,5.775,954,5.141,955,5.141,956,5.141,957,5.88,958,5.88,959,2.904,960,2.322,961,7.092,962,2.242]],["title/modules/AtftConnectorModule.html",[937,0.829,963,2.806]],["body/modules/AtftConnectorModule.html",[3,0.192,4,0.192,5,0.173,13,1.471,30,0.012,58,0.244,59,0.336,63,0.192,67,0.212,87,0.01,88,0.01,305,1.893,786,1.298,838,3.06,937,1.218,939,2.088,940,2.021,941,2.842,942,2.234,943,2.842,946,2.488,947,2.088,948,2.16,951,2.755,959,2.959,960,2.396,962,2.313,963,5.69,964,5.303,965,5.303,966,5.303,967,6.067,968,6.067,969,6.067]],["title/modules/AtftControlModule.html",[937,0.829,970,2.806]],["body/modules/AtftControlModule.html",[3,0.186,4,0.186,5,0.167,13,1.426,30,0.012,53,1.668,58,0.25,59,0.325,63,0.186,67,0.205,87,0.01,88,0.01,604,2.093,786,1.258,841,2.948,845,2.948,937,1.181,939,2.024,940,1.959,941,2.805,942,2.166,943,2.805,946,2.442,947,2.024,948,2.093,951,2.704,959,2.904,960,2.322,962,2.242,970,5.775,971,5.141,972,5.141,973,5.141,974,5.88,975,5.88,976,7.092]],["title/modules/AtftDataCenterActorModule.html",[937,0.829,977,3.01]],["body/modules/AtftDataCenterActorModule.html",[3,0.136,4,0.136,5,0.122,13,1.592,30,0.012,34,1.107,58,0.261,59,0.237,63,0.136,67,0.15,87,0.008,88,0.008,476,3.128,691,2.049,693,1.476,724,5.146,743,2.821,744,2.821,745,2.821,746,2.821,747,2.821,748,2.821,786,0.917,804,2.917,807,2.917,809,2.917,811,2.917,813,2.917,830,2.917,837,2.917,859,1.579,860,1.579,861,1.579,894,3.749,937,0.861,939,1.476,940,1.428,941,2.417,942,1.579,943,2.417,946,1.995,947,1.476,948,1.526,951,2.209,959,2.373,960,1.694,962,2.209,977,6.369,978,3.749,979,3.749,980,3.749,981,3.749,982,3.749,983,4.568,984,4.288,985,3.749,986,3.749,987,4.288,988,6.763,989,3.749,990,7.029,991,4.288,992,4.288,993,2.588]],["title/modules/AtftEffectModule.html",[937,0.829,994,2.806]],["body/modules/AtftEffectModule.html",[3,0.167,4,0.167,5,0.15,13,1.275,30,0.012,58,0.26,59,0.291,63,0.167,67,0.184,87,0.009,88,0.009,204,2.721,216,3.576,786,1.125,794,2.906,818,2.906,820,2.906,826,2.906,877,2.812,878,1.872,937,1.056,939,1.81,940,1.752,941,2.669,942,1.937,943,2.669,946,2.279,947,1.81,948,1.872,951,2.524,959,2.711,960,2.077,962,2.005,994,5.888,995,4.597,996,4.597,997,4.597,998,5.259,999,5.259,1000,5.259,1001,5.259,1002,5.259,1003,5.259,1004,5.259,1005,5.259,1006,5.259]],["title/modules/AtftHelperModule.html",[937,0.829,1007,2.806]],["body/modules/AtftHelperModule.html",[3,0.181,4,0.181,5,0.163,13,1.386,30,0.012,58,0.254,59,0.316,63,0.181,67,0.2,87,0.01,88,0.01,786,1.222,791,2.937,792,2.179,824,2.937,831,2.104,833,2.937,937,1.147,939,1.967,940,1.903,941,2.77,942,2.104,943,2.77,946,2.399,947,1.967,948,2.034,951,2.657,959,2.854,960,2.257,962,2.179,1007,5.822,1008,4.995,1009,4.995,1010,4.995,1011,5.714,1012,5.714,1013,6.97,1014,5.714]],["title/modules/AtftLightModule.html",[937,0.829,1015,2.806]],["body/modules/AtftLightModule.html",[3,0.174,4,0.174,5,0.156,13,1.33,30,0.012,58,0.256,59,0.303,63,0.174,67,0.192,87,0.01,88,0.01,765,2.943,771,5.844,774,2.091,786,1.173,816,3.022,817,2.091,835,2.922,836,2.091,853,3.022,854,2.02,937,1.101,939,1.888,940,1.827,941,2.72,942,2.02,943,2.72,946,2.34,947,1.888,948,1.953,951,2.591,959,2.783,960,2.166,962,2.091,1015,5.845,1016,4.795,1017,4.795,1018,4.795,1019,4.795,1020,5.485,1021,5.485,1022,7.72]],["title/modules/AtftLoaderModule.html",[937,0.829,1023,2.806]],["body/modules/AtftLoaderModule.html",[3,0.175,4,0.175,5,0.158,13,1.344,30,0.012,58,0.257,59,0.306,63,0.175,67,0.193,87,0.01,88,0.01,240,1.302,423,1.845,472,2.926,786,1.185,843,3.026,864,3.026,865,2.112,866,3.026,867,1.972,937,1.112,939,1.907,940,1.845,941,2.732,942,2.041,943,2.732,946,2.354,947,1.907,948,1.972,951,2.608,959,2.8,960,2.188,962,2.112,1023,5.851,1024,4.843,1025,4.843,1026,4.843,1027,5.54,1028,5.54,1029,7.747]],["title/modules/AtftMeshModule.html",[937,0.829,1030,2.806]],["body/modules/AtftMeshModule.html",[3,0.157,4,0.157,5,0.141,13,1.204,30,0.012,58,0.262,59,0.275,63,0.157,67,0.173,87,0.009,88,0.009,786,1.062,796,2.982,797,1.829,802,2.982,803,1.893,828,2.982,829,1.829,831,1.829,834,2.982,851,2.982,852,1.829,862,2.982,863,1.893,871,2.982,872,1.893,873,2.982,874,1.893,937,0.997,939,1.71,940,1.654,941,2.598,942,1.829,943,2.598,946,2.198,947,1.71,948,1.768,951,2.434,959,2.614,960,1.961,962,1.893,1030,5.906,1031,4.341,1032,4.341,1033,4.341,1034,4.966,1035,4.966,1036,7.1]],["title/modules/AtftModule.html",[937,0.829,983,2.491]],["body/modules/AtftModule.html",[3,0.155,4,0.155,5,0.139,13,1.187,30,0.012,55,0.836,58,0.263,59,0.271,63,0.155,67,0.171,87,0.009,88,0.009,378,2.08,623,2.955,786,1.047,937,1.27,938,5.684,939,1.686,940,1.631,941,1.803,942,1.803,943,2.581,946,2.178,947,1.686,948,1.743,951,2.412,953,5.684,962,2.672,970,5.684,983,5.243,994,5.684,1037,4.28,1038,4.28,1039,4.28,1040,5.684,1041,5.684,1042,5.684,1043,5.684,1044,4.896,1045,4.896,1046,4.896,1047,4.896,1048,4.896,1049,4.896,1050,4.896,1051,4.765,1052,4.896,1053,4.896,1054,4.896,1055,4.896,1056,4.896,1057,4.896,1058,4.896,1059,4.896,1060,4.896,1061,4.896,1062,4.896,1063,4.28,1064,4.28,1065,4.28,1066,4.896,1067,4.28,1068,4.896]],["title/modules/AtftObjectModule.html",[937,0.829,1040,2.806]],["body/modules/AtftObjectModule.html",[3,0.149,4,0.149,5,0.134,13,1.665,30,0.012,58,0.261,59,0.26,63,0.149,67,0.164,87,0.009,88,0.009,470,1.464,786,1.004,799,2.673,800,1.789,857,2.678,937,0.942,939,1.615,940,1.563,941,2.528,942,1.728,943,2.528,946,2.118,947,1.615,948,1.67,951,2.346,959,2.519,960,1.853,962,2.346,963,5.649,1007,5.649,1015,5.649,1023,5.649,1030,5.649,1040,5.93,1069,4.102,1070,4.102,1071,4.102,1072,4.102,1073,4.102,1074,5.649,1075,5.279,1076,4.96,1077,5.279,1078,5.279,1079,5.279,1080,4.692,1081,4.692,1082,4.692,1083,4.692,1084,4.692,1085,4.692,1086,4.692,1087,4.692,1088,4.692,1089,4.692,1090,4.692,1091,4.692,1092,4.692,1093,4.692,1094,4.692,1095,4.692]],["title/modules/AtftPipeModule.html",[937,0.829,1051,2.806]],["body/modules/AtftPipeModule.html",[3,0.187,4,0.187,5,0.168,13,1.43,30,0.012,58,0.251,59,0.326,63,0.187,67,0.206,87,0.01,88,0.01,786,1.262,937,1.184,939,2.031,940,1.965,941,2.808,942,2.172,943,2.808,946,2.446,947,2.031,948,2.1,951,2.709,959,2.909,960,2.33,962,2.249,1051,5.777,1096,5.156,1097,5.156,1098,5.156,1099,5.825,1100,5.825,1101,5.898,1102,5.898,1103,5.898,1104,5.898]],["title/modules/AtftRaycasterModule.html",[937,0.829,1041,2.806]],["body/modules/AtftRaycasterModule.html",[3,0.177,4,0.177,5,0.159,13,1.804,30,0.012,58,0.257,59,0.308,63,0.177,67,0.195,87,0.01,88,0.01,612,3.725,786,1.192,880,2.833,881,2.321,883,2.833,885,2.742,937,1.119,939,1.918,940,1.856,941,2.739,942,2.052,943,2.739,946,2.363,947,1.918,948,1.984,951,2.617,959,2.81,960,2.201,962,2.125,1041,5.84,1105,4.871,1106,4.871,1107,4.871,1108,4.871,1109,5.573,1110,5.573,1111,5.573,1112,3.789,1113,5.573,1114,5.573]],["title/modules/AtftRendererModule.html",[937,0.829,1042,2.806]],["body/modules/AtftRendererModule.html",[3,0.184,4,0.184,5,0.166,13,1.838,30,0.012,58,0.256,59,0.322,63,0.184,67,0.203,87,0.01,88,0.01,133,2.326,643,2.848,654,5.086,786,1.245,855,2.003,937,1.168,939,2.003,940,1.938,941,2.792,942,2.143,943,2.792,946,2.426,947,2.003,948,2.071,951,2.687,959,2.885,960,2.298,962,2.218,1042,5.793,1115,5.086,1116,5.086,1117,5.086,1118,5.086,1119,5.239,1120,5.818,1121,5.818,1122,5.086,1123,5.818]],["title/modules/AtftStatsModule.html",[937,0.829,1043,2.806]],["body/modules/AtftStatsModule.html",[3,0.187,4,0.187,5,0.168,13,1.852,30,0.012,58,0.251,59,0.327,63,0.187,67,0.207,87,0.01,88,0.01,538,2.037,786,1.266,887,2.854,888,2.106,937,1.188,939,2.037,940,1.971,941,2.812,942,2.179,943,2.812,946,2.451,947,2.037,948,2.106,951,2.714,959,2.915,960,2.337,962,2.256,1043,5.749,1124,5.172,1125,5.172,1126,5.172,1127,5.172,1128,4.97,1129,5.917,1130,5.172,1131,5.917]],["title/modules/AtftTextModule.html",[937,0.829,1074,2.806]],["body/modules/AtftTextModule.html",[3,0.192,4,0.192,5,0.173,13,1.471,30,0.012,58,0.244,59,0.336,63,0.192,67,0.212,87,0.01,88,0.01,786,1.298,869,2.234,870,3.06,937,1.218,939,2.088,940,2.021,941,2.842,942,2.234,943,2.842,946,2.488,947,2.088,948,2.16,951,2.755,959,2.959,960,2.396,962,2.313,1036,5.303,1074,5.69,1132,5.303,1133,5.303,1134,5.303,1135,6.067,1136,6.067]],["title/components/AxesHelperComponent.html",[740,0.802,791,1.421]],["body/components/AxesHelperComponent.html",[3,0.084,4,0.084,5,0.076,8,0.238,9,0.491,10,0.625,12,1.424,13,0.994,14,0.569,15,1.454,23,0.876,24,1.158,27,1.475,29,0.928,30,0.012,31,0.943,32,0.689,33,0.752,34,0.686,35,1.051,36,1.091,47,1.074,53,0.754,54,1.218,55,1.14,56,0.517,58,0.192,59,0.147,63,0.084,67,0.093,72,0.686,75,0.501,87,0.006,88,0.006,111,0.369,112,0.803,113,0.625,123,1.238,124,1.906,126,1.199,127,1.511,132,0.885,133,1.818,135,1.624,145,0.803,146,1.238,148,0.803,154,1.365,155,1.126,156,0.915,178,1.088,182,0.946,189,1.511,190,0.946,201,1.332,202,1.332,204,0.857,214,1.808,215,0.979,232,0.946,235,0.994,236,2.121,239,1.808,240,1.507,242,2.479,246,1.808,247,2.206,248,2.206,249,2.206,250,2.206,251,1.808,252,2.206,253,2.206,254,1.808,255,1.808,256,1.808,257,2.206,259,1.808,260,1.808,261,1.808,262,1.741,263,1.741,264,1.808,265,1.808,266,1.808,267,1.808,268,1.741,269,1.741,272,2.509,273,1.22,274,1.173,275,1.22,276,1.22,277,1.173,278,1.173,279,1.173,280,1.088,281,1.173,282,1.05,283,1.05,284,1.22,285,1.22,286,1.22,287,1.22,288,1.22,289,1.22,290,1.173,291,1.088,292,1.173,293,1.173,294,1.129,295,1.173,296,1.173,297,1.129,298,1.05,299,1.22,300,1.22,301,1.05,302,1.22,305,0.83,318,1.173,319,1.27,320,1.325,321,1.22,322,1.22,323,1.22,324,1.173,325,1.22,326,1.22,327,1.238,328,1.22,329,1.22,330,1.325,331,1.22,332,1.173,333,1.22,334,1.173,335,1.173,336,1.22,337,1.173,338,1.22,339,1.27,343,1.22,344,1.22,355,1.618,359,0.915,364,1.384,365,0.915,390,0.915,410,0.754,423,0.885,430,0.946,452,1.384,469,3.242,470,0.83,472,0.915,504,3.064,538,0.915,602,0.946,604,0.946,616,1.509,643,0.885,664,1.013,690,0.946,693,1.934,740,0.972,743,0.915,744,0.915,745,0.915,746,0.915,747,0.915,748,0.915,765,0.915,766,1.365,767,1.05,770,0.83,772,2.871,773,2.673,774,1.013,776,1.562,781,1.325,782,1.173,786,0.569,787,1.562,788,2.219,789,1.05,790,2.219,791,1.934,792,1.906,793,1.618,794,0.915,795,1.05,796,0.946,797,0.979,798,2.795,799,0.915,800,1.013,801,1.05,802,0.946,803,1.013,804,0.946,805,1.834,806,1.05,807,0.946,808,1.05,809,0.946,810,1.05,811,0.946,812,1.05,813,0.946,814,0.979,815,1.05,816,0.946,817,1.013,818,0.915,819,1.05,820,0.915,821,1.013,822,1.05,823,1.05,824,0.915,825,1.05,826,0.915,827,1.05,828,0.946,829,0.979,830,0.946,831,1.841,832,2.795,833,0.915,834,0.946,835,0.915,836,1.013,837,0.946,838,0.946,839,1.05,840,0.946,841,0.915,842,1.618,843,0.946,844,2.219,845,0.915,846,0.915,847,1.013,848,1.618,849,0.915,850,1.013,851,0.946,852,0.979,853,0.946,854,0.979,855,0.915,856,1.05,857,0.857,858,1.05,859,0.979,860,0.979,861,0.979,862,0.946,863,1.013,864,0.946,865,1.013,866,0.946,867,0.946,868,0.946,869,1.509,870,0.946,871,0.946,872,1.013,873,0.946,874,1.013,875,1.05,876,1.05,877,0.885,878,0.946,879,1.05,880,0.885,881,1.56,882,1.05,883,0.885,884,1.05,885,0.857,886,1.05,887,0.885,888,0.946,889,1.013,890,1.05,1137,4.37,1138,2.103,1139,4.097,1140,3.956,1141,3.582,1142,4.097,1143,2.324,1144,4.097,1145,2.658,1146,2.658]],["title/interfaces/BaseAssetSource.html",[64,1.33,65,2.491]],["body/interfaces/BaseAssetSource.html",[0,1.829,1,3.201,3,0.168,4,0.23,5,0.151,6,3.606,7,3.868,8,0.474,9,0.797,10,1.847,11,3.606,12,1.253,13,1.286,15,1.415,20,2.892,23,1.134,26,3.606,27,1.856,30,0.012,32,0.453,34,2.028,36,2.136,37,3.606,38,5.452,40,3.606,41,3.868,43,3.868,45,3.868,47,0.763,48,3.868,50,3.037,51,3.868,53,1.888,56,1.031,58,0.168,59,0.293,60,2.617,61,3.868,62,3.868,63,0.211,64,1.709,65,4.017,66,5.02,67,0.185,68,4.196,69,4.636,70,4.636,71,4.636,72,1.369,73,4.636,74,4.636,75,1.48,76,4.636,77,4.636,78,4.636,79,5.818,80,5.818,81,4.636,82,4.636,83,3.868,84,4.636,85,3.868,86,4.636,87,0.009,88,0.009,1147,2.761]],["title/interfaces/BaseInfo.html",[64,1.33,1148,2.364]],["body/interfaces/BaseInfo.html",[3,0.183,4,0.183,5,0.165,8,0.517,9,0.841,27,1.907,30,0.012,31,0.906,32,0.688,33,0.836,34,1.493,58,0.183,63,0.255,64,2.597,87,0.01,88,0.01,135,1.277,235,1.833,327,2.285,410,1.64,596,3.011,691,2.763,695,3.011,699,4.504,805,2.122,993,3.491,1147,3.011,1148,4.614,1149,3.154,1150,3.694,1151,4.862,1152,3.932,1153,3.312,1154,3.312,1155,3.694,1156,3.932,1157,3.694,1158,3.491]],["title/injectables/BloomService.html",[0,1.134,1119,2.636]],["body/injectables/BloomService.html",[0,1.439,2,1.699,3,0.117,4,0.117,5,0.105,8,0.331,9,0.627,12,1.56,14,0.727,15,1.362,20,2.856,24,1.1,29,0.917,30,0.013,31,0.7,32,0.635,33,0.646,35,0.884,47,1.093,54,1.204,55,1.234,56,1.554,58,0.241,59,0.205,60,2.572,63,0.166,67,0.129,72,0.956,87,0.007,88,0.007,119,3.628,140,2.174,155,1.669,165,1.846,170,1.896,189,1.836,244,2.574,327,1.583,413,5.31,422,4.349,423,1.744,608,4.49,703,4.218,855,1.803,918,2.702,934,4.144,1119,3.345,1159,2.931,1160,6.074,1161,6.074,1162,6.074,1163,6.074,1164,6.074,1165,5.236,1166,5.236,1167,5.236,1168,3.704,1169,5.236,1170,5.512,1171,6.074,1172,3.704,1173,3.704,1174,5.236,1175,3.704,1176,6.09,1177,3.704,1178,5.236,1179,3.704,1180,5.236,1181,5.236,1182,3.704,1183,3.704,1184,3.704,1185,3.704,1186,3.704,1187,3.238,1188,3.238,1189,3.704,1190,3.704,1191,3.238,1192,4.144,1193,2.931,1194,3.704,1195,3.704,1196,2.931,1197,3.704,1198,4.807,1199,4.578,1200,4.578,1201,6.09,1202,2.931,1203,3.238,1204,3.238,1205,3.238,1206,4.578,1207,3.561,1208,4.807,1209,4.578,1210,4.578,1211,5.772,1212,5.31,1213,3.238,1214,4.578,1215,3.704,1216,2.931,1217,3.704,1218,3.704,1219,3.704,1220,3.704,1221,3.704,1222,3.704,1223,4.131,1224,2.02,1225,4.144,1226,3.704,1227,3.704,1228,3.704,1229,6.074,1230,3.704,1231,3.704,1232,2.519,1233,3.704,1234,3.704,1235,5.236,1236,3.704,1237,3.704,1238,3.704,1239,3.704,1240,3.704,1241,3.704,1242,3.704,1243,2.931,1244,3.704,1245,3.704,1246,3.704,1247,3.704,1248,3.704,1249,3.704,1250,3.704,1251,3.704,1252,3.704,1253,3.704,1254,6.602,1255,3.704,1256,3.704,1257,5.236,1258,3.704,1259,3.704,1260,3.704,1261,3.704,1262,5.236,1263,3.704,1264,3.704,1265,2.236,1266,2.366,1267,6.602,1268,6.074,1269,3.704,1270,3.704]],["title/components/BlurComponent.html",[740,0.802,794,1.421]],["body/components/BlurComponent.html",[3,0.109,4,0.109,5,0.098,8,0.308,9,0.595,10,0.808,12,1.402,14,0.69,15,1.126,23,1.062,24,1.054,29,0.809,30,0.012,31,0.935,32,0.545,33,0.72,34,0.887,35,0.974,36,0.916,47,1.015,53,0.975,54,0.627,55,0.587,58,0.23,59,0.19,63,0.109,67,0.12,75,0.647,87,0.007,88,0.007,111,0.477,112,1.039,113,0.808,123,1.501,127,1.039,132,1.145,133,2.001,139,1.266,140,1.073,145,1.039,146,2.132,148,1.761,156,1.184,165,1.713,190,2.806,192,2.338,196,3.376,197,3.622,198,3.181,199,3.338,200,4.656,201,1.552,202,1.552,203,4.078,204,2.182,206,3.622,214,2.191,215,2.146,216,2.338,232,1.224,235,1.204,236,0.86,240,0.808,272,2.25,305,1.55,355,1.961,359,1.184,365,1.184,390,1.184,396,2.075,397,2.196,410,0.975,423,1.145,430,1.224,470,1.073,472,1.184,538,1.184,577,2.338,578,2.338,602,1.224,604,1.224,616,1.829,643,1.145,664,1.311,690,1.224,693,2.197,740,1.133,743,1.184,744,1.184,745,1.184,746,1.184,747,1.184,748,1.184,765,1.184,766,1.654,767,1.358,770,1.073,772,2.904,773,2.709,774,1.311,776,1.311,782,1.517,786,0.735,787,1.893,788,2.521,789,1.358,790,2.521,791,1.184,792,1.311,793,1.961,794,2.197,795,1.358,796,1.224,797,1.266,798,2.996,799,1.184,800,1.311,801,1.358,802,1.224,803,1.311,804,1.224,805,2.046,806,1.358,807,1.224,808,1.358,809,1.224,810,1.358,811,1.224,812,1.358,813,1.224,814,1.266,815,1.358,816,1.224,817,1.311,818,1.184,819,1.358,820,1.184,821,1.311,822,1.358,823,1.358,824,1.184,825,1.358,826,1.184,827,1.358,828,1.224,829,1.266,830,1.224,831,2.146,832,2.996,833,1.184,834,1.224,835,1.184,836,1.311,837,1.224,838,1.224,839,1.358,840,1.224,841,1.184,842,1.961,843,1.224,844,2.521,845,1.184,846,1.184,847,1.311,848,1.961,849,1.184,850,1.311,851,1.224,852,1.266,853,1.224,854,1.266,855,1.184,856,1.358,857,1.108,858,1.358,859,1.266,860,1.266,861,1.266,862,1.224,863,1.311,864,1.224,865,1.311,866,1.224,867,1.224,868,1.224,869,1.829,870,1.224,871,1.224,872,1.311,873,1.224,874,1.311,875,1.358,876,1.358,877,1.145,878,1.224,879,1.358,880,1.145,881,1.819,882,1.358,883,1.145,884,1.358,885,1.108,886,1.358,887,1.145,888,1.224,889,1.311,890,1.358,1192,2.72,1193,2.72,1271,3.005,1272,4.965,1273,3.438,1274,3.438,1275,3.438,1276,2.72,1277,2.72,1278,2.72,1279,2.72,1280,2.72,1281,2.72,1282,3.438,1283,3.438,1284,3.438,1285,3.438,1286,5.051,1287,4.965,1288,4.965,1289,2.508,1290,2.508,1291,2.72]],["title/interfaces/Composition.html",[64,1.33,1151,2.491]],["body/interfaces/Composition.html",[3,0.187,4,0.187,5,0.168,8,0.529,9,0.852,27,1.891,30,0.012,31,0.68,32,0.652,33,0.756,34,1.525,58,0.187,63,0.257,64,2.612,87,0.01,88,0.01,135,1.304,235,1.92,327,2.306,410,1.676,596,3.076,691,2.823,695,3.076,699,3.384,805,2.149,993,3.566,1147,3.076,1148,4.641,1149,3.222,1150,3.774,1151,4.606,1152,5.385,1153,3.384,1154,3.384,1155,3.774,1156,4.017,1157,3.774,1158,3.566]],["title/components/ContentProjectionComponent.html",[740,0.802,799,1.421]],["body/components/ContentProjectionComponent.html",[3,0.084,4,0.084,5,0.076,8,0.238,9,0.49,10,0.624,12,1.405,13,0.993,14,0.569,15,1.445,23,0.876,24,1.158,27,1.474,29,0.928,30,0.012,31,0.946,32,0.689,33,0.752,34,0.686,35,1.051,36,1.091,47,1.074,53,0.753,54,1.168,55,1.094,58,0.192,59,0.147,63,0.084,67,0.093,72,0.686,83,1.938,87,0.006,88,0.006,111,0.369,112,0.803,113,0.624,123,1.238,124,1.905,126,1.199,127,1.51,132,0.885,133,1.818,135,1.595,145,0.803,146,1.238,148,0.803,156,0.914,178,1.088,182,0.946,189,1.51,190,0.946,201,1.331,202,1.331,204,0.856,214,1.807,215,0.978,219,1.697,232,0.946,235,0.993,236,2.124,239,1.807,240,1.621,242,2.205,246,1.807,247,2.205,248,2.205,249,2.205,250,2.205,251,1.807,252,2.205,253,2.205,254,1.807,255,1.807,256,1.807,257,2.205,259,1.807,260,1.807,261,1.807,262,1.74,263,1.74,264,1.807,265,1.807,266,1.807,267,1.807,268,1.74,269,1.74,272,2.509,273,1.219,274,1.172,275,1.219,276,1.219,277,1.172,278,1.172,279,1.172,280,1.088,281,1.172,282,1.049,283,1.049,284,1.219,285,1.219,286,1.219,287,1.219,288,1.219,289,1.219,290,1.172,291,1.088,292,1.172,293,1.172,294,1.128,295,1.172,296,1.172,297,1.128,298,1.049,299,1.219,300,1.219,301,1.049,302,1.219,305,0.829,308,1.383,318,1.807,320,1.324,321,1.219,322,1.219,323,1.219,324,1.172,325,1.219,326,1.219,327,1.238,328,1.219,329,1.219,330,1.324,331,1.219,332,1.172,333,1.219,334,1.172,335,1.172,336,1.219,337,1.172,338,1.219,339,1.269,343,1.219,344,1.219,355,1.974,359,0.914,364,1.383,365,0.914,390,0.914,410,0.753,423,0.885,430,0.946,452,1.383,470,0.829,472,0.914,504,3.063,538,0.914,602,0.946,604,0.946,616,1.508,639,1.806,643,0.885,664,1.013,690,0.946,693,1.933,740,0.972,743,0.914,744,0.914,745,0.914,746,0.914,747,0.914,748,0.914,765,0.914,766,1.364,767,1.049,770,0.829,772,2.871,773,2.673,774,1.013,776,1.561,781,1.324,782,1.172,786,0.568,787,1.561,788,2.218,789,1.049,790,2.218,791,0.914,792,1.013,793,1.617,794,0.914,795,1.049,796,0.946,797,0.978,798,2.794,799,1.933,800,2.141,801,1.049,802,0.946,803,1.013,804,0.946,805,1.833,806,1.049,807,0.946,808,1.049,809,0.946,810,1.049,811,0.946,812,1.049,813,0.946,814,0.978,815,1.049,816,0.946,817,1.013,818,0.914,819,1.049,820,0.914,821,1.013,822,1.049,823,1.049,824,1.933,825,1.049,826,0.914,827,1.049,828,0.946,829,0.978,830,0.946,831,1.84,832,2.794,833,0.914,834,0.946,835,0.914,836,1.013,837,0.946,838,0.946,839,1.049,840,0.946,841,0.914,842,1.617,843,0.946,844,2.218,845,0.914,846,0.914,847,1.013,848,1.617,849,0.914,850,1.013,851,0.946,852,0.978,853,0.946,854,0.978,855,0.914,856,1.049,857,0.856,858,1.049,859,0.978,860,0.978,861,0.978,862,0.946,863,1.013,864,0.946,865,1.013,866,0.946,867,0.946,868,0.946,869,1.508,870,0.946,871,0.946,872,1.013,873,0.946,874,1.013,875,1.049,876,1.049,877,0.885,878,0.946,879,1.049,880,0.885,881,1.56,882,1.049,883,0.885,884,1.049,885,0.856,886,1.049,887,0.885,888,0.946,889,1.013,890,1.049,1064,2.322,1143,2.322,1292,4.368,1293,2.322,1294,4.095,1295,4.095,1296,5.616,1297,4.095,1298,2.322,1299,4.095,1300,2.322,1301,2.656,1302,2.656,1303,2.656,1304,2.656,1305,2.656,1306,2.322,1307,2.322,1308,2.656]],["title/classes/DagreUtils.html",[67,0.144,1309,3.265]],["body/classes/DagreUtils.html",[3,0.145,4,0.145,5,0.131,8,0.41,14,0.842,15,1.325,24,1.043,29,1.043,30,0.012,31,0.889,32,0.641,33,0.798,35,1.006,47,0.977,56,0.892,58,0.192,60,2.018,63,0.145,67,0.16,75,1.278,87,0.009,88,0.009,90,3.345,170,1.891,327,2.052,378,3.068,410,2.362,468,2.93,592,3.629,596,3.156,645,5.368,691,3.686,699,2.627,805,2.052,993,3.658,1148,4.301,1149,4.207,1153,3.471,1154,4.769,1155,2.93,1309,4.796,1310,4.009,1311,6.06,1312,6.06,1313,6.06,1314,6.06,1315,6.06,1316,6.06,1317,6.06,1318,6.06,1319,4.586,1320,6.06,1321,4.586,1322,8.279,1323,6.06,1324,4.586,1325,6.878,1326,6.06,1327,4.586,1328,6.06,1329,4.586,1330,4.586,1331,4.586,1332,4.586,1333,4.586,1334,4.586,1335,6.788,1336,4.586,1337,6.06,1338,4.586,1339,4.586,1340,4.586,1341,3.629,1342,4.796,1343,2.93,1344,6.06,1345,4.586,1346,4.586,1347,4.586,1348,4.586,1349,4.586,1350,4.586,1351,6.06,1352,4.586,1353,4.586,1354,4.586,1355,4.586]],["title/directives/DashedDrawDirective.html",[111,0.573,877,1.374]],["body/directives/DashedDrawDirective.html",[3,0.123,4,0.123,5,0.111,8,0.347,9,0.648,12,1.174,14,0.752,23,1.158,24,1.135,27,1.195,29,0.539,30,0.013,31,0.447,32,0.667,33,0.413,35,0.903,47,1.02,54,1.229,55,1.151,56,1.212,58,0.225,59,0.215,60,2.076,63,0.123,67,0.136,72,1.003,87,0.008,88,0.008,111,0.539,113,0.913,116,1.585,126,1.585,135,1.663,139,1.43,140,2.213,154,2.445,155,1.488,170,2.104,182,1.383,189,1.636,194,2.978,195,2.75,201,1.796,202,1.796,236,1.687,240,1.272,244,2.954,291,1.59,308,2.023,310,3.073,340,4.932,345,2.833,426,3.949,437,5.335,447,4.733,449,4.932,454,4.733,770,1.212,772,1.294,773,1.69,877,1.803,878,2.219,891,4.548,893,5.335,905,5.894,909,5.448,1158,3.762,1306,5.448,1356,7.186,1357,3.395,1358,6.232,1359,6.742,1360,6.232,1361,6.232,1362,6.232,1363,6.232,1364,6.232,1365,3.073,1366,5.414,1367,3.101,1368,5.414,1369,3.884,1370,3.884,1371,3.884,1372,3.884,1373,3.884,1374,3.884,1375,3.884,1376,3.884,1377,3.884,1378,3.884,1379,3.884,1380,3.884,1381,2.641,1382,3.395,1383,2.481,1384,3.884,1385,3.395,1386,3.395,1387,6.232,1388,3.073,1389,5.414,1390,3.884,1391,3.884,1392,3.395,1393,3.884,1394,3.395,1395,3.073,1396,3.884,1397,6.742,1398,5.414,1399,3.884,1400,6.232,1401,3.884,1402,3.884,1403,3.395,1404,3.884,1405,3.884,1406,3.884,1407,3.884,1408,6.232,1409,5.414,1410,3.884,1411,3.884,1412,3.884,1413,3.884,1414,3.884,1415,6.232,1416,5.414,1417,3.884,1418,6.232,1419,3.884,1420,3.884,1421,5.414,1422,3.884,1423,3.884,1424,3.073,1425,3.884,1426,5.414,1427,3.884,1428,3.884,1429,3.884,1430,6.232,1431,3.395]],["title/pipes/Deg2RadPipe.html",[1099,2.806,1432,2.806]],["body/pipes/Deg2RadPipe.html",[3,0.193,4,0.193,5,0.174,14,0.848,24,0.848,29,0.848,30,0.012,31,0.891,32,0.522,33,0.649,35,0.818,58,0.193,59,0.338,63,0.193,67,0.213,75,1.15,87,0.01,88,0.01,116,1.787,135,1.805,280,2.97,770,1.905,1099,4.932,1432,4.932,1433,4.831,1434,5.337,1435,7.253,1436,4.831,1437,7.253,1438,6.105,1439,6.341,1440,7.147,1441,6.341,1442,4.831,1443,6.105,1444,4.831,1445,4.453]],["title/components/DofComponent.html",[740,0.802,818,1.421]],["body/components/DofComponent.html",[3,0.1,4,0.1,5,0.09,8,0.282,9,0.558,10,0.742,12,1.369,14,0.648,15,1.081,23,0.997,24,1.076,29,0.77,30,0.012,31,0.923,32,0.605,33,0.695,34,0.814,35,0.948,36,0.84,47,0.985,53,0.895,54,1.117,55,1.046,58,0.207,59,0.174,63,0.1,67,0.11,75,0.594,87,0.007,88,0.007,111,0.438,112,0.954,113,0.742,123,1.409,126,1.365,127,0.954,132,1.051,133,1.941,135,1.224,139,1.162,140,0.985,145,0.954,146,2.068,148,1.976,152,2.145,154,2.041,156,1.086,169,3.348,170,1.731,190,2.759,192,2.145,196,3.171,197,3.401,198,2.764,199,3.177,200,4.47,201,1.477,202,1.477,203,3.915,204,2.108,206,3.401,214,2.058,215,2.043,216,2.145,232,1.123,235,1.131,236,0.789,240,0.742,272,2.197,305,0.985,355,1.842,359,1.086,365,1.086,390,1.086,410,0.895,423,1.051,430,1.123,470,0.985,472,1.086,538,1.086,542,5.174,602,1.123,604,1.123,616,1.717,643,1.051,664,1.203,690,1.123,693,2.109,740,1.079,743,1.086,744,1.086,745,1.086,746,1.086,747,1.086,748,1.086,765,1.086,766,1.553,767,1.246,770,0.985,772,2.894,773,2.698,774,1.203,776,1.203,782,1.392,786,0.675,787,1.778,788,2.42,789,1.246,790,2.42,791,1.086,792,1.203,793,1.842,794,1.086,795,1.246,796,1.123,797,1.162,798,2.932,799,1.086,800,1.203,801,1.246,802,1.123,803,1.203,804,1.123,805,1.976,806,1.246,807,1.123,808,1.246,809,1.123,810,1.246,811,1.123,812,1.246,813,1.123,814,1.162,815,1.246,816,1.123,817,1.203,818,2.109,819,1.246,820,1.086,821,1.203,822,1.246,823,1.246,824,1.086,825,1.246,826,1.086,827,1.246,828,1.123,829,1.162,830,1.123,831,2.043,832,2.932,833,1.086,834,1.123,835,1.086,836,1.203,837,1.123,838,1.123,839,1.246,840,1.123,841,1.086,842,1.842,843,1.123,844,2.42,845,1.086,846,1.086,847,1.203,848,1.842,849,1.086,850,1.203,851,1.123,852,1.162,853,1.123,854,1.162,855,1.086,856,1.246,857,1.017,858,1.246,859,1.162,860,1.162,861,1.162,862,1.123,863,1.203,864,1.123,865,1.203,866,1.123,867,1.123,868,1.123,869,1.717,870,1.123,871,1.123,872,1.203,873,1.123,874,1.203,875,1.246,876,1.246,877,1.051,878,1.123,879,1.246,880,1.051,881,1.731,882,1.246,883,1.051,884,1.246,885,1.017,886,1.246,887,1.051,888,1.123,889,1.203,890,1.246,1207,3.171,1223,2.145,1232,2.145,1265,3.348,1266,3.544,1276,2.496,1277,2.496,1278,2.496,1279,2.496,1280,2.496,1281,2.496,1286,2.496,1446,2.758,1447,4.663,1448,6.538,1449,6.538,1450,6.538,1451,4.663,1452,4.663,1453,3.155,1454,3.155,1455,4.663,1456,3.155,1457,3.155,1458,3.155,1459,3.155,1460,3.155,1461,3.155,1462,5.547,1463,5.547,1464,3.155,1465,3.155,1466,5.547,1467,3.155,1468,3.155,1469,3.155,1470,4.663,1471,3.155,1472,2.758]],["title/components/DotScreenComponent.html",[740,0.802,820,1.421]],["body/components/DotScreenComponent.html",[3,0.108,4,0.108,5,0.097,8,0.304,9,0.589,10,0.798,12,1.397,14,0.683,15,1.12,23,1.053,24,1.067,29,0.804,30,0.012,31,0.934,32,0.575,33,0.716,34,0.876,35,0.971,36,0.904,47,1.011,53,0.963,54,0.897,55,0.84,58,0.222,59,0.188,63,0.108,67,0.119,75,0.639,87,0.007,88,0.007,111,0.472,112,1.026,113,0.798,123,1.487,126,1.441,127,1.026,132,1.131,133,1.992,135,0.75,139,1.812,140,1.06,145,1.026,146,2.123,148,1.487,154,1.639,156,1.169,165,1.692,190,2.8,192,2.309,196,3.346,197,3.589,198,3.162,199,3.315,200,4.629,201,1.541,202,1.541,203,4.054,204,2.171,206,3.589,214,2.171,215,2.131,216,2.309,232,1.209,235,1.193,236,0.849,240,0.798,272,2.243,305,1.536,355,1.943,359,1.169,365,1.169,390,1.169,396,2.049,397,2.169,410,0.963,423,1.131,430,1.209,470,1.06,472,1.169,538,1.169,577,2.309,578,2.309,602,1.209,604,1.209,616,1.812,643,1.131,664,1.294,690,1.209,693,2.185,740,1.125,743,1.169,744,1.169,745,1.169,746,1.169,747,1.169,748,1.169,765,1.169,766,1.639,767,1.341,770,1.06,772,2.902,773,2.708,774,1.294,776,1.294,782,1.498,786,0.726,787,1.876,788,2.506,789,1.341,790,2.506,791,1.169,792,1.294,793,1.943,794,1.169,795,1.341,796,1.209,797,1.25,798,2.987,799,1.169,800,1.294,801,1.341,802,1.209,803,1.294,804,1.209,805,2.036,806,1.341,807,1.209,808,1.341,809,1.209,810,1.341,811,1.209,812,1.341,813,1.209,814,1.25,815,1.341,816,1.209,817,1.294,818,1.169,819,1.341,820,2.185,821,2.206,822,1.341,823,1.341,824,1.169,825,1.341,826,1.169,827,1.341,828,1.209,829,1.25,830,1.209,831,2.131,832,2.987,833,1.169,834,1.209,835,1.169,836,1.294,837,1.209,838,1.209,839,1.341,840,1.209,841,1.169,842,1.943,843,1.209,844,2.506,845,1.169,846,1.169,847,1.294,848,1.943,849,1.169,850,1.294,851,1.209,852,1.25,853,1.209,854,1.25,855,1.169,856,1.341,857,1.094,858,1.341,859,1.25,860,1.25,861,1.25,862,1.209,863,1.294,864,1.209,865,1.294,866,1.209,867,1.209,868,1.209,869,1.812,870,1.209,871,1.209,872,1.294,873,1.209,874,1.294,875,1.341,876,1.341,877,1.131,878,1.209,879,1.341,880,1.131,881,1.806,882,1.341,883,1.131,884,1.341,885,1.094,886,1.341,887,1.131,888,1.209,889,1.294,890,1.341,1192,2.687,1193,2.687,1276,2.687,1277,2.687,1278,2.687,1279,2.687,1280,2.687,1281,2.687,1286,2.687,1289,2.477,1290,2.477,1291,2.687,1473,5.059,1474,2.968,1475,4.301,1476,5.059,1477,4.92,1478,3.589,1479,3.395,1480,3.395,1481,3.395,1482,3.395,1483,3.395]],["title/interfaces/Edge.html",[64,1.33,1153,2.364]],["body/interfaces/Edge.html",[3,0.182,4,0.182,5,0.164,8,0.515,9,0.838,27,1.906,30,0.012,31,0.663,32,0.719,33,0.835,34,1.486,58,0.182,63,0.255,64,2.593,87,0.01,88,0.01,135,1.666,235,1.904,327,2.28,410,1.633,596,2.998,691,2.751,695,4.088,699,3.297,805,2.116,993,3.475,1147,2.998,1148,4.608,1149,3.14,1150,3.678,1151,4.226,1152,3.915,1153,4.01,1154,3.297,1155,3.678,1156,3.915,1157,3.678,1158,3.475]],["title/components/EffectComposerComponent.html",[204,1.33,740,0.802]],["body/components/EffectComposerComponent.html",[3,0.099,4,0.099,5,0.089,8,0.492,9,0.553,12,1.224,14,0.641,15,1.428,23,0.988,24,1.06,29,0.764,30,0.012,31,0.921,32,0.582,33,0.75,34,0.804,35,0.944,47,1.015,53,0.883,54,0.568,55,0.532,56,0.898,58,0.216,59,0.172,60,1.833,63,0.099,67,0.109,72,0.804,75,0.586,87,0.007,88,0.007,111,0.432,112,0.941,113,0.732,116,1.352,126,1.352,127,0.941,132,1.037,133,1.932,139,1.147,154,1.833,156,1.072,165,1.552,170,1.441,171,1.488,189,1.84,190,1.108,194,2.63,195,2.429,196,5.192,201,1.622,202,1.622,203,4.154,204,1.963,214,2.038,215,2.027,217,2.722,219,3.89,220,5.579,232,1.108,236,0.779,240,1.085,305,0.972,359,1.072,365,1.072,378,1.962,390,1.072,410,0.883,423,1.037,430,1.108,470,0.972,472,1.072,538,1.072,602,1.108,604,1.108,616,1.701,643,1.037,664,1.187,690,1.108,693,2.096,703,3.89,740,1.184,743,1.072,744,1.072,745,1.072,746,1.072,747,1.072,748,1.072,765,1.072,766,1.538,767,1.23,770,0.972,772,2.892,773,2.696,774,1.187,776,1.187,786,0.666,787,1.761,788,2.405,789,1.23,790,2.405,791,1.072,792,1.187,793,1.824,794,1.072,795,1.23,796,1.108,797,1.147,798,2.922,799,1.072,800,1.187,801,1.23,802,1.108,803,1.187,804,1.108,805,1.965,806,1.23,807,1.108,808,1.23,809,1.108,810,1.23,811,1.108,812,1.23,813,1.108,814,1.147,815,1.23,816,1.108,817,1.187,818,1.072,819,1.23,820,1.072,821,1.187,822,1.23,823,1.23,824,1.072,825,1.23,826,1.072,827,1.23,828,1.108,829,1.147,830,1.108,831,2.027,832,2.922,833,1.072,834,1.108,835,1.072,836,1.187,837,1.108,838,1.108,839,1.23,840,1.108,841,1.072,842,1.824,843,1.108,844,2.405,845,1.072,846,1.072,847,1.187,848,1.824,849,1.072,850,1.187,851,1.108,852,1.147,853,1.108,854,1.147,855,1.072,856,1.23,857,2.273,858,1.23,859,1.147,860,1.147,861,1.147,862,1.108,863,1.187,864,1.108,865,1.187,866,1.108,867,1.108,868,1.108,869,1.701,870,1.108,871,1.108,872,1.187,873,1.108,874,1.187,875,1.23,876,1.23,877,1.037,878,1.108,879,1.23,880,1.037,881,1.718,882,1.23,883,1.037,884,1.23,885,1.004,886,1.23,887,1.037,888,1.108,889,1.187,890,1.23,1176,5.322,1187,4.812,1188,2.722,1191,2.722,1472,2.722,1484,6.757,1485,2.722,1486,4.618,1487,6.088,1488,6.088,1489,4.618,1490,5.504,1491,5.504,1492,4.618,1493,3.114,1494,3.114,1495,4.618,1496,3.114,1497,3.114,1498,3.114,1499,3.114,1500,3.114,1501,4.618,1502,3.114,1503,3.114,1504,3.114,1505,3.114,1506,4.618,1507,3.114,1508,3.114,1509,3.114,1510,3.114,1511,3.114,1512,2.722,1513,3.114,1514,2.722,1515,2.722,1516,3.114,1517,3.114,1518,3.114,1519,3.114,1520,3.114,1521,3.114,1522,3.114,1523,3.114,1524,3.114,1525,3.114,1526,3.114,1527,3.114,1528,3.114,1529,3.114,1530,3.114,1531,3.114]],["title/components/EmptyComponent.html",[740,0.802,824,1.421]],["body/components/EmptyComponent.html",[3,0.085,4,0.085,5,0.077,8,0.241,9,0.495,10,0.633,12,1.428,13,1.003,14,0.575,15,1.456,23,0.885,24,1.157,27,1.481,29,0.932,30,0.012,31,0.945,32,0.687,33,0.755,34,0.695,35,1.053,36,1.102,47,1.077,53,0.763,54,1.175,55,1.1,56,0.523,58,0.193,59,0.149,63,0.085,67,0.094,72,0.695,75,0.507,87,0.006,88,0.006,111,0.374,112,0.814,113,0.633,116,1.211,123,1.25,124,1.921,126,1.211,127,1.523,132,0.897,133,1.828,135,1.601,145,0.814,146,1.25,148,0.814,155,1.137,156,0.927,178,1.102,182,0.958,189,1.523,190,0.958,194,2.408,201,1.342,202,1.342,204,0.868,214,1.825,215,0.991,232,0.958,235,1.003,236,2.123,239,1.825,240,1.514,242,2.495,246,1.825,247,2.223,248,2.223,249,2.223,250,2.223,251,1.825,252,2.223,253,2.223,254,1.825,255,1.825,256,1.825,257,2.223,259,1.825,260,1.825,261,1.825,262,1.758,263,1.758,264,1.825,265,1.825,266,1.825,267,1.825,268,1.758,269,1.758,272,2.512,273,1.235,274,1.188,275,1.235,276,1.235,277,1.188,278,1.188,279,1.188,280,1.102,281,1.188,282,1.063,283,1.063,284,1.235,285,1.235,286,1.235,287,1.235,288,1.235,289,1.235,290,1.188,291,1.102,292,1.188,293,1.188,294,1.144,295,1.188,296,1.188,297,1.144,298,1.063,299,1.235,300,1.235,301,1.063,302,1.235,305,0.84,308,2.624,318,1.188,319,1.286,320,1.341,321,1.235,322,1.235,323,1.235,324,1.188,325,1.235,326,1.235,327,1.25,328,1.235,329,1.235,330,1.341,331,1.235,332,1.188,333,1.235,334,1.188,335,1.188,336,1.235,337,1.188,338,1.235,339,1.286,343,1.235,344,1.235,355,1.634,359,0.927,361,2.813,364,1.402,365,0.927,390,0.927,410,0.763,423,0.897,430,0.958,452,1.402,470,0.84,472,0.927,504,3.084,538,0.927,602,0.958,604,0.958,616,1.524,643,0.897,664,1.026,690,0.958,693,1.947,740,0.98,743,0.927,744,0.927,745,0.927,746,0.927,747,0.927,748,0.927,765,0.927,766,1.378,767,1.063,770,0.84,772,2.873,773,2.675,774,1.026,776,1.577,781,1.341,782,1.188,786,0.576,787,1.577,788,2.233,789,1.063,790,2.233,791,0.927,792,1.026,793,1.634,794,0.927,795,1.063,796,0.958,797,0.991,798,2.805,799,0.927,800,1.026,801,1.063,802,0.958,803,1.026,804,0.958,805,1.845,806,1.063,807,0.958,808,1.063,809,0.958,810,1.063,811,0.958,812,1.063,813,0.958,814,0.991,815,1.063,816,0.958,817,1.026,818,0.927,819,1.063,820,0.927,821,1.026,822,1.063,823,1.063,824,1.947,825,1.063,826,0.927,827,1.063,828,0.958,829,0.991,830,0.958,831,1.856,832,2.805,833,0.927,834,0.958,835,0.927,836,1.026,837,0.958,838,0.958,839,1.063,840,0.958,841,0.927,842,1.634,843,0.958,844,2.233,845,0.927,846,0.927,847,1.026,848,1.634,849,0.927,850,1.026,851,0.958,852,0.991,853,0.958,854,0.991,855,0.927,856,1.063,857,0.868,858,1.063,859,0.991,860,0.991,861,0.991,862,0.958,863,1.026,864,0.958,865,1.026,866,0.958,867,0.958,868,0.958,869,1.524,870,0.958,871,0.958,872,1.026,873,0.958,874,1.026,875,1.063,876,1.063,877,0.897,878,0.958,879,1.063,880,0.897,881,1.573,882,1.063,883,0.897,884,1.063,885,0.868,886,1.063,887,0.897,888,0.958,889,1.026,890,1.063,1298,2.353,1532,2.353,1533,4.137,1534,2.692]],["title/components/FogComponent.html",[740,0.802,826,1.421]],["body/components/FogComponent.html",[3,0.104,4,0.104,5,0.094,8,0.295,9,0.577,12,1.456,14,0.669,15,1.227,23,1.031,24,1.06,27,1.064,29,0.669,30,0.012,31,0.924,32,0.594,33,0.666,34,0.852,35,0.892,47,1.001,53,0.936,54,1.038,55,0.972,56,0.641,58,0.198,59,0.182,63,0.104,67,0.115,75,0.621,87,0.007,88,0.007,111,0.458,112,0.997,113,0.775,116,1.411,118,2.964,123,1.456,126,1.411,127,0.997,132,1.099,133,1.972,135,1.382,145,1.456,146,1.892,148,1.456,154,2.085,155,1.324,156,1.136,169,1.991,171,2.302,190,1.174,194,2.72,195,2.512,201,1.667,202,1.667,204,1.063,214,2.126,215,1.215,219,3.078,232,1.174,236,0.825,240,1.132,305,1.03,359,1.136,365,1.136,390,1.136,410,0.936,422,3.586,423,1.099,426,3.515,430,1.174,470,1.03,472,1.136,504,3.105,538,1.136,558,2.884,602,1.174,604,1.174,616,1.775,643,1.099,657,5.472,664,1.258,690,1.174,693,2.155,695,3.26,740,1.107,743,1.136,744,1.136,745,1.136,746,1.136,747,1.136,748,1.136,765,1.136,766,1.605,767,1.303,770,1.03,772,2.899,773,2.704,774,1.258,776,1.258,786,0.706,787,1.837,788,2.472,789,1.303,790,2.472,791,1.136,792,1.258,793,1.903,794,1.136,795,1.303,796,1.174,797,1.215,798,2.965,799,1.136,800,1.258,801,1.303,802,1.174,803,1.258,804,1.174,805,2.012,806,1.303,807,1.174,808,1.303,809,1.174,810,1.303,811,1.174,812,1.303,813,1.174,814,1.215,815,1.303,816,1.174,817,1.258,818,1.136,819,1.303,820,1.136,821,1.258,822,1.303,823,1.303,824,1.136,825,1.303,826,2.155,827,1.303,828,1.174,829,1.215,830,1.174,831,2.096,832,2.965,833,1.136,834,1.174,835,1.136,836,1.258,837,1.174,838,1.174,839,1.303,840,1.174,841,1.136,842,1.903,843,1.174,844,2.472,845,1.136,846,1.136,847,1.258,848,1.903,849,1.136,850,1.258,851,1.174,852,1.215,853,1.174,854,1.215,855,1.136,856,1.303,857,2.146,858,1.303,859,1.215,860,1.215,861,1.215,862,1.174,863,1.258,864,1.174,865,1.258,866,1.174,867,1.174,868,1.174,869,1.775,870,1.174,871,1.174,872,1.258,873,1.174,874,1.258,875,1.303,876,1.303,877,1.099,878,1.174,879,1.303,880,1.099,881,1.777,882,1.303,883,1.099,884,1.303,885,1.063,886,1.303,887,1.099,888,1.174,889,1.258,890,1.303,1170,3.813,1216,3.813,1243,2.61,1535,2.884,1536,4.818,1537,6.26,1538,4.976,1539,5.472,1540,4.818,1541,4.818,1542,3.299,1543,3.078,1544,3.299,1545,3.299,1546,3.299,1547,3.299,1548,3.299,1549,3.299,1550,3.299,1551,3.299,1552,3.299,1553,4.818,1554,4.818,1555,3.299,1556,3.299,1557,3.299,1558,4.818,1559,3.299,1560,4.818,1561,3.299,1562,2.884,1563,2.884,1564,3.299,1565,3.299,1566,3.299]],["title/injectables/FontService.html",[0,1.134,1075,2.806]],["body/injectables/FontService.html",[0,1.914,2,2.618,3,0.181,4,0.181,5,0.162,8,0.51,9,0.834,10,1.341,12,1.511,14,0.967,15,1.229,24,1.044,27,1.772,29,0.967,30,0.012,31,0.802,32,0.595,33,0.74,35,0.933,50,3.989,53,1.618,54,1.04,55,0.974,56,1.462,58,0.238,59,0.316,60,1.9,63,0.181,67,0.199,75,1.074,87,0.01,88,0.01,89,5.215,92,5.079,93,5.079,94,4.449,95,4.735,97,5.079,99,4.802,100,4.162,235,1.689,272,2.272,470,1.781,1075,4.735,1567,4.987,1568,5.705,1569,4.515,1570,4.515,1571,4.515,1572,5.705,1573,6.963,1574,5.705,1575,5.705,1576,5.705,1577,4.987,1578,5.705]],["title/interfaces/GraphModel.html",[64,1.33,1154,2.364]],["body/interfaces/GraphModel.html",[3,0.18,4,0.18,5,0.162,8,0.509,9,0.832,27,1.866,30,0.012,31,0.655,32,0.697,33,0.886,34,1.468,58,0.18,63,0.254,64,2.585,87,0.01,88,0.01,135,1.256,235,1.82,327,2.539,410,1.613,596,2.962,691,2.718,695,2.962,699,3.258,805,2.101,993,4.719,1147,2.962,1148,4.478,1149,3.102,1150,3.634,1151,4.196,1152,3.868,1153,3.258,1154,3.981,1155,4.795,1156,5.316,1157,4.995,1158,4.719]],["title/components/GridHelperComponent.html",[740,0.802,833,1.421]],["body/components/GridHelperComponent.html",[3,0.084,4,0.084,5,0.075,8,0.237,9,0.489,10,0.622,12,1.422,13,0.99,14,0.567,15,1.453,23,0.873,24,1.16,27,1.472,29,0.926,30,0.012,31,0.943,32,0.692,33,0.751,34,0.683,35,1.05,36,1.087,47,1.073,53,0.75,54,1.166,55,1.092,56,0.514,58,0.192,59,0.146,63,0.084,67,0.092,72,0.683,75,0.498,87,0.006,88,0.006,111,0.367,112,0.799,113,0.622,123,1.234,124,1.9,126,1.195,127,1.506,132,0.881,133,1.815,135,1.686,145,0.799,146,1.234,148,0.799,154,1.66,155,1.122,156,0.911,178,1.083,182,0.942,189,1.506,190,0.942,201,1.328,202,1.328,204,0.853,214,1.801,215,0.974,232,0.942,235,0.99,236,2.12,239,1.801,240,1.504,242,2.473,246,1.801,247,2.199,248,2.199,249,2.199,250,2.199,251,1.801,252,2.199,253,2.199,254,1.801,255,1.801,256,1.801,257,2.199,259,1.801,260,1.801,261,1.801,262,1.734,263,1.734,264,1.801,265,1.801,266,1.801,267,1.801,268,1.734,269,1.734,272,2.508,273,1.214,274,1.167,275,1.214,276,1.873,277,1.167,278,1.167,279,1.167,280,1.083,281,1.167,282,1.045,283,1.045,284,1.214,285,1.214,286,1.214,287,1.214,288,1.214,289,1.214,290,1.167,291,1.083,292,1.167,293,1.167,294,1.124,295,1.167,296,1.167,297,1.124,298,1.045,299,1.214,300,1.214,301,1.045,302,1.214,305,0.826,318,1.167,319,1.264,320,1.318,321,1.214,322,1.214,323,1.214,324,1.167,325,1.214,326,1.214,327,1.234,328,1.214,329,1.214,330,1.318,331,1.214,332,1.167,333,1.214,334,1.167,335,1.167,336,1.214,337,1.167,338,1.214,339,1.264,343,1.214,344,1.214,355,1.612,359,0.911,364,1.378,365,0.911,390,0.911,410,0.75,423,0.881,430,0.942,452,1.378,469,3.23,470,0.826,472,0.911,504,3.056,538,0.911,602,0.942,604,0.942,616,1.503,643,0.881,664,1.009,690,0.942,693,1.929,740,0.969,743,0.911,744,0.911,745,0.911,746,0.911,747,0.911,748,0.911,765,0.911,766,1.359,767,1.045,770,0.826,772,2.87,773,2.672,774,1.009,776,1.556,781,1.318,782,1.167,786,0.566,787,1.556,788,2.213,789,1.045,790,2.213,791,0.911,792,1.009,793,1.612,794,0.911,795,1.045,796,0.942,797,0.974,798,2.791,799,0.911,800,1.009,801,1.045,802,0.942,803,1.009,804,0.942,805,1.83,806,1.045,807,0.942,808,1.045,809,0.942,810,1.045,811,0.942,812,1.045,813,0.942,814,0.974,815,1.045,816,0.942,817,1.009,818,0.911,819,1.045,820,0.911,821,1.009,822,1.045,823,1.045,824,0.911,825,1.045,826,0.911,827,1.045,828,0.942,829,0.974,830,0.942,831,2.23,832,2.791,833,1.929,834,0.942,835,0.911,836,1.009,837,0.942,838,0.942,839,1.045,840,0.942,841,0.911,842,1.612,843,0.942,844,2.213,845,0.911,846,0.911,847,1.009,848,1.612,849,0.911,850,1.009,851,0.942,852,0.974,853,0.942,854,0.974,855,0.911,856,1.045,857,0.853,858,1.045,859,0.974,860,0.974,861,0.974,862,0.942,863,1.009,864,0.942,865,1.009,866,0.942,867,0.942,868,0.942,869,1.503,870,0.942,871,0.942,872,1.009,873,0.942,874,1.009,875,1.045,876,1.045,877,0.881,878,0.942,879,1.045,880,0.881,881,1.555,882,1.045,883,0.881,884,1.045,885,0.853,886,1.045,887,0.881,888,0.942,889,1.009,890,1.045,1138,2.093,1140,3.944,1141,2.312,1579,4.898,1580,4.082,1581,4.357,1582,4.082,1583,4.082,1584,2.645,1585,2.645,1586,2.645]],["title/components/HemisphereLightComponent.html",[740,0.802,835,1.421]],["body/components/HemisphereLightComponent.html",[3,0.082,4,0.082,5,0.073,8,0.23,9,0.479,10,0.605,12,1.414,13,0.97,14,0.555,15,1.448,23,0.855,24,1.159,27,1.611,29,0.917,30,0.012,31,0.94,32,0.692,33,0.745,34,0.665,35,1.045,36,1.065,47,1.066,53,0.731,54,1.278,55,1.197,56,0.501,58,0.189,59,0.142,60,0.858,63,0.082,67,0.09,72,0.665,75,0.485,87,0.006,88,0.006,111,0.358,112,0.779,113,0.605,123,1.209,124,1.869,126,1.171,127,1.481,132,0.858,133,1.795,135,1.693,145,0.779,146,1.209,148,0.779,154,1.84,155,1.099,156,0.887,178,1.055,182,0.917,189,1.808,190,0.917,201,1.305,202,1.305,204,0.83,214,1.765,215,0.949,232,0.917,235,0.97,236,2.116,239,1.765,240,1.488,242,2.438,246,1.765,247,2.163,248,2.163,249,2.163,250,2.163,251,1.765,252,2.163,253,2.163,254,1.765,255,1.765,256,1.765,257,2.163,259,1.765,260,1.765,261,1.765,262,1.699,263,1.699,264,1.765,265,1.765,266,1.765,267,1.765,268,1.699,269,1.699,272,2.501,273,1.182,274,1.137,275,1.182,276,1.182,277,1.137,278,1.137,279,1.137,280,1.055,281,1.137,282,1.017,283,1.017,284,1.835,285,1.182,286,1.182,287,1.182,288,1.182,289,1.182,290,1.137,291,1.055,292,1.137,293,1.137,294,1.094,295,1.137,296,1.137,297,1.094,298,1.017,299,1.182,300,1.182,301,1.017,302,1.182,305,0.804,318,1.137,319,1.231,320,1.284,321,1.182,322,1.182,323,1.182,324,1.137,325,1.182,326,1.182,327,1.209,328,1.182,329,1.182,330,1.284,331,1.182,332,1.137,333,1.182,334,1.137,335,1.137,336,1.182,337,1.137,338,1.182,339,1.231,343,1.182,344,1.182,355,1.579,359,0.887,364,1.341,365,0.887,390,0.887,410,0.731,423,0.858,430,0.917,452,1.341,470,0.804,472,0.887,504,3.013,538,0.887,602,0.917,604,0.917,616,1.473,643,0.858,664,0.982,690,0.917,693,1.902,715,2.917,740,0.953,743,0.887,744,0.887,745,0.887,746,0.887,747,0.887,748,0.887,765,0.887,766,1.332,767,1.017,769,2.038,770,0.804,772,2.866,773,2.668,774,0.982,775,4.829,776,1.525,777,4.285,778,2.252,779,2.252,781,1.284,782,1.137,785,2.252,786,0.551,787,1.525,788,2.182,789,1.017,790,2.182,791,0.887,792,0.982,793,1.579,794,0.887,795,1.017,796,0.917,797,0.949,798,2.769,799,0.887,800,0.982,801,1.017,802,0.917,803,0.982,804,0.917,805,1.808,806,1.017,807,0.917,808,1.017,809,0.917,810,1.017,811,0.917,812,1.017,813,0.917,814,0.949,815,1.017,816,0.917,817,0.982,818,0.887,819,1.017,820,0.887,821,0.982,822,1.017,823,1.017,824,0.887,825,1.017,826,0.887,827,1.017,828,0.917,829,0.949,830,0.917,831,1.805,832,2.769,833,0.887,834,0.917,835,1.902,836,1.869,837,0.917,838,0.917,839,1.017,840,0.917,841,0.887,842,1.579,843,0.917,844,2.182,845,0.887,846,0.887,847,0.982,848,1.579,849,0.887,850,0.982,851,0.917,852,0.949,853,0.917,854,0.949,855,0.887,856,1.017,857,0.83,858,1.017,859,0.949,860,0.949,861,0.949,862,0.917,863,0.982,864,0.917,865,0.982,866,0.917,867,0.917,868,0.917,869,1.473,870,0.917,871,0.917,872,0.982,873,0.917,874,0.982,875,1.017,876,1.017,877,0.858,878,0.917,879,1.017,880,0.858,881,1.53,882,1.017,883,0.858,884,1.017,885,0.83,886,1.017,887,0.858,888,0.917,889,0.982,890,1.017,1587,5.228,1588,3.999,1589,4.901,1590,4.901,1591,3.999,1592,3.999,1593,2.576,1594,2.576,1595,2.576]],["title/injectables/IconService.html",[0,1.134,1076,2.636]],["body/injectables/IconService.html",[0,1.608,1,4.957,2,1.997,3,0.138,4,0.209,5,0.124,8,0.389,9,0.701,10,1.023,11,4.496,12,1.39,13,1.419,14,0.813,15,1.393,16,4.631,17,4.631,18,4.631,19,4.631,20,3.857,21,4.631,22,4.631,24,1.111,26,3.979,27,1.857,29,1.055,30,0.012,31,0.875,32,0.674,33,0.808,34,1.905,35,1.04,36,1.884,37,3.979,38,4.496,40,3.979,41,3.174,43,3.174,45,3.174,47,0.952,48,3.174,50,3.352,51,3.174,53,1.66,54,1.067,55,0.999,56,0.846,58,0.185,59,0.241,63,0.185,64,1.403,65,3.532,66,5.043,67,0.152,75,1.102,85,3.174,87,0.008,88,0.008,139,2.435,140,2.579,170,2.303,235,1.603,272,2.417,1076,3.739,1596,3.443,1597,4.351,1598,5.758,1599,4.351,1600,3.804,1601,3.804,1602,3.804,1603,3.804,1604,3.804,1605,5.116,1606,4.351,1607,3.804,1608,3.443,1609,6.901,1610,6.901,1611,6.901,1612,3.804,1613,3.804,1614,3.804,1615,3.804,1616,3.804,1617,3.804,1618,3.804,1619,3.804,1620,5.78,1621,3.804,1622,3.804,1623,3.804,1624,3.804,1625,3.804,1626,3.804,1627,3.804,1628,3.804,1629,3.804]],["title/interfaces/IconSource.html",[64,1.33,1598,3.01]],["body/interfaces/IconSource.html",[0,1.816,1,3.989,3,0.166,4,0.166,5,0.149,8,0.469,9,0.791,10,1.233,11,3.566,12,0.988,20,2.86,26,3.566,27,1.459,30,0.012,32,0.618,34,1.354,37,3.566,38,3.566,40,3.566,58,0.209,59,0.29,63,0.209,64,1.691,65,4.368,66,5.246,67,0.183,75,1.245,85,3.826,87,0.009,88,0.009,139,3.052,140,2.645,170,2.444,235,1.755,1076,3.351,1147,2.731,1596,4.15,1598,5.713,1605,4.585,1608,4.15,1609,7.34,1610,7.34,1611,7.34,1612,4.585,1613,4.585,1614,4.585,1615,4.585,1616,4.585,1617,4.585,1618,4.585,1619,4.585,1620,6.326,1621,4.585,1622,4.585,1623,4.585,1624,4.585,1625,4.585,1626,4.585,1627,4.585,1628,4.585,1629,4.585]],["title/components/MapControlsComponent.html",[740,0.802,841,1.421]],["body/components/MapControlsComponent.html",[3,0.081,4,0.081,5,0.073,8,0.229,9,0.477,10,0.602,12,1.372,14,0.553,15,0.862,23,0.852,24,1.128,29,0.553,30,0.012,31,0.883,32,0.679,33,0.423,34,0.661,35,0.846,36,0.682,47,0.949,53,1.385,54,1.367,55,1.28,56,0.498,58,0.216,59,0.142,63,0.081,67,0.089,72,1.028,75,0.482,87,0.006,88,0.006,111,0.356,112,0.774,113,0.602,116,1.166,118,2.544,123,1.204,126,1.166,127,0.774,132,0.853,133,1.791,135,1.579,139,1.799,140,2.057,145,1.204,146,1.665,148,0.774,154,2.527,156,0.882,165,1.277,170,0.8,171,1.903,189,0.774,190,0.912,195,2.155,201,1.301,202,1.467,204,0.826,215,0.944,232,0.912,235,0.966,236,0.641,240,0.936,244,1.418,272,2.115,305,0.8,340,3.865,345,1.869,355,2.176,356,2.24,359,0.882,365,0.882,390,0.882,410,0.727,421,2.24,423,0.853,430,0.912,460,1.869,470,0.8,472,0.882,538,0.882,602,2.669,604,1.739,606,3.151,607,4.721,608,2.708,609,3.865,610,4.359,611,3.151,612,3.127,614,1.869,616,2.029,617,2.027,618,2.027,619,1.742,620,2.027,621,1.869,622,2.544,623,1.547,624,2.027,625,1.869,626,1.869,627,2.027,628,2.027,629,2.027,630,2.027,631,1.869,632,2.027,638,2.027,639,2.708,640,2.027,641,2.027,643,1.326,644,2.027,645,1.637,649,1.869,650,2.027,652,2.027,662,3.151,664,0.977,671,2.24,687,2.027,690,0.912,693,1.896,740,0.95,743,0.882,744,0.882,745,0.882,746,0.882,747,0.882,748,0.882,765,0.882,766,1.326,767,1.012,770,0.8,772,2.866,773,2.667,774,0.977,776,1.518,782,1.131,786,0.548,787,1.518,788,2.176,789,1.012,790,2.176,791,0.882,792,0.977,793,1.573,794,0.882,795,1.012,796,0.912,797,0.944,798,2.764,799,0.882,800,0.977,801,1.012,802,0.912,803,0.977,804,0.912,805,1.803,806,1.012,807,0.912,808,1.012,809,0.912,810,1.012,811,0.912,812,1.012,813,0.912,814,0.944,815,1.012,816,0.912,817,0.977,818,0.882,819,1.012,820,0.882,821,0.977,822,1.012,823,1.012,824,0.882,825,1.012,826,0.882,827,1.012,828,0.912,829,0.944,830,0.912,831,1.799,832,2.764,833,0.882,834,0.912,835,0.882,836,0.977,837,0.912,838,0.912,839,1.012,840,0.912,841,1.896,842,1.573,843,0.912,844,2.176,845,0.882,846,0.882,847,0.977,848,1.573,849,0.882,850,0.977,851,0.912,852,0.944,853,0.912,854,0.944,855,0.882,856,1.012,857,0.826,858,1.012,859,0.944,860,0.944,861,0.944,862,0.912,863,0.977,864,0.912,865,0.977,866,0.912,867,0.912,868,0.912,869,1.467,870,0.912,871,0.912,872,0.977,873,0.912,874,0.977,875,1.012,876,1.012,877,0.853,878,0.912,879,1.012,880,0.853,881,1.524,882,1.012,883,0.853,884,1.012,885,0.826,886,1.012,887,0.853,888,0.912,889,0.977,890,1.012,891,4.114,893,3.865,947,1.896,1207,2.708,1224,2.172,1225,4.359,1343,1.637,1367,1.468,1382,2.24,1392,2.24,1394,2.24,1431,2.24,1445,2.905,1543,1.637,1630,2.027,1631,6.813,1632,2.027,1633,3.151,1634,4.27,1635,4.884,1636,4.884,1637,4.884,1638,4.884,1639,4.884,1640,4.884,1641,4.884,1642,4.27,1643,4.884,1644,4.884,1645,4.27,1646,4.884,1647,4.27,1648,3.982,1649,2.562,1650,3.151,1651,2.562,1652,2.562,1653,2.562,1654,3.982,1655,2.562,1656,2.562,1657,3.982,1658,2.562,1659,3.982,1660,2.562,1661,2.562,1662,4.816,1663,2.562,1664,2.562,1665,2.562,1666,2.562,1667,2.24,1668,2.562,1669,2.562,1670,2.562,1671,2.562,1672,2.24,1673,2.24,1674,2.24,1675,2.24,1676,2.24,1677,3.982,1678,2.562,1679,2.24,1680,3.481,1681,3.481,1682,2.24,1683,3.481,1684,3.481,1685,2.562,1686,2.24,1687,2.24,1688,2.562,1689,2.562,1690,2.562,1691,3.982,1692,2.562,1693,2.562,1694,2.562,1695,3.982,1696,2.562,1697,2.562,1698,2.562,1699,2.562,1700,2.562,1701,2.562,1702,2.562,1703,2.562,1704,2.562,1705,2.562,1706,2.562,1707,2.562,1708,2.562,1709,2.562,1710,3.982,1711,2.562,1712,2.562,1713,2.562,1714,1.869,1715,2.905]],["title/injectables/ModelService.html",[0,1.134,1077,2.806]],["body/injectables/ModelService.html",[0,1.706,1,5.025,2,2.183,3,0.151,4,0.219,5,0.135,8,0.426,9,0.743,10,1.118,11,4.699,12,1.431,13,1.505,14,0.862,15,1.42,16,4.912,17,4.912,18,4.912,19,4.912,20,3.995,21,4.912,22,4.912,24,1.13,26,4.221,27,1.875,29,1.082,30,0.012,31,0.898,32,0.688,33,0.828,34,1.962,35,1.063,36,1.951,37,4.221,38,4.699,40,4.221,41,3.469,43,3.469,45,3.469,47,0.994,48,3.469,50,3.556,51,3.469,53,1.761,54,1.132,55,1.06,56,0.925,58,0.197,59,0.263,63,0.151,65,4.859,66,4.415,67,0.166,75,1.169,87,0.009,88,0.009,182,2.21,198,2.37,235,1.505,272,2.46,305,1.484,396,2.871,397,3.039,577,3.234,578,3.234,1077,4.221,1289,3.469,1290,3.469,1600,4.158,1601,4.158,1602,4.158,1603,4.158,1604,4.158,1607,4.158,1608,3.764,1716,4.158,1717,4.756,1718,4.756,1719,4.756,1720,4.756,1721,4.756,1722,4.756]],["title/interfaces/NearestIntersection.html",[64,1.33,1723,3.01]],["body/interfaces/NearestIntersection.html",[0,1.506,3,0.125,4,0.125,5,0.113,8,0.354,9,0.656,15,1.302,23,0.845,30,0.013,32,0.468,56,1.066,58,0.226,59,0.219,60,2.262,63,0.125,64,1.274,67,0.138,72,1.624,75,1.453,87,0.008,88,0.008,112,1.901,116,1.157,119,3.715,135,1.21,139,1.456,140,2.12,155,1.506,170,1.71,172,3.501,182,1.407,189,1.656,195,2.418,198,1.969,199,2.264,202,1.053,229,3.127,236,1.371,240,1.735,244,2.899,282,2.164,283,2.683,298,1.561,308,3.715,327,1.194,378,2.672,487,4.978,612,1.813,651,2.687,704,3.127,881,2.12,897,2.264,906,3.127,916,3.127,926,5.375,1147,2.058,1223,2.687,1224,2.989,1232,2.687,1265,4.1,1266,4.34,1381,2.687,1424,3.127,1650,3.127,1723,5.385,1724,3.127,1725,5.846,1726,4.955,1727,2.687,1728,3.455,1729,4.79,1730,3.455,1731,5.499,1732,3.455,1733,4.588,1734,2.883,1735,5.499,1736,3.455,1737,3.455,1738,3.455,1739,3.455,1740,3.455,1741,3.455,1742,3.455,1743,3.455,1744,3.455,1745,3.455,1746,3.455,1747,3.455,1748,5.499,1749,3.455,1750,3.455,1751,3.127,1752,3.455,1753,3.455,1754,3.455,1755,3.455,1756,4.277,1757,3.455,1758,3.455,1759,4.79,1760,5.499,1761,5.499,1762,4.79,1763,4.79,1764,6.237,1765,6.237,1766,4.79,1767,3.455,1768,3.455,1769,5.499,1770,2.883,1771,3.455,1772,4.79,1773,4.79,1774,3.455,1775,3.455,1776,3.455,1777,3.455,1778,3.455,1779,3.455,1780,3.455,1781,4.336,1782,3.455,1783,3.455,1784,3.455,1785,3.455,1786,3.455,1787,3.455,1788,3.127,1789,4.79,1790,4.336,1791,3.455,1792,5.938,1793,4.79,1794,3.455,1795,3.455,1796,3.455,1797,4.79]],["title/interfaces/Node.html",[64,1.33,596,2.149]],["body/interfaces/Node.html",[3,0.182,4,0.182,5,0.164,8,0.514,9,0.838,27,1.906,30,0.012,31,0.662,32,0.714,33,0.869,34,2.025,58,0.182,63,0.255,64,2.592,87,0.01,88,0.01,135,1.269,235,1.903,327,2.279,410,2.226,596,3.643,691,2.747,695,2.993,699,3.293,805,2.114,993,3.47,1147,2.993,1148,4.606,1149,3.135,1150,3.672,1151,4.222,1152,3.909,1153,3.293,1154,3.293,1155,3.672,1156,3.909,1157,3.672,1158,3.47]],["title/injectables/ObjLoaderService.html",[0,1.134,1078,2.806]],["body/injectables/ObjLoaderService.html",[0,1.827,2,2.43,3,0.168,4,0.168,5,0.151,8,0.474,9,0.796,10,1.245,12,1.479,14,0.923,15,1.386,24,1.091,27,1.734,29,1.009,30,0.012,31,0.837,32,0.621,33,0.773,35,0.974,47,0.957,50,3.809,53,1.502,54,1.212,55,1.135,56,1.483,58,0.249,59,0.293,63,0.168,67,0.185,75,0.997,87,0.009,88,0.009,89,5.121,92,4.85,93,4.85,94,4.248,95,4.521,97,4.85,99,4.644,100,3.863,155,1.827,235,1.612,244,2.588,272,2.197,378,2.25,410,1.502,470,2.268,1078,4.521,1569,4.19,1570,4.19,1571,4.19,1798,6.354,1799,4.19,1800,6.649,1801,5.295,1802,6.649,1803,7.269,1804,5.295,1805,5.295,1806,6.354,1807,5.295,1808,5.295,1809,5.295,1810,5.295,1811,5.295,1812,4.629,1813,5.813,1814,5.295,1815,5.295,1816,5.295]],["title/components/OrbitControlsComponent.html",[740,0.802,845,1.421]],["body/components/OrbitControlsComponent.html",[3,0.101,4,0.101,5,0.091,8,0.286,9,0.564,10,0.752,12,1.339,14,0.654,23,1.008,24,1.079,29,0.654,30,0.012,31,0.919,32,0.623,33,0.501,34,0.826,35,0.881,36,0.852,47,0.946,53,0.908,54,0.859,55,0.804,56,0.622,58,0.208,59,0.177,63,0.101,67,0.112,75,0.603,87,0.007,88,0.007,111,0.444,112,0.967,113,0.752,116,1.379,118,2.912,123,1.424,126,1.379,127,0.967,132,1.066,133,1.951,135,1.04,140,0.999,145,1.424,146,1.865,148,0.967,154,1.863,156,1.101,170,0.999,189,0.967,190,1.139,201,1.49,202,1.49,204,1.031,215,1.178,232,1.139,235,1.143,236,0.801,240,1.107,244,1.677,272,2.252,305,0.999,355,2.209,359,1.101,365,1.101,390,1.101,410,0.908,423,1.066,430,1.139,460,2.334,470,0.999,472,1.101,538,1.101,602,2.795,604,2.341,606,3.728,607,5.204,608,3.204,609,4.426,610,4.882,611,3.728,612,3.349,614,2.334,616,2.272,617,2.532,618,2.532,619,2.176,620,2.532,621,2.334,622,3.01,623,1.931,624,2.532,625,2.334,626,2.334,627,2.532,628,2.532,629,2.532,630,2.532,631,2.334,632,2.532,638,2.532,639,3.204,640,2.532,641,2.532,643,1.569,644,2.532,645,2.044,649,3.437,650,2.532,652,2.532,662,3.728,664,1.22,687,2.532,690,1.139,693,2.124,740,1.088,743,1.101,744,1.101,745,1.101,746,1.101,747,1.101,748,1.101,765,1.101,766,1.569,767,1.264,770,0.999,772,2.895,773,2.7,774,1.22,776,1.796,782,1.412,786,0.684,787,1.796,788,2.437,789,1.264,790,2.437,791,1.101,792,1.22,793,1.861,794,1.101,795,1.264,796,1.139,797,1.178,798,2.942,799,1.101,800,1.22,801,1.264,802,1.139,803,1.22,804,1.139,805,1.988,806,1.264,807,1.139,808,1.264,809,1.139,810,1.264,811,1.139,812,1.264,813,1.139,814,1.178,815,1.264,816,1.139,817,1.22,818,1.101,819,1.264,820,1.101,821,1.22,822,1.264,823,1.264,824,1.101,825,1.264,826,1.101,827,1.264,828,1.139,829,1.178,830,1.139,831,2.06,832,2.942,833,1.101,834,1.139,835,1.101,836,1.22,837,1.139,838,1.139,839,1.264,840,1.139,841,1.101,842,1.861,843,1.139,844,2.437,845,2.124,846,1.101,847,1.22,848,1.861,849,1.101,850,1.22,851,1.139,852,1.178,853,1.139,854,1.178,855,1.101,856,1.264,857,1.031,858,1.264,859,1.178,860,1.178,861,1.178,862,1.139,863,1.22,864,1.139,865,1.22,866,1.139,867,1.139,868,1.139,869,1.735,870,1.139,871,1.139,872,1.22,873,1.139,874,1.22,875,1.264,876,1.264,877,1.066,878,1.139,879,1.264,880,1.066,881,1.745,882,1.264,883,1.066,884,1.264,885,1.031,886,1.264,887,1.066,888,1.139,889,1.22,890,1.264,1207,3.204,1343,2.044,1367,1.833,1543,2.044,1630,2.532,1632,2.532,1633,3.728,1634,4.889,1645,4.889,1647,4.889,1662,4.119,1667,2.797,1672,2.797,1673,2.797,1674,2.797,1675,2.797,1676,2.797,1679,2.797,1680,4.119,1681,4.119,1682,2.797,1683,4.119,1684,4.119,1686,2.797,1687,2.797,1714,2.334,1715,3.437,1817,5.393,1818,4.712,1819,3.2,1820,3.2,1821,3.2,1822,3.2]],["title/components/OrthographicCameraComponent.html",[740,0.802,846,1.421]],["body/components/OrthographicCameraComponent.html",[3,0.097,4,0.097,5,0.087,8,0.273,9,0.545,10,0.718,12,1.432,13,1.105,14,0.633,15,1.138,23,0.974,24,1.1,29,0.756,30,0.012,31,0.919,32,0.64,33,0.579,34,0.789,35,0.939,36,0.814,47,1.059,53,0.867,54,0.83,55,0.778,56,0.594,58,0.204,59,0.169,60,1.018,63,0.097,67,0.107,72,1.176,75,0.576,87,0.006,88,0.006,111,0.425,112,2.439,113,0.718,116,1.333,118,2.835,119,3.36,120,4.308,121,4.308,122,4.774,123,1.377,124,2.076,125,3.322,126,1.333,127,1.645,128,3.604,129,3.604,130,3.604,131,3.604,132,1.018,133,1.919,135,1.59,139,1.126,140,1.422,145,1.377,146,1.824,148,1.377,150,3.604,152,4.103,154,1.517,155,1.252,156,1.052,165,1.523,167,4.308,169,1.845,170,0.954,171,1.461,172,2.91,190,1.088,204,0.985,215,1.126,232,1.088,235,1.105,236,0.765,240,0.718,272,2.327,305,0.954,355,1.799,359,1.052,365,1.052,390,1.052,410,0.867,423,1.018,430,1.088,452,1.592,470,0.954,472,1.052,538,1.052,602,1.088,604,1.088,616,1.678,643,1.018,664,1.165,690,1.088,693,2.077,740,1.173,743,1.052,744,1.052,745,1.052,746,1.052,747,1.052,748,1.052,765,1.052,766,1.517,767,1.207,770,0.954,772,2.89,773,2.694,774,1.165,776,1.737,781,1.523,782,1.349,786,0.654,787,1.737,788,2.383,789,1.207,790,2.383,791,1.052,792,1.165,793,1.799,794,1.052,795,1.207,796,1.088,797,1.126,798,2.907,799,1.052,800,1.165,801,1.207,802,1.088,803,1.165,804,1.088,805,1.95,806,1.207,807,1.088,808,1.207,809,1.088,810,1.207,811,1.088,812,1.207,813,1.088,814,1.126,815,1.207,816,1.088,817,1.165,818,1.052,819,1.207,820,1.052,821,1.165,822,1.207,823,1.207,824,1.052,825,1.207,826,1.052,827,1.207,828,1.088,829,1.126,830,1.088,831,2.005,832,2.907,833,1.052,834,1.088,835,1.052,836,1.165,837,1.088,838,1.088,839,1.207,840,1.088,841,1.052,842,1.799,843,1.088,844,2.383,845,1.052,846,2.077,847,2.076,848,1.799,849,1.052,850,1.165,851,1.088,852,1.126,853,1.088,854,1.126,855,1.052,856,1.207,857,0.985,858,1.207,859,1.126,860,1.126,861,1.126,862,1.088,863,1.165,864,1.088,865,1.165,866,1.088,867,1.088,868,1.088,869,1.678,870,1.088,871,1.088,872,1.165,873,1.088,874,1.165,875,1.207,876,1.207,877,1.018,878,1.088,879,1.207,880,1.018,881,1.699,882,1.207,883,1.018,884,1.207,885,0.985,886,1.207,887,1.018,888,1.088,889,1.165,890,1.207,946,1.874,1223,3.097,1224,3.928,1225,2.419,1232,3.097,1478,3.322,1515,2.672,1823,5.274,1824,2.419,1825,4.555,1826,6.033,1827,3.982,1828,2.672,1829,2.672,1830,2.672,1831,2.672,1832,2.672,1833,3.057,1834,3.057,1835,3.057,1836,3.057,1837,2.672,1838,2.672,1839,2.672,1840,2.672,1841,3.057,1842,3.057,1843,3.057,1844,4.555,1845,3.057,1846,3.057,1847,3.057,1848,3.057,1849,6.452,1850,3.057,1851,3.057,1852,3.057,1853,3.057,1854,3.057,1855,2.672,1856,3.057,1857,3.057]],["title/components/PerspectiveCameraComponent.html",[740,0.802,849,1.421]],["body/components/PerspectiveCameraComponent.html",[3,0.102,4,0.102,5,0.092,8,0.288,9,0.567,10,0.756,12,1.377,13,1.148,14,0.657,15,1.163,23,1.012,24,1.117,29,0.779,30,0.012,31,0.926,32,0.665,33,0.597,34,0.831,35,0.923,36,0.857,47,1.025,53,0.913,54,0.587,55,0.549,56,0.626,58,0.209,59,0.178,63,0.102,67,0.112,87,0.007,88,0.007,111,0.447,112,2.457,113,0.756,119,3.433,120,4.441,121,4.441,122,4.896,123,1.43,124,2.14,125,3.452,126,1.385,127,1.696,128,3.745,129,3.745,130,3.745,131,3.745,132,1.072,133,1.955,135,1.735,139,1.185,140,1.004,145,0.973,146,1.43,148,0.973,150,3.745,152,3.816,154,2.061,155,1.301,156,1.108,172,2.056,190,1.146,204,1.037,215,1.185,232,1.146,235,1.148,236,0.805,240,0.756,272,2.352,305,1.004,312,2.547,355,1.271,359,1.108,365,1.108,378,2.01,390,1.108,410,0.913,423,1.072,430,1.146,452,1.676,470,1.004,472,1.108,538,1.108,602,1.146,604,1.146,616,1.743,643,1.072,664,1.227,690,1.146,693,2.13,740,1.091,743,1.108,744,1.108,745,1.108,746,1.108,747,1.108,748,1.108,765,1.108,766,1.576,767,1.271,770,1.004,772,2.896,773,2.701,774,1.227,776,1.804,781,1.604,782,1.42,786,0.688,787,1.804,788,2.443,789,1.271,790,2.443,791,1.108,792,1.227,793,1.869,794,1.108,795,1.271,796,1.146,797,1.185,798,2.947,799,1.108,800,1.227,801,1.271,802,1.146,803,1.227,804,1.146,805,1.992,806,1.271,807,1.146,808,1.271,809,1.146,810,1.271,811,1.146,812,1.271,813,1.146,814,1.185,815,1.271,816,1.146,817,1.227,818,1.108,819,1.271,820,1.108,821,1.227,822,1.271,823,1.271,824,1.108,825,1.271,826,1.108,827,1.271,828,1.146,829,1.185,830,1.146,831,2.067,832,2.947,833,1.108,834,1.146,835,1.108,836,1.227,837,1.146,838,1.146,839,1.271,840,1.146,841,1.108,842,1.869,843,1.146,844,2.443,845,1.108,846,1.108,847,1.227,848,1.869,849,2.13,850,2.14,851,1.146,852,1.185,853,1.146,854,1.185,855,1.108,856,1.271,857,1.037,858,1.271,859,1.185,860,1.185,861,1.185,862,1.146,863,1.227,864,1.146,865,1.227,866,1.146,867,1.146,868,1.146,869,1.743,870,1.146,871,1.146,872,1.227,873,1.146,874,1.227,875,1.271,876,1.271,877,1.072,878,1.146,879,1.271,880,1.072,881,1.751,882,1.271,883,1.072,884,1.271,885,1.037,886,1.271,887,1.072,888,1.146,889,1.227,890,1.271,1538,4.906,1539,4.906,1562,2.814,1563,2.814,1824,2.547,1827,2.814,1828,2.814,1829,2.814,1830,2.814,1831,2.814,1832,2.814,1837,2.814,1838,2.814,1839,4.137,1840,2.814,1855,2.814,1858,5.763,1859,4.732,1860,5.612,1861,4.732,1862,3.218,1863,3.218,1864,3.218,1865,3.218,1866,3.218,1867,3.218,1868,3.218,1869,3.218,1870,3.218,1871,3.218]],["title/pipes/Rad2DegPipe.html",[1100,2.806,1432,2.806]],["body/pipes/Rad2DegPipe.html",[3,0.193,4,0.193,5,0.173,14,0.845,24,0.845,29,0.845,30,0.012,31,0.89,32,0.52,33,0.647,35,0.815,58,0.193,59,0.337,63,0.193,67,0.212,75,1.146,87,0.01,88,0.01,116,1.782,135,1.803,280,3.428,468,3.888,770,1.899,1100,4.923,1432,4.923,1433,4.816,1436,4.816,1439,6.329,1440,6.329,1441,6.329,1442,4.816,1444,4.816,1445,4.439,1872,5.32,1873,7.24,1874,7.24,1875,6.086]],["title/directives/RaycasterCameraDirective.html",[111,0.573,880,1.374]],["body/directives/RaycasterCameraDirective.html",[3,0.189,4,0.189,5,0.17,8,0.533,14,0.992,23,1.528,24,0.992,29,0.827,30,0.012,31,0.686,32,0.509,33,0.633,35,0.798,47,1.028,58,0.243,59,0.329,63,0.189,67,0.208,87,0.01,88,0.01,111,0.827,112,2.4,113,1.399,116,2.092,119,3.987,194,3.658,201,2.115,244,2.544,612,3.826,651,4.048,770,1.858,772,1.983,773,2.23,880,2.38,881,2.23,1112,4.048,1365,4.711,1367,4.093,1383,3.803,1876,4.891,1877,5.204,1878,5.953,1879,5.953,1880,5.953]],["title/interfaces/RaycasterEmitEvent.html",[64,1.33,1881,3.01]],["body/interfaces/RaycasterEmitEvent.html",[3,0.159,4,0.159,5,0.143,8,0.448,9,0.768,23,1.071,30,0.012,32,0.548,33,0.682,47,0.923,56,1.377,58,0.245,59,0.277,60,2.137,63,0.203,64,1.613,67,0.175,87,0.009,88,0.009,111,0.695,116,1.465,155,1.763,182,1.782,194,3.065,195,2.831,201,1.333,202,1.333,236,1.932,240,1.176,244,2.859,301,2.949,423,2.358,534,5.447,612,3.249,622,3.197,623,3.021,740,1.562,766,2.137,773,2.002,881,2.41,885,1.613,897,4.056,1112,3.403,1147,2.606,1367,2.867,1381,3.403,1383,3.197,1388,5.603,1395,5.077,1725,5.762,1726,5.165,1727,3.403,1733,5.165,1734,3.651,1756,4.363,1770,3.651,1876,3.197,1881,4.68,1882,3.96,1883,4.375,1884,4.375,1885,4.375,1886,4.375,1887,4.375,1888,4.375,1889,4.375,1890,3.96,1891,3.96,1892,3.651,1893,6.19,1894,4.375,1895,6.19,1896,4.375,1897,4.375,1898,4.375,1899,4.375,1900,4.375,1901,4.375,1902,4.375,1903,4.375,1904,4.375,1905,4.375,1906,4.375,1907,4.375,1908,4.375,1909,4.375,1910,4.375,1911,4.375,1912,5.608,1913,4.375,1914,4.375,1915,4.375]],["title/directives/RaycasterEnableDirective.html",[111,0.573,883,1.374]],["body/directives/RaycasterEnableDirective.html",[3,0.192,4,0.192,5,0.172,8,0.542,14,1.003,23,1.544,24,1.003,29,0.841,30,0.012,31,0.698,32,0.517,33,0.644,35,0.811,47,1.039,58,0.229,59,0.335,63,0.192,67,0.211,87,0.01,88,0.01,111,0.841,113,1.424,116,2.113,194,3.685,199,4.135,201,2.127,244,2.156,612,3.798,770,1.89,772,2.017,773,2.253,881,2.253,883,2.404,1112,4.119,1383,3.87,1876,4.927,1916,5.295,1917,6.057,1918,6.057,1919,6.057,1920,6.057]],["title/directives/RaycasterGroupDirective.html",[111,0.573,885,1.33]],["body/directives/RaycasterGroupDirective.html",[3,0.134,4,0.134,5,0.121,8,0.38,14,0.799,23,1.231,24,1.127,29,0.907,30,0.012,31,0.752,32,0.645,33,0.694,35,1.034,47,1.145,56,1.27,58,0.232,59,0.235,60,1.917,63,0.182,64,1.368,67,0.148,87,0.008,88,0.008,111,0.59,113,0.998,116,1.685,155,1.582,182,1.511,194,3.12,195,2.881,201,1.865,202,1.865,236,1.831,240,0.998,244,2.986,268,2.445,301,3.047,423,2.175,468,2.712,534,5.106,612,3.541,622,3.677,623,3.474,696,4.554,740,1.361,766,2.332,770,1.325,772,1.414,773,2.185,881,2.483,885,1.855,897,4.191,1112,2.887,1365,3.359,1367,3.297,1381,2.887,1383,2.712,1388,5.167,1395,4.554,1725,4.763,1726,3.097,1727,2.887,1733,4.763,1734,3.097,1756,4.76,1770,4.198,1876,5.226,1881,3.097,1882,3.359,1883,5.031,1884,5.031,1885,5.031,1886,5.031,1887,5.031,1888,5.031,1889,5.031,1890,5.167,1891,5.167,1892,4.763,1893,5.708,1894,3.711,1895,5.708,1896,3.711,1897,3.711,1898,3.711,1899,6.12,1900,3.711,1901,3.711,1902,3.711,1903,6.12,1904,3.711,1905,3.711,1906,3.711,1907,6.12,1908,3.711,1909,5.031,1910,3.711,1911,3.711,1912,5.031,1913,3.711,1914,3.711,1915,3.711,1921,5.755,1922,5.755,1923,4.245,1924,4.245,1925,4.245,1926,4.245,1927,4.245,1928,4.245,1929,4.245,1930,4.245,1931,4.245]],["title/injectables/RaycasterService.html",[0,1.134,612,1.894]],["body/injectables/RaycasterService.html",[0,1.27,2,1.43,3,0.099,4,0.099,5,0.089,8,0.279,9,0.553,14,0.642,15,1.428,23,1.178,24,1.144,29,0.979,30,0.013,31,0.812,32,0.643,33,0.787,35,1.056,47,1.113,54,1.11,55,1.04,56,1.071,58,0.206,59,0.172,60,2.029,63,0.099,64,1.005,67,0.109,72,1.422,75,1.364,87,0.007,88,0.007,112,2.059,116,0.912,119,3.772,135,1.504,139,2.243,140,2.126,155,1.27,170,1.442,172,2.952,182,1.109,189,1.397,195,2.039,198,3.035,199,3.489,202,1.622,229,2.466,236,1.524,240,1.294,244,3.035,282,2.175,283,2.691,298,1.231,308,3.172,327,1.397,378,2.588,474,3.656,487,4.358,612,2.12,651,2.119,696,3.656,704,4.358,881,2.126,897,3.489,906,4.358,916,4.82,926,4.82,1223,2.119,1224,2.52,1232,2.119,1265,3.677,1266,3.891,1381,2.119,1424,2.466,1650,2.466,1723,4.97,1724,2.466,1725,5.283,1726,3.37,1727,2.119,1728,4.039,1729,5.325,1730,4.814,1731,4.814,1732,2.724,1733,4.017,1734,2.273,1735,4.814,1736,2.724,1737,2.724,1738,2.724,1739,2.724,1740,2.724,1741,2.724,1742,5.325,1743,2.724,1744,2.724,1745,2.724,1746,2.724,1747,5.325,1748,4.814,1749,5.325,1750,4.814,1751,3.656,1752,2.724,1753,4.039,1754,2.724,1755,2.724,1756,4.142,1757,2.724,1758,4.039,1759,4.039,1760,4.814,1761,4.814,1762,4.039,1763,4.039,1764,5.686,1765,5.686,1766,4.039,1767,2.724,1768,2.724,1769,4.814,1770,3.37,1771,2.724,1772,4.039,1773,4.039,1774,4.039,1775,4.814,1776,2.724,1777,2.724,1778,2.724,1779,4.039,1780,4.039,1781,3.656,1782,2.724,1783,2.724,1784,4.039,1785,2.724,1786,2.724,1787,2.724,1788,2.466,1789,4.039,1790,3.656,1791,2.724,1792,5.325,1793,4.039,1794,2.724,1795,2.724,1796,2.724,1797,4.039,1932,4.621,1933,4.621,1934,4.621,1935,4.621,1936,4.621,1937,4.039,1938,4.621,1939,3.116,1940,3.116,1941,3.116,1942,3.116,1943,3.116,1944,2.466,1945,3.116,1946,3.116,1947,3.116,1948,3.116,1949,3.116,1950,3.116,1951,3.116,1952,3.116,1953,3.116,1954,3.116,1955,3.116,1956,3.116,1957,3.116,1958,3.116,1959,3.116,1960,3.116]],["title/components/RendererCanvasComponent.html",[643,1.374,740,0.802]],["body/components/RendererCanvasComponent.html",[3,0.098,4,0.098,5,0.088,8,0.276,9,0.55,12,1.032,14,0.638,15,1.07,23,0.982,24,1.025,29,0.638,30,0.012,31,0.914,32,0.518,33,0.488,34,0.797,35,0.812,47,0.788,53,0.876,54,0.563,55,0.527,58,0.145,59,0.171,63,0.098,67,0.108,75,0.864,87,0.007,88,0.007,111,0.429,112,0.934,113,0.726,116,1.344,117,4.335,124,2.312,126,1.344,127,0.934,132,1.029,133,1.926,139,1.138,140,1.433,154,1.529,170,1.433,189,1.387,190,1.1,198,1.539,204,0.996,215,1.138,232,1.1,236,0.773,240,0.726,244,2.307,305,1.433,359,1.063,365,1.063,390,1.063,396,1.864,397,1.973,410,0.876,422,2.629,423,1.029,430,1.1,470,0.964,472,1.063,474,3.632,480,5.301,538,1.063,577,2.1,578,2.1,602,1.1,604,1.95,614,5.129,616,2.234,619,3.121,621,3.996,622,3.5,626,3.996,639,3.121,643,2.02,645,2.933,664,1.178,690,1.1,693,2.088,703,2.933,740,1.065,743,1.063,744,1.063,745,1.063,746,1.063,747,1.063,748,1.063,765,1.063,766,1.529,767,1.22,770,0.964,772,2.891,773,2.695,774,1.178,776,1.178,786,0.661,787,1.75,788,2.395,789,1.22,790,2.395,791,1.063,792,1.178,793,1.813,794,1.063,795,1.22,796,1.1,797,1.138,798,2.915,799,1.063,800,1.178,801,1.22,802,1.1,803,1.178,804,1.1,805,1.959,806,1.22,807,1.1,808,1.22,809,1.1,810,1.22,811,1.1,812,1.22,813,1.1,814,1.138,815,1.22,816,1.1,817,1.178,818,1.063,819,1.22,820,1.063,821,1.178,822,1.22,823,1.22,824,1.063,825,1.22,826,1.063,827,1.22,828,1.1,829,1.138,830,1.1,831,2.018,832,2.915,833,1.063,834,1.1,835,1.063,836,1.178,837,1.1,838,1.1,839,1.22,840,1.1,841,1.063,842,1.813,843,1.1,844,2.395,845,1.063,846,1.063,847,1.178,848,1.813,849,1.063,850,1.178,851,1.1,852,1.138,853,1.1,854,1.138,855,2.586,856,1.22,857,0.996,858,1.22,859,1.138,860,1.138,861,1.138,862,1.1,863,1.178,864,1.1,865,1.178,866,1.1,867,1.1,868,1.1,869,1.691,870,1.1,871,1.1,872,1.178,873,1.1,874,1.178,875,1.22,876,1.22,877,1.029,878,1.1,879,1.22,880,1.029,881,1.71,882,1.22,883,1.029,884,1.22,885,0.996,886,1.22,887,1.029,888,1.1,889,1.178,890,1.22,897,4.138,898,4.799,946,1.886,1065,2.7,1122,2.7,1289,2.253,1290,2.253,1300,2.7,1343,1.973,1367,1.769,1514,4.789,1543,4.14,1630,2.444,1633,3.632,1714,2.253,1715,4.424,1961,6.567,1962,2.7,1963,5.717,1964,5.478,1965,4.59,1966,4.59,1967,5.478,1968,4.59,1969,6.064,1970,4.789,1971,4.59,1972,4.59,1973,5.478,1974,4.59,1975,3.089,1976,3.089,1977,4.59,1978,3.089,1979,4.59,1980,4.59,1981,3.089,1982,4.59,1983,3.089,1984,3.089,1985,3.089,1986,6.481,1987,4.59,1988,4.59,1989,4.59,1990,4.59,1991,4.59,1992,4.59,1993,4.789,1994,5.478,1995,5.478,1996,4.59,1997,4.59,1998,3.089,1999,3.089,2000,3.089,2001,3.089,2002,3.089,2003,3.089,2004,3.089,2005,3.089,2006,3.089,2007,4.59,2008,3.089,2009,2.7,2010,3.089,2011,3.089,2012,3.089,2013,3.089,2014,3.089,2015,3.089,2016,3.089,2017,3.089,2018,3.089,2019,3.089,2020,4.59,2021,3.089,2022,3.089,2023,2.253]],["title/injectables/RendererService.html",[0,1.134,133,1.17]],["body/injectables/RendererService.html",[0,1.374,2,1.593,3,0.11,4,0.11,5,0.099,8,0.311,9,0.599,12,0.654,14,0.695,15,1.489,20,3.196,23,1.07,24,1.141,27,1.294,29,1.037,30,0.013,31,0.86,32,0.681,33,0.821,35,1.047,47,1.094,54,0.633,55,0.593,56,0.675,58,0.224,59,0.192,60,1.952,63,0.11,67,0.121,68,3.957,72,1.291,75,1.207,87,0.007,88,0.007,112,2.205,119,3.686,125,3.648,133,1.418,135,1.104,139,2.158,140,2.001,152,3.985,155,1.374,165,3.387,170,2.276,172,4.341,203,4.341,204,2.282,215,1.279,220,3.957,244,2.999,310,2.748,378,2.49,422,3.892,608,3.985,651,2.361,685,4.371,703,4.096,857,2.351,1067,3.035,1119,2.218,1128,4.272,1140,5.377,1216,5.074,1224,1.894,1341,2.748,1343,4.096,1512,3.035,1751,3.957,1781,5.377,1937,4.371,1963,5.601,1970,5.941,2009,6.904,2023,2.533,2024,3.035,2025,6.412,2026,6.412,2027,6.412,2028,5.001,2029,5.001,2030,5.001,2031,5.001,2032,5.001,2033,3.035,2034,5.001,2035,3.472,2036,3.472,2037,3.472,2038,6.412,2039,5.001,2040,3.472,2041,3.472,2042,5.001,2043,3.472,2044,3.472,2045,5.001,2046,3.472,2047,5.001,2048,3.472,2049,5.001,2050,3.472,2051,5.001,2052,3.472,2053,3.472,2054,3.472,2055,3.472,2056,3.472,2057,3.472,2058,3.472,2059,3.472,2060,3.472,2061,5.001,2062,3.472,2063,5.861,2064,3.472,2065,3.472,2066,3.472,2067,5.001,2068,3.472,2069,3.472,2070,3.472,2071,3.472,2072,3.472,2073,3.472,2074,3.472,2075,6.412,2076,3.472,2077,3.472,2078,3.472,2079,3.472,2080,3.472,2081,3.472,2082,3.472,2083,3.472,2084,3.472,2085,3.472,2086,5.001,2087,5.001,2088,3.472,2089,3.472,2090,3.472,2091,3.472,2092,3.472,2093,3.472,2094,5.001,2095,3.472,2096,3.472,2097,3.472]],["title/classes/SVGLoader.html",[67,0.144,2098,3.01]],["body/classes/SVGLoader.html",[3,0.04,4,0.04,5,0.036,8,0.113,9,0.354,14,0.307,23,0.473,24,0.772,27,0.279,29,0.705,30,0.013,31,0.551,32,0.303,33,0.612,35,0.714,47,0.182,54,0.809,55,0.504,56,1.492,58,0.04,60,2.758,63,0.04,66,2.265,67,0.044,72,2.047,75,1.258,87,0.003,88,0.003,90,0.921,95,2.008,135,0.652,140,1.107,155,0.347,170,1.258,178,0.517,180,1.614,189,2.31,198,0.629,235,0.536,240,0.694,262,1.254,263,1.254,282,1.166,283,1.166,291,0.906,294,0.94,305,0.394,327,1.957,373,0.999,378,2.519,388,0.921,396,0.762,470,1.107,476,1.614,495,1.104,579,4.554,596,3.797,619,0.858,625,0.921,645,3.676,660,1.104,672,1.104,695,2.644,737,1.104,797,1.087,821,0.843,852,0.465,854,1.761,867,0.787,869,1.306,908,1.104,918,0.921,947,0.435,985,4.18,1063,5.753,1157,0.806,1158,0.762,1202,1.75,1224,3.32,1243,3.512,1325,1.104,1341,4.22,1386,1.934,1436,4.017,1442,4.22,1444,2.336,1445,2.587,1476,1.934,1478,2.154,1581,1.104,1642,5.184,1788,0.999,1790,1.75,1944,1.75,2023,0.921,2098,2.587,2099,5.03,2100,1.104,2101,2.953,2102,2.953,2103,3.546,2104,2.212,2105,2.953,2106,2.953,2107,3.546,2108,2.953,2109,1.262,2110,2.212,2111,2.953,2112,2.953,2113,1.262,2114,3.546,2115,1.262,2116,1.262,2117,1.262,2118,2.581,2119,1.262,2120,5.077,2121,5.077,2122,5.077,2123,1.262,2124,2.212,2125,2.212,2126,2.212,2127,2.212,2128,2.212,2129,1.262,2130,3.546,2131,3.546,2132,4.438,2133,1.262,2134,1.262,2135,1.262,2136,4.032,2137,1.262,2138,1.262,2139,7.507,2140,5.754,2141,1.262,2142,6.581,2143,1.262,2144,5.754,2145,5.333,2146,5.333,2147,4.782,2148,1.262,2149,2.212,2150,2.953,2151,2.212,2152,3.546,2153,2.212,2154,7.507,2155,3.546,2156,1.262,2157,7.34,2158,1.262,2159,2.953,2160,1.262,2161,1.262,2162,1.262,2163,1.262,2164,1.262,2165,1.262,2166,1.262,2167,1.262,2168,1.262,2169,1.262,2170,1.262,2171,1.262,2172,2.212,2173,1.262,2174,1.262,2175,1.262,2176,1.262,2177,1.262,2178,1.262,2179,1.262,2180,1.262,2181,1.262,2182,1.262,2183,2.953,2184,1.262,2185,1.262,2186,2.212,2187,1.262,2188,1.262,2189,2.953,2190,1.262,2191,2.212,2192,6.768,2193,2.212,2194,5.333,2195,3.546,2196,3.546,2197,2.212,2198,1.262,2199,1.262,2200,1.262,2201,1.262,2202,1.262,2203,1.262,2204,1.104,2205,1.262,2206,1.262,2207,1.262,2208,1.262,2209,1.262,2210,2.336,2211,2.953,2212,1.262,2213,2.953,2214,1.262,2215,2.212,2216,1.262,2217,1.262,2218,1.262,2219,2.953,2220,2.953,2221,1.262,2222,2.212,2223,2.953,2224,1.262,2225,1.262,2226,1.262,2227,2.212,2228,2.212,2229,2.212,2230,1.262,2231,2.212,2232,2.212,2233,2.212,2234,3.546,2235,1.262,2236,1.262,2237,2.212,2238,1.262,2239,1.262,2240,1.262,2241,1.262,2242,1.262,2243,1.262,2244,1.262,2245,1.262,2246,2.212,2247,2.212,2248,1.262,2249,1.262,2250,1.262,2251,2.212,2252,2.212,2253,1.262,2254,1.262,2255,2.212,2256,2.581,2257,3.546,2258,5.557,2259,5.557,2260,2.953,2261,2.953,2262,2.953,2263,1.262,2264,1.262,2265,2.212,2266,4.032,2267,2.212,2268,1.262,2269,2.212,2270,4.438,2271,3.546,2272,4.438,2273,3.546,2274,2.212,2275,3.512,2276,2.212,2277,5.333,2278,5.333,2279,2.212,2280,4.032,2281,2.212,2282,1.262,2283,1.262,2284,1.262,2285,1.262,2286,2.953,2287,2.953,2288,2.212,2289,1.262,2290,4.032,2291,4.032,2292,4.032,2293,4.032,2294,2.212,2295,1.262,2296,1.262,2297,1.262,2298,1.262,2299,1.262,2300,1.262,2301,1.262,2302,1.262,2303,2.212,2304,1.262,2305,1.262,2306,1.262,2307,4.032,2308,2.212,2309,4.032,2310,1.262,2311,2.212,2312,1.262,2313,3.546,2314,1.262,2315,2.212,2316,1.262,2317,1.262,2318,2.953,2319,1.262,2320,1.262,2321,1.262,2322,5.077,2323,1.262,2324,2.212,2325,3.546,2326,2.212,2327,2.212,2328,1.262,2329,1.262,2330,1.262,2331,2.212,2332,1.262,2333,1.262,2334,1.262,2335,1.262,2336,2.953,2337,2.212,2338,1.262,2339,1.262,2340,1.104,2341,1.104,2342,2.953,2343,1.262,2344,1.262,2345,1.262,2346,1.262,2347,1.262,2348,1.262,2349,1.262,2350,1.262,2351,1.262,2352,1.262,2353,1.262,2354,1.262,2355,1.262,2356,1.262,2357,1.262,2358,1.262,2359,1.262,2360,1.262,2361,1.262,2362,1.262,2363,1.262,2364,3.546,2365,1.262,2366,1.262,2367,1.262,2368,1.262,2369,1.262,2370,1.262,2371,1.262,2372,1.262,2373,2.212,2374,1.262,2375,1.262,2376,1.262,2377,1.262,2378,1.262,2379,1.262,2380,1.262,2381,1.262,2382,1.262,2383,1.262,2384,1.262,2385,2.953,2386,2.212,2387,3.546,2388,2.212,2389,1.262,2390,2.212,2391,1.262,2392,2.953,2393,1.262,2394,2.212,2395,1.262,2396,1.262,2397,1.262,2398,1.262,2399,1.262,2400,1.262,2401,1.262,2402,1.262,2403,1.262,2404,1.262,2405,2.212,2406,1.262,2407,4.032,2408,1.262,2409,3.88,2410,1.262,2411,2.212,2412,1.262,2413,1.262,2414,2.212,2415,2.212,2416,2.212,2417,2.212,2418,2.212,2419,1.262,2420,2.212,2421,3.546,2422,2.953,2423,4.782,2424,2.212,2425,2.212,2426,1.262,2427,2.212,2428,1.262,2429,1.262,2430,1.262,2431,2.212,2432,2.953,2433,1.262,2434,1.262,2435,2.953,2436,1.262,2437,1.262,2438,1.262,2439,1.262,2440,1.104,2441,1.262,2442,2.953,2443,2.953,2444,1.262,2445,2.212,2446,1.262,2447,3.546,2448,2.953,2449,2.212,2450,1.262,2451,1.262,2452,1.262,2453,1.262,2454,1.262,2455,1.262,2456,1.262,2457,3.546,2458,3.546,2459,2.212,2460,3.546,2461,3.546,2462,1.262,2463,2.953,2464,2.212,2465,1.262,2466,2.953,2467,1.262,2468,1.262,2469,1.262,2470,1.104,2471,2.212,2472,1.262,2473,1.262,2474,2.212,2475,1.262,2476,1.262,2477,2.212,2478,1.262,2479,1.262,2480,1.262,2481,1.262,2482,2.212,2483,1.262,2484,1.262,2485,1.262,2486,1.262,2487,1.262,2488,1.262,2489,2.953,2490,2.953,2491,1.262,2492,2.953,2493,1.262,2494,2.953,2495,1.262,2496,2.212,2497,1.262,2498,1.934,2499,1.262,2500,2.212,2501,1.262,2502,1.262,2503,1.262,2504,1.262,2505,1.262,2506,1.262,2507,1.262,2508,1.262,2509,1.262,2510,1.262,2511,2.212,2512,1.262,2513,1.262,2514,1.262,2515,1.262,2516,1.262,2517,1.262,2518,1.262,2519,1.262,2520,1.262,2521,1.262,2522,1.262,2523,2.212,2524,1.262,2525,2.212,2526,1.262,2527,1.262,2528,1.262,2529,1.262,2530,1.262,2531,1.262,2532,2.953,2533,1.262,2534,0.999,2535,1.262,2536,1.262,2537,4.032,2538,1.262,2539,1.262,2540,1.262,2541,2.212,2542,1.262,2543,2.212,2544,1.262,2545,1.262,2546,1.262,2547,1.262,2548,1.262,2549,1.262,2550,1.262,2551,1.262,2552,1.262,2553,1.262,2554,1.262,2555,1.262,2556,1.262,2557,1.262,2558,1.262,2559,1.262,2560,1.262,2561,1.262,2562,1.262,2563,1.262,2564,1.262,2565,1.262,2566,1.262,2567,0.999,2568,1.262,2569,1.262,2570,1.262,2571,1.262,2572,2.212,2573,2.212,2574,2.212,2575,1.262]],["title/components/SceneComponent.html",[740,0.802,857,1.33]],["body/components/SceneComponent.html",[3,0.081,4,0.081,5,0.073,8,0.229,9,0.476,10,0.601,12,1.411,13,0.964,14,0.552,15,1.455,23,0.851,24,1.153,27,1.544,29,0.915,30,0.012,31,0.939,32,0.685,33,0.744,34,0.66,35,1.044,36,1.059,47,1.064,53,0.725,54,1.201,55,1.124,56,0.949,58,0.189,59,0.141,60,0.852,63,0.081,67,0.089,72,0.66,75,0.749,87,0.006,88,0.006,111,0.552,112,0.773,113,0.601,116,1.164,118,2.54,123,1.202,124,1.86,126,1.164,127,1.474,132,0.852,133,1.79,135,1.633,140,0.798,145,1.202,146,1.663,148,1.202,154,1.324,155,1.093,156,0.88,165,1.274,169,1.543,170,0.798,171,1.222,178,1.047,182,0.91,189,1.474,190,0.91,201,1.299,202,1.299,204,0.824,214,1.754,215,0.942,232,0.91,235,0.964,236,2.115,239,1.754,240,1.483,242,2.428,246,1.754,247,2.153,248,2.153,249,2.153,250,2.153,251,1.754,252,2.153,253,2.153,254,1.754,255,1.754,256,1.754,257,2.428,259,1.754,260,1.754,261,1.754,262,1.689,263,1.689,264,1.754,265,1.754,266,1.754,267,1.754,268,1.689,269,1.689,272,2.499,273,1.173,274,1.128,275,1.173,276,1.173,277,1.128,278,1.128,279,1.128,280,1.047,281,1.128,282,1.01,283,1.01,284,1.824,285,1.173,286,1.173,287,1.173,288,1.173,289,1.824,290,1.128,291,1.047,292,1.128,293,1.128,294,1.086,295,1.128,296,1.128,297,1.086,298,1.01,299,1.173,300,1.173,301,1.01,302,1.173,305,0.798,318,1.128,319,1.222,320,1.274,321,1.173,322,1.173,323,1.173,324,1.128,325,1.173,326,1.173,327,1.202,328,1.173,329,1.173,331,1.173,332,1.128,333,1.173,334,1.128,335,1.128,336,1.173,337,1.128,338,1.173,343,1.173,344,1.173,355,2.173,359,0.88,364,1.332,365,0.88,390,0.88,410,0.725,422,3.414,423,0.852,430,0.91,452,1.332,460,1.865,470,0.798,472,0.88,502,2.023,504,3.251,538,0.88,542,3.86,602,0.91,604,0.91,616,1.464,643,0.852,664,0.975,690,0.91,693,1.894,715,2.9,740,0.949,743,0.88,744,0.88,745,0.88,746,0.88,747,0.88,748,0.88,765,0.88,766,1.324,767,1.01,770,0.798,772,2.865,773,2.667,774,0.975,776,1.516,781,1.274,782,1.128,786,0.547,787,1.516,788,2.173,789,1.01,790,2.173,791,0.88,792,0.975,793,1.57,794,0.88,795,1.01,796,0.91,797,0.942,798,2.763,799,0.88,800,0.975,801,1.01,802,0.91,803,0.975,804,0.91,805,1.801,806,1.01,807,0.91,808,1.01,809,0.91,810,1.01,811,0.91,812,1.01,813,0.91,814,0.942,815,1.01,816,0.91,817,0.975,818,0.88,819,1.01,820,0.88,821,0.975,822,1.01,823,1.01,824,0.88,825,1.01,826,0.88,827,1.01,828,0.91,829,0.942,830,0.91,831,1.797,832,2.763,833,0.88,834,0.91,835,0.88,836,0.975,837,0.91,838,0.91,839,1.01,840,0.91,841,0.88,842,1.57,843,0.91,844,2.173,845,0.88,846,0.88,847,0.975,848,1.57,849,0.88,850,0.975,851,0.91,852,0.942,853,0.91,854,0.942,855,0.88,856,1.01,857,1.774,858,1.01,859,0.942,860,0.942,861,0.942,862,0.91,863,0.975,864,0.91,865,0.975,866,0.91,867,0.91,868,0.91,869,1.464,870,0.91,871,0.91,872,0.975,873,0.91,874,0.975,875,1.01,876,1.01,877,0.852,878,0.91,879,1.01,880,0.852,881,1.522,882,1.01,883,0.852,884,1.01,885,0.824,886,1.01,887,0.852,888,0.91,889,0.975,890,1.01,1170,3.86,2576,2.235,2577,3.976,2578,4.878,2579,3.976,2580,2.557,2581,2.557,2582,2.557,2583,3.976,2584,2.557,2585,2.557,2586,2.557,2587,2.557]],["title/directives/StatsAutoShowDirective.html",[111,0.573,887,1.374]],["body/directives/StatsAutoShowDirective.html",[3,0.19,4,0.19,5,0.171,8,0.538,14,0.998,23,1.537,24,0.998,29,0.835,30,0.012,31,0.692,32,0.513,33,0.639,35,0.805,47,1.034,58,0.228,59,0.332,63,0.19,67,0.21,87,0.01,88,0.01,111,0.835,113,1.412,116,2.104,194,3.673,201,2.121,244,2.139,538,2.803,770,1.876,772,2.002,773,2.242,887,2.393,888,2.558,889,2.74,1128,4.988,1130,5.253,1383,3.839,2033,5.253,2588,6.72,2589,5.253,2590,6.009,2591,6.009,2592,6.009]],["title/injectables/StatsService.html",[0,1.134,1128,2.491]],["body/injectables/StatsService.html",[0,1.829,2,2.433,3,0.168,4,0.168,5,0.151,8,0.474,9,0.797,14,0.924,15,1.491,23,1.556,24,1.13,30,0.012,32,0.453,33,0.707,35,1.053,47,1.154,56,1.031,58,0.211,59,0.293,63,0.168,67,0.185,87,0.009,88,0.009,116,1.552,195,2.937,202,2.032,244,2.589,304,6.668,378,2.827,416,6.036,888,2.897,897,3.037,1128,4.017,1265,3.201,1266,3.388,2256,4.636,2534,6.036,2593,4.636,2594,7.627,2595,6.655,2596,5.303,2597,5.303,2598,5.303,2599,5.303,2600,5.303,2601,5.303,2602,5.303,2603,5.303,2604,5.303,2605,5.303,2606,8.018,2607,5.303,2608,6.655,2609,5.303,2610,5.303,2611,5.303,2612,5.303]],["title/injectables/SvgLoaderService.html",[0,1.134,1079,2.806]],["body/injectables/SvgLoaderService.html",[0,1.888,2,2.561,3,0.177,4,0.177,5,0.159,8,0.499,9,0.823,10,1.312,12,1.502,14,0.954,15,1.212,24,1.034,27,1.761,29,0.954,30,0.012,31,0.791,32,0.587,33,0.73,35,0.92,50,3.935,53,1.583,54,1.017,55,0.953,56,1.447,58,0.246,59,0.309,60,1.859,63,0.177,67,0.195,75,1.051,87,0.01,88,0.01,89,5.188,92,5.011,93,5.011,94,4.389,95,4.671,97,5.011,99,4.755,100,4.071,155,1.534,235,1.666,272,2.249,378,2.371,470,1.742,476,4.071,1079,4.671,1265,3.369,1266,3.565,1569,4.416,1570,4.416,1571,4.416,1577,4.879,1799,4.416,1812,4.879,1813,6.005,2098,5.011,2118,4.879,2613,4.879,2614,5.581,2615,5.581,2616,5.581,2617,5.581,2618,5.581]],["title/modules/UxActorModule.html",[937,0.829,2619,3.01]],["body/modules/UxActorModule.html",[3,0.183,4,0.183,5,0.164,13,1.4,30,0.012,58,0.255,59,0.319,63,0.183,67,0.202,87,0.01,88,0.01,470,1.802,786,1.235,840,3.041,868,3.041,937,1.159,939,1.988,940,1.923,941,2.783,942,2.127,943,2.783,946,2.415,947,1.988,948,2.056,951,2.674,959,2.872,960,2.28,962,2.674,983,4.942,986,5.048,988,5.048,989,5.048,2619,6.232,2620,5.048,2621,5.048,2622,5.048,2623,5.774,2624,5.774,2625,5.774]],["title/coverage.html",[2626,4.935]],["body/coverage.html",[0,2.078,1,1.696,5,0.08,6,4.231,7,4.218,30,0.012,32,0.24,34,0.725,56,0.546,61,2.05,62,2.05,64,2.318,65,1.696,67,0.181,72,2.223,87,0.006,88,0.006,89,1.795,91,2.457,111,1.083,112,0.849,114,2.457,115,2.457,133,0.797,190,1,191,2.457,192,1.911,193,2.457,204,0.906,232,1,233,2.457,234,2.457,236,0.703,240,1.005,306,2.224,359,0.967,360,3.775,361,1.911,362,2.457,365,0.967,366,2.224,367,3.775,390,0.967,410,0.797,426,3.119,430,1,431,2.457,451,2.224,466,2.457,467,2.457,472,0.967,538,0.967,579,5.186,596,1.463,602,1,603,2.457,604,1,605,2.457,612,1.289,643,0.936,690,1,691,3.97,692,2.457,693,0.967,694,2.457,724,1.911,725,2.457,726,2.457,740,1.662,743,0.967,744,0.967,745,0.967,746,0.967,747,0.967,748,0.967,765,0.967,768,2.457,769,4.576,781,1.4,791,0.967,794,0.967,796,1,799,0.967,802,1,804,1,807,1,809,1,811,1,813,1,814,1.035,816,1,818,0.967,820,0.967,824,0.967,826,0.967,828,1,830,1,833,0.967,834,1,835,0.967,837,1,838,1,840,1,841,0.967,843,1,845,0.967,846,0.967,849,0.967,851,1,853,1,857,0.906,859,1.035,860,1.035,861,1.035,862,1,864,1,866,1,868,1,870,1,871,1,873,1,877,0.936,880,0.936,883,0.936,885,0.906,887,0.936,891,1.696,892,2.457,1075,1.911,1076,1.795,1077,1.911,1078,1.911,1079,1.911,1099,1.911,1100,1.911,1119,1.795,1128,1.696,1137,2.457,1138,3.383,1148,1.61,1149,4.371,1150,3.975,1151,1.696,1153,1.61,1154,1.61,1159,4.576,1196,2.224,1198,2.224,1208,2.224,1224,1.533,1271,2.457,1292,2.457,1293,2.457,1309,2.224,1310,2.457,1342,3.383,1356,2.457,1357,2.457,1403,3.737,1432,2.907,1434,2.457,1446,2.457,1473,2.457,1474,2.457,1478,5.776,1484,2.457,1485,2.457,1532,2.457,1535,2.457,1543,1.795,1567,2.457,1579,2.457,1587,2.457,1596,3.383,1598,2.05,1631,2.457,1632,3.383,1716,2.457,1723,2.05,1724,3.383,1798,2.457,1799,3.383,1817,2.457,1823,2.457,1824,3.383,1858,2.457,1872,2.457,1876,3.695,1877,2.457,1881,2.05,1882,3.383,1916,2.457,1961,2.457,1962,2.457,2024,2.457,2098,2.05,2099,2.457,2100,2.457,2275,4.576,2340,4.524,2341,6.287,2409,2.457,2567,2.224,2576,2.457,2588,2.457,2589,2.457,2593,2.457,2613,2.457,2626,2.457,2627,2.224,2628,2.81,2629,2.81,2630,7.335,2631,5.175,2632,2.81,2633,5.175,2634,2.81,2635,2.81,2636,2.457,2637,2.81,2638,6.287,2639,2.81,2640,7.8,2641,2.457,2642,8.128,2643,2.457,2644,2.457,2645,2.457,2646,2.457,2647,2.457,2648,2.457,2649,2.457,2650,6.553,2651,4.275,2652,4.275,2653,2.81,2654,2.81,2655,2.81,2656,2.81,2657,2.81,2658,6.553,2659,2.81,2660,5.783,2661,2.81,2662,4.275,2663,2.81,2664,2.81,2665,4.275,2666,2.81,2667,2.81,2668,2.81,2669,2.81,2670,2.81,2671,2.457,2672,2.81,2673,2.81,2674,5.175,2675,2.81,2676,5.783,2677,2.81,2678,5.783,2679,4.275,2680,2.81,2681,2.81,2682,4.275,2683,2.81,2684,4.275,2685,2.81,2686,2.457,2687,2.457,2688,2.81,2689,5.175,2690,4.275,2691,2.81,2692,4.275,2693,2.81,2694,2.81,2695,2.81,2696,2.81,2697,5.783,2698,2.81,2699,2.81,2700,2.81,2701,2.81,2702,2.81,2703,2.81,2704,2.81,2705,2.81,2706,2.81,2707,2.81,2708,7.192,2709,2.81,2710,2.81,2711,2.81,2712,2.81,2713,4.275,2714,2.81,2715,2.81,2716,2.81,2717,2.81,2718,2.81,2719,2.81,2720,2.81,2721,2.81,2722,2.81,2723,2.81,2724,6.222,2725,2.81,2726,2.81,2727,4.275,2728,2.81,2729,2.457,2730,2.457,2731,2.81,2732,2.457,2733,2.457,2734,2.457,2735,2.457,2736,2.457,2737,2.457,2738,2.457,2739,2.457,2740,2.457,2741,2.457,2742,2.457,2743,2.457,2744,2.457,2745,3.737,2746,2.457,2747,2.457,2748,2.81,2749,2.81]],["title/dependencies.html",[940,1.654,2750,3.007]],["body/dependencies.html",[30,0.012,59,0.344,87,0.01,88,0.01,155,1.711,345,4.54,536,5.441,805,1.881,814,2.292,940,2.073,960,2.458,2751,6.224,2752,8.472,2753,6.224,2754,6.224,2755,7.337,2756,5.806,2757,6.224,2758,6.224,2759,6.224,2760,6.224,2761,6.224,2762,6.224,2763,6.224,2764,6.224,2765,6.224,2766,6.224,2767,6.224,2768,6.224,2769,6.224]],["title/miscellaneous/enumerations.html",[2770,2.197,2771,4.342]],["body/miscellaneous/enumerations.html",[8,0.538,30,0.012,55,1.466,87,0.01,88,0.01,305,2.242,691,2.871,878,2.139,1149,3.278,1385,5.253,1727,4.886,1876,3.839,1890,5.686,1891,5.686,1892,5.241,2023,5.241,2204,6.281,2470,6.281,2636,6.72,2686,5.253,2687,6.281,2770,3.839,2771,5.253,2772,7.185,2773,6.281,2774,7.185,2775,7.185,2776,6.009,2777,6.009,2778,7.185,2779,7.185,2780,7.185,2781,7.185,2782,7.185]],["title/miscellaneous/functions.html",[2770,2.197,2783,4.342]],["body/miscellaneous/functions.html",[8,0.502,27,1.647,29,1.129,30,0.012,31,0.937,32,0.637,33,0.864,35,1.043,36,1.836,47,0.992,87,0.01,88,0.01,139,2.539,187,6.027,199,3.215,327,2.255,436,6.027,437,5.456,438,4.907,449,4.442,451,5.456,468,3.586,616,2.539,695,2.923,699,3.215,740,1.092,781,3.436,1756,5.074,1944,5.905,2729,4.907,2730,6.027,2732,4.907,2733,6.027,2734,6.027,2735,4.907,2736,6.027,2737,6.027,2738,4.907,2739,6.027,2740,4.907,2741,6.027,2742,4.907,2743,6.027,2744,6.027,2770,3.586,2783,4.907,2784,5.613,2785,5.613,2786,5.613,2787,5.613,2788,5.613,2789,5.613,2790,5.613,2791,6.894,2792,5.613,2793,5.613,2794,5.613,2795,5.613,2796,5.613,2797,5.613,2798,5.613,2799,6.894,2800,5.613,2801,5.613]],["title/index.html",[8,0.308,2802,3.007,2803,3.007]],["body/index.html",[30,0.012,58,0.201,72,1.274,87,0.009,88,0.009,119,2.569,155,1.356,180,3.599,182,1.756,398,6.083,422,3.641,471,6.493,498,3.904,537,3.904,539,4.313,631,5.418,649,3.599,661,4.313,766,2.56,773,2.531,776,2.424,787,1.881,805,1.491,855,1.699,857,1.59,898,3.904,937,0.991,940,1.643,962,1.881,983,3.837,1291,3.904,1307,4.313,1343,4.061,1367,2.826,1475,4.313,1543,4.061,1714,3.599,1715,3.599,1806,4.313,1892,3.599,1963,3.904,1993,6.999,2210,3.904,2440,5.557,2498,4.313,2534,3.904,2627,5.565,2756,3.904,2804,4.934,2805,4.934,2806,4.934,2807,4.934,2808,7.87,2809,4.934,2810,6.357,2811,4.934,2812,4.934,2813,4.934,2814,4.934,2815,4.934,2816,8.006,2817,7.87,2818,4.934,2819,4.934,2820,6.357,2821,4.934,2822,4.934,2823,4.934,2824,4.934,2825,4.934,2826,4.934,2827,4.934,2828,6.357,2829,6.357,2830,7.033,2831,6.357,2832,6.357,2833,4.934,2834,4.934,2835,4.934,2836,4.934,2837,4.934,2838,4.934,2839,4.934,2840,4.934,2841,4.934,2842,4.934,2843,4.934,2844,4.934,2845,4.934,2846,4.934,2847,4.934,2848,4.934,2849,4.934,2850,4.934,2851,4.934,2852,4.934,2853,4.934,2854,4.934,2855,7.687,2856,4.934,2857,4.934,2858,4.934,2859,4.934,2860,4.934,2861,4.934,2862,4.934,2863,4.934,2864,4.934,2865,4.934,2866,6.357,2867,4.934,2868,4.934,2869,6.357,2870,7.033,2871,4.934,2872,4.934,2873,4.934,2874,4.934,2875,5.557,2876,4.934,2877,4.934,2878,4.934,2879,4.934,2880,4.934,2881,4.934,2882,4.313,2883,4.934,2884,4.934,2885,4.934,2886,4.934]],["title/license.html",[2802,3.007,2803,3.007,2887,2.722]],["body/license.html",[30,0.01,87,0.01,88,0.01,184,7.374,386,4.618,537,4.618,897,3.343,948,2.077,2210,5.586,2627,4.618,2882,5.101,2887,4.618,2888,5.101,2889,7.59,2890,5.836,2891,5.836,2892,5.836,2893,5.836,2894,7.059,2895,5.836,2896,5.836,2897,5.836,2898,5.836,2899,5.836,2900,7.059,2901,5.836,2902,5.836,2903,5.836,2904,7.59,2905,5.836,2906,7.059,2907,5.836,2908,5.836,2909,5.836,2910,5.836,2911,5.836,2912,5.836,2913,5.836,2914,5.836,2915,5.836,2916,7.059,2917,5.836,2918,5.836,2919,5.836,2920,5.836,2921,5.836,2922,5.836,2923,5.836,2924,7.059,2925,7.059,2926,5.836,2927,5.836,2928,5.836,2929,5.836,2930,5.836,2931,5.836,2932,5.836,2933,5.836,2934,5.836,2935,5.836,2936,5.836,2937,5.836,2938,5.836,2939,5.836,2940,5.836,2941,5.836,2942,5.836,2943,5.836,2944,5.836,2945,5.836,2946,5.836,2947,5.836,2948,5.836,2949,5.836,2950,5.836,2951,5.836,2952,5.836]],["title/modules.html",[939,1.943]],["body/modules.html",[30,0.01,87,0.01,88,0.01,867,3.09,938,3.98,939,2.015,953,3.98,963,3.98,970,3.98,977,4.27,983,3.533,994,3.98,1007,3.98,1015,3.98,1023,3.98,1030,3.98,1040,3.98,1041,3.98,1042,3.98,1043,3.98,1051,3.98,1074,3.98,2619,4.27,2756,6.868,2953,8.679,2954,8.679]],["title/overview.html",[2955,4.935]],["body/overview.html",[2,1.127,13,0.595,30,0.012,87,0.005,88,0.005,90,1.791,113,0.577,133,1.348,204,2.091,472,2.234,612,2.181,643,2.161,724,3.232,743,2.234,744,2.234,745,2.234,746,2.234,747,2.234,748,2.234,765,2.378,766,0.818,771,3.761,786,0.525,791,2.234,794,2.234,796,2.31,799,1.636,802,2.31,804,2.31,807,2.31,809,2.31,811,2.31,813,2.31,816,2.31,818,2.234,820,2.234,824,2.234,826,2.234,828,2.31,830,2.31,833,2.234,834,2.31,835,2.234,837,2.31,838,2.31,840,2.31,841,2.234,843,2.31,845,2.234,846,2.234,849,2.234,851,2.31,853,2.31,857,2.091,862,2.31,864,2.31,866,2.31,868,2.31,870,2.31,871,2.31,873,2.31,877,2.161,880,2.161,883,2.161,885,2.091,887,2.161,891,2.869,937,0.493,938,4.698,939,0.845,940,0.818,941,0.904,942,0.904,943,0.904,944,2.146,945,2.146,946,1.326,947,0.845,948,0.874,953,5.05,954,2.146,955,2.146,956,2.146,963,4.807,964,2.146,965,2.146,966,2.146,970,5.05,971,2.146,972,2.146,973,2.146,977,6.155,978,2.146,979,2.146,980,2.146,981,2.146,982,2.146,983,4.928,994,5.495,995,2.146,996,2.146,997,2.146,1007,5.215,1008,2.146,1009,2.146,1010,2.146,1015,5.334,1016,2.146,1017,2.146,1018,2.146,1019,2.146,1023,5.334,1024,2.146,1025,2.146,1026,2.146,1030,5.598,1031,2.146,1032,2.146,1033,2.146,1037,2.146,1038,2.146,1039,2.146,1040,5.699,1041,5.298,1042,5.111,1043,4.98,1051,4.568,1069,2.146,1070,2.146,1071,2.146,1072,2.146,1073,2.146,1074,4.807,1075,3.232,1076,3.037,1077,3.232,1078,3.232,1079,3.232,1096,2.146,1097,2.146,1098,2.146,1099,4.412,1100,4.412,1105,2.146,1106,2.146,1107,2.146,1108,2.146,1115,2.146,1116,2.146,1117,2.146,1118,2.146,1119,3.037,1124,2.146,1125,2.146,1126,2.146,1127,2.146,1128,2.869,1132,2.146,1133,2.146,1134,2.146,1147,1.279,1224,1.339,1342,1.943,1433,1.943,2275,1.943,2567,1.943,2619,5.156,2620,2.146,2621,2.146,2622,2.146,2671,2.146,2955,2.146,2956,2.455,2957,2.146]],["title/properties.html",[9,0.595,2750,3.007]],["body/properties.html",[9,0.804,30,0.012,87,0.011,88,0.011,2875,5.87,2887,5.314,2888,5.87,2958,6.715]],["title/miscellaneous/variables.html",[2770,2.197,2959,4.342]],["body/miscellaneous/variables.html",[6,3.373,7,5.143,8,0.444,27,1.7,30,0.012,32,0.715,47,0.918,54,1.54,55,1.442,61,4.652,62,4.652,72,1.646,87,0.009,88,0.009,135,1.74,170,1.548,189,1.499,691,2.37,918,3.618,934,5.047,1149,2.705,1159,3.925,1196,5.047,1198,5.047,1199,5.576,1200,5.576,1201,6.731,1202,3.925,1203,4.336,1204,4.336,1205,4.336,1206,5.576,1207,4.337,1208,5.047,1209,5.576,1210,5.576,1211,5.576,1212,5.576,1213,4.336,1214,5.576,1265,2.994,2638,7.171,2641,5.576,2643,5.576,2644,5.576,2645,5.576,2646,5.576,2647,5.576,2648,5.576,2649,5.576,2745,4.336,2746,5.576,2747,5.576,2770,3.168,2773,7.098,2957,6.163,2959,4.336,2960,6.378,2961,7.05,2962,6.378,2963,4.959,2964,4.959,2965,4.959,2966,4.959,2967,4.959]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":1416,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0.0.0",{"_index":2958,"title":{},"body":{"properties.html":{}}}],["0.001",{"_index":2568,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0.01",{"_index":1455,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1452,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":1225,"title":{},"body":{"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["0.13.0",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["0.158.0",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1650,"title":{},"body":{"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":780,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2662,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2503,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0000aa",{"_index":1541,"title":{},"body":{"components/FogComponent.html":{}}}],["1",{"_index":189,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1207,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["1.1.22",{"_index":2760,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1662,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1/1",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":426,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"coverage.html":{}}}],["100",{"_index":1543,"title":{},"body":{"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":1850,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":1843,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2021,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["11",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2567,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["13",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2957,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["16.2.0",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1342,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{},"overview.html":{}}}],["180",{"_index":1444,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["2",{"_index":1224,"title":{},"body":{"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["2.3.0",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["2/32",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["2/34",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["2/35",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["2/36",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["2/37",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["2/40",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["2/41",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["2/43",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["2/44",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["2/45",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["2/46",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["2/49",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["2/51",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["2/53",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["2/56",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["2/74",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1659,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["200",{"_index":1654,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":2891,"title":{},"body":{"license.html":{}}}],["3",{"_index":2275,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["373",{"_index":1760,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["3d",{"_index":182,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["3d.ts",{"_index":367,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["3d.ts:10",{"_index":442,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:111",{"_index":532,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:118",{"_index":518,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:127",{"_index":520,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:13",{"_index":444,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:135",{"_index":519,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:143",{"_index":516,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:156",{"_index":517,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:16",{"_index":440,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:160",{"_index":530,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:175",{"_index":523,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:179",{"_index":524,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:181",{"_index":525,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:185",{"_index":521,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:19",{"_index":383,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{}}}],["3d.ts:192",{"_index":529,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:202",{"_index":522,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:206",{"_index":531,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:22",{"_index":441,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:24",{"_index":379,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:25",{"_index":508,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:26",{"_index":509,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:28",{"_index":448,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:31",{"_index":372,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:32",{"_index":513,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:33",{"_index":514,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:36",{"_index":510,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:37",{"_index":511,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:38",{"_index":512,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:39",{"_index":377,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["3d.ts:40",{"_index":507,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:42",{"_index":506,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:44",{"_index":515,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:46",{"_index":533,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:48",{"_index":505,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:50",{"_index":445,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:57",{"_index":526,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:86",{"_index":527,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:97",{"_index":528,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3ds",{"_index":186,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["4",{"_index":1478,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["4/39",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["4/46",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["4/55",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["4/57",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["444444",{"_index":1592,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["48",{"_index":2956,"title":{},"body":{"overview.html":{}}}],["5",{"_index":2341,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["5/36",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["5/40",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["5/43",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["5/49",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1142,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["57",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["5dade2",{"_index":443,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["6",{"_index":2340,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["6/45",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["7/38",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1403,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["8/43",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["8/47",{"_index":2710,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2671,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9.0.1",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":2112,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_fillrule",{"_index":2423,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_model",{"_index":473,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["a0",{"_index":2371,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a1",{"_index":2372,"title":{},"body":{"classes/SVGLoader.html":{}}}],["above",{"_index":2923,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:10",{"_index":1718,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:13",{"_index":1607,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":1606,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:16",{"_index":1600,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":1603,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:23",{"_index":1717,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":1604,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":1601,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":1602,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:49",{"_index":1597,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:58",{"_index":1599,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:8",{"_index":1719,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":89,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:10",{"_index":2614,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:13",{"_index":1801,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1570,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1569,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:8",{"_index":1568,"title":{},"body":{"injectables/FontService.html":{}}}],["abstractcamera",{"_index":112,"title":{"directives/AbstractCamera.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractcamera:10",{"_index":1829,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:11",{"_index":1830,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:12",{"_index":1831,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:14",{"_index":1832,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:16",{"_index":1828,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:22",{"_index":1833,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:24",{"_index":1839,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:35",{"_index":1863,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:36",{"_index":1834,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:45",{"_index":1864,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:56",{"_index":1835,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:59",{"_index":1837,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:69",{"_index":1838,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:8",{"_index":1840,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcomposeeffect",{"_index":190,"title":{"directives/AbstractComposeEffect.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:18",{"_index":1277,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:22",{"_index":1275,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:23",{"_index":1480,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:24",{"_index":1456,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":1479,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:29",{"_index":1276,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:30",{"_index":1274,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:37",{"_index":1278,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:41",{"_index":1280,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:45",{"_index":1279,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:53",{"_index":1457,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:9",{"_index":1281,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":232,"title":{"directives/AbstractConnector.html":{}},"body":{"directives/AbstractConnector.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractemptydirective",{"_index":359,"title":{"directives/AbstractEmptyDirective.html":{}},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d",{"_index":365,"title":{"directives/AbstractLazyObject3D.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d:19",{"_index":492,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:24",{"_index":491,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:31",{"_index":488,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:39",{"_index":489,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractmesh",{"_index":430,"title":{"directives/AbstractMesh.html":{}},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractmodelloader",{"_index":390,"title":{"directives/AbstractModelLoader.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractmodelloader#afterinit",{"_index":402,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractobject3d",{"_index":236,"title":{"directives/AbstractObject3D.html":{}},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractobject3d#addchild",{"_index":403,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractobject3d.renderer",{"_index":395,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:111",{"_index":339,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["abstractobject3d:118",{"_index":321,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:127",{"_index":323,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:135",{"_index":322,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:143",{"_index":319,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:156",{"_index":320,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:160",{"_index":336,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:175",{"_index":328,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:179",{"_index":450,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["abstractobject3d:18",{"_index":307,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["abstractobject3d:181",{"_index":329,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:185",{"_index":325,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:192",{"_index":333,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:202",{"_index":326,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:206",{"_index":338,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:21",{"_index":1298,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{}}}],["abstractobject3d:23",{"_index":1143,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{}}}],["abstractobject3d:24",{"_index":276,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:25",{"_index":284,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:26",{"_index":285,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:31",{"_index":289,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:32",{"_index":299,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:33",{"_index":300,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:35",{"_index":2580,"title":{},"body":{"components/SceneComponent.html":{}}}],["abstractobject3d:36",{"_index":286,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:37",{"_index":287,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:38",{"_index":288,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:40",{"_index":275,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:42",{"_index":273,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:44",{"_index":302,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:46",{"_index":343,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:48",{"_index":344,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:57",{"_index":330,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["abstractobject3d:62",{"_index":376,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:68",{"_index":375,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:8",{"_index":363,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractServerActor.html":{}}}],["abstractobject3d:86",{"_index":364,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:97",{"_index":331,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractorbitcontrols",{"_index":602,"title":{"directives/AbstractOrbitControls.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractorbitcontrols:13",{"_index":1674,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:14",{"_index":1676,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:22",{"_index":1667,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:24",{"_index":1675,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:25",{"_index":1821,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:34",{"_index":1820,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:42",{"_index":1668,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:49",{"_index":1822,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:57",{"_index":1671,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:58",{"_index":1672,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:74",{"_index":1673,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:97",{"_index":1669,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractserveractor",{"_index":690,"title":{"directives/AbstractServerActor.html":{}},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["accepted",{"_index":2165,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accepts",{"_index":2538,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accessed",{"_index":393,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["accessors",{"_index":474,"title":{},"body":{"directives/AbstractModelLoader.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{}}}],["acquisition",{"_index":411,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["action",{"_index":2946,"title":{},"body":{"license.html":{}}}],["actor",{"_index":876,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["actor'},{'name",{"_index":832,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["actor.component",{"_index":988,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["actor.module.ts",{"_index":986,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.ts",{"_index":694,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:11",{"_index":710,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:14",{"_index":711,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:17",{"_index":709,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:20",{"_index":708,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:23",{"_index":705,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:25",{"_index":716,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:28",{"_index":707,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:30",{"_index":714,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:35",{"_index":713,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:40",{"_index":712,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:8",{"_index":706,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actorclick",{"_index":701,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actorrepositoryservice",{"_index":724,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["actual_component",{"_index":890,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["add",{"_index":421,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/MapControlsComponent.html":{}}}],["addchild",{"_index":246,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["addchild(object",{"_index":318,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["addgroup",{"_index":1932,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1753,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addpass",{"_index":1486,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1495,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["advanced",{"_index":1711,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["afterinit",{"_index":247,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["afterviewinit",{"_index":194,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["akimenko",{"_index":2893,"title":{},"body":{"license.html":{}}}],["allintersections",{"_index":2390,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.push",{"_index":2408,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.sort",{"_index":2413,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allowcoloroverride",{"_index":1609,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allpaths",{"_index":2420,"title":{},"body":{"classes/SVGLoader.html":{}}}],["along",{"_index":2527,"title":{},"body":{"classes/SVGLoader.html":{}}}],["alpha",{"_index":2071,"title":{},"body":{"injectables/RendererService.html":{}}}],["alternating",{"_index":2452,"title":{},"body":{"classes/SVGLoader.html":{}}}],["always",{"_index":1991,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["ambient",{"_index":774,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["ambientlightcomponent",{"_index":765,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amiahole",{"_index":2476,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amiahole.ishole",{"_index":2478,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amount",{"_index":2451,"title":{},"body":{"classes/SVGLoader.html":{}}}],["and/or",{"_index":2914,"title":{},"body":{"license.html":{}}}],["ang",{"_index":2295,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angle",{"_index":2325,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angles",{"_index":279,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["angular",{"_index":398,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/ActorRepositoryService.html":{},"index.html":{}}}],["angular/animations",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":960,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2758,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":905,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{}}}],["animated",{"_index":899,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animation",{"_index":893,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation.module",{"_index":1057,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":950,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":952,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1382,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":1056,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":914,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":891,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":907,"title":{},"body":{"injectables/AnimationService.html":{}}}],["another",{"_index":2399,"title":{},"body":{"classes/SVGLoader.html":{}}}],["antialias",{"_index":2070,"title":{},"body":{"injectables/RendererService.html":{}}}],["anything",{"_index":658,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["aperture",{"_index":1448,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1465,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":2866,"title":{},"body":{"index.html":{}}}],["app",{"_index":2805,"title":{},"body":{"index.html":{}}}],["appear",{"_index":2302,"title":{},"body":{"classes/SVGLoader.html":{}}}],["appliedmaterial",{"_index":451,"title":{},"body":{"directives/AbstractMesh.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":2790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":453,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applychanges",{"_index":197,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":206,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applymaterial",{"_index":432,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applymatrix3",{"_index":2348,"title":{},"body":{"classes/SVGLoader.html":{}}}],["applyposition",{"_index":120,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["applyrotation",{"_index":248,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyscale",{"_index":249,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyshadowprops",{"_index":433,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applyshadowprops(mesh",{"_index":446,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applytranslation",{"_index":250,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyzaxisup",{"_index":121,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["arc",{"_index":2518,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arcdivisions",{"_index":2140,"title":{},"body":{"classes/SVGLoader.html":{}}}],["area",{"_index":1994,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":1975,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":2950,"title":{},"body":{"license.html":{}}}],["around",{"_index":2326,"title":{},"body":{"classes/SVGLoader.html":{}}}],["array",{"_index":327,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["array.length",{"_index":2322,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrays",{"_index":2536,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrow",{"_index":2782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":152,"title":{},"body":{"directives/AbstractCamera.html":{},"components/DofComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1866,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":1608,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/svg/?.svg",{"_index":1617,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":2901,"title":{},"body":{"license.html":{}}}],["association",{"_index":2780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["atft",{"_index":773,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"index.html":{}}}],["atft.module",{"_index":989,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":938,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":953,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":963,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":970,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":977,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":994,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":1007,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":1015,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":1023,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":1030,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":983,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":1040,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":1051,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":1041,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":1042,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":1043,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":1074,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":1308,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["authors",{"_index":2940,"title":{},"body":{"license.html":{}}}],["auto",{"_index":538,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["automatically",{"_index":661,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"index.html":{}}}],["autorotate",{"_index":1635,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1636,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":920,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["ax",{"_index":2376,"title":{},"body":{"classes/SVGLoader.html":{}}}],["axes",{"_index":792,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["axeshelpercomponent",{"_index":791,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":179,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["b0",{"_index":2367,"title":{},"body":{"classes/SVGLoader.html":{}}}],["b1",{"_index":2368,"title":{},"body":{"classes/SVGLoader.html":{}}}],["background",{"_index":2578,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2586,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":859,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["base",{"_index":580,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":2849,"title":{},"body":{"index.html":{}}}],["baseinfo",{"_index":1148,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1338,"title":{},"body":{"classes/DagreUtils.html":{}}}],["baseintersections",{"_index":2431,"title":{},"body":{"classes/SVGLoader.html":{}}}],["baseintersections.push",{"_index":2436,"title":{},"body":{"classes/SVGLoader.html":{}}}],["basetexture",{"_index":1211,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":2819,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":2242,"title":{},"body":{"classes/SVGLoader.html":{}}}],["behaviour",{"_index":2015,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":2811,"title":{},"body":{"index.html":{}}}],["bevel",{"_index":2493,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bignumber",{"_index":2458,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bindings",{"_index":2818,"title":{},"body":{"index.html":{}}}],["black",{"_index":1181,"title":{},"body":{"injectables/BloomService.html":{}}}],["blender",{"_index":185,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["bloom",{"_index":2060,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":1123,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["bloom_scene_layer",{"_index":1197,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":1160,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2088,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":1161,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":1220,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":1226,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":1119,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":1212,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":1272,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":795,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["blurcomponent",{"_index":794,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2844,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1458,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1471,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/BlurComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":942,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":1152,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["bounding",{"_index":2392,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox",{"_index":2388,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox.getcenter",{"_index":2389,"title":{},"body":{"classes/SVGLoader.html":{}}}],["box",{"_index":797,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["box2",{"_index":2149,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boxmeshcomponent",{"_index":796,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":2192,"title":{},"body":{"classes/SVGLoader.html":{}}}],["browse",{"_index":2954,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2756,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffergeometry",{"_index":2150,"title":{},"body":{"classes/SVGLoader.html":{}}}],["buffers",{"_index":2537,"title":{},"body":{"classes/SVGLoader.html":{}}}],["build",{"_index":2440,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["bump",{"_index":2877,"title":{},"body":{"index.html":{}}}],["butt",{"_index":2496,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bx",{"_index":2377,"title":{},"body":{"classes/SVGLoader.html":{}}}],["c",{"_index":2890,"title":{},"body":{"license.html":{}}}],["cache",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1571,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:22",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":314,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["calculatesize",{"_index":2734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":2795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":388,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["camera",{"_index":119,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["camera'},{'name",{"_index":848,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["camera.component",{"_index":961,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1824,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":1827,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1862,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":1861,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":1836,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":1113,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1877,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1879,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1878,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":1046,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":958,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.ts",{"_index":115,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["camera.ts:10",{"_index":136,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:11",{"_index":137,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:12",{"_index":138,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:14",{"_index":141,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:16",{"_index":134,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:24",{"_index":149,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:41",{"_index":144,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:43",{"_index":151,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:45",{"_index":147,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:59",{"_index":142,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:69",{"_index":143,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:8",{"_index":153,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera/abstract",{"_index":651,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":1045,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":882,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["can't",{"_index":2396,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cant",{"_index":1423,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":1963,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":856,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["canvas.clientheight",{"_index":2075,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2094,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":654,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":1966,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":1964,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":1962,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":1983,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":1974,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":1978,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":1985,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":1999,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:48",{"_index":1977,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:52",{"_index":1981,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2093,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2092,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2091,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2085,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":1967,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":1063,"title":{},"body":{"modules/AtftModule.html":{},"classes/SVGLoader.html":{}}}],["castshadow",{"_index":435,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["catch",{"_index":2182,"title":{},"body":{"classes/SVGLoader.html":{}}}],["catch(err",{"_index":427,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["center",{"_index":985,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{}}}],["center.ts",{"_index":2736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":984,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["center/layer/layer",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["center/layout/dagre",{"_index":1149,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["center/server/abstract",{"_index":692,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/model",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["center/server/server",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["center/server/workstation",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["center/service/actor",{"_index":725,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centerboundingbox",{"_index":2425,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centerboundingbox.y",{"_index":2427,"title":{},"body":{"classes/SVGLoader.html":{}}}],["change",{"_index":917,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":269,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["changelog",{"_index":2870,"title":{},"body":{"index.html":{}}}],["changes",{"_index":148,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["changes['listeningcontrolelement",{"_index":663,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["changes['rotatespeed",{"_index":1679,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1682,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":2897,"title":{},"body":{"license.html":{}}}],["check",{"_index":2364,"title":{},"body":{"classes/SVGLoader.html":{}}}],["child",{"_index":1306,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1399,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childcameras",{"_index":606,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["childlren",{"_index":239,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["children",{"_index":582,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["childs",{"_index":1885,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2204,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["claim",{"_index":2943,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["classifyresult.loc",{"_index":2374,"title":{},"body":{"classes/SVGLoader.html":{}}}],["click",{"_index":1892,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clone",{"_index":2852,"title":{},"body":{"index.html":{}}}],["closed",{"_index":2508,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closeparpos",{"_index":2320,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closer",{"_index":2521,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cloud",{"_index":1623,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":944,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":945,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":954,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":955,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":956,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":964,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":965,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":966,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":971,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":972,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":973,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":978,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":979,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":981,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":980,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":982,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":995,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":996,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":997,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":1008,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":1009,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":1010,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":1016,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":1018,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":1017,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":1019,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":1024,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":1026,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":1025,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":1031,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":1033,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":1032,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":1037,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":1039,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":1038,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":1069,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":1071,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":1073,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":1072,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":1070,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":1096,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":1098,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":1097,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":1105,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":1108,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":1106,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":1107,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":1115,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":1117,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":1116,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":1118,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":1124,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":1126,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":1125,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":1127,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":1132,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":1133,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":1134,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":2620,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":2621,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":2622,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":2623,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2168,"title":{},"body":{"classes/SVGLoader.html":{}}}],["colinear",{"_index":2363,"title":{},"body":{"classes/SVGLoader.html":{}}}],["color",{"_index":695,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":2879,"title":{},"body":{"index.html":{}}}],["command",{"_index":2245,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands",{"_index":2235,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands.length",{"_index":2241,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commits",{"_index":2873,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":959,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":762,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":860,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["compodoc/compodoc",{"_index":2759,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":740,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":789,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["componentfactory",{"_index":738,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":732,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["components",{"_index":766,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":192,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":1006,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":1002,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":1003,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":1005,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":203,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":823,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["composer.component",{"_index":216,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1485,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1493,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1494,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1492,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1499,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1500,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1498,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:55",{"_index":1496,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:61",{"_index":1502,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:75",{"_index":1503,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:81",{"_index":1497,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":1889,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":1151,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":806,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["composition.component.ts",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["compositions",{"_index":1156,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1330,"title":{},"body":{"classes/DagreUtils.html":{}}}],["compute",{"_index":2276,"title":{},"body":{"classes/SVGLoader.html":{}}}],["conditions",{"_index":2922,"title":{},"body":{"license.html":{}}}],["config",{"_index":2859,"title":{},"body":{"index.html":{}}}],["configurelisteners",{"_index":609,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["connection",{"_index":2951,"title":{},"body":{"license.html":{}}}],["connector'},{'name",{"_index":839,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["connector.component",{"_index":969,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.module",{"_index":1083,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":968,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.ts",{"_index":234,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["connector.ts:10",{"_index":270,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:13",{"_index":271,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:15",{"_index":341,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:16",{"_index":342,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:26",{"_index":317,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:46",{"_index":303,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:52",{"_index":309,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector/atft",{"_index":1082,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1886,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.error",{"_index":2184,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.error('contentprojectioncomponent",{"_index":1304,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.error(err",{"_index":428,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log",{"_index":2219,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcamera.constructor",{"_index":157,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcamera.ngafterviewinit",{"_index":158,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":218,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":226,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":221,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractlazyobject3d",{"_index":415,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractlazyobject3d.startloading",{"_index":407,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractmodelloader.model",{"_index":500,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["console.log('abstractobject3d.addchild",{"_index":574,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.constructor",{"_index":540,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.findbyname",{"_index":588,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":541,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ngoninit",{"_index":554,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ondestroy",{"_index":550,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.removechild",{"_index":581,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('actorrepositoryservice.getcomponentfactory",{"_index":761,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":757,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":1752,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":927,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":925,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":1145,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":1215,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('change",{"_index":1462,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1335,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('darkennonbloomed",{"_index":1264,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1387,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1413,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('disablefog",{"_index":1564,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1504,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1522,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1510,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1505,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1507,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1524,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1559,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent",{"_index":1556,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1551,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1575,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1584,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1626,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1417,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('ngafterviewinit",{"_index":1552,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":1811,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":1913,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orbitcontrolscomponent.constructor",{"_index":655,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orbitcontrolscomponent.ngafterviewinit",{"_index":680,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":1841,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":1848,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1865,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1870,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":1910,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1754,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2065,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2011,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2001,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2069,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2004,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":721,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":720,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":717,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2617,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('unsubscribe",{"_index":1743,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(event",{"_index":1776,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1425,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn",{"_index":2215,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.warn('bloomservice.init",{"_index":1255,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractConnector.html":{},"directives/AbstractObject3D.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["constructor(host",{"_index":1365,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(manager",{"_index":2109,"title":{},"body":{"classes/SVGLoader.html":{}}}],["constructor(raycasterservice",{"_index":1917,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":132,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["constructor(resolver",{"_index":731,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2033,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["content",{"_index":800,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["contentchild",{"_index":647,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchild(renderercanvascomponent",{"_index":644,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentchildren",{"_index":648,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchildren(abstractcamera",{"_index":640,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentprojection",{"_index":1296,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":799,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":2746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2317,"title":{},"body":{"classes/SVGLoader.html":{}}}],["contract",{"_index":2947,"title":{},"body":{"license.html":{}}}],["control",{"_index":619,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["control.module",{"_index":1050,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":975,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":1049,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":607,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":842,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["controls.component",{"_index":976,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1634,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1632,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:102",{"_index":1670,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":1819,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":1818,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1664,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1666,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1649,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1651,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1653,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1652,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1665,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1660,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1655,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1656,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1663,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1661,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":1658,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":1648,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.ts",{"_index":605,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["controls.ts:13",{"_index":642,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:14",{"_index":646,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:22",{"_index":615,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:24",{"_index":613,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:33",{"_index":635,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:49",{"_index":636,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:55",{"_index":637,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:58",{"_index":633,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:74",{"_index":634,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["conventional",{"_index":2872,"title":{},"body":{"index.html":{}}}],["converts",{"_index":1439,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":2524,"title":{},"body":{"classes/SVGLoader.html":{}}}],["copies",{"_index":2916,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2900,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2889,"title":{},"body":{"license.html":{}}}],["count",{"_index":2546,"title":{},"body":{"classes/SVGLoader.html":{}}}],["counting",{"_index":2450,"title":{},"body":{"classes/SVGLoader.html":{}}}],["coverage",{"_index":2626,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":2255,"title":{},"body":{"classes/SVGLoader.html":{}}}],["create",{"_index":304,"title":{},"body":{"directives/AbstractConnector.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":122,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["created",{"_index":666,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["createlinemesh",{"_index":241,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["creates",{"_index":2792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createshapes",{"_index":2104,"title":{},"body":{"classes/SVGLoader.html":{}}}],["createshapes(shapepath",{"_index":2116,"title":{},"body":{"classes/SVGLoader.html":{}}}],["creation",{"_index":183,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["cross",{"_index":2454,"title":{},"body":{"classes/SVGLoader.html":{}}}],["css",{"_index":2016,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["current",{"_index":495,"title":{},"body":{"directives/AbstractModelLoader.html":{},"classes/SVGLoader.html":{}}}],["currently",{"_index":1988,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentnode",{"_index":334,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["currentnode.childlren.some(child",{"_index":597,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.name",{"_index":595,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.object",{"_index":594,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentpointl",{"_index":2561,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpointr",{"_index":2562,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform",{"_index":2223,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.copy",{"_index":2227,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.identity",{"_index":2230,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.multiplymatrices",{"_index":2332,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.scale",{"_index":2334,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.set",{"_index":2336,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.translate",{"_index":2323,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cx",{"_index":2277,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cxp",{"_index":2270,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cy",{"_index":2278,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cylinder",{"_index":803,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["cylindermeshcomponent",{"_index":802,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cyp",{"_index":2272,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d",{"_index":2196,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d.match",{"_index":2236,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dagre",{"_index":805,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dagre.graphlabel",{"_index":1155,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":1322,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1336,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":804,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":807,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayoutcomponent",{"_index":809,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":811,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1309,"title":{"classes/DagreUtils.html":{}},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreyamlparsercomponent",{"_index":813,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":2944,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1637,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":1165,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":1167,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":1162,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1385,"title":{},"body":{"directives/DashedDrawDirective.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1360,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":878,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":877,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1361,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["data",{"_index":476,"title":{},"body":{"directives/AbstractModelLoader.html":{},"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["deal",{"_index":2903,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2952,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":941,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":639,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/ContentProjectionComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/variables.html":{}}}],["default_align",{"_index":2641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_edgesep",{"_index":2643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_margin",{"_index":2644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_nodesep",{"_index":2645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_rankdir",{"_index":2646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranker",{"_index":2647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranksep",{"_index":2648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_sep",{"_index":2649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultdpi",{"_index":2101,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defaultid",{"_index":727,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultunit",{"_index":2102,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["defines",{"_index":1245,"title":{},"body":{"injectables/BloomService.html":{}}}],["defs",{"_index":2103,"title":{},"body":{"classes/SVGLoader.html":{}}}],["deg2rad",{"_index":1435,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":1103,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":1099,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1443,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1440,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":1270,"title":{},"body":{"injectables/BloomService.html":{}}}],["delta",{"_index":2288,"title":{},"body":{"classes/SVGLoader.html":{}}}],["demo",{"_index":2812,"title":{},"body":{"index.html":{}}}],["denom",{"_index":2362,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dependencies",{"_index":940,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprecated",{"_index":750,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["depth",{"_index":2793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depthwrite",{"_index":436,"title":{},"body":{"directives/AbstractMesh.html":{},"miscellaneous/functions.html":{}}}],["depthwrite'].some(propname",{"_index":462,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["descendants",{"_index":641,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["description",{"_index":468,"title":{},"body":{"directives/AbstractModelLoader.html":{},"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":702,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["details",{"_index":2868,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1557,"title":{},"body":{"components/FogComponent.html":{}}}],["dev",{"_index":2835,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2827,"title":{},"body":{"index.html":{}}}],["development",{"_index":2850,"title":{},"body":{"index.html":{}}}],["df",{"_index":2237,"title":{},"body":{"classes/SVGLoader.html":{}}}],["directional",{"_index":817,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["directionallightcomponent",{"_index":816,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":111,"title":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1383,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directive.ts",{"_index":362,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"coverage.html":{}}}],["directives",{"_index":113,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"overview.html":{}}}],["disable",{"_index":198,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["disablefog",{"_index":1537,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1714,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1790,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["distribute",{"_index":2912,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1581,"title":{},"body":{"components/GridHelperComponent.html":{},"classes/SVGLoader.html":{}}}],["dl",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2602,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2610,"title":{},"body":{"injectables/StatsService.html":{}}}],["documentation",{"_index":2627,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dof",{"_index":1447,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":819,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["dofcomponent",{"_index":818,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":664,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["don't",{"_index":672,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["done",{"_index":293,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["dosetfirstpoint",{"_index":2233,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dot",{"_index":821,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["dots",{"_index":2161,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dotscreencomponent",{"_index":820,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1481,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["dq",{"_index":2262,"title":{},"body":{"classes/SVGLoader.html":{}}}],["draw",{"_index":1358,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":1000,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1357,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":1369,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":1370,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1372,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1373,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1371,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:16",{"_index":1378,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1379,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1380,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1366,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:27",{"_index":1375,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:36",{"_index":1377,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:69",{"_index":1374,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:94",{"_index":1376,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":879,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["duplicated",{"_index":2570,"title":{},"body":{"classes/SVGLoader.html":{}}}],["during",{"_index":297,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["dynamic",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2183,"title":{},"body":{"classes/SVGLoader.html":{}}}],["e.g",{"_index":2825,"title":{},"body":{"index.html":{}}}],["edge",{"_index":1153,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":808,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["edge.component.ts",{"_index":2636,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.name",{"_index":1350,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1349,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge1",{"_index":2370,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edge2",{"_index":2366,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edges",{"_index":1158,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["edgesgeom",{"_index":1401,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":2772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":215,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["effect.module",{"_index":1062,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":999,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":193,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:18",{"_index":209,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:29",{"_index":208,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:37",{"_index":211,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:41",{"_index":213,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:45",{"_index":212,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:54",{"_index":210,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:56",{"_index":207,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:9",{"_index":205,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":1061,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":1176,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":1235,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1511,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":204,"title":{"components/EffectComposerComponent.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":616,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":614,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["elements/vertex",{"_index":2543,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ellipse",{"_index":2206,"title":{},"body":{"classes/SVGLoader.html":{}}}],["embedded",{"_index":1305,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":1884,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["emits",{"_index":895,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":933,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":936,"title":{},"body":{"injectables/AnimationService.html":{}}}],["empty",{"_index":361,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/EmptyComponent.html":{},"coverage.html":{}}}],["empty'},{'name",{"_index":825,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["empty.component",{"_index":1014,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":824,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":199,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":1114,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":1916,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":1919,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":1918,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":884,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["enabled",{"_index":906,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1638,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":657,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/FogComponent.html":{}}}],["end",{"_index":310,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["end.x",{"_index":2283,"title":{},"body":{"classes/SVGLoader.html":{}}}],["end.y",{"_index":2285,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endcaps",{"_index":2520,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endpoints",{"_index":2365,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ensure",{"_index":2569,"title":{},"body":{"classes/SVGLoader.html":{}}}],["entire",{"_index":2840,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":1196,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2771,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop",{"_index":2397,"title":{},"body":{"classes/SVGLoader.html":{}}}],["enveloping",{"_index":2402,"title":{},"body":{"classes/SVGLoader.html":{}}}],["envelops",{"_index":2398,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equally",{"_index":2254,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equals",{"_index":2510,"title":{},"body":{"classes/SVGLoader.html":{}}}],["error",{"_index":1064,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["error('camera",{"_index":684,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["error('webglrenderer",{"_index":686,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["eslint",{"_index":396,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["eslint/directive",{"_index":399,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["eslint/no",{"_index":578,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["especially",{"_index":394,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["etc",{"_index":919,"title":{},"body":{"injectables/AnimationService.html":{}}}],["euler",{"_index":278,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["evenodd",{"_index":2446,"title":{},"body":{"classes/SVGLoader.html":{}}}],["event",{"_index":897,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"license.html":{}}}],["event.altkey",{"_index":2603,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1912,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.key",{"_index":2604,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1763,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1761,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1778,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":2778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":301,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{}}}],["events",{"_index":622,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":1993,"title":{},"body":{"components/RendererCanvasComponent.html":{},"index.html":{}}}],["examples",{"_index":2824,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":2502,"title":{},"body":{"classes/SVGLoader.html":{}}}],["execution",{"_index":921,"title":{},"body":{"injectables/AnimationService.html":{}}}],["existent",{"_index":2218,"title":{},"body":{"classes/SVGLoader.html":{}}}],["existing",{"_index":2535,"title":{},"body":{"classes/SVGLoader.html":{}}}],["exists",{"_index":418,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["explore",{"_index":2809,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["exported",{"_index":1066,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":943,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["express",{"_index":2931,"title":{},"body":{"license.html":{}}}],["extends",{"_index":235,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["face",{"_index":1725,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["false",{"_index":140,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["far",{"_index":1538,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1566,"title":{},"body":{"components/FogComponent.html":{}}}],["feel",{"_index":2881,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":1368,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ffa0a0",{"_index":722,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["fff0f0",{"_index":719,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ffffff",{"_index":715,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{}}}],["fileloader",{"_index":2151,"title":{},"body":{"classes/SVGLoader.html":{}}}],["files",{"_index":2902,"title":{},"body":{"license.html":{}}}],["finalcomposer",{"_index":1163,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":1240,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":1246,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1424,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["findbyname",{"_index":251,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["findbyname(name",{"_index":324,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["findmesh",{"_index":1397,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1422,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1412,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["first",{"_index":2511,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstpoint",{"_index":2231,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstxofpath",{"_index":2438,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fit",{"_index":2839,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":2743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":2936,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1067,"title":{},"body":{"modules/AtftModule.html":{},"injectables/RendererService.html":{}}}],["fixcenter",{"_index":2737,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flag",{"_index":384,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["flex",{"_index":1715,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32bufferattribute",{"_index":2152,"title":{},"body":{"classes/SVGLoader.html":{}}}],["floating",{"_index":2298,"title":{},"body":{"classes/SVGLoader.html":{}}}],["focus",{"_index":1449,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1461,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1536,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":827,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["fog.component",{"_index":1001,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":826,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":2871,"title":{},"body":{"index.html":{}}}],["following",{"_index":2921,"title":{},"body":{"license.html":{}}}],["font",{"_index":1572,"title":{},"body":{"injectables/FontService.html":{}}}],["fontloader",{"_index":1573,"title":{},"body":{"injectables/FontService.html":{}}}],["fontservice",{"_index":1075,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"coverage.html":{},"overview.html":{}}}],["fork/svgloader",{"_index":2616,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2100,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["fork/svgloader.ts:1678",{"_index":2117,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2115",{"_index":2123,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2140",{"_index":2141,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2169",{"_index":2148,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:26",{"_index":2113,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:27",{"_index":2115,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:28",{"_index":2110,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:42",{"_index":2133,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:76",{"_index":2135,"title":{},"body":{"classes/SVGLoader.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractOrbitControls.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{}}}],["fov",{"_index":1860,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":1208,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":829,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["framemeshcomponent",{"_index":828,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":2882,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":1849,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":579,"title":{},"body":{"directives/AbstractObject3D.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["functions",{"_index":2783,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2919,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":1227,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":1231,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":1233,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":1194,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":1325,"title":{},"body":{"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}}}],["g.nodes",{"_index":1337,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1333,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1348,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph(this.getlayout(model",{"_index":1332,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1339,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1345,"title":{},"body":{"classes/DagreUtils.html":{}}}],["generate",{"_index":539,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{}}}],["generated",{"_index":2525,"title":{},"body":{"classes/SVGLoader.html":{}}}],["generates",{"_index":2504,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geoetry",{"_index":311,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["geometry",{"_index":291,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["geometry.setattribute",{"_index":2532,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getcamera",{"_index":2025,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":1998,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getchildren",{"_index":252,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["getcomponentfactory",{"_index":729,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":735,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1487,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":1933,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1784,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getintersections",{"_index":2404,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getisenabled",{"_index":1959,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1313,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1318,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getmaterial",{"_index":434,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["getmodel",{"_index":493,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["getnodetransform",{"_index":2188,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getobject",{"_index":253,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["getrenderpane",{"_index":1984,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscanlineintersections",{"_index":2386,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getscene",{"_index":2026,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getstrokestyle",{"_index":2105,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getstrokestyle(width",{"_index":2119,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getting",{"_index":2802,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2027,"title":{},"body":{"injectables/RendererService.html":{}}}],["git",{"_index":2851,"title":{},"body":{"index.html":{}}}],["given",{"_index":2506,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gl_fragcolor",{"_index":1213,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":1203,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":627,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["goals",{"_index":2814,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2896,"title":{},"body":{"license.html":{}}}],["graph",{"_index":585,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["graphmodel",{"_index":1154,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["grid",{"_index":831,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["gridactorcomponent",{"_index":830,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridhelpercomponent",{"_index":833,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":834,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1589,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1756,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["group.directive",{"_index":1111,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1882,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":1923,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":1924,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":1922,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":1925,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":1930,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":1931,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":1929,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":1928,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":1927,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":1926,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1755,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":886,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["groups",{"_index":1729,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["guidelines",{"_index":2876,"title":{},"body":{"index.html":{}}}],["h",{"_index":2482,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.for",{"_index":2484,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.identifier",{"_index":2486,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.ishole",{"_index":2483,"title":{},"body":{"classes/SVGLoader.html":{}}}],["height",{"_index":1343,"title":{},"body":{"classes/DagreUtils.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["helper",{"_index":469,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":793,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["helper.component",{"_index":1013,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":1138,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":1141,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1582,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":1085,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":1012,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":1084,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":1301,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":2822,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":836,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["hemispherelightcomponent",{"_index":835,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":2895,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1384,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1362,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hides",{"_index":481,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["hierarchy",{"_index":2441,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holder",{"_index":429,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["holders",{"_index":2941,"title":{},"body":{"license.html":{}}}],["hole",{"_index":2449,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes",{"_index":2480,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes.foreach",{"_index":2485,"title":{},"body":{"classes/SVGLoader.html":{}}}],["horizontalblurshader",{"_index":1284,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":2841,"title":{},"body":{"index.html":{}}}],["host",{"_index":1367,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2000,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":1980,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":1971,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":787,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2009,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1312,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":2853,"title":{},"body":{"index.html":{}}}],["https://github.com/mrdoob/three.js/pull/10315",{"_index":632,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":1721,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1625,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1619,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1622,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1613,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://stackoverflow.com/questions/70946038/replace",{"_index":749,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["i.e",{"_index":1997,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1769,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.identifier",{"_index":2434,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.name",{"_index":601,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["i.object",{"_index":1765,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1772,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.t",{"_index":2378,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.trim",{"_index":2251,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1",{"_index":2414,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1.point.x",{"_index":2416,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2",{"_index":2415,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2.point.x",{"_index":2417,"title":{},"body":{"classes/SVGLoader.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icons/?.svg",{"_index":1620,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1615,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1614,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":1076,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1598,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":737,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"classes/SVGLoader.html":{}}}],["ideas",{"_index":2884,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2409,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["ignore",{"_index":1266,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["ignorepaused",{"_index":1780,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":1291,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":1990,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":116,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["implied",{"_index":2932,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["imports",{"_index":962,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2163,"title":{},"body":{"classes/SVGLoader.html":{}}}],["included",{"_index":2926,"title":{},"body":{"license.html":{}}}],["including",{"_index":2906,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":1068,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1657,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["information",{"_index":2865,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":272,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{}}}],["init(renderer",{"_index":1169,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1488,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initialize",{"_index":2028,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2039,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":413,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1363,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":200,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["innerpoint",{"_index":2565,"title":{},"body":{"classes/SVGLoader.html":{}}}],["input",{"_index":154,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["inputs",{"_index":126,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["inside",{"_index":2401,"title":{},"body":{"classes/SVGLoader.html":{}}}],["install",{"_index":2831,"title":{},"body":{"index.html":{}}}],["instance",{"_index":387,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["instanceof",{"_index":1398,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["integrated",{"_index":2823,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":777,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":1147,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersect",{"_index":2360,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection",{"_index":2381,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.t",{"_index":2379,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.x",{"_index":2383,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.y",{"_index":2384,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection[0",{"_index":1796,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1795,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersectionlocationtype.right",{"_index":2375,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections",{"_index":2385,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.foreach",{"_index":2406,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.push",{"_index":2382,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersectionsraw.push",{"_index":2380,"title":{},"body":{"classes/SVGLoader.html":{}}}],["invalid",{"_index":486,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["isahole",{"_index":2471,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole.filter",{"_index":2481,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isccw",{"_index":1610,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iscw",{"_index":2411,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isenabled",{"_index":1750,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isfirstpoint",{"_index":2232,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ishole",{"_index":2447,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholefor",{"_index":2448,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholeto",{"_index":2418,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isolation",{"_index":2810,"title":{},"body":{"index.html":{}}}],["isready",{"_index":1934,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1779,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isrotated",{"_index":2352,"title":{},"body":{"classes/SVGLoader.html":{}}}],["issue",{"_index":630,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["istransformrotated",{"_index":2353,"title":{},"body":{"classes/SVGLoader.html":{}}}],["it's",{"_index":922,"title":{},"body":{"injectables/AnimationService.html":{}}}],["j",{"_index":2252,"title":{},"body":{"classes/SVGLoader.html":{}}}],["join",{"_index":2498,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["joins",{"_index":2519,"title":{},"body":{"classes/SVGLoader.html":{}}}],["k",{"_index":1793,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["key",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["keyboard",{"_index":624,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["kind",{"_index":2930,"title":{},"body":{"license.html":{}}}],["known",{"_index":629,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["l",{"_index":2240,"title":{},"body":{"classes/SVGLoader.html":{}}}],["label",{"_index":699,"title":{},"body":{"directives/AbstractServerActor.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["large_arc_flag",{"_index":2268,"title":{},"body":{"classes/SVGLoader.html":{}}}],["last",{"_index":2509,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastcwvalue",{"_index":2455,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointl",{"_index":2557,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointr",{"_index":2558,"title":{},"body":{"classes/SVGLoader.html":{}}}],["later",{"_index":1867,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":127,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["layer/grid",{"_index":992,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":987,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":837,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":993,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":810,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["layout.component.ts",{"_index":2638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":366,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["lazyobject",{"_index":368,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["left",{"_index":2529,"title":{},"body":{"classes/SVGLoader.html":{}}}],["legend",{"_index":786,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["len",{"_index":2294,"title":{},"body":{"classes/SVGLoader.html":{}}}],["length",{"_index":2247,"title":{},"body":{"classes/SVGLoader.html":{}}}],["leverage",{"_index":2804,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2945,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2942,"title":{},"body":{"license.html":{}}}],["library",{"_index":2817,"title":{},"body":{"index.html":{}}}],["license",{"_index":2887,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lies",{"_index":2369,"title":{},"body":{"classes/SVGLoader.html":{}}}],["light",{"_index":775,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light'},{'name",{"_index":790,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["light.component",{"_index":1022,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":769,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":779,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light.component.ts:15",{"_index":778,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light.component.ts:16",{"_index":1591,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["light.intensity",{"_index":784,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":1087,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":1021,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light/atft",{"_index":1086,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":2821,"title":{},"body":{"index.html":{}}}],["limit",{"_index":2394,"title":{},"body":{"classes/SVGLoader.html":{}}}],["limitation",{"_index":2907,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2933,"title":{},"body":{"license.html":{}}}],["line",{"_index":305,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linecap",{"_index":2121,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lineconnectorcomponent",{"_index":838,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1411,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":2774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linejoin",{"_index":2120,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lines",{"_index":1386,"title":{},"body":{"directives/DashedDrawDirective.html":{},"classes/SVGLoader.html":{}}}],["linetype",{"_index":2775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["link",{"_index":401,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["list",{"_index":728,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listen",{"_index":620,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["listened",{"_index":626,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["listeningcontrolelement",{"_index":611,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["load",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(url",{"_index":2129,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loaded",{"_index":381,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["loader",{"_index":470,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["loader'},{'name",{"_index":844,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["loader.component",{"_index":1029,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["loader.load",{"_index":2180,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.load(key",{"_index":1577,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":1089,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":1028,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service.ts",{"_index":1799,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":1807,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:22",{"_index":1804,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.setpath",{"_index":2174,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setrequestheader",{"_index":2176,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setwithcredentials",{"_index":2178,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.ts",{"_index":467,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":490,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:21",{"_index":475,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:32",{"_index":494,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader/atft",{"_index":1088,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loaderactorcomponent",{"_index":840,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":374,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["loadlazyobject",{"_index":370,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["locally",{"_index":2858,"title":{},"body":{"index.html":{}}}],["logic",{"_index":900,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":298,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{}}}],["m",{"_index":2342,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ma",{"_index":2159,"title":{},"body":{"classes/SVGLoader.html":{}}}],["main",{"_index":934,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":2880,"title":{},"body":{"index.html":{}}}],["manager",{"_index":2111,"title":{},"body":{"classes/SVGLoader.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["mapcontrols",{"_index":1677,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":841,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2845,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1883,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":437,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":2730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":438,"title":{},"body":{"directives/AbstractMesh.html":{},"miscellaneous/functions.html":{}}}],["materialcreator",{"_index":1805,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["materialname",{"_index":2791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":1164,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.acos",{"_index":2296,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.cos",{"_index":2279,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.max",{"_index":2267,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.min",{"_index":2297,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.pi",{"_index":1445,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["math.sin",{"_index":2281,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.sqrt",{"_index":2257,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.tan",{"_index":2337,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix",{"_index":2339,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix3",{"_index":2153,"title":{},"body":{"classes/SVGLoader.html":{}}}],["max",{"_index":187,"title":{},"body":{"directives/AbstractCamera.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1450,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1468,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdistance",{"_index":1639,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maximum",{"_index":2497,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxpolarangle",{"_index":1640,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxx",{"_index":2460,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxy",{"_index":2457,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxzoom",{"_index":1641,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1605,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["means",{"_index":485,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["merchantability",{"_index":2935,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2910,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2522,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mesh",{"_index":306,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"coverage.html":{}}}],["mesh'},{'name",{"_index":798,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["mesh.castshadow",{"_index":456,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["mesh.component",{"_index":1036,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["mesh.module",{"_index":1091,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":1035,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":458,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["mesh/atft",{"_index":1090,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["message",{"_index":2781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":770,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["method",{"_index":373,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"classes/SVGLoader.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["mihail",{"_index":2892,"title":{},"body":{"license.html":{}}}],["mindistance",{"_index":1642,"title":{},"body":{"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["minimum",{"_index":2513,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minx",{"_index":2461,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miny",{"_index":2459,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minzoom",{"_index":1643,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":2770,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2888,"title":{},"body":{"license.html":{},"properties.html":{}}}],["miter",{"_index":2494,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miterlimit",{"_index":2122,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mm",{"_index":2167,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mode",{"_index":2867,"title":{},"body":{"index.html":{}}}],["model",{"_index":410,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["model(newmodelurl",{"_index":499,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["model.compositions",{"_index":1352,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges",{"_index":1346,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1347,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.layout",{"_index":1355,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1353,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.ts",{"_index":1150,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":747,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["models/?.obj",{"_index":1722,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":1077,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1314,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1320,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":1205,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":542,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DofComponent.html":{},"components/SceneComponent.html":{}}}],["modify",{"_index":2909,"title":{},"body":{"license.html":{}}}],["module",{"_index":937,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":939,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2864,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":621,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mouseenter",{"_index":1890,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1891,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1785,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1514,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mtlloader",{"_index":1809,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":1803,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1331,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiples",{"_index":2499,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mustrerender",{"_index":167,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"components/OrthographicCameraComponent.html":{}}}],["n",{"_index":2356,"title":{},"body":{"classes/SVGLoader.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["name:string",{"_index":593,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["native",{"_index":618,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["near",{"_index":1539,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1789,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1792,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1723,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1794,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1797,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["need",{"_index":656,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["network",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["newmodelurl",{"_index":497,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["newobject3dinstance",{"_index":242,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["newpoints",{"_index":2575,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newpoints.push",{"_index":2574,"title":{},"body":{"classes/SVGLoader.html":{}}}],["next",{"_index":397,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["nextpointl",{"_index":2563,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nextpointr",{"_index":2564,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ng",{"_index":1307,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":201,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["ngmodule",{"_index":951,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":123,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["ngonchanges(changes",{"_index":145,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["ngondestroy",{"_index":202,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["node",{"_index":596,"title":{"interfaces/Node.html":{}},"body":{"directives/AbstractObject3D.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":812,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["node.childnodes",{"_index":2226,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.component.ts",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["node.composition",{"_index":1344,"title":{},"body":{"classes/DagreUtils.html":{}}}],["node.getattribute",{"_index":2234,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.hasattribute",{"_index":2195,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.href.baseval.substring",{"_index":2212,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.label",{"_index":1340,"title":{},"body":{"classes/DagreUtils.html":{}}}],["node.nodename",{"_index":2191,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.nodetype",{"_index":2187,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet",{"_index":2248,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules",{"_index":2249,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules.length",{"_index":2250,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.viewportelement.getelementbyid",{"_index":2214,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nodes",{"_index":1157,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["noholes",{"_index":1611,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["nom1",{"_index":2361,"title":{},"body":{"classes/SVGLoader.html":{}}}],["non",{"_index":2217,"title":{},"body":{"classes/SVGLoader.html":{}}}],["none",{"_index":2023,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":2939,"title":{},"body":{"license.html":{}}}],["nonzero",{"_index":2424,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normal",{"_index":2533,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normals",{"_index":2145,"title":{},"body":{"classes/SVGLoader.html":{}}}],["note",{"_index":623,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":2924,"title":{},"body":{"license.html":{}}}],["now",{"_index":412,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["npm",{"_index":2816,"title":{},"body":{"index.html":{}}}],["null",{"_index":1243,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"classes/SVGLoader.html":{}}}],["number",{"_index":135,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["number.epsilon",{"_index":2373,"title":{},"body":{"classes/SVGLoader.html":{}}}],["numpoints",{"_index":2572,"title":{},"body":{"classes/SVGLoader.html":{}}}],["obj",{"_index":423,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":1902,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1900,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1901,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.ismesh",{"_index":1262,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":1268,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":1906,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1904,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1905,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":240,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["object.module",{"_index":1048,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":1081,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1396,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1381,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":1047,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/scene.component",{"_index":2058,"title":{},"body":{"injectables/RendererService.html":{}}}],["object3d",{"_index":382,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["objectloader",{"_index":2826,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":843,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloader",{"_index":1806,"title":{},"body":{"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":472,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloaderservice",{"_index":1078,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":928,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":2899,"title":{},"body":{"license.html":{}}}],["official",{"_index":2862,"title":{},"body":{"index.html":{}}}],["offset",{"_index":2541,"title":{},"body":{"classes/SVGLoader.html":{}}}],["old",{"_index":417,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["once",{"_index":665,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["onchanges",{"_index":118,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["onclick",{"_index":696,"title":{},"body":{"directives/AbstractServerActor.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1770,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":697,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ondestroy",{"_index":195,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["one",{"_index":294,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["onerror",{"_index":2132,"title":{},"body":{"classes/SVGLoader.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/RendererCanvasComponent.html":{}}}],["onload",{"_index":2130,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onmouseenter",{"_index":1921,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1909,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1907,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":1935,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1758,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onprogress",{"_index":2131,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onresize",{"_index":1968,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onresize(event",{"_index":1979,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":698,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ontouchstart",{"_index":1936,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1774,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["open",{"_index":2507,"title":{},"body":{"classes/SVGLoader.html":{}}}],["openparpos",{"_index":2318,"title":{},"body":{"classes/SVGLoader.html":{}}}],["operation",{"_index":296,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["optimization",{"_index":902,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2837,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":604,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["orbitcontrols",{"_index":649,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":845,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":281,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["original",{"_index":1414,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":847,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["orthographiccameracomponent",{"_index":846,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oter",{"_index":2400,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections",{"_index":2432,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections.push",{"_index":2437,"title":{},"body":{"classes/SVGLoader.html":{}}}],["others",{"_index":1685,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":2949,"title":{},"body":{"license.html":{}}}],["out",{"_index":948,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outerpoint",{"_index":2566,"title":{},"body":{"classes/SVGLoader.html":{}}}],["outline",{"_index":2022,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":534,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":268,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{}}}],["over",{"_index":2301,"title":{},"body":{"classes/SVGLoader.html":{}}}],["override",{"_index":355,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["overview",{"_index":2955,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":389,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["p",{"_index":2407,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.getpoints",{"_index":2456,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.identifier",{"_index":2477,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.points",{"_index":2479,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.x",{"_index":2464,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.y",{"_index":2463,"title":{},"body":{"classes/SVGLoader.html":{}}}],["package",{"_index":2750,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pairs",{"_index":2545,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pane",{"_index":1986,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1644,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":2359,"title":{},"body":{"classes/SVGLoader.html":{}}}],["param",{"_index":1442,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["parameter",{"_index":2500,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2517,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parent",{"_index":504,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["parent.ts",{"_index":2739,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentinitialized",{"_index":369,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["parentscene",{"_index":219,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ContentProjectionComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":2799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":2106,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parse(text",{"_index":2134,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecirclenode",{"_index":2205,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecssstylesheet",{"_index":2193,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsedefs(node",{"_index":2209,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseellipsenode",{"_index":2207,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloats",{"_index":2246,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloatwithunits",{"_index":2308,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parselinenode",{"_index":2208,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenode",{"_index":2186,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenodetransform",{"_index":2305,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepathnode",{"_index":2197,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolygonnode",{"_index":2201,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolylinenode",{"_index":2203,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parser'},{'name",{"_index":815,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["parser.component.ts",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["parserectnode",{"_index":2199,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsestyle",{"_index":2194,"title":{},"body":{"classes/SVGLoader.html":{}}}],["particular",{"_index":2937,"title":{},"body":{"license.html":{}}}],["pass",{"_index":196,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1526,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1528,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1530,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1529,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["path",{"_index":2154,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.boundingbox.containspoint",{"_index":2403,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.color.setstyle",{"_index":2221,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.absellipse",{"_index":2289,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.currentpoint.copy",{"_index":2244,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.identifier",{"_index":2410,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.iscw",{"_index":2412,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.points",{"_index":2405,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.subpaths",{"_index":2355,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata",{"_index":2225,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata.style",{"_index":2516,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths",{"_index":2136,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.foreach",{"_index":2391,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.push",{"_index":2224,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pause",{"_index":1747,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1730,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2170,"title":{},"body":{"classes/SVGLoader.html":{}}}],["per",{"_index":2162,"title":{},"body":{"classes/SVGLoader.html":{}}}],["performance",{"_index":901,"title":{},"body":{"injectables/AnimationService.html":{}}}],["permission",{"_index":2894,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2917,"title":{},"body":{"license.html":{}}}],["person",{"_index":2898,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2918,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":850,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["perspectivecameracomponent",{"_index":849,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pick",{"_index":659,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["pipe",{"_index":1432,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":1053,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":1102,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":1052,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1433,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1441,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":1229,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2019,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":852,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["planemeshcomponent",{"_index":851,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plus",{"_index":2540,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point",{"_index":854,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["point.copy",{"_index":2243,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point.x",{"_index":2439,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0l",{"_index":2559,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0r",{"_index":2560,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointlightcomponent",{"_index":853,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["points",{"_index":2142,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.foreach(p",{"_index":2462,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.length",{"_index":2573,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke",{"_index":2107,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke(points",{"_index":2138,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers",{"_index":2108,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers(points",{"_index":2143,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polygon",{"_index":2200,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polyline",{"_index":2202,"title":{},"body":{"classes/SVGLoader.html":{}}}],["portions",{"_index":2928,"title":{},"body":{"license.html":{}}}],["position",{"_index":918,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":316,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["positionx",{"_index":128,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positiony",{"_index":129,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz",{"_index":130,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz'].some(propname",{"_index":168,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["pq",{"_index":2265,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preallocate",{"_index":2549,"title":{},"body":{"classes/SVGLoader.html":{}}}],["precision",{"_index":2299,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preservedrawingbuffer",{"_index":1970,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["previous",{"_index":482,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["private",{"_index":244,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["project",{"_index":2830,"title":{},"body":{"index.html":{}}}],["projection",{"_index":1295,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":801,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["projection.component",{"_index":1095,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":1293,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:14",{"_index":1297,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":1204,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":2784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":2785,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":2773,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../fix",{"_index":2786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":2776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../provide",{"_index":2787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":2777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":2788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":2789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test.ts",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":691,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":2624,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":892,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":915,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":910,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":912,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":913,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":911,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":949,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":1044,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/abstract",{"_index":114,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":957,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":1823,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1858,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/abstract",{"_index":603,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":974,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1631,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":1817,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":998,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":191,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":1271,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":1273,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1446,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1454,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1453,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1451,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1473,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1484,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1356,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1535,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:12",{"_index":1542,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1545,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1544,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:16",{"_index":1540,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:27",{"_index":1548,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:36",{"_index":1547,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:42",{"_index":1546,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:48",{"_index":1550,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:53",{"_index":1549,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/abstract",{"_index":360,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":1080,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/abstract",{"_index":233,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":967,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":2686,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":1292,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":1011,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":1137,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1532,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1534,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1579,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":768,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":1020,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1587,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/abstract",{"_index":466,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":1027,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1567,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1596,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":1716,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":1798,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2613,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/stl",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/abstract",{"_index":431,"title":{},"body":{"directives/AbstractMesh.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":1034,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2576,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":2579,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":1135,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":1101,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1434,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1438,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1872,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1875,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":1109,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1876,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1724,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:100",{"_index":1946,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:112",{"_index":1948,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:125",{"_index":1943,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:134",{"_index":1942,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":1957,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":1958,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":1955,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":1954,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":1956,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":1938,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":1945,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":1952,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":1953,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":1941,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":1940,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":1949,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":1950,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":1960,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":1951,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":1939,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":1947,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":1120,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":1159,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:109",{"_index":1168,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:119",{"_index":1175,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:33",{"_index":1185,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":1182,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":1179,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":1183,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":1177,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":1184,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":1186,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:41",{"_index":1172,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:93",{"_index":1173,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":1961,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2024,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:103",{"_index":2050,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:111",{"_index":2052,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:118",{"_index":2036,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":2055,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:122",{"_index":2035,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:126",{"_index":2037,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2056,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:130",{"_index":2046,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2054,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2057,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2053,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":2034,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:27",{"_index":2048,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:31",{"_index":2044,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:36",{"_index":2041,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:53",{"_index":2040,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:90",{"_index":2043,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2588,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":1129,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2593,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2600,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2599,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2596,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2598,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:45",{"_index":2597,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2595,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2099,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":2729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":2732,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":2735,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":2738,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":2740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":2742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/test.ts",{"_index":2745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["promise((resolve",{"_index":1812,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1576,"title":{},"body":{"injectables/FontService.html":{}}}],["promise.reject(\"failed",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"properties.html":{}}}],["property",{"_index":480,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":169,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["props",{"_index":2078,"title":{},"body":{"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["provided",{"_index":537,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{},"license.html":{}}}],["provideparent",{"_index":781,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":771,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":1139,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(component",{"_index":2798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":1294,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1533,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1580,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1588,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":1825,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":1859,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2577,"title":{},"body":{"components/SceneComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":1627,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1628,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1629,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["pruning",{"_index":2393,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pt",{"_index":2169,"title":{},"body":{"classes/SVGLoader.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["publish",{"_index":2911,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2885,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2938,"title":{},"body":{"license.html":{}}}],["px",{"_index":2114,"title":{},"body":{"classes/SVGLoader.html":{}}}],["q",{"_index":2266,"title":{},"body":{"classes/SVGLoader.html":{}}}],["querylist",{"_index":638,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rad2deg",{"_index":1873,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":1104,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":1100,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radians",{"_index":280,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SceneComponent.html":{}}}],["raycast",{"_index":673,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["raycaster",{"_index":881,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["raycaster.module",{"_index":1059,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":1110,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":1112,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":1058,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":652,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":880,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1881,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":883,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1727,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1773,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1768,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1767,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":885,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":612,"title":{"injectables/RaycasterService.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{},"overview.html":{}}}],["readonly",{"_index":904,"title":{},"body":{"injectables/AnimationService.html":{}}}],["receiveshadow",{"_index":439,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["recreate",{"_index":668,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rect",{"_index":2198,"title":{},"body":{"classes/SVGLoader.html":{}}}],["recursionbyname",{"_index":254,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["recursionbyname(currentnode",{"_index":332,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["reference",{"_index":380,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["references",{"_index":2216,"title":{},"body":{"classes/SVGLoader.html":{}}}],["register",{"_index":730,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["register(id",{"_index":739,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":1813,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["release",{"_index":2869,"title":{},"body":{"index.html":{}}}],["releasecontributors",{"_index":2878,"title":{},"body":{"index.html":{}}}],["remove",{"_index":416,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"injectables/StatsService.html":{}}}],["removechild",{"_index":255,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechild(object",{"_index":335,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname",{"_index":256,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname(name",{"_index":337,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removed",{"_index":487,"title":{},"body":{"directives/AbstractModelLoader.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["removeduplicatedpoints",{"_index":2571,"title":{},"body":{"classes/SVGLoader.html":{}}}],["removefromarray",{"_index":2741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":2800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removepass",{"_index":1489,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1501,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":703,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["rendered",{"_index":1987,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":855,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":1230,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":1055,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":1121,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":1122,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":1054,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer",{"_index":653,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["renderer/renderer.service",{"_index":156,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["renderercanvascomponent",{"_index":643,"title":{"components/RendererCanvasComponent.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice",{"_index":133,"title":{"injectables/RendererService.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2581,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":1995,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpane",{"_index":1973,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":1187,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":1219,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1516,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":1218,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1490,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":2815,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":726,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":742,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":733,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":741,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:37",{"_index":736,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requestanimationframe",{"_index":903,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":931,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestid",{"_index":760,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requests",{"_index":2886,"title":{},"body":{"index.html":{}}}],["require",{"_index":2747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":590,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["reset",{"_index":947,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":1969,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2018,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2029,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2042,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2014,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1578,"title":{},"body":{"injectables/FontService.html":{}}}],["resolve(data.paths",{"_index":2618,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(model",{"_index":1815,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["resolver",{"_index":734,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["restorematerial",{"_index":1166,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":1174,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":1996,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":2905,"title":{},"body":{"license.html":{}}}],["result",{"_index":592,"title":{},"body":{"directives/AbstractObject3D.html":{},"injectables/ActorRepositoryService.html":{},"classes/DagreUtils.html":{}}}],["results",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1749,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"classes/DagreUtils.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["returned",{"_index":2490,"title":{},"body":{"classes/SVGLoader.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2530,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rights",{"_index":2908,"title":{},"body":{"license.html":{}}}],["rotate",{"_index":2324,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rotatespeed",{"_index":1645,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotatex",{"_index":259,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatey",{"_index":260,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez",{"_index":261,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez'].some(propname",{"_index":543,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["rotation",{"_index":277,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotation/damping/panning",{"_index":674,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rotations",{"_index":2453,"title":{},"body":{"classes/SVGLoader.html":{}}}],["round",{"_index":2492,"title":{},"body":{"classes/SVGLoader.html":{}}}],["run",{"_index":2855,"title":{},"body":{"index.html":{}}}],["rx",{"_index":2258,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rx,ry",{"_index":2253,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rxjs",{"_index":345,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"dependencies.html":{}}}],["rxs",{"_index":2260,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ry",{"_index":2259,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rys",{"_index":2261,"title":{},"body":{"classes/SVGLoader.html":{}}}],["s",{"_index":2256,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["safely",{"_index":392,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["same",{"_index":2539,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sample",{"_index":2847,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":1210,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":2832,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1476,"title":{},"body":{"components/DotScreenComponent.html":{},"classes/SVGLoader.html":{}}}],["scaletofit",{"_index":2744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scalex",{"_index":262,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scaley",{"_index":263,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scalez",{"_index":264,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["scalez'].some(propname",{"_index":547,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["scanline",{"_index":2387,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections",{"_index":2428,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.foreach",{"_index":2433,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.sort",{"_index":2430,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlinemaxx",{"_index":2422,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineminx",{"_index":2421,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scene",{"_index":422,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["scene'},{'name",{"_index":858,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["scene.background",{"_index":2582,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":1094,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1491,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":857,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scope",{"_index":2172,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager",{"_index":2173,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager.itemerror",{"_index":2185,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.parse",{"_index":2181,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.path",{"_index":2175,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.requestheader",{"_index":2177,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.withcredentials",{"_index":2179,"title":{},"body":{"classes/SVGLoader.html":{}}}],["screen",{"_index":1475,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":822,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["screen.component",{"_index":1004,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1474,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1477,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1646,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["search",{"_index":2395,"title":{},"body":{"classes/SVGLoader.html":{}}}],["searching",{"_index":589,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["see",{"_index":471,"title":{},"body":{"directives/AbstractModelLoader.html":{},"index.html":{}}}],["selected",{"_index":704,"title":{},"body":{"directives/AbstractServerActor.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":772,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["sell",{"_index":2915,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1515,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":2779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":693,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":990,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":991,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":743,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":744,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servericonactorcomponent",{"_index":745,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverstandactorcomponent",{"_index":746,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":894,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{}}}],["set",{"_index":498,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"index.html":{}}}],["setcamera",{"_index":1937,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1751,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2030,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2045,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setmaterials",{"_index":1800,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":1802,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(newmodelurl",{"_index":496,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["setscene",{"_index":2031,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2047,"title":{},"body":{"injectables/RendererService.html":{}}}],["settimeout",{"_index":425,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["settings",{"_index":479,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["settled",{"_index":1256,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":610,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["shaderpass",{"_index":1192,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1483,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":1228,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":1288,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":1287,"title":{},"body":{"components/BlurComponent.html":{}}}],["shall",{"_index":2925,"title":{},"body":{"license.html":{}}}],["shape",{"_index":2155,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shape.holes.push",{"_index":2487,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapepath",{"_index":2118,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["shapepath.userdata.style.fillrule",{"_index":2473,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn",{"_index":2474,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn.push",{"_index":2488,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils",{"_index":2156,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils.isclockwise",{"_index":2465,"title":{},"body":{"classes/SVGLoader.html":{}}}],["show",{"_index":889,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["show.directive",{"_index":1131,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2589,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2591,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2590,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":700,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["signal",{"_index":385,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["similarly",{"_index":181,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["simple",{"_index":2807,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":146,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["simplepath",{"_index":2419,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox",{"_index":2429,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox.getcenter",{"_index":2426,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.identifier",{"_index":2435,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths",{"_index":2466,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.filter",{"_index":2467,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.foreach",{"_index":2475,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.map",{"_index":2472,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplex",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":2013,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":1140,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"injectables/RendererService.html":{}}}],["size.ts",{"_index":2733,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["skewx",{"_index":2335,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skewy",{"_index":2338,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skip",{"_index":2584,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":214,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["skycolor",{"_index":1590,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["slightly",{"_index":2300,"title":{},"body":{"classes/SVGLoader.html":{}}}],["smaapass",{"_index":1247,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":1248,"title":{},"body":{"injectables/BloomService.html":{}}}],["software",{"_index":184,"title":{},"body":{"directives/AbstractCamera.html":{},"license.html":{}}}],["solid",{"_index":2470,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["source/target",{"_index":315,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["sourcesub",{"_index":237,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["sp",{"_index":2468,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sp.points.length",{"_index":2469,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sphere",{"_index":863,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["spheremeshcomponent",{"_index":862,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["split",{"_index":2312,"title":{},"body":{"classes/SVGLoader.html":{}}}],["square",{"_index":2495,"title":{},"body":{"classes/SVGLoader.html":{}}}],["src/app.component.html",{"_index":2836,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":2846,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":2861,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":2843,"title":{},"body":{"index.html":{}}}],["stack",{"_index":2442,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.length",{"_index":2443,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.pop",{"_index":2444,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.push",{"_index":2445,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stand",{"_index":861,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["standard",{"_index":2874,"title":{},"body":{"index.html":{}}}],["start",{"_index":908,"title":{},"body":{"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["start.x",{"_index":2282,"title":{},"body":{"classes/SVGLoader.html":{}}}],["start.y",{"_index":2284,"title":{},"body":{"classes/SVGLoader.html":{}}}],["started",{"_index":2803,"title":{"index.html":{},"license.html":{}},"body":{}}],["startloading",{"_index":371,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["statements",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":645,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/DagreUtils.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["stats",{"_index":888,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["stats.service",{"_index":1130,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":1060,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2059,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":887,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":1128,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["step",{"_index":2274,"title":{},"body":{"classes/SVGLoader.html":{}}}],["still",{"_index":625,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["stl",{"_index":865,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["stlloadercomponent",{"_index":864,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stop",{"_index":909,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{}}}],["stories",{"_index":2860,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":2808,"title":{},"body":{"index.html":{}}}],["storybook.js",{"_index":2863,"title":{},"body":{"index.html":{}}}],["strange",{"_index":2012,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2489,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokecolor",{"_index":2124,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinecap",{"_index":2127,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinejoin",{"_index":2126,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokemiterlimit",{"_index":2128,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokewidth",{"_index":2125,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style",{"_index":2139,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill",{"_index":2220,"title":{},"body":{"classes/SVGLoader.html":{}}}],["styles",{"_index":1630,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1633,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":2920,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2913,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2883,"title":{},"body":{"index.html":{}}}],["subpaths",{"_index":2354,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subpaths.length",{"_index":2357,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subscribe",{"_index":916,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":935,"title":{},"body":{"injectables/AnimationService.html":{}}}],["subscribeevents",{"_index":1899,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscription",{"_index":340,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["substantial",{"_index":2927,"title":{},"body":{"license.html":{}}}],["successful",{"_index":484,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["suffix",{"_index":400,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super",{"_index":2160,"title":{},"body":{"classes/SVGLoader.html":{}}}],["super(rendererservice",{"_index":782,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["super.afterinit",{"_index":404,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().add(obj",{"_index":424,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().remove(this.lazyobject",{"_index":420,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.ngonchanges(changes",{"_index":460,"title":{},"body":{"directives/AbstractMesh.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":356,"title":{},"body":{"directives/AbstractConnector.html":{},"components/MapControlsComponent.html":{}}}],["super.startloading",{"_index":503,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["super.updateparent",{"_index":2585,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":2953,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":867,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"modules.html":{}}}],["svgangle",{"_index":2287,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader",{"_index":2098,"title":{"classes/SVGLoader.html":{}},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["svgloader.getstrokestyle",{"_index":2514,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.parse",{"_index":2515,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.pointstostrokewithbuffers",{"_index":2531,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloadercomponent",{"_index":866,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":1079,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["sweep_flag",{"_index":2269,"title":{},"body":{"classes/SVGLoader.html":{}}}],["switch",{"_index":2190,"title":{},"body":{"classes/SVGLoader.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["t2",{"_index":2358,"title":{},"body":{"classes/SVGLoader.html":{}}}],["table",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":258,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["targetopacity",{"_index":1364,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["targetsub",{"_index":238,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["template",{"_index":776,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1965,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["temptransform0",{"_index":2306,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1",{"_index":2331,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1.identity().translate",{"_index":2327,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2",{"_index":2330,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2.identity().rotate",{"_index":2328,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3",{"_index":2333,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3.multiplymatrices",{"_index":2329,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_1",{"_index":2550,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_2",{"_index":2551,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_3",{"_index":2552,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_4",{"_index":2553,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_5",{"_index":2554,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_6",{"_index":2555,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_7",{"_index":2556,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.set",{"_index":2345,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.x",{"_index":2350,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.y",{"_index":2351,"title":{},"body":{"classes/SVGLoader.html":{}}}],["test",{"_index":2828,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2856,"title":{},"body":{"index.html":{}}}],["text",{"_index":869,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["text.module",{"_index":1093,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":1136,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":1092,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":2625,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":868,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":870,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture2d",{"_index":1214,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["theta",{"_index":2286,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this._model",{"_index":501,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["this.actorclick.emit",{"_index":723,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["this.addpass(renderpass",{"_index":1517,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.afterinit",{"_index":557,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.animate",{"_index":1390,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animate.bind(this",{"_index":1391,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animate.emit",{"_index":932,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":930,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":929,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1392,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1431,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1712,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1393,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animationservice.start",{"_index":1394,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animationstep",{"_index":923,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":924,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1466,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":231,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.applymaterial",{"_index":463,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.applyposition",{"_index":164,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.applyrotation",{"_index":544,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyscale",{"_index":548,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applytranslation",{"_index":546,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyzaxisup",{"_index":163,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.aspect",{"_index":2096,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autorotate",{"_index":1691,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1693,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2090,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2089,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2064,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":1234,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":1238,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":1239,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":1237,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":1259,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":1244,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":1236,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2062,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":1217,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":1263,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.camera",{"_index":172,"title":{},"body":{"directives/AbstractCamera.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1871,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":1854,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1781,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.layers.enable(this.layer",{"_index":161,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.layers.enableall",{"_index":162,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.left",{"_index":1851,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":1856,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.position.set",{"_index":173,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.right",{"_index":1852,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":1853,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.up.set(0",{"_index":188,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2061,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1855,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":1846,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2008,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2010,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":457,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.changed.emit",{"_index":549,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childcameras",{"_index":681,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first",{"_index":682,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first.camera",{"_index":1686,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.childlren",{"_index":599,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.filter(i",{"_index":600,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.indexof(object",{"_index":583,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.push(object",{"_index":575,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.splice(index",{"_index":584,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.click.emit",{"_index":1914,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":718,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["this.composer",{"_index":220,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":225,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.composer.passes",{"_index":1527,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1525,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":227,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":2066,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1531,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1512,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1520,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer?.addpass(pass",{"_index":1523,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.configurelisteners",{"_index":689,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.constructor.name",{"_index":573,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.contentprojection",{"_index":1302,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":1303,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":662,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":671,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{}}}],["this.controls.addeventlistener('end",{"_index":678,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.addeventlistener('start",{"_index":676,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.autorotate",{"_index":1690,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1692,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1696,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dispose",{"_index":669,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.enabledamping",{"_index":1694,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1702,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1704,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1708,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1700,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1706,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1688,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1713,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1680,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1698,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1710,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1683,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2609,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcamera",{"_index":159,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.createlinemesh",{"_index":346,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.dampingfactor",{"_index":1697,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":1258,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":1269,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashcolor",{"_index":1406,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashincrement",{"_index":1427,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.defaultdpi",{"_index":2164,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.defaultid",{"_index":758,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":2171,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.depthwrite",{"_index":455,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.disable",{"_index":229,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1565,"title":{},"body":{"components/FogComponent.html":{}}}],["this.divisions",{"_index":1586,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.edges",{"_index":1400,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1407,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1410,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1408,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1409,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1429,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.enable",{"_index":228,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":926,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1695,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1558,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1563,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":1249,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":1251,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":1252,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":1250,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":1253,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":1261,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1463,"title":{},"body":{"components/DofComponent.html":{}}}],["this.fov",{"_index":1869,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1762,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1777,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getmaterial",{"_index":465,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getobject",{"_index":461,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getobject().background",{"_index":2587,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getobject().material",{"_index":464,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.groundcolor",{"_index":1595,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.groups",{"_index":1782,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1783,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1757,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.hidedash",{"_index":1428,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.host",{"_index":1388,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1395,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1506,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":1254,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1415,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":223,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.intensity",{"_index":785,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["this.isready",{"_index":1759,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1771,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.layer",{"_index":160,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{}}}],["this.lazyobject",{"_index":419,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.list.get(requestid",{"_index":763,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":759,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":687,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1687,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":1814,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":1816,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loadlazyobject().then(obj",{"_index":414,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.material",{"_index":454,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{}}}],["this.material.depthwrite",{"_index":1419,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.needsupdate",{"_index":1420,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.opacity",{"_index":1421,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1418,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materials[obj.uuid",{"_index":1267,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.maxblur",{"_index":1470,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdistance",{"_index":1703,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1705,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxzoom",{"_index":1709,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1701,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1707,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mouseenter.emit",{"_index":1911,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":1908,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.name",{"_index":408,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{}}}],["this.near",{"_index":1562,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.newobject3dinstance",{"_index":555,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object",{"_index":502,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"components/SceneComponent.html":{}}}],["this.object.add(object.getobject",{"_index":576,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.layers.set(this.layer",{"_index":556,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent",{"_index":551,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent.remove(this.object",{"_index":553,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.position.set",{"_index":565,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.remove(object.getobject",{"_index":586,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.rotation.set",{"_index":560,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.scale.set",{"_index":569,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.onclick",{"_index":1733,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1734,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1893,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1894,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1895,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1896,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1731,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1732,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2002,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2003,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1735,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1736,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.panspeed",{"_index":1689,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":558,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/FogComponent.html":{}}}],["this.parent.addchild(this",{"_index":559,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parent.getobject",{"_index":1554,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1555,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.removechild(this",{"_index":552,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parentinitialized",{"_index":405,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.parentscene",{"_index":1553,"title":{},"body":{"components/FogComponent.html":{}}}],["this.pass",{"_index":230,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":224,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":1286,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1460,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1467,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1464,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1469,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1748,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.positionx",{"_index":174,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positiony",{"_index":175,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positionz",{"_index":176,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.preservedrawingbuffer",{"_index":2006,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1787,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1897,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":1920,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.isenabled",{"_index":675,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.pause",{"_index":677,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.resume",{"_index":679,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1880,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":459,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.recursionbyname(child",{"_index":598,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.recursionbyname(this",{"_index":591,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.register('barrel",{"_index":753,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":752,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":754,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":756,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":751,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":755,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":1720,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":1616,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1624,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1618,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1621,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1612,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2608,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.render",{"_index":2087,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":222,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1472,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.getwebglrenderer",{"_index":1509,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2005,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":171,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2020,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcamera(this",{"_index":166,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1521,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(undefined",{"_index":1508,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2077,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1513,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2007,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":764,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.restorematerial(i",{"_index":1260,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.rotatespeed",{"_index":1681,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.rotatex",{"_index":561,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatey",{"_index":562,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatez",{"_index":563,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalex",{"_index":570,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scaley",{"_index":571,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalez",{"_index":572,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scene",{"_index":1216,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2076,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1560,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2063,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":1257,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1518,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1519,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1699,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1764,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1766,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.setupcontrols",{"_index":670,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.skycolor",{"_index":1594,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.source",{"_index":347,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.source.changed.subscribe",{"_index":351,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub",{"_index":350,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub?.unsubscribe",{"_index":357,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.startloading",{"_index":406,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.stats",{"_index":2606,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2612,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2611,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2607,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2592,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2068,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.stop",{"_index":1426,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.subscribe",{"_index":1737,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribeevents",{"_index":1898,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.target",{"_index":348,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.target.changed.subscribe",{"_index":354,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetopacity",{"_index":1430,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.targetsub",{"_index":353,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetsub?.unsubscribe",{"_index":358,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.toggle",{"_index":2605,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatex",{"_index":566,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.translatey",{"_index":567,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.translatez",{"_index":568,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.trytofindgeometry",{"_index":1389,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.unsubscribe",{"_index":1738,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":1915,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateaspectratio(canvas",{"_index":2097,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updatebaseinfo(g",{"_index":1351,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2086,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updateedges(g",{"_index":1354,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1334,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatelinegeometry",{"_index":352,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.updateparent",{"_index":587,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.updatezoom",{"_index":1844,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.watchobjects",{"_index":349,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.webglrenderer",{"_index":685,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2084,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2067,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.renderpane",{"_index":688,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2083,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2073,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2074,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2095,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2080,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2079,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2081,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.uselegacylights",{"_index":2072,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.zaxisup",{"_index":177,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.zoom",{"_index":1847,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1684,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":155,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(this.color",{"_index":783,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":1144,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":1146,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.camera",{"_index":1171,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.color(this.background",{"_index":2583,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color.getstyle",{"_index":2491,"title":{},"body":{"classes/SVGLoader.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1402,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":1726,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(this.color",{"_index":1561,"title":{},"body":{"components/FogComponent.html":{}}}],["three.gridhelper",{"_index":1583,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.gridhelper(this.size",{"_index":1585,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.hemispherelight",{"_index":1593,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1791,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":631,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["three.layers",{"_index":1178,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.linedashedmaterial({color",{"_index":1405,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1404,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":449,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":447,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{}}}],["three.meshbasicmaterial({color",{"_index":1180,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.object3d",{"_index":308,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.orthographiccamera",{"_index":1842,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2082,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1868,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.raycaster",{"_index":1728,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.scene",{"_index":1170,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":1241,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector2(window.innerwidth",{"_index":1222,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector2(x",{"_index":1786,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.vector3",{"_index":2796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":1857,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.webglrenderer",{"_index":2038,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/mapcontrols",{"_index":1678,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":650,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2601,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/fontloader.js",{"_index":1574,"title":{},"body":{"injectables/FontService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1810,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1808,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1459,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":1191,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":217,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":1188,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":1193,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":1190,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1482,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":1195,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":1285,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":1283,"title":{},"body":{"components/BlurComponent.html":{}}}],["threejs",{"_index":2615,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":2854,"title":{},"body":{"index.html":{}}}],["throw",{"_index":683,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["thus",{"_index":667,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["time",{"_index":295,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["tindex",{"_index":2313,"title":{},"body":{"classes/SVGLoader.html":{}}}],["todo",{"_index":165,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"injectables/ActorRepositoryService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2594,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":2948,"title":{},"body":{"license.html":{}}}],["torus",{"_index":872,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["torusmeshcomponent",{"_index":871,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1775,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1436,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["transform(degrees",{"_index":1437,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1874,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["transform.premultiply",{"_index":2303,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transform.translate",{"_index":2310,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformpath",{"_index":2222,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack",{"_index":2228,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.length",{"_index":2229,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.push",{"_index":2304,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts",{"_index":2311,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts.length",{"_index":2314,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext",{"_index":2315,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.indexof",{"_index":2319,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.length",{"_index":2321,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transfvec2",{"_index":2343,"title":{},"body":{"classes/SVGLoader.html":{}}}],["translate",{"_index":290,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatex",{"_index":265,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatey",{"_index":266,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez",{"_index":267,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez'].some(propname",{"_index":545,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["traversechildnodes",{"_index":2189,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tree",{"_index":767,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["triangles",{"_index":2523,"title":{},"body":{"classes/SVGLoader.html":{}}}],["trigger",{"_index":409,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["trim",{"_index":2316,"title":{},"body":{"classes/SVGLoader.html":{}}}],["true",{"_index":170,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["truncated",{"_index":2501,"title":{},"body":{"classes/SVGLoader.html":{}}}],["try",{"_index":1788,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["trytofindgeometry",{"_index":1359,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ts",{"_index":1265,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":2307,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ty",{"_index":2309,"title":{},"body":{"classes/SVGLoader.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/dagre",{"_index":2833,"title":{},"body":{"index.html":{}}}],["types/three",{"_index":2834,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":577,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["typically",{"_index":292,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["u",{"_index":2526,"title":{},"body":{"classes/SVGLoader.html":{}}}],["undefined",{"_index":378,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"modules/AtftModule.html":{},"classes/DagreUtils.html":{},"components/EffectComposerComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":1992,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":1065,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":1209,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":1242,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":2166,"title":{},"body":{"classes/SVGLoader.html":{}}}],["unless",{"_index":391,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["unrealbloompass",{"_index":1189,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":1221,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":1742,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1903,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["unused",{"_index":1289,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["up",{"_index":180,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{},"index.html":{}}}],["update",{"_index":2534,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"index.html":{}}}],["updateanimation",{"_index":896,"title":{},"body":{"injectables/AnimationService.html":{}}}],["updateaspectratio",{"_index":125,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["updateaspectratio(aspect",{"_index":150,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(canvas",{"_index":2049,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatebaseinfo",{"_index":1315,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1323,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2032,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2051,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":312,"title":{},"body":{"directives/AbstractConnector.html":{},"injectables/AnimationService.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateedges",{"_index":1316,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1326,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1317,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1328,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":243,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["updateparent",{"_index":257,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["updatezoom",{"_index":1826,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upon",{"_index":483,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{}}}],["uri",{"_index":478,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"classes/SVGLoader.html":{}}}],["usage",{"_index":2820,"title":{},"body":{"index.html":{}}}],["use",{"_index":2210,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":898,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["usednode",{"_index":2213,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usednodeid",{"_index":2211,"title":{},"body":{"classes/SVGLoader.html":{}}}],["useful",{"_index":2548,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usefull",{"_index":1888,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":2806,"title":{},"body":{"index.html":{}}}],["usually",{"_index":477,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["util",{"_index":452,"title":{},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["utils.ts",{"_index":1310,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1321,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:31",{"_index":1324,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:42",{"_index":1327,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:50",{"_index":1329,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:56",{"_index":1319,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":536,"title":{},"body":{"directives/AbstractObject3D.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":274,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["uv",{"_index":1202,"title":{},"body":{"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["uvs",{"_index":2146,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ux",{"_index":2290,"title":{},"body":{"classes/SVGLoader.html":{}}}],["uxactormodule",{"_index":2619,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["uy",{"_index":2291,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v",{"_index":2528,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2",{"_index":2344,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.set",{"_index":2349,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.x",{"_index":2346,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.y",{"_index":2347,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v4",{"_index":535,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["valid",{"_index":2547,"title":{},"body":{"classes/SVGLoader.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":660,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["var",{"_index":788,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["variable",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2959,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1290,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["varying",{"_index":1199,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":1200,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":1206,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":2848,"title":{},"body":{"index.html":{}}}],["vector2",{"_index":2157,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector2d",{"_index":2512,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector3",{"_index":2158,"title":{},"body":{"classes/SVGLoader.html":{}}}],["version",{"_index":2875,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertexoffset",{"_index":2147,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vertexshader",{"_index":1198,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":1282,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":2842,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":2144,"title":{},"body":{"classes/SVGLoader.html":{}}}],["very",{"_index":1887,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":2829,"title":{},"body":{"index.html":{}}}],["video",{"_index":874,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["videomeshcomponent",{"_index":873,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewchild",{"_index":1300,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":1982,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('contentprojection",{"_index":1299,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["void",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":1201,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vx",{"_index":2292,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vy",{"_index":2293,"title":{},"body":{"classes/SVGLoader.html":{}}}],["want",{"_index":2838,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2934,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2929,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2857,"title":{},"body":{"index.html":{}}}],["watchobjects",{"_index":245,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["web",{"_index":2813,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":1989,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":608,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"injectables/RendererService.html":{}}}],["well",{"_index":313,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["whether",{"_index":386,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"license.html":{}}}],["whose",{"_index":617,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["width",{"_index":1341,"title":{},"body":{"classes/DagreUtils.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{}}}],["wiki",{"_index":1311,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window",{"_index":628,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["window.addeventlistener('click",{"_index":1740,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1739,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1741,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":1223,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":1232,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1745,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1744,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1746,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":1972,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":1976,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["witdh",{"_index":2505,"title":{},"body":{"classes/SVGLoader.html":{}}}],["without",{"_index":2904,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2017,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":875,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["workstationactorcomponent",{"_index":748,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":2794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writing",{"_index":2542,"title":{},"body":{"classes/SVGLoader.html":{}}}],["written",{"_index":2544,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x",{"_index":282,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["x1p",{"_index":2273,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x1ps",{"_index":2264,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x_axis_rotation",{"_index":2280,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xml",{"_index":2137,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xyz",{"_index":564,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["y",{"_index":283,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["y1p",{"_index":2271,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y1ps",{"_index":2263,"title":{},"body":{"classes/SVGLoader.html":{}}}],["yaml",{"_index":814,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["yes",{"_index":1944,"title":{},"body":{"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":178,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["z]*/ig",{"_index":2239,"title":{},"body":{"classes/SVGLoader.html":{}}}],["z][^a",{"_index":2238,"title":{},"body":{"classes/SVGLoader.html":{}}}],["zaxisup",{"_index":131,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["zone.js",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":946,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":1845,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1647,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider: string;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init(): void;\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (await cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      if (cacheHit) {\n        return cacheHit;\n      } else {\n        return Promise.reject(\"Failed to get value from cache\")\n      }\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractCamera.html":{"url":"directives/AbstractCamera.html","title":"directive - AbstractCamera","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractCamera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/camera/abstract-camera.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\n\n@Directive()\nexport abstract class AbstractCamera implements OnInit, OnChanges {\n\n  camera!: T;\n\n  @Input() positionX!: number;\n  @Input() positionY!: number;\n  @Input() positionZ!: number;\n\n  @Input() zAxisUp = false;\n\n  @Input() layer!: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    // console.log('AbstractCamera.constructor');\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractCamera.ngAfterViewInit');\n    this.createCamera();\n\n    if (this.layer) {\n      this.camera.layers.enable(this.layer);\n    } else {\n      this.camera.layers.enableAll();\n    }\n\n    this.applyZAxisUp();\n    this.applyPosition();\n\n    // TODO: Directive?\n    this.rendererService.setCamera(this);\n  }\n\n  protected abstract createCamera(): void;\n\n  public abstract updateAspectRatio(aspect: number) : void;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let mustRerender = false;\n\n    if (['positionX', 'positionY', 'positionZ'].some(propName => propName in changes)) {\n      this.applyPosition();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n\n  }\n\n  protected applyPosition() {\n    if (this.camera) {\n      this.camera.position.set(\n        this.positionX || 0,\n        this.positionY || 0,\n        this.positionZ || 0,\n      );\n    }\n  }\n\n  protected applyZAxisUp() {\n    if (this.camera && this.zAxisUp) {\n      // Z axis up (similarly to 3D Creation Software: Blender, 3DS Max)\n      this.camera.up.set(0, 0, 1);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractComposeEffect.html":{"url":"directives/AbstractComposeEffect.html","title":"directive - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        applyChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        initPasses\n                        \n                    \n                \n            \n            \n                \n                        \n                    initPasses()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Directive()\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses() : void;\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractConnector.html":{"url":"directives/AbstractConnector.html","title":"directive - AbstractConnector","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractConnector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/abstract-connector.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                sourceSub\n                            \n                            \n                                    Protected\n                                targetSub\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                source\n                            \n                            \n                                target\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createLineMesh\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLineMesh()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:46\n                        \n                    \n\n\n            \n                \n                        Create line mesh\n\n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateLineGeometry\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLineGeometry()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:52\n                        \n                    \n\n\n            \n                \n                        If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        watchObjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    watchObjects()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sourceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        targetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {Subscription} from 'rxjs';\n\n@Directive()\nexport abstract class AbstractConnector extends AbstractObject3D implements OnDestroy {\n\n  @Input()\n  source!: AbstractObject3D;\n\n  @Input()\n  target!: AbstractObject3D;\n\n  protected sourceSub!: Subscription;\n  protected targetSub!: Subscription;\n\n  protected newObject3DInstance(): THREE.Object3D {\n    const line = this.createLineMesh();\n    if (this.source && this.target) {\n      this.watchObjects();\n    }\n    return line;\n  }\n\n  private watchObjects() {\n    this.sourceSub = this.source.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n\n    this.targetSub = this.target.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n  }\n\n  public override ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.sourceSub?.unsubscribe();\n    this.targetSub?.unsubscribe();\n  }\n\n  /**\n   * Create line mesh\n   */\n  abstract createLineMesh(): T;\n\n  /**\n   * If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n   * // TODO: Calculate only when source/target positions were changed\n   */\n  abstract updateLineGeometry(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractEmptyDirective.html":{"url":"directives/AbstractEmptyDirective.html","title":"directive - AbstractEmptyDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractEmptyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-empty-directive.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:8\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Directive()\nexport abstract class AbstractEmptyDirective extends AbstractObject3D {\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractLazyObject3D.html":{"url":"directives/AbstractLazyObject3D.html","title":"directive - AbstractLazyObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractLazyObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLazyObject()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:31\n                        \n                    \n\n\n            \n                \n                        Abstract method for lazy loading\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:68\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:24\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:19\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, OnDestroy} from '@angular/core';\n\nimport {AbstractObject3D} from './abstract-object-3d';\n\nimport * as THREE from 'three';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AbstractLazyObject3D extends AbstractObject3D implements OnDestroy {\n\n  /**\n   * Flag to signal whether the parentScene class instance AbstractObject3D called the\n   * overwritten method {@link AbstractModelLoader#afterInit} yet.\n   *\n   * Unless that method was called, no methods and properties of {@link AbstractObject3D}\n   * may be safely accessed, especially {@link AbstractObject3D#addChild} and\n   * {@link AbstractObject3D.renderer}.\n   */\n  private parentInitialized = false;\n\n  /**\n   * This is reference to lazy loaded Object3D (async after init)\n   */\n  protected lazyObject: THREE.Object3D | undefined;\n\n\n  /**\n   * Abstract method for lazy loading\n   *\n   */\n  protected abstract loadLazyObject(): Promise;\n\n  protected override afterInit() {\n    super.afterInit();\n    this.parentInitialized = true;\n    this.startLoading();\n  }\n\n  protected startLoading() {\n    // console.log('AbstractLazyObject3D.startLoading', this.name + ' / '+this.parentInitialized);\n    // Trigger model acquisition now that the parentScene has been initialized.\n    this.loadLazyObject().then(obj => {\n      // console.log('AbstractLazyObject3D loaded');\n      // remove old if exists\n      if (this.lazyObject) {\n        super.getObject().remove(this.lazyObject);\n      }\n\n      // add lazy object to scene\n      this.lazyObject = obj;\n      super.getObject().add(obj);\n\n      this.rendererService.render();\n      setTimeout(() => {\n        this.rendererService.render();\n      }, 10);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  override ngOnDestroy(): void {\n    if (this.lazyObject) {\n      super.getObject().remove(this.lazyObject);\n    }\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    // Just empty object (holder of lazy object)\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractMesh.html":{"url":"directives/AbstractMesh.html","title":"directive - AbstractMesh","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyMaterial()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mesh\n                                            \n                                                        THREE.Mesh\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaterial()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Material\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:179\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Input, OnChanges, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedMaterial} from '../../util';\n\n@Directive()\nexport abstract class AbstractMesh extends AbstractObject3D implements OnChanges {\n\n  @Input()\n  material!: string;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected applyShadowProps(mesh: THREE.Mesh) {\n    mesh.castShadow = this.castShadow;\n    mesh.receiveShadow = this.receiveShadow;\n  }\n\n  public override ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.getObject()) {\n      return;\n    }\n\n    let mustRerender = false;\n    if (['material', 'materialColor', 'depthWrite'].some(propName => propName in changes)) {\n      this.applyMaterial();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  public applyMaterial() {\n    this.getObject().material = this.getMaterial();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractModelLoader.html":{"url":"directives/AbstractModelLoader.html","title":"directive - AbstractModelLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractModelLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/abstract-model-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                Helper parentScene class for model loader.\nSee ObjLoaderComponent\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractLazyObject3D\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLazyObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractLazyObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractLazyObject3D:31\n\n                        \n                    \n\n\n            \n                \n                        Abstract method for lazy loading\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:68\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoading()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractLazyObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractLazyObject3D:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:24\n\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:19\n\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:32\n                                \n                            \n                    \n                        \n                                The current model data source (usually a URI).\n\n\n                        \n                    \n\n                \n                    \n                        setmodel(newModelUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                                \n                            \n                    \n                        \n                                The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newModelUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\n\n/**\n * Helper parentScene class for model loader.\n *\n * @see ObjLoaderComponent\n */\n@Directive()\nexport abstract class AbstractModelLoader extends AbstractLazyObject3D {\n\n  protected _model!: string;\n\n  /**\n   * The model data source (usually a URI).\n   * Settings this property only hides the previous model upon successful\n   * loading of the new one. This especially means that if the new data source\n   * is invalid, the old model will *not* be removed from the scene.\n   */\n  @Input()\n  public set model(newModelUrl: string) {\n    // console.log('AbstractModelLoader.model', newModelUrl);\n    this._model = newModelUrl;\n    if (this.object) {\n      super.startLoading();\n    }\n  }\n\n  /**\n   * The current model data source (usually a URI).\n   */\n  public get model() {\n    return this._model;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractObject3D.html":{"url":"directives/AbstractObject3D.html","title":"directive - AbstractObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-object-3d.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n                        OnDestroy\n                        OnInit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:24\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:31\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:44\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {v4 as uuidv4} from 'uuid';\n\n@Directive()\nexport abstract class AbstractObject3D implements AfterViewInit, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateX!: number;\n  @Input() rotateY!: number;\n  @Input() rotateZ!: number;\n\n  /**\n   * Translate the geometry. This is typically done as a one time operation, and not during a loop.\n   */\n  @Input() translateX!: number;\n  @Input() translateY!: number;\n  @Input() translateZ!: number;\n\n\n  @Input() scaleX = 1;\n  @Input() scaleY = 1;\n  @Input() scaleZ = 1;\n\n  @Input() name: string = uuidv4(); // if not provided, then auto-generate\n\n  @Input() layer = 0;\n\n  @Output() changed = new EventEmitter();\n\n  protected childlren: Array> = [];\n\n  protected object!: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    // console.log('AbstractObject3D.constructor', this.name);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['rotateX', 'rotateY', 'rotateZ'].some(propName => propName in changes)) {\n      this.applyRotation();\n      modified = true;\n    }\n    if (['translateX', 'translateY', 'translateZ'].some(propName => propName in changes)) {\n      this.applyTranslation();\n      modified = true;\n    }\n\n    if (['scaleX', 'scaleY', 'scaleZ'].some(propName => propName in changes)) {\n      this.applyScale();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n  public ngOnDestroy() {\n    // console.log('AbstractObject3D.OnDestroy', this.name);\n    if (this.object && this.object.parent) {\n      this.parent.removeChild(this);\n      // this.object.parent.remove(this.object);\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractObject3D.ngOnInit', this.name);\n    this.object = this.newObject3DInstance();\n    if (this.layer) {\n      this.object.layers.set(this.layer);\n    }\n\n    this.applyTranslation();\n    this.applyRotation();\n    this.applyScale();\n\n    this.afterInit();\n  }\n\n  public updateParent(): void {\n    if (this.parent) {\n      this.parent.addChild(this);\n      this.rendererService.render();\n    }\n  }\n\n  public applyRotation(): void {\n    this.object.rotation.set(\n      this.rotateX || 0,\n      this.rotateY || 0,\n      this.rotateZ || 0,\n      'XYZ'\n    );\n  }\n\n  public applyTranslation(): void {\n    this.object.position.set(\n      this.translateX || 0,\n      this.translateY || 0,\n      this.translateZ || 0\n    );\n  }\n\n  public applyScale(): void {\n    this.object.scale.set(\n      this.scaleX || 0,\n      this.scaleY || 0,\n      this.scaleZ || 0\n    );\n  }\n\n  public addChild(object: AbstractObject3D): void {\n    // (this.constructor.name + ' addChild ' + object, this.object);\n    if (this.object) {\n      // console.log('AbstractObject3D.addChild', this.name);\n      this.childlren.push(object);\n      this.object.add(object.getObject());\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected afterInit() {\n    // Base abstract class\n  }\n\n  public removeChild(object: AbstractObject3D): void {\n    if (this.object && object) {\n      // console.log('AbstractObject3D.removeChild', this.name);\n\n      // Remove from children:\n      const index = this.childlren.indexOf(object, 0);\n      if (index > -1) {\n        this.childlren.splice(index, 1);\n      }\n\n      // Remove from THREE graph:\n      this.object.remove(object.getObject());\n    }\n  }\n\n  public getObject(): T {\n    return this.object;\n  }\n\n  protected abstract newObject3DInstance(): T;\n\n  public ngAfterViewInit(): void {\n    this.updateParent();\n  }\n\n  public findByName(name: string) {\n    // console.log('AbstractObject3D.findByName: Searching name', name);\n    const res = this.recursionByName(this, name);\n    // console.log('AbstractObject3D.findByName: result', res);\n    return res;\n  }\n\n  protected recursionByName(currentNode: AbstractObject3D, name:string) {\n    if (currentNode.object && currentNode.name === name) {\n      return currentNode;\n    }\n    let node;\n    currentNode.childlren.some(child => node = this.recursionByName(child, name));\n    return node;\n  }\n\n\n  public getChildren() {\n    return this.childlren;\n  }\n\n  public removeChildByName(name: string) {\n    this.childlren = this.childlren.filter(i => i.name !== name);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractOrbitControls.html":{"url":"directives/AbstractOrbitControls.html","title":"directive - AbstractOrbitControls","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractOrbitControls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/control/abstract-orbit-controls.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:22\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, ContentChild, ContentChildren, ElementRef, Input, OnChanges, OnDestroy, QueryList, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {RendererCanvasComponent} from '../renderer/renderer-canvas.component';\n\n\n@Directive()\nexport abstract class AbstractOrbitControls implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ContentChildren(AbstractCamera, {descendants: true}) childCameras!: QueryList>;\n  @ContentChild(RendererCanvasComponent, {static: false}) webGlRenderer!: RendererCanvasComponent;\n  /**\n   * The element on whose native element the orbit control will listen for mouse events.\n   *\n   * Note that keyboard events are still listened for on the global window object, this is\n   * a known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n   */\n  @Input()\n  public listeningControlElement!: ElementRef;\n\n  protected controls!: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    // console.log('OrbitControlsComponent.constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the THREE.js OrbitControls are not set up yet, we do not need to enableFog\n    // anything as they will pick the new values from the @Input properties automatically\n    // upon creation.\n    if (!this.controls) {\n      return;\n    }\n\n    if (changes['listeningControlElement']) {\n      // The DOM element the OrbitControls listen on cannot be changed once an\n      // OrbitControls object is created. We thus need to recreate it.\n      this.controls.dispose();\n      this.setUpControls();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.controls) {\n      this.controls.dispose();\n    }\n  }\n\n  protected abstract setUpControls() : void;\n\n\n  private configureListeners() {\n    this.controls.addEventListener('change', () => {\n      this.rendererService.render();\n    });\n\n    // don't raycast during rotation/damping/panning\n    if (this.raycasterService.isEnabled) {\n      this.controls.addEventListener('start', () => {\n        this.raycasterService.pause();\n      });\n      this.controls.addEventListener('end', () => {\n        this.raycasterService.resume();\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('OrbitControlsComponent.ngAfterViewInit');\n    if (this.childCameras === undefined || this.childCameras.first === undefined) {\n      throw new Error('Camera is not found');\n    }\n    if (!this.webGlRenderer) {\n      throw new Error('webGlRenderer is not found');\n    }\n    this.listeningControlElement = this.webGlRenderer.renderPane;\n    this.setUpControls();\n    this.configureListeners();\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractServerActor.html":{"url":"directives/AbstractServerActor.html","title":"directive - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractEmptyDirective\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeselected()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:8\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {AbstractEmptyDirective} from '../../../object';\n\n@Directive()\nexport abstract class AbstractServerActor extends AbstractEmptyDirective {\n\n  @Input()\n  label!: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Output()\n  actorClick = new EventEmitter();\n\n  @Input()\n  icon?: string;\n\n  color: string | number = '#ffffff';\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = '#fff0f0';\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = '#ffffff';\n  }\n\n  public onClick() {\n    console.log('ServerActorComponent.onClick');\n    this.color = '#ffa0a0';\n    this.actorClick.emit();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getComponentFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getComponentFactory(id: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ComponentFactory | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(id: string, component: Type)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                component\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        defaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId!: string;\n\n  constructor(\n    //TODO: https://stackoverflow.com/questions/70946038/replace-deprecated-angular-componentfactoryresolver-componentfactory\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string | undefined): ComponentFactory | undefined {\n    const requestId :string = id ? id : this.defaultId\n    // console.log('ActorRepositoryService.getComponentFactory requestId:', requestId);\n    const comp = this.list.get(requestId);\n    if (comp) {\n      const result = this.resolver.resolveComponentFactory(comp);\n      // console.log('ActorRepositoryService.getComponentFactory result', result);\n      return result;\n    } else {\n      // console.log('ActorRepositoryService.getComponentFactory undefined result');\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(this.color);\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationStep\n                        \n                    \n                \n            \n            \n                \n                        \n                    animationStep()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Start the animationService loop.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Stop all animations.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                        \n                    \n\n            \n                \n                    Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\nimport {StlLoaderComponent} from './stl-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:23\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.AxesHelper\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider: string;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init(): void;\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            composition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        darkenNonBloomed\n                        \n                    \n                \n            \n            \n                \n                        \n                    darkenNonBloomed(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                renderer\n                                            \n                                                        WebGLRenderer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                scene\n                                            \n                                                        THREE.Scene\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                camera\n                                            \n                                                        THREE.Camera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        restoreMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreMaterial(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bloomComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bloomLayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Layers()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        darkMaterial\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        finalComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        materials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer!: EffectComposer;\n  private bloomComposer!: EffectComposer;\n  public initialized = false;\n  protected scene!: THREE.Scene;\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      // const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj : any): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      // @ts-ignore\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj : any): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            border\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contentProjection\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:21\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contentProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('contentProjection')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection!: AbstractObject3D;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  override addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getLayout\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLayout(model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        modelToGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     dagre.graphlib.Graph\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateBaseInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                baseInfo\n                                            \n                                                            Array | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateEdges\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(this.getLayout(model))\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout g', g);\n    dagre.layout(g);\n    // console.log('DagreUtils.layout result (g.nodes())', g.nodes());\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array | undefined ) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n      this.updateBaseInfo(g, model.compositions);\n      this.updateBaseInfo(g, model.nodes);\n      this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): any {\n    const layout: dagre.GraphLabel | undefined = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FF0000'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animate\n                        \n                    \n                \n            \n            \n                \n                        \n                    animate()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tryToFindGeometry\n                        \n                    \n                \n            \n            \n                \n                        \n                    tryToFindGeometry()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        edges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Material\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor: string | number = '#FF0000';\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity! : number;\n  @Input() targetOpacity! : number;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material!: THREE.Material;\n  private stop = false;\n  protected animation!: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: this.dashColor}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n            this.material.depthWrite = true;\n            this.material.needsUpdate = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                        \n                    \n\n\n            \n                \n                        Converts degrees to radians\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                degrees\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:53\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        // @ts-ignore\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        // @ts-ignore\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        // @ts-ignore\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        aspect :  window.innerWidth / window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:23\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addPass\n                        \n                    \n                \n            \n            \n                \n                        \n                    addPass(pass: Pass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pass\n                                            \n                                                        Pass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getComposer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     EffectComposer\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    initComposer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removePass\n                        \n                    \n                \n            \n            \n                \n                        \n                    removePass(pass: Pass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pass\n                                            \n                                                        Pass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget!: SceneComponent;\n\n  protected composer?: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(undefined);\n    this.composer = undefined;\n    this.rendererService.render();\n  }\n\n  public initComposer() {\n    if (!this.composer && this.rendererService.getWebGlRenderer()) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer?.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:21\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#0000AA'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disableFog\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableFog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enableFog\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableFog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color: string | number = '#0000AA';\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene!: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(this.color, this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = null;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:8\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {Font, FontLoader} from 'three/examples/jsm/loaders/FontLoader.js';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compositions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            edges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.GridHelper\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size!: number;\n  @Input() divisions!: number;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.GridHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#444444'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor: string | number = '#ffffff';\n  @Input() groundColor: string | number = '#444444';\n  @Input() intensity = 1;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      this.skyColor,\n      this.groundColor,\n      this.intensity\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IconSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:58\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            IconSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IconSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowColorOverride\n                                        \n                                \n                                \n                                        \n                                            isCCW\n                                        \n                                \n                                \n                                        \n                                            noHoles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n\n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/map-controls.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:57\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:58\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:74\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\nimport {MapControls} from \"three/examples/jsm/controls/MapControls\";\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation!: Subscription;\n\n  constructor(\n    protected override rendererService: RendererService,\n    protected override raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  override ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseAssetSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            BaseAssetSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseAssetSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '3d'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            face\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected?: THREE.Object3D;\n  private enabled = false;\n  private camera!: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event: any) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if ((i && (!this.selected || this.selected !== i.object)) || !i) {\n      if (this.selected) {\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = undefined;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event : any) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x : number, y : number): NearestIntersection | undefined {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y/*, 0.5*/);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face!: THREE.Face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection!: THREE.Intersection;\n    let nearestGroup!: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        if (nearestIntersection.face) {\n          face = nearestIntersection.face;\n        }\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMaterials\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                materialCreator\n                                            \n                                                        MTLLoader.MaterialCreator\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OBJLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n\n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:58\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:74\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:49\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected override rendererService: RendererService,\n    protected override raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  override ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        updateZoom\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateZoom()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:59\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:69\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected override rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  override ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:59\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:69\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov!: number;\n  @Input() near!: number;\n  @Input() far!: number;\n\n  constructor(\n    protected override rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                        \n                    \n\n\n            \n                \n                        Converts radians to degrees\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                radians\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Radians\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            face\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event : any) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event : any) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseExit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unSubscribeEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    unSubscribeEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event : any) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event : any) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                    Optional\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFirstIntersectedGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFirstIntersectedGroup(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         NearestIntersection | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ignorePaused\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseMove(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onTouchStart\n                        \n                    \n                \n            \n            \n                \n                        \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        TouchEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                camera\n                                            \n                                                            AbstractCamera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        raycaster\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Raycaster()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected?: THREE.Object3D;\n  private enabled = false;\n  private camera!: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event: any) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if ((i && (!this.selected || this.selected !== i.object)) || !i) {\n      if (this.selected) {\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = undefined;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event : any) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x : number, y : number): NearestIntersection | undefined {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y/*, 0.5*/);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face!: THREE.Face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection!: THREE.Intersection;\n    let nearestGroup!: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        if (nearestIntersection.face) {\n          face = nearestIntersection.face;\n        }\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n\n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                    Public\n                                onResize\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        resetCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\nExample :area which is listened for mouse move and zoom events) to the rendering pane\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef!: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                    Optional\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateAspectRatio\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCamera()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AbstractCamera\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScene()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SceneComponent\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getWebGlRenderer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWebGlRenderer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.WebGLRenderer\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preserveDrawingBuffer\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resize\n                        \n                    \n                \n            \n            \n                \n                        \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                camera\n                                            \n                                                            AbstractCamera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    setComposer(composer: EffectComposerComponent | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                composer\n                                            \n                                                            EffectComposerComponent | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setScene\n                        \n                    \n                \n            \n            \n                \n                        \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n                                            \n                                                            SceneComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateChildCamerasAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        aspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EffectComposerComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n\n@Injectable()\nexport class RendererService {\n\n  private init = false;\n  private scene!: SceneComponent;\n  private camera!: AbstractCamera;\n  private webGlRenderer!: THREE.WebGLRenderer;\n  private aspect!: number;\n\n  private composer?: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer : boolean) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.useLegacyLights = true; //TODO: fix\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private updateAspectRatio(canvas: HTMLCanvasElement): void  {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.updateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent | undefined) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGLoader.html":{"url":"classes/SVGLoader.html","title":"class - SVGLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/threejs-fork/SVGLoader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Loader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDPI\n                            \n                            \n                                defaultUnit\n                            \n                            \n                                defs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createShapes\n                            \n                            \n                                    Static\n                                getStrokeStyle\n                            \n                            \n                                load\n                            \n                            \n                                parse\n                            \n                            \n                                    Static\n                                pointsToStroke\n                            \n                            \n                                    Static\n                                pointsToStrokeWithBuffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager?)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'px'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createShapes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createShapes(shapePath)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:1678\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shapePath\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getStrokeStyle\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStrokeStyle(width, color, lineJoin, lineCap, miterLimit)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lineJoin\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lineCap\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                miterLimit\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { strokeColor: any; strokeWidth: any; strokeLineJoin: any; strokeLineCap: any; strokeMiterLimit: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(url, onLoad, onProgress, onError)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onLoad\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onProgress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onError\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(text)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { paths: {}; xml: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pointsToStroke\n                        \n                    \n                \n            \n            \n                \n                        \n                    pointsToStroke(points, style, arcDivisions, minDistance)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                points\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                style\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arcDivisions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minDistance\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pointsToStrokeWithBuffers\n                        \n                    \n                \n            \n            \n                \n                        \n                    pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset?)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                points\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                style\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arcDivisions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minDistance\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vertices\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                normals\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uvs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vertexOffset\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Box2,\n  BufferGeometry,\n  FileLoader,\n  Float32BufferAttribute,\n  Loader,\n  Matrix3,\n  Path,\n  Shape,\n  ShapePath,\n  ShapeUtils,\n  Vector2,\n  Vector3\n} from 'three';\n\n/* eslint-disable */\nclass SVGLoader extends Loader {\n\n  defaultDPI = 90; // MA:\n  defaultUnit = 'px'; // MA:\n  defs = []; // MA:\n\n  constructor( manager? ) {\n\n    super( manager );\n\n    // Default dots per inch\n    this.defaultDPI = 90;\n\n    // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n    this.defaultUnit = 'px';\n\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    const scope = this;\n\n    const loader = new FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.setRequestHeader( scope.requestHeader );\n    loader.setWithCredentials( scope.withCredentials );\n    loader.load( url, function ( text ) {\n\n      try {\n\n        onLoad( scope.parse( text ) );\n\n      } catch ( e ) {\n\n        if ( onError ) {\n\n          onError( e );\n\n        } else {\n\n          console.error( e );\n\n        }\n\n        scope.manager.itemError( url );\n\n      }\n\n    }, onProgress, onError );\n\n  }\n\n  parse( text ) {\n\n    const scope = this;\n\n    function parseNode( node, style ) {\n\n      if ( node.nodeType !== 1 ) return;\n\n      const transform = getNodeTransform( node );\n\n      let traverseChildNodes = true;\n\n      let path = null;\n\n      switch ( node.nodeName ) {\n\n        case 'svg':\n          break;\n\n        case 'style':\n          parseCSSStylesheet( node );\n          break;\n\n        case 'g':\n          style = parseStyle( node, style );\n          break;\n\n        case 'path':\n          style = parseStyle( node, style );\n          if ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n          break;\n\n        case 'rect':\n          style = parseStyle( node, style );\n          path = parseRectNode( node );\n          break;\n\n        case 'polygon':\n          style = parseStyle( node, style );\n          path = parsePolygonNode( node );\n          break;\n\n        case 'polyline':\n          style = parseStyle( node, style );\n          path = parsePolylineNode( node );\n          break;\n\n        case 'circle':\n          style = parseStyle( node, style );\n          path = parseCircleNode( node );\n          break;\n\n        case 'ellipse':\n          style = parseStyle( node, style );\n          path = parseEllipseNode( node );\n          break;\n\n        case 'line':\n          style = parseStyle( node, style );\n          path = parseLineNode( node );\n          break;\n\n        case 'defs':\n          traverseChildNodes = false;\n          parseDefs(node);\n          break;\n\n        case 'use':\n          style = parseStyle( node, style );\n          const usedNodeId = node.href.baseVal.substring( 1 );\n          const usedNode = node.viewportElement.getElementById( usedNodeId );\n          if ( usedNode ) {\n\n            parseNode( usedNode, style );\n\n          } else {\n\n            console.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n          }\n\n          break;\n\n        default:\n        // console.log( node );\n\n      }\n\n      if ( path ) {\n\n        if ( style.fill !== undefined && style.fill !== 'none' ) {\n\n          path.color.setStyle( style.fill );\n\n        }\n\n        transformPath( path, currentTransform );\n\n        paths.push( path );\n\n        path.userData = { node: node, style: style };\n\n      }\n\n      if ( traverseChildNodes ) {\n\n        const nodes = node.childNodes;\n\n        for ( let i = 0; i  0 ) {\n\n          currentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n        } else {\n\n          currentTransform.identity();\n\n        }\n\n      }\n\n    }\n\n    function parsePathNode( node ) {\n\n      const path = new ShapePath();\n\n      const point = new Vector2();\n      const control = new Vector2();\n\n      const firstPoint = new Vector2();\n      let isFirstPoint = true;\n      let doSetFirstPoint = false;\n\n      const d = node.getAttribute( 'd' );\n\n      // console.log( d );\n\n      const commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n      for ( let i = 0, l = commands.length; i  0 ) {\n\n              // Reset point to beginning of Path\n              point.copy( firstPoint );\n              path.currentPath.currentPoint.copy( point );\n              isFirstPoint = true;\n\n            }\n\n            break;\n\n          default:\n            console.warn( command );\n\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false;\n\n      }\n\n      return path;\n\n    }\n\n    function parseCSSStylesheet( node ) {\n\n      if ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n      for ( let i = 0; i  i.trim() );\n\n        for ( let j = 0; j  1 ) {\n\n        // scale up rx,ry equally so cr == 1\n        const s = Math.sqrt( cr );\n        rx = s * rx;\n        ry = s * ry;\n        rxs = rx * rx;\n        rys = ry * ry;\n\n      }\n\n      const dq = ( rxs * y1ps + rys * x1ps );\n      const pq = ( rxs * rys - dq ) / dq;\n      let q = Math.sqrt( Math.max( 0, pq ) );\n      if ( large_arc_flag === sweep_flag ) q = - q;\n      const cxp = q * rx * y1p / ry;\n      const cyp = - q * ry * x1p / rx;\n\n      // Step 3: Compute (cx, cy) from (cx', cy')\n      const cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n      const cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n      // Step 4: Compute θ1 and Δθ\n      const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n      const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n      path.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n    }\n\n    function svgAngle( ux, uy, vx, vy ) {\n\n      const dot = ux * vx + uy * vy;\n      const len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n      let ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n      if ( ( ux * vy - uy * vx )  i.trim() );\n\n        for ( let i = 0; i  0 ) {\n\n        transform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n      }\n\n      currentTransform.copy( transform );\n      transformStack.push( transform );\n\n      return transform;\n\n    }\n\n    function parseNodeTransform( node ) {\n\n      const transform = new Matrix3();\n      const currentTransform = tempTransform0;\n\n      if ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n        const tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n        const ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n        transform.translate( tx, ty );\n\n      }\n\n      if ( node.hasAttribute( 'transform' ) ) {\n\n        const transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n        for ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n          const transformText = transformsTexts[ tIndex ].trim();\n\n          if ( transformText === '' ) continue;\n\n          const openParPos = transformText.indexOf( '(' );\n          const closeParPos = transformText.length;\n\n          if ( openParPos > 0 && openParPos = 1 ) {\n\n                  const tx = array[ 0 ];\n                  let ty = tx;\n\n                  if ( array.length >= 2 ) {\n\n                    ty = array[ 1 ];\n\n                  }\n\n                  currentTransform.translate( tx, ty );\n\n                }\n\n                break;\n\n              case 'rotate':\n\n                if ( array.length >= 1 ) {\n\n                  let angle = 0;\n                  let cx = 0;\n                  let cy = 0;\n\n                  // Angle\n                  angle = - array[ 0 ] * Math.PI / 180;\n\n                  if ( array.length >= 3 ) {\n\n                    // Center x, y\n                    cx = array[ 1 ];\n                    cy = array[ 2 ];\n\n                  }\n\n                  // Rotate around center (cx, cy)\n                  tempTransform1.identity().translate( - cx, - cy );\n                  tempTransform2.identity().rotate( angle );\n                  tempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n                  tempTransform1.identity().translate( cx, cy );\n                  currentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n                }\n\n                break;\n\n              case 'scale':\n\n                if ( array.length >= 1 ) {\n\n                  const scaleX = array[ 0 ];\n                  let scaleY = scaleX;\n\n                  if ( array.length >= 2 ) {\n\n                    scaleY = array[ 1 ];\n\n                  }\n\n                  currentTransform.scale( scaleX, scaleY );\n\n                }\n\n                break;\n\n              case 'skewX':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n                    0, 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'skewY':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, 0, 0,\n                    Math.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'matrix':\n\n                if ( array.length === 6 ) {\n\n                  currentTransform.set(\n                    array[ 0 ], array[ 2 ], array[ 4 ],\n                    array[ 1 ], array[ 3 ], array[ 5 ],\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n            }\n\n          }\n\n          transform.premultiply( currentTransform );\n\n        }\n\n      }\n\n      return transform;\n\n    }\n\n    function transformPath( path, m ) {\n\n      function transfVec2( v2 ) {\n\n        tempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n        v2.set( tempV3.x, tempV3.y );\n\n      }\n\n      const isRotated = isTransformRotated( m );\n\n      const subPaths = path.subPaths;\n\n      for ( let i = 0, n = subPaths.length; i = 1 ) || ( t2  1 ) ) {\n\n        //1. lines are parallel or edges don't intersect\n\n        return null;\n\n      } else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n        //2. lines are colinear\n\n        //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n        for ( let i = 0; i  Number.EPSILON ) {\n\n        classifyResult.loc = IntersectionLocationType.RIGHT;\n        return;\n\n\n      }\n\n      if ( ( ( ax * bx )  i.t = intersection.t - Number.EPSILON ) === undefined ) {\n\n            intersectionsRaw.push( intersection );\n            intersections.push( new Vector2( intersection.x, intersection.y ) );\n\n          }\n\n        }\n\n      }\n\n      return intersections;\n\n    }\n\n    function getScanlineIntersections( scanline, boundingBox, paths ) {\n\n      const center = new Vector2();\n      boundingBox.getCenter( center );\n\n      const allIntersections = [];\n\n      paths.forEach( path => {\n\n        // check if the center of the bounding box is in the bounding box of the paths.\n        // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n        // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n        if ( path.boundingBox.containsPoint( center ) ) {\n\n          const intersections = getIntersections( scanline, path.points );\n\n          intersections.forEach( p => {\n\n            allIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n          } );\n\n        }\n\n      } );\n\n      allIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      return allIntersections;\n\n    }\n\n    function isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n      if ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n        _fillRule = 'nonzero';\n\n      }\n\n      const centerBoundingBox = new Vector2();\n      simplePath.boundingBox.getCenter( centerBoundingBox );\n\n      const scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n      const scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n      scanlineIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      const baseIntersections = [];\n      const otherIntersections = [];\n\n      scanlineIntersections.forEach( i => {\n\n        if ( i.identifier === simplePath.identifier ) {\n\n          baseIntersections.push( i );\n\n        } else {\n\n          otherIntersections.push( i );\n\n        }\n\n      } );\n\n      const firstXOfPath = baseIntersections[ 0 ].point.x;\n\n      // build up the path hierarchy\n      const stack = [];\n      let i = 0;\n\n      while ( i  0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n          stack.pop();\n\n        } else {\n\n          stack.push( otherIntersections[ i ].identifier );\n\n        }\n\n        i ++;\n\n      }\n\n      stack.push( simplePath.identifier );\n\n      if ( _fillRule === 'evenodd' ) {\n\n        const isHole = stack.length % 2 === 0 ? true : false;\n        const isHoleFor = stack[ stack.length - 2 ];\n\n        return { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n      } else if ( _fillRule === 'nonzero' ) {\n\n        // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n        let isHole = true;\n        let isHoleFor = null;\n        let lastCWValue = null;\n\n        for ( let i = 0; i  {\n\n      const points = p.getPoints();\n      let maxY = - BIGNUMBER;\n      let minY = BIGNUMBER;\n      let maxX = - BIGNUMBER;\n      let minX = BIGNUMBER;\n\n      //points.forEach(p => p.y *= -1);\n\n      for ( let i = 0; i  maxY ) {\n\n          maxY = p.y;\n\n        }\n\n        if ( p.y  maxX ) {\n\n          maxX = p.x;\n\n        }\n\n        if ( p.x = minX ) {\n\n        scanlineMinX = minX - 1;\n\n      }\n\n      return { points: points, isCW: ShapeUtils.isClockWise( points ), identifier: identifier ++, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n    } );\n\n    simplePaths = simplePaths.filter( sp => sp.points.length > 0 );\n\n    // check if path is solid or a hole\n    const isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule ) );\n\n\n    const shapesToReturn = [];\n    simplePaths.forEach( p => {\n\n      const amIAHole = isAHole[ p.identifier ];\n\n      if ( ! amIAHole.isHole ) {\n\n        const shape = new Shape( p.points );\n        const holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n        holes.forEach( h => {\n\n          const path = simplePaths[ h.identifier ];\n          shape.holes.push( new Path( path.points ) );\n\n        } );\n        shapesToReturn.push( shape );\n\n      }\n\n    } );\n\n    return shapesToReturn;\n\n  }\n\n  static getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n    // Param width: Stroke width\n    // Param color: As returned by THREE.Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n      strokeColor: color,\n      strokeWidth: width,\n      strokeLineJoin: lineJoin,\n      strokeLineCap: lineCap,\n      strokeMiterLimit: miterLimit\n    };\n\n  }\n\n  static pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    if ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n      return null;\n\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n    return geometry;\n\n  }\n\n  static pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset? ) {\n\n    // This function can be called to update existing arrays or buffers.\n    // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n    // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n    // Returns number of written vertices / normals / uvs pairs\n    // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n    // 'normals' and 'uvs' buffers are optional\n\n    const tempV2_1 = new Vector2();\n    const tempV2_2 = new Vector2();\n    const tempV2_3 = new Vector2();\n    const tempV2_4 = new Vector2();\n    const tempV2_5 = new Vector2();\n    const tempV2_6 = new Vector2();\n    const tempV2_7 = new Vector2();\n    const lastPointL = new Vector2();\n    const lastPointR = new Vector2();\n    const point0L = new Vector2();\n    const point0R = new Vector2();\n    const currentPointL = new Vector2();\n    const currentPointR = new Vector2();\n    const nextPointL = new Vector2();\n    const nextPointR = new Vector2();\n    const innerPoint = new Vector2();\n    const outerPoint = new Vector2();\n\n    arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n    minDistance = minDistance !== undefined ? minDistance : 0.001;\n    vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n    // First ensure there are no duplicated points\n    points = removeDuplicatedPoints( points );\n\n    const numPoints = points.length;\n\n    if ( numPoints = minDistance ) {\n\n          newPoints.push( points[ i ] );\n\n        }\n\n      }\n\n      newPoints.push( points[ points.length - 1 ] );\n\n      return newPoints;\n\n    }\n\n  }\n\n\n}\n\nexport { SVGLoader };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    \n                                updateParent\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Scene\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:31\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background: number | string = '#ffffff';\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(this.background);\n    return scene;\n  }\n\n  public override updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public override ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(this.background);\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggle()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        stats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stats\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats?: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = new Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      // @ts-ignore\n      this.stats.dom = undefined;\n      this.stats = undefined;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:10\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      // @ts-ignore\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\ncluster_UxActorModule_imports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                3 %\n                (2/53)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                2 %\n                (2/74)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                3 %\n                (2/51)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_ALIGN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_EDGESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_MARGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_NODESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKDIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKSEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_SEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                4 %\n                (2/41)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            directive\n            AbstractServerActor\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/abstract-camera.ts\n            \n            directive\n            AbstractCamera\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/abstract-orbit-controls.ts\n            \n            directive\n            AbstractOrbitControls\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            directive\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-empty-directive.ts\n            \n            directive\n            AbstractEmptyDirective\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n            \n            directive\n            AbstractLazyObject3D\n            \n                13 %\n                (5/36)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-object-3d.ts\n            \n            directive\n            AbstractObject3D\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/abstract-connector.ts\n            \n            directive\n            AbstractConnector\n            \n                10 %\n                (4/39)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                3 %\n                (2/56)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/abstract-model-loader.ts\n            \n            directive\n            AbstractModelLoader\n            \n                18 %\n                (7/38)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                18 %\n                (8/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                12 %\n                (5/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/stl-loader.component.ts\n            \n            component\n            StlLoaderComponent\n            \n                11 %\n                (5/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                10 %\n                (5/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n            \n            directive\n            AbstractMesh\n            \n                5 %\n                (2/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                17 %\n                (8/47)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                13 %\n                (6/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                8 %\n                (4/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                7 %\n                (4/55)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                7 %\n                (4/57)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            class\n            SVGLoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @compodoc/compodoc : ^1.1.22\n        \n            dagre : ^0.8.5\n        \n            rxjs : ~7.8.0\n        \n            three : ^0.158.0\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            yaml : ^2.3.4\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appliedMaterial\n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?: string, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                        Creates material\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                materialColor\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    color\n\n                                            \n                                        \n                                        \n                                                materialName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    material label as string\n\n                                            \n                                        \n                                        \n                                                depthWrite\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    enable depth write\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     THREE.Material\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateSize\n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     THREE.Vector3\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fixCenter\n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideParent\n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentType\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeFromArray\n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array: Array, element: T)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                element\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scaleToFit\n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\nExample :\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:\nExample :npm i three dagre atft --save\nnpm i @types/dagre @types/three --save-dev\nImport library into your module:\nExample :import { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\nExample :\n  \n    \n    \n    \n      \n      \n    \n  \n\n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\nExample : html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\nExample : :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nRelease and Changelog\n\nFollow Conventional Commits.\nSee standard-version guidelines for release and changelog update.\n\nTo automatically generate changelog and bump atft version:\nExample :npm run releaseContributors\n\n ComFreek\n makimenko\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_ALIGN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_EDGESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_MARGIN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_NODESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKDIR   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKER   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKSEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_SEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ALIGN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_EDGESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MARGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_NODESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKDIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKSEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTIRE_SCENE_LAYER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragmentShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vertexShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REPLACE_SYMBOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '?'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
