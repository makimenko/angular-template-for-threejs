var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.401,1,2.75]],["body/injectables/AbstractAssetService.html",[0,2.069,1,4.061,2,2.409,3,0.098,4,0.161,5,0.087,6,6.14,7,3.649,8,0.286,9,0.717,10,1.476,11,5.067,12,1.142,13,1.463,14,0.595,15,1.158,16,5.198,17,5.198,18,5.198,19,5.198,20,4.419,21,5.198,22,5.198,23,1.144,24,0.775,25,6.463,26,4.524,27,1.371,28,4.89,29,0.968,30,0.01,31,0.709,32,0.513,33,0.808,34,1.328,35,0.723,36,3.006,37,4.524,38,5.962,39,4.89,40,4.524,41,4.823,42,4.89,43,4.823,44,4.89,45,4.823,46,4.89,47,4.823,48,4.89,49,4.339,50,0.675,51,4.823,52,4.89,53,1.28,54,0.609,55,0.575,56,0.97,57,4.89,58,0.098,59,0.177,60,1.782,61,3.649,62,3.649,63,0.13,64,1.783,65,3.072,66,4.274,67,0.109,68,3.933,69,4.313,70,4.313,71,4.313,72,1.383,73,4.313,74,4.313,75,1.172,76,4.313,77,4.313,78,4.313,79,5.7,80,5.7,81,4.313,82,4.313,83,3.234,84,4.313,85,3.649,86,4.313,87,0.005,88,0.007,89,0.005]],["title/classes/AbstractCacheService.html",[67,0.098,90,2.895]],["body/classes/AbstractCacheService.html",[3,0.124,4,0.124,5,0.111,6,5.876,8,0.362,9,0.833,10,1.395,12,1.213,14,0.691,15,1.033,24,0.72,27,1.312,29,0.882,30,0.009,31,0.646,32,0.458,33,0.737,35,0.646,49,5.032,53,1.247,54,0.77,55,0.728,56,1.126,60,1.669,63,0.124,67,0.138,75,1.098,87,0.006,88,0.008,89,0.006,90,4.962,91,4.617,92,5.457,93,6.026,94,5.599,95,4.446,96,4.962,97,6.187,98,5.599,99,6.187,100,5.275,101,5.599,102,6.187,103,8.074,104,6.187,105,4.617,106,6.187,107,6.187,108,8.074,109,6.187,110,6.187]],["title/directives/AbstractCamera.html",[111,0.39,112,0.765]],["body/directives/AbstractCamera.html",[3,0.099,4,0.099,5,0.088,8,0.289,9,0.723,10,1.398,12,1.21,14,0.6,15,1.056,23,1.029,24,0.793,29,0.856,30,0.01,31,0.627,32,0.528,33,0.715,35,0.711,36,2.194,50,0.892,54,0.615,55,0.582,58,0.146,59,0.179,63,0.099,67,0.11,72,2.187,87,0.005,88,0.007,89,0.005,111,0.649,112,1.137,113,0.705,114,7.882,115,4.362,116,1.797,117,5.095,118,3.354,119,4.008,120,6.222,121,6.222,122,6.222,123,1.841,124,3.452,125,5.237,126,1.166,127,1.471,128,6.222,129,6.222,130,5.855,131,5.855,132,1.1,133,1.629,134,6.511,135,1.497,136,4.945,137,4.945,138,4.945,139,1.239,140,2.109,141,4.945,142,4.945,143,4.945,144,4.945,145,1.841,146,2.187,147,4.945,148,1.841,149,4.945,150,5.237,151,4.945,152,3.691,153,4.945,154,1.75,155,1.381,156,1.27,157,4.945,158,4.945,159,4.945,160,4.362,161,4.945,162,4.945,163,4.945,164,6.511,165,2.436,166,4.945,167,5.855,168,4.945,169,2.524,170,1.024,171,2.207,172,4.306,173,4.945,174,4.945,175,4.945,176,4.945,177,4.945,178,2.436,179,3.691,180,3.691,181,4.945,182,1.3,183,3.977,184,4.362,185,4.945,186,4.945,187,4.362,188,4.945,189,1.469]],["title/directives/AbstractComposeEffect.html",[111,0.39,190,0.864]],["body/directives/AbstractComposeEffect.html",[3,0.105,4,0.105,5,0.094,8,0.307,9,0.751,10,1.418,12,1.231,14,0.623,15,1.073,23,1.07,24,0.778,29,0.881,30,0.009,31,0.645,32,0.483,33,0.805,35,0.735,36,2.28,50,0.877,54,0.653,55,0.617,58,0.159,59,0.189,63,0.105,67,0.117,75,0.768,87,0.005,88,0.007,89,0.005,111,0.603,113,0.748,116,1.868,118,3.451,123,1.914,132,1.167,133,1.655,139,1.696,145,1.914,146,2.413,148,1.914,156,1.347,171,3.343,190,1.336,191,7.77,192,6.166,193,4.628,194,3.451,195,3.054,196,5.54,197,5.051,198,4.039,199,4.744,200,5.906,201,2.533,202,2.238,203,4.955,204,1.452,205,6.768,206,5.051,207,5.247,208,5.247,209,5.247,210,5.247,211,5.247,212,5.247,213,5.247,214,1.823,215,1.061,216,3.673,217,4.628,218,5.247,219,3.146,220,5.444,221,5.247,222,4.628,223,5.247,224,6.768,225,4.628,226,5.247,227,5.247,228,5.247,229,4.221,230,5.247,231,5.247]],["title/directives/AbstractConnector.html",[111,0.39,232,0.864]],["body/directives/AbstractConnector.html",[3,0.107,4,0.169,5,0.095,8,0.311,9,0.757,10,1.441,12,1.215,14,0.629,15,0.965,24,0.78,30,0.009,32,0.486,35,0.709,36,2.299,50,0.831,58,0.16,59,0.192,60,1.183,63,0.107,67,0.119,75,0.778,87,0.005,88,0.007,89,0.005,111,0.608,113,0.758,116,1.884,126,1.222,154,1.599,155,1.448,165,3.362,182,1.398,195,3.073,202,2.249,232,1.347,233,7.787,234,4.69,235,6.649,236,6.649,237,7.015,238,2.483,239,7.015,240,2.353,241,7.015,242,6.616,243,1.33,244,5.317,245,5.317,246,5.317,247,5.094,248,1.552,249,3.25,250,5.317,251,2.953,252,5.317,253,5.317,254,2.953,255,5.49,256,1.074,257,4.059,258,6.825,259,5.094,260,6.825,261,6.02,262,6.825,263,5.49,264,5.317,265,5.168,266,5.317,267,5.317,268,3.187,269,0.778,270,5.317,271,5.317,272,4.69,273,5.317,274,5.317,275,5.317,276,6.825,277,5.317,278,5.317,279,3.722,280,5.317,281,5.317]],["title/directives/AbstractEmptyDirective.html",[111,0.39,282,0.843]],["body/directives/AbstractEmptyDirective.html",[3,0.135,4,0.135,5,0.12,8,0.391,10,1.307,12,1.159,14,0.724,24,0.597,30,0.009,35,0.577,56,1.005,58,0.168,59,0.242,63,0.135,67,0.149,75,0.98,87,0.007,88,0.008,89,0.007,111,0.701,113,0.954,155,1.668,182,1.761,238,2.69,243,1.243,251,3.613,256,0.954,269,0.98,282,1.515,283,5.869,284,4.942,285,5.906,286,6.696]],["title/directives/AbstractLazyObject3D.html",[111,0.39,287,0.843]],["body/directives/AbstractLazyObject3D.html",[3,0.098,4,0.098,5,0.087,8,0.286,9,0.855,10,1.395,12,1.244,14,0.709,20,3.708,24,0.748,30,0.01,32,0.299,35,0.69,50,0.805,54,0.609,55,0.575,56,0.734,58,0.145,59,0.177,63,0.098,67,0.172,75,0.715,87,0.005,88,0.007,89,0.005,95,3.559,100,4.061,111,0.576,113,0.697,116,1.784,140,1.873,155,1.371,170,1.012,171,2.884,182,1.286,195,2.952,198,2.496,202,2.178,219,4.339,238,2.404,240,2.26,243,1.326,248,0.875,251,3.465,256,1.258,269,0.715,283,6.357,284,3.072,287,1.245,288,6.659,289,3.649,290,6.385,291,6.385,292,3.931,293,5.094,294,6.793,295,3.933,296,4.313,297,6.617,298,4.274,299,4.89,300,4.89,301,4.89,302,2.978,303,3.933,304,5.7,305,5.402,306,5.7,307,4.313,308,5.7,309,5.7,310,5.198,311,5.7,312,5.748,313,5.7,314,0.942,315,5.7,316,5.7,317,5.7,318,4.061,319,5.7,320,2.931,321,3.072,322,4.313,323,4.89,324,4.89,325,7.701,326,4.89,327,4.89,328,4.89,329,6.463,330,3.933,331,4.89,332,2.806,333,4.313,334,0.813,335,4.89,336,4.89,337,4.313,338,4.89,339,4.89,340,3.234,341,3.234,342,4.89,343,7.239,344,6.463,345,4.313,346,2.496,347,0.919,348,4.89,349,4.89,350,3.234,351,4.89,352,4.89,353,4.89]],["title/directives/AbstractMesh.html",[111,0.39,354,0.864]],["body/directives/AbstractMesh.html",[3,0.106,4,0.106,5,0.094,8,0.308,10,1.127,12,1.165,14,0.625,15,1.074,24,0.779,27,1.19,29,0.798,30,0.01,31,0.584,32,0.522,33,0.666,35,0.683,50,0.784,54,0.986,55,0.932,58,0.159,59,0.19,63,0.106,67,0.117,75,0.992,87,0.005,88,0.007,89,0.005,111,0.604,113,0.75,116,1.872,118,3.457,123,1.918,126,1.214,135,1.156,139,1.881,140,1.526,145,1.918,146,2.241,148,1.918,154,1.78,155,1.438,167,6.035,169,2.687,170,1.768,171,2.35,182,1.384,243,1.072,249,4.225,256,0.75,269,0.77,289,3.929,295,4.235,303,4.235,307,4.644,354,1.338,355,7.774,356,4.546,357,3.891,358,4.363,359,3.829,360,3.696,361,3.651,362,3.904,363,4.131,364,5.265,365,5.265,366,5.265,367,3.891,368,5.265,369,5.265,370,3.891,371,3.974,372,5.265,373,3.592,374,3.482,375,1.32,376,4.235,377,3.482,378,3.929,379,4.644,380,3.929,381,4.644,382,4.644,383,3.156,384,4.235,385,5.265,386,5.265,387,5.265,388,3.021]],["title/directives/AbstractModelLoader.html",[111,0.39,314,0.843]],["body/directives/AbstractModelLoader.html",[3,0.11,4,0.177,5,0.098,8,0.32,9,0.771,10,1.155,12,1.06,15,0.889,24,0.716,27,1.273,29,0.643,30,0.009,31,0.471,32,0.467,33,0.537,35,0.471,50,0.572,56,1.273,58,0.14,59,0.197,63,0.11,67,0.17,75,0.8,87,0.006,88,0.007,89,0.006,111,0.619,113,0.779,126,1.244,154,1.474,182,1.438,219,4.165,254,3.305,256,0.779,269,0.8,287,1.339,288,4.081,298,5.052,314,1.339,318,4.799,334,1.534,341,5.052,346,3.898,389,7.317,390,4.823,391,3.436,392,5.589,393,1.244,394,5.346,395,3.987,396,6.949,397,5.227,398,5.807,399,5.807,400,5.346,401,5.052,402,5.346,403,5.346,404,5.052,405,5.346,406,5.346,407,5.346,408,4.799,409,5.468,410,4.823,411,5.468,412,6.129,413,5.468,414,7.638,415,4.823,416,1.028,417,3.138,418,5.468,419,5.468,420,6.949,421,2.896,422,5.468]],["title/directives/AbstractObject3D.html",[111,0.39,243,0.692]],["body/directives/AbstractObject3D.html",[3,0.062,4,0.062,5,0.055,8,0.327,9,0.514,10,1.114,12,1.176,14,0.427,15,1.161,23,0.733,24,0.796,27,1.132,29,0.861,30,0.01,31,0.746,32,0.529,33,0.758,35,0.73,36,2.375,50,0.901,54,0.877,55,0.829,56,0.46,58,0.125,59,0.111,60,1.031,63,0.062,67,0.103,72,2.291,75,1.031,87,0.005,88,0.005,89,0.003,111,0.413,113,0.436,116,1.279,117,3.915,118,2.577,123,1.311,124,2.783,126,0.83,127,1.131,132,0.681,133,1.391,135,1.434,140,0.888,145,1.311,146,1.764,148,1.764,154,1.718,155,1.186,156,0.786,160,2.701,169,2.855,170,1.158,171,2.783,178,2.284,189,2.239,194,2.577,195,2.28,198,1.563,201,1.996,202,1.764,214,1.249,222,4.089,238,1.947,243,1.308,248,0.548,254,2.006,256,1.29,257,2.855,283,6.683,284,1.925,289,2.286,292,3.183,295,2.464,296,2.701,303,2.464,320,1.836,321,1.925,332,4.044,340,3.066,421,3.877,423,3.08,424,3.08,425,3.434,426,3.434,427,3.434,428,2.553,429,3.434,430,3.434,431,2.553,432,2.553,433,2.553,434,3.434,435,3.434,436,3.434,437,3.08,438,3.303,439,3.303,440,3.08,441,3.434,442,3.434,443,2.962,444,1.69,445,1.703,446,4.635,447,3.063,448,3.08,449,3.063,450,2.553,451,2.553,452,2.553,453,2.366,454,2.553,455,2.006,456,2.006,457,3.063,458,3.063,459,3.063,460,3.063,461,3.063,462,2.455,463,1.603,464,2.553,465,2.553,466,2.455,467,2.553,468,2.455,469,2.207,470,3.063,471,1.934,472,3.063,473,2.553,474,3.063,475,3.063,476,3.063,477,3.063,478,3.063,479,2.553,480,3.063,481,3.063,482,3.063,483,3.063,484,3.063,485,3.063,486,3.063,487,3.063,488,2.553,489,3.063,490,2.553,491,2.553,492,3.063,493,2.553,494,3.063,495,3.063,496,1.786,497,3.063,498,2.66,499,3.063,500,2.701,501,2.464,502,0.59,503,2.701,504,3.063,505,2.701,506,4.21,507,3.063,508,4.635,509,3.063,510,3.46,511,3.063,512,4.635,513,2.144,514,3.063,515,3.063,516,3.063,517,3.063,518,3.063,519,3.063,520,3.063,521,3.063,522,2.701,523,3.063,524,3.063,525,3.063,526,3.063,527,3.063,528,3.063,529,3.063,530,2.286,531,2.286,532,3.063,533,3.063,534,3.063,535,3.063,536,3.063,537,3.063,538,3.063,539,3.063,540,3.063,541,2.026,542,2.026,543,2.144,544,3.063,545,3.063,546,2.464,547,3.063,548,3.063,549,2.286,550,3.063,551,3.063,552,4.635,553,3.063,554,5.593,555,3.063,556,3.063,557,3.063,558,2.755,559,3.063,560,3.063,561,4.635,562,3.063,563,2.464]],["title/directives/AbstractOrbitControls.html",[111,0.39,564,0.864]],["body/directives/AbstractOrbitControls.html",[3,0.092,4,0.092,5,0.082,8,0.268,9,0.777,10,1.247,12,1.165,14,0.57,15,0.586,23,0.977,24,0.766,29,0.727,30,0.01,31,0.533,32,0.493,33,0.607,35,0.675,36,2.083,50,0.819,56,1.051,58,0.166,59,0.165,63,0.092,67,0.102,75,0.67,83,4.09,87,0.005,88,0.006,89,0.005,111,0.551,112,0.8,113,0.652,116,1.707,118,3.227,119,2.521,123,1.749,126,1.107,132,1.018,133,1.593,140,1.792,145,1.749,146,2.121,148,1.294,154,1.485,155,1.312,156,1.175,170,1.28,171,2.76,180,3.416,183,3.682,194,3.227,195,2.855,201,2.401,202,2.121,240,2.186,256,0.998,257,2.336,302,2.849,404,3.028,417,2.626,468,2.425,564,1.22,565,7.652,566,1.736,567,4.037,568,5.633,569,5.633,570,4.902,571,6.033,572,6.033,573,5.633,574,4.066,575,6.184,576,5.227,577,4.577,578,1.584,579,4.974,580,4.974,581,4.329,582,5.633,583,4.615,584,4.496,585,3.886,586,4.974,587,4.615,588,4.615,589,4.974,590,4.974,591,4.974,592,4.974,593,4.902,594,4.974,595,4.577,596,4.577,597,4.577,598,4.577,599,4.577,600,5.633,601,3.707,602,4.974,603,4.974,604,4.577,605,1.317,606,4.974,607,3.707,608,4.577,609,4.577,610,4.577,611,5.597,612,3.682,613,3.204,614,3.682,615,4.577,616,4.037,617,4.577,618,6.184,619,4.037,620,4.577,621,4.577,622,4.037,623,4.037,624,4.974,625,4.577,626,0.948,627,4.037,628,4.577,629,4.577,630,4.577,631,6.184,632,6.184,633,4.037,634,4.037,635,4.577,636,4.577,637,4.577,638,4.577,639,4.577,640,4.577,641,4.577,642,4.577,643,4.577,644,4.577,645,5.454,646,4.577,647,4.037,648,4.577,649,3.682,650,4.577,651,4.577]],["title/directives/AbstractServerActor.html",[111,0.39,652,0.864]],["body/directives/AbstractServerActor.html",[3,0.109,4,0.109,5,0.097,8,0.316,9,0.765,10,0.898,14,0.635,15,1.124,24,0.794,27,1.269,30,0.009,32,0.531,34,1.17,35,0.654,50,0.794,54,0.858,55,0.811,56,1.201,58,0.139,59,0.195,63,0.109,67,0.121,87,0.005,88,0.007,89,0.005,111,0.614,113,0.77,126,1.234,135,1.175,139,1.354,154,1.697,170,1.427,256,0.77,269,0.79,282,1.328,444,2.514,471,3.037,498,4.742,652,1.36,653,3.18,654,7.901,655,1.725,656,4.764,657,2.769,658,4.237,659,4.405,660,4.59,661,3.286,662,4.772,663,4.772,664,4.182,665,3.286,666,4.022,667,5.401,668,5.401,669,5.401,670,5.401,671,5.401,672,5.401,673,5.401,674,5.401,675,5.401,676,5.401,677,3.741,678,5.401,679,5.401,680,5.667,681,5.401,682,5.401,683,5.401,684,5.401,685,5.401]],["title/injectables/ActorRepositoryService.html",[0,1.401,686,2.895]],["body/injectables/ActorRepositoryService.html",[0,2.284,2,2.809,3,0.115,4,0.115,5,0.102,8,0.333,9,0.792,12,1.207,14,0.657,15,1.097,23,1.127,24,0.749,27,1.32,29,0.916,30,0.009,31,0.671,32,0.537,33,0.765,35,0.615,50,0.746,53,1.186,54,0.71,55,0.671,56,1.071,58,0.143,59,0.206,60,1.587,63,0.115,67,0.127,75,0.834,87,0.008,88,0.007,89,0.006,653,3.042,655,1.098,686,4.719,687,7.559,688,5.03,689,7.786,690,7.786,691,7.134,692,5.739,693,5.702,694,7.197,695,7.134,696,6.293,697,7.134,698,5.702,699,6.563,700,7.786,701,7.134,702,0.334,703,5.702,704,5.702,705,1.341,706,1.341,707,1.341,708,1.341,709,1.341,710,1.341,711,5.702,712,5.702,713,5.702,714,5.702,715,5.702,716,5.702,717,5.702,718,7.786,719,5.702,720,5.702,721,5.702,722,5.702]],["title/components/AmbientLightComponent.html",[702,0.179,723,0.843]],["body/components/AmbientLightComponent.html",[3,0.062,4,0.062,5,0.055,8,0.18,9,0.517,10,0.512,12,1.139,13,0.942,14,0.429,15,1.134,23,0.736,24,0.8,27,1.101,29,0.863,30,0.009,31,0.76,32,0.534,33,0.759,34,0.475,35,0.731,36,1.569,50,0.848,53,0.512,54,0.94,55,0.888,56,0.463,58,0.135,59,0.111,60,0.686,63,0.062,67,0.069,72,0.872,75,0.451,87,0.003,88,0.005,89,0.003,111,0.275,112,0.538,113,0.439,123,1.317,124,2.506,126,0.834,127,1.135,132,0.686,133,1.394,135,1.399,145,0.872,146,1.317,148,0.872,154,1.191,155,0.988,156,0.791,178,1.519,182,0.811,189,1.667,190,0.608,201,1.797,202,1.588,204,0.566,214,1.255,215,0.623,232,0.608,238,1.953,243,1.437,248,0.552,254,1.334,256,1.007,257,2.377,269,0.681,282,0.594,287,0.594,292,2.866,314,0.594,334,0.512,347,0.58,354,0.608,375,0.773,393,0.552,416,0.58,423,2.565,424,2.565,425,3.092,426,3.092,427,3.092,428,2.565,429,3.092,430,3.092,431,2.565,432,2.565,433,2.565,434,3.092,435,2.565,436,2.565,437,2.565,438,2.467,439,2.467,440,2.565,441,2.565,442,2.565,443,2.467,444,1.698,445,1.905,448,1.697,450,1.697,451,1.697,452,1.697,453,1.573,454,1.697,455,1.334,456,1.334,462,1.633,463,1.066,464,1.697,465,1.697,466,1.633,467,1.697,468,1.633,469,1.468,471,1.066,473,1.697,479,1.697,488,1.697,490,1.697,491,1.697,493,1.697,496,1.187,502,0.594,564,0.608,566,0.608,578,0.942,605,0.58,626,0.638,652,0.608,655,1.205,657,2.047,677,2.295,702,0.23,705,0.58,706,0.58,707,0.58,708,0.58,709,0.58,710,0.58,723,1.205,724,0.876,725,0.654,726,5.519,727,2.158,728,0.552,729,3.747,730,1.735,731,1.643,732,1.163,733,4.67,734,0.964,735,4.19,736,3.476,737,2.3,738,4.658,739,1.804,740,1.769,741,1.769,742,2.673,743,1.769,744,1.769,745,1.769,746,1.769,747,1.769,748,1.769,749,1.769,750,1.769,751,1.769,752,1.848,753,1.769,754,1.769,755,1.769,756,1.769,757,1.769,758,1.769,759,1.769,760,1.769,761,1.848,762,1.769,763,1.769,764,1.769,765,1.769,766,1.769,767,1.848,768,1.769,769,1.769,770,0.754,771,0.83,772,3.082,773,3.082,774,2.3,775,0.654,776,0.964,777,1.327,778,0.654,779,1.327,780,0.594,781,0.638,782,0.988,783,0.594,784,0.654,785,0.594,786,0.623,787,1.64,788,0.594,789,0.638,790,0.654,791,0.594,792,0.638,793,0.594,794,1.174,795,0.654,796,0.608,797,0.654,798,0.594,799,0.654,800,0.594,801,0.654,802,0.594,803,0.623,804,0.654,805,0.594,806,0.638,807,0.594,808,0.654,809,0.594,810,0.638,811,0.654,812,0.654,813,0.594,814,0.654,815,0.594,816,0.654,817,0.594,818,0.623,819,0.594,820,1.135,821,1.64,822,0.594,823,0.594,824,0.594,825,0.638,826,0.594,827,0.594,828,0.654,829,0.608,830,0.594,831,0.988,832,0.594,833,1.327,834,0.594,835,0.594,836,0.638,837,0.988,838,0.594,839,0.638,840,0.594,841,0.623,842,0.594,843,0.623,844,0.594,845,0.654,846,0.566,847,0.654,848,0.623,849,0.623,850,0.623,851,0.594,852,0.638,853,0.594,854,0.638,855,0.594,856,0.608,857,0.608,858,0.942,859,0.594,860,0.594,861,0.638,862,0.594,863,0.638,864,0.654,865,0.654,866,0.58,867,0.608,868,0.654,869,0.58,870,1.005,871,0.654,872,0.58,873,0.654,874,0.566,875,0.654,876,0.58,877,0.608,878,0.638,879,0.654]],["title/injectables/AnimationService.html",[0,1.401,880,2.511]],["body/injectables/AnimationService.html",[0,2.145,2,2.546,3,0.104,4,0.104,5,0.092,8,0.302,9,0.744,14,0.617,15,1.115,23,1.059,24,0.744,29,0.608,30,0.01,31,0.445,32,0.316,33,0.508,35,0.641,50,0.777,54,0.834,55,0.788,56,1.006,58,0.135,59,0.187,63,0.104,67,0.115,72,1.462,87,0.005,88,0.007,89,0.005,132,1.15,133,1.648,140,2.155,156,1.327,170,1.07,171,2.307,183,5.39,240,2.456,259,5.55,312,5.872,391,3.248,469,3.191,471,2.572,585,4.211,627,6.94,665,3.528,724,1.533,818,1.591,844,0.996,880,5.077,881,4.559,882,4.691,883,6.329,884,6.701,885,6.701,886,4.515,887,5.39,888,5.911,889,6.701,890,6.701,891,6.701,892,6.701,893,7.437,894,5.55,895,6.329,896,7.868,897,7.368,898,7.368,899,6.701,900,5.168,901,5.168,902,5.168,903,6.701,904,5.168,905,5.39,906,6.701,907,4.211,908,6.701,909,6.701,910,6.701,911,6.701,912,6.701,913,5.168,914,5.168,915,6.719,916,5.168,917,5.168,918,6.701,919,5.168,920,5.168,921,5.168,922,5.168,923,4.157,924,5.168,925,5.168]],["title/modules/AtftAnimationModule.html",[926,1.734,927,3.064]],["body/modules/AtftAnimationModule.html",[3,0.137,4,0.137,5,0.122,13,1.608,30,0.009,58,0.16,59,0.247,63,0.137,67,0.152,87,0.007,88,0.008,89,0.007,880,5.129,927,6.257,928,2.63,929,3.064,930,6.023,931,6.023,932,3.064,933,2.63,934,2.705,935,6.829,936,6.829,937,3.34,938,6.829]],["title/modules/AtftCameraModule.html",[926,1.734,939,3.064]],["body/modules/AtftCameraModule.html",[3,0.13,4,0.13,5,0.115,30,0.009,58,0.171,59,0.233,63,0.13,67,0.144,87,0.007,88,0.008,89,0.007,835,1.765,836,1.336,838,1.765,839,1.336,928,2.486,929,2.964,932,2.964,933,2.486,934,2.556,937,3.231,939,6.366,940,5.692,941,5.692,942,5.692,943,6.453,944,6.453,945,3.434,946,3.33,947,3.434,948,2.792,949,7.694,950,2.709]],["title/modules/AtftConnectorModule.html",[926,1.734,951,3.064]],["body/modules/AtftConnectorModule.html",[3,0.133,4,0.133,5,0.119,30,0.009,58,0.167,59,0.239,63,0.133,67,0.148,87,0.007,88,0.008,89,0.007,248,1.187,827,1.771,928,2.554,929,3.012,932,3.012,933,2.554,934,2.627,937,3.283,945,3.49,946,3.384,947,3.49,948,2.869,950,2.784,951,6.277,952,5.849,953,5.849,954,5.849,955,6.631,956,6.631,957,6.631]],["title/modules/AtftControlModule.html",[926,1.734,958,3.064]],["body/modules/AtftControlModule.html",[3,0.13,4,0.13,5,0.115,30,0.009,53,1.073,58,0.171,59,0.233,63,0.13,67,0.144,87,0.007,88,0.008,89,0.007,566,1.273,830,1.765,834,1.765,928,2.486,929,2.964,932,2.964,933,2.486,934,2.556,937,3.231,945,3.434,946,3.33,947,3.434,948,2.792,950,2.709,958,6.366,959,5.692,960,5.692,961,5.692,962,6.453,963,6.453,964,7.694]],["title/modules/AtftDataCenterActorModule.html",[926,1.734,965,3.267]],["body/modules/AtftDataCenterActorModule.html",[3,0.096,4,0.096,5,0.085,13,1.284,30,0.009,34,0.734,58,0.178,59,0.172,63,0.096,67,0.106,87,0.005,88,0.006,89,0.005,397,2.856,653,1.691,655,0.918,686,5.401,705,1.672,706,1.672,707,1.672,708,1.672,709,1.672,710,1.672,793,1.713,796,1.755,798,1.694,800,1.713,802,1.694,819,1.694,826,1.694,848,0.963,849,0.963,850,0.963,883,3.832,928,1.835,929,2.447,932,2.447,933,1.835,934,1.887,937,2.667,945,2.835,946,2.748,947,2.835,948,2.061,950,2.667,965,6.963,966,4.202,967,4.202,968,4.202,969,4.202,970,4.202,971,5.131,972,4.764,973,3.555,974,4.202,975,6.351,976,4.764,977,7.353,978,4.202,979,7.622,980,4.764,981,4.764,982,2.623]],["title/modules/AtftEffectModule.html",[926,1.734,983,3.064]],["body/modules/AtftEffectModule.html",[3,0.117,4,0.117,5,0.105,30,0.009,58,0.177,59,0.211,63,0.117,67,0.13,87,0.006,88,0.007,89,0.006,204,1.661,216,4.093,783,1.744,807,1.744,809,1.744,815,1.744,866,1.702,867,1.154,928,2.253,929,2.792,932,2.792,933,2.253,934,2.317,937,3.043,945,3.235,946,3.136,947,3.235,948,2.531,950,2.455,983,6.484,984,5.158,985,5.158,986,5.158,987,5.848,988,5.848,989,5.848,990,5.848,991,5.848,992,5.848,993,5.848,994,5.848,995,5.848]],["title/modules/AtftHelperModule.html",[926,1.734,996,3.064]],["body/modules/AtftHelperModule.html",[3,0.126,4,0.126,5,0.113,30,0.009,58,0.174,59,0.227,63,0.126,67,0.14,87,0.006,88,0.008,89,0.006,780,1.76,781,1.303,813,1.76,820,1.272,822,1.76,928,2.424,929,2.919,932,2.919,933,2.424,934,2.493,937,3.182,945,3.383,946,3.28,947,3.383,948,2.723,950,2.642,996,6.415,997,5.55,998,5.55,999,5.55,1000,6.292,1001,6.292,1002,7.579,1003,6.292]],["title/modules/AtftLightModule.html",[926,1.734,1004,3.064]],["body/modules/AtftLightModule.html",[3,0.122,4,0.122,5,0.109,30,0.009,58,0.175,59,0.219,63,0.122,67,0.135,87,0.006,88,0.008,89,0.006,723,1.764,729,6.44,732,1.257,805,1.752,806,1.257,824,1.752,825,1.257,842,1.752,843,1.227,928,2.338,929,2.856,932,2.856,933,2.338,934,2.405,937,3.114,945,3.309,946,3.209,947,3.309,948,2.626,950,2.549,1004,6.44,1005,5.354,1006,5.354,1007,5.354,1008,5.354,1009,6.07,1010,6.07,1011,8.34]],["title/modules/AtftLoaderModule.html",[926,1.734,1012,3.064]],["body/modules/AtftLoaderModule.html",[3,0.123,4,0.123,5,0.11,30,0.009,58,0.175,59,0.221,63,0.123,67,0.137,87,0.006,88,0.008,89,0.006,256,0.873,347,1.151,416,1.712,832,1.754,853,1.754,854,1.268,855,1.754,856,1.208,928,2.359,929,2.872,932,2.872,933,2.359,934,2.426,937,3.13,945,3.327,946,3.226,947,3.327,948,2.65,950,2.571,1012,6.445,1013,5.401,1014,5.401,1015,5.401,1016,6.124,1017,6.124,1018,8.365]],["title/modules/AtftMeshModule.html",[926,1.734,1019,3.064]],["body/modules/AtftMeshModule.html",[3,0.112,4,0.112,5,0.099,30,0.009,58,0.179,59,0.201,63,0.112,67,0.124,87,0.006,88,0.007,89,0.006,785,1.732,786,1.123,791,1.732,792,1.151,817,1.732,818,1.123,820,1.123,823,1.732,840,1.732,841,1.123,851,1.732,852,1.151,860,1.732,861,1.151,862,1.732,863,1.151,928,2.14,929,2.704,932,2.704,933,2.14,934,2.202,937,2.948,945,3.133,946,3.038,947,3.133,948,2.405,950,2.333,1019,6.503,1020,4.902,1021,4.902,1022,4.902,1023,5.557,1024,5.557,1025,7.715]],["title/modules/AtftModule.html",[926,1.734,971,2.75]],["body/modules/AtftModule.html",[3,0.11,4,0.11,5,0.098,30,0.009,55,0.645,58,0.179,59,0.198,63,0.11,67,0.122,87,0.006,88,0.007,89,0.006,302,2.528,585,3.448,926,2.174,927,6.284,928,2.114,929,2.682,932,2.682,933,2.114,934,2.174,937,2.924,939,6.284,946,3.013,950,3.212,958,6.284,971,5.839,983,6.284,1026,4.84,1027,4.84,1028,4.84,1029,6.284,1030,6.284,1031,6.284,1032,6.284,1033,5.487,1034,5.487,1035,5.487,1036,5.487,1037,5.487,1038,5.487,1039,5.487,1040,5.355,1041,5.487,1042,5.487,1043,5.487,1044,5.487,1045,5.487,1046,5.487,1047,5.487,1048,5.487,1049,5.487,1050,5.487,1051,5.487,1052,4.84,1053,4.84,1054,4.84,1055,5.487,1056,5.487,1057,5.487]],["title/modules/AtftObjectModule.html",[926,1.734,1029,3.064]],["body/modules/AtftObjectModule.html",[3,0.106,4,0.106,5,0.095,13,1.374,30,0.009,58,0.178,59,0.191,63,0.106,67,0.118,87,0.005,88,0.007,89,0.005,393,0.946,788,1.618,789,1.094,846,1.638,928,2.035,929,2.618,932,2.618,933,2.035,934,2.093,937,2.854,945,3.033,946,2.941,947,3.033,948,2.286,950,2.854,951,6.251,996,6.251,1004,6.251,1012,6.251,1019,6.251,1029,6.527,1058,4.659,1059,4.659,1060,4.659,1061,4.659,1062,4.659,1063,6.251,1064,5.557,1065,5.28,1066,5.557,1067,5.557,1068,5.557,1069,5.282,1070,5.282,1071,5.282,1072,5.282,1073,5.282,1074,5.282,1075,5.282,1076,5.282,1077,5.282,1078,5.282,1079,5.282,1080,5.282,1081,5.282,1082,5.282,1083,5.282,1084,5.282]],["title/modules/AtftPipeModule.html",[926,1.734,1040,3.064]],["body/modules/AtftPipeModule.html",[3,0.13,4,0.13,5,0.116,30,0.009,58,0.171,59,0.234,63,0.13,67,0.144,87,0.007,88,0.008,89,0.007,928,2.492,929,2.969,932,2.969,933,2.492,934,2.563,937,3.236,945,3.44,946,3.335,947,3.44,948,2.8,950,2.717,1040,6.368,1085,5.707,1086,5.707,1087,5.707,1088,6.417,1089,6.417,1090,6.47,1091,6.47,1092,6.47,1093,6.47]],["title/modules/AtftRaycasterModule.html",[926,1.734,1030,3.064]],["body/modules/AtftRaycasterModule.html",[3,0.124,4,0.124,5,0.11,13,1.512,30,0.009,58,0.175,59,0.222,63,0.124,67,0.137,87,0.006,88,0.008,89,0.006,574,4.301,869,1.713,870,1.442,872,1.713,874,1.672,928,2.371,929,2.881,932,2.881,933,2.371,934,2.439,937,3.14,945,3.338,946,3.236,947,3.338,948,2.663,950,2.584,1030,6.434,1094,5.429,1095,5.429,1096,5.429,1097,5.429,1098,6.155,1099,6.155,1100,6.155,1101,4.308,1102,6.155,1103,6.155]],["title/modules/AtftRendererModule.html",[926,1.734,1031,3.064]],["body/modules/AtftRendererModule.html",[3,0.128,4,0.128,5,0.114,13,1.547,30,0.009,58,0.174,59,0.231,63,0.128,67,0.143,87,0.006,88,0.008,89,0.006,133,1.738,605,1.721,616,5.639,844,1.231,928,2.462,929,2.947,932,2.947,933,2.462,934,2.533,937,3.213,945,3.415,946,3.311,947,3.415,948,2.766,950,2.684,1031,6.385,1104,5.639,1105,5.639,1106,5.639,1107,5.639,1108,5.826,1109,6.393,1110,6.393,1111,5.639,1112,6.393]],["title/modules/AtftStatsModule.html",[926,1.734,1032,3.064]],["body/modules/AtftStatsModule.html",[3,0.13,4,0.13,5,0.116,13,1.56,30,0.009,58,0.171,59,0.234,63,0.13,67,0.145,87,0.007,88,0.008,89,0.007,502,1.25,876,1.724,877,1.28,928,2.499,929,2.973,932,2.973,933,2.499,934,2.57,937,3.241,945,3.445,946,3.34,947,3.445,948,2.807,950,2.724,1032,6.339,1113,5.722,1114,5.722,1115,5.722,1116,5.722,1117,5.553,1118,6.488,1119,5.722,1120,6.488]],["title/modules/AtftTextModule.html",[926,1.734,1063,3.064]],["body/modules/AtftTextModule.html",[3,0.133,4,0.133,5,0.119,30,0.009,58,0.167,59,0.239,63,0.133,67,0.148,87,0.007,88,0.008,89,0.007,858,1.34,859,1.771,928,2.554,929,3.012,932,3.012,933,2.554,934,2.627,937,3.283,945,3.49,946,3.384,947,3.49,948,2.869,950,2.784,1025,5.849,1063,6.277,1121,5.849,1122,5.849,1123,5.849,1124,6.631,1125,6.631]],["title/components/AxesHelperComponent.html",[702,0.179,780,0.843]],["body/components/AxesHelperComponent.html",[3,0.063,4,0.063,5,0.056,8,0.183,9,0.523,10,0.52,12,1.143,13,0.953,14,0.434,15,1.136,23,0.745,24,0.8,27,1.015,29,0.867,30,0.009,31,0.761,32,0.533,33,0.763,34,0.482,35,0.733,36,1.588,50,0.851,53,0.52,54,0.918,55,0.867,56,0.47,58,0.136,59,0.113,63,0.063,67,0.07,72,0.885,75,0.458,87,0.003,88,0.005,89,0.003,111,0.279,112,0.547,113,0.446,123,1.333,124,2.529,126,0.844,127,1.146,132,0.696,133,1.403,135,1.369,145,0.885,146,1.333,148,0.885,154,1,155,1,156,0.804,178,1.542,182,0.823,189,1.683,190,0.618,201,1.814,202,1.603,204,0.574,214,1.27,215,0.633,232,0.618,238,1.968,243,1.439,248,0.561,254,1.355,256,1.013,257,2.405,269,0.689,282,0.603,287,0.603,292,2.893,314,0.603,334,0.52,347,0.589,354,0.618,375,0.785,392,3.791,393,0.561,416,0.589,423,2.595,424,2.595,425,3.121,426,3.121,427,3.121,428,2.595,429,3.121,430,3.121,431,2.595,432,2.595,433,2.595,434,3.121,435,2.595,436,2.595,437,2.595,438,2.496,439,2.496,440,2.595,441,2.595,442,2.595,443,2.496,444,1.718,445,1.92,448,1.724,450,1.724,451,1.724,452,1.724,453,1.598,454,1.724,455,1.355,456,1.355,462,1.658,463,1.083,464,1.724,465,1.724,466,1.658,467,1.724,468,1.658,469,1.491,471,1.083,473,1.724,479,1.724,488,1.724,490,1.724,491,1.724,493,1.724,496,1.206,502,0.603,564,0.618,566,0.618,578,0.953,605,0.589,626,0.648,652,0.618,655,1.215,702,0.232,705,0.589,706,0.589,707,0.589,708,0.589,709,0.589,710,0.589,723,0.603,724,0.886,725,0.664,728,0.561,730,1.737,731,1.645,732,0.648,734,0.976,739,1.807,740,1.796,741,1.796,742,1.796,743,1.796,744,1.796,745,1.796,746,1.796,747,1.796,748,1.796,749,1.796,750,1.796,751,1.796,752,1.877,753,1.796,754,1.796,755,1.796,756,1.796,757,1.796,758,1.796,759,1.796,760,1.796,761,1.877,762,1.796,763,1.796,764,1.796,765,1.796,766,1.796,767,1.877,768,1.796,769,1.796,770,0.766,771,0.843,775,0.664,776,0.976,777,1.337,778,0.664,779,1.337,780,1.215,781,1.174,782,1,783,0.603,784,0.664,785,0.603,786,0.633,787,1.647,788,0.603,789,0.648,790,0.664,791,0.603,792,0.648,793,0.603,794,1.181,795,0.664,796,0.618,797,0.664,798,0.603,799,0.664,800,0.603,801,0.664,802,0.603,803,0.633,804,0.664,805,0.603,806,0.648,807,0.603,808,0.664,809,0.603,810,0.648,811,0.664,812,0.664,813,0.603,814,0.664,815,0.603,816,0.664,817,0.603,818,0.633,819,0.603,820,1.146,821,1.647,822,0.603,823,0.603,824,0.603,825,0.648,826,0.603,827,0.603,828,0.664,829,0.618,830,0.603,831,1,832,0.603,833,1.337,834,0.603,835,0.603,836,0.648,837,1,838,0.603,839,0.648,840,0.603,841,0.633,842,0.603,843,0.633,844,0.603,845,0.664,846,0.574,847,0.664,848,0.633,849,0.633,850,0.633,851,0.603,852,0.648,853,0.603,854,0.648,855,0.603,856,0.618,857,0.618,858,0.953,859,0.603,860,0.603,861,0.648,862,0.603,863,0.648,864,0.664,865,0.664,866,0.589,867,0.618,868,0.664,869,0.589,870,1.015,871,0.664,872,0.589,873,0.664,874,0.574,875,0.664,876,0.589,877,0.618,878,0.648,879,0.664,1126,4.999,1127,2.518,1128,4.713,1129,3.748,1130,4.157,1131,4.713,1132,2.761,1133,4.713,1134,3.131,1135,3.131]],["title/interfaces/BaseAssetSource.html",[64,1.596,65,2.75]],["body/interfaces/BaseAssetSource.html",[0,2.325,1,3.688,3,0.118,4,0.158,5,0.105,6,4.108,7,4.38,8,0.343,9,0.806,10,1.408,11,4.108,12,1.008,13,1.187,15,1.104,20,3.368,23,0.928,26,4.108,27,1.347,30,0.01,32,0.359,34,1.305,36,2.908,37,4.108,38,6.042,40,4.108,41,4.38,43,4.38,45,4.38,47,4.38,49,3.518,51,4.38,53,1.207,56,0.881,58,0.118,59,0.212,60,1.885,61,4.38,62,4.38,63,0.146,64,2.14,65,4.564,66,5.603,67,0.131,68,4.721,69,5.177,70,5.177,71,5.177,72,1.66,73,5.177,74,5.177,75,1.239,76,5.177,77,5.177,78,5.177,79,6.407,80,6.407,81,5.177,82,5.177,83,3.882,84,5.177,85,4.38,86,5.177,87,0.006,88,0.007,89,0.006,1136,3.232]],["title/interfaces/BaseInfo.html",[64,1.596,1137,2.624]],["body/interfaces/BaseInfo.html",[3,0.127,4,0.127,5,0.113,8,0.369,9,0.843,27,1.386,30,0.009,31,0.728,32,0.528,33,0.83,34,0.973,58,0.127,63,0.174,64,3.154,87,0.006,88,0.008,89,0.006,135,1.076,269,1.192,334,1.05,496,3.138,558,3.112,653,2.243,657,2.303,661,3.658,794,1.327,982,3.479,1136,3.479,1137,5.184,1138,3.112,1139,4.178,1140,4.763,1141,4.178,1142,3.625,1143,3.479,1144,4.178,1145,4.422,1146,3.969,1147,3.346]],["title/injectables/BloomService.html",[0,1.401,1108,2.895]],["body/injectables/BloomService.html",[0,1.887,2,2.103,3,0.086,4,0.086,5,0.076,8,0.25,9,0.654,12,1.238,14,0.543,15,1.072,20,3.383,24,0.764,29,0.857,30,0.01,31,0.582,32,0.467,33,0.663,35,0.628,50,0.863,54,0.907,55,0.93,56,1.297,58,0.166,59,0.154,60,1.864,63,0.118,67,0.095,72,1.207,87,0.004,88,0.006,89,0.004,119,4.209,140,2.215,155,1.432,165,2.103,170,1.398,189,2.006,240,2.467,337,5.957,346,4.214,347,1.108,496,2.271,570,5.099,665,3.152,844,1.136,907,2.682,923,4.742,1108,3.899,1148,3.433,1149,6.754,1150,6.754,1151,6.754,1152,6.754,1153,6.754,1154,5.895,1155,5.895,1156,5.895,1157,4.268,1158,5.895,1159,6.148,1160,6.754,1161,4.268,1162,4.268,1163,5.895,1164,4.268,1165,6.742,1166,4.268,1167,5.895,1168,4.268,1169,5.2,1170,5.2,1171,4.268,1172,4.268,1173,4.268,1174,4.268,1175,4.268,1176,3.765,1177,3.765,1178,4.268,1179,4.268,1180,3.765,1181,4.742,1182,3.433,1183,4.268,1184,4.268,1185,3.433,1186,4.268,1187,5.432,1188,5.2,1189,5.2,1190,6.742,1191,3.433,1192,3.765,1193,3.765,1194,3.765,1195,5.2,1196,3.383,1197,5.432,1198,5.2,1199,5.2,1200,6.425,1201,5.957,1202,3.765,1203,5.2,1204,4.268,1205,3.433,1206,4.268,1207,4.268,1208,4.268,1209,4.268,1210,4.268,1211,4.268,1212,4.727,1213,1.847,1214,4.127,1215,4.268,1216,4.268,1217,4.268,1218,6.754,1219,4.268,1220,4.268,1221,2.988,1222,4.268,1223,4.268,1224,5.895,1225,4.268,1226,4.268,1227,4.268,1228,4.268,1229,4.268,1230,4.268,1231,4.268,1232,2.682,1233,4.268,1234,4.268,1235,4.268,1236,4.268,1237,4.268,1238,4.268,1239,4.268,1240,4.268,1241,4.268,1242,4.268,1243,7.284,1244,4.268,1245,4.268,1246,5.895,1247,4.268,1248,4.268,1249,4.268,1250,4.268,1251,5.895,1252,4.268,1253,4.268,1254,7.284,1255,6.754,1256,4.268,1257,4.268]],["title/components/BlurComponent.html",[702,0.179,783,0.843]],["body/components/BlurComponent.html",[3,0.08,4,0.08,5,0.071,8,0.232,9,0.622,10,0.66,12,1.125,14,0.516,15,0.903,23,0.886,24,0.735,29,0.764,30,0.009,31,0.755,32,0.431,33,0.731,34,0.611,35,0.684,36,1.337,50,0.807,53,0.66,54,0.494,55,0.467,58,0.16,59,0.143,63,0.08,67,0.089,75,0.581,87,0.004,88,0.006,89,0.004,111,0.354,112,0.693,113,0.566,123,1.584,127,0.802,132,0.883,133,1.524,139,0.995,140,1.15,145,1.122,146,2.184,148,1.837,156,1.019,165,1.955,190,1.684,192,2.778,196,3.922,197,4.182,198,3.602,199,3.894,200,5.266,201,2.079,202,1.837,203,4.667,204,1.366,206,4.182,214,1.509,215,1.313,216,2.778,232,0.783,243,0.627,248,1.003,256,0.566,269,0.82,282,0.764,287,0.764,314,0.764,320,2.379,321,2.494,334,0.66,347,0.746,354,0.783,393,0.711,416,0.746,502,0.764,541,2.625,542,2.625,564,0.783,566,0.783,578,1.133,605,0.746,626,0.822,652,0.783,655,1.359,702,0.266,705,0.746,706,0.746,707,0.746,708,0.746,709,0.746,710,0.746,723,0.764,724,1.053,725,0.842,728,0.711,730,1.754,731,1.663,732,0.822,734,0.822,739,1.639,771,1.069,775,0.842,776,1.16,777,1.497,778,0.842,779,1.497,780,0.764,781,0.822,782,1.188,783,1.359,784,0.842,785,0.764,786,0.802,787,1.749,788,0.764,789,0.822,790,0.842,791,0.764,792,0.822,793,0.764,794,1.3,795,0.842,796,0.783,797,0.842,798,0.764,799,0.842,800,0.764,801,0.842,802,0.764,803,0.802,804,0.842,805,0.764,806,0.822,807,0.764,808,0.842,809,0.764,810,0.822,811,0.842,812,0.842,813,0.764,814,0.842,815,0.764,816,0.842,817,0.764,818,0.802,819,0.764,820,1.313,821,1.749,822,0.764,823,0.764,824,0.764,825,0.822,826,0.764,827,0.764,828,0.842,829,0.783,830,0.764,831,1.188,832,0.764,833,1.497,834,0.764,835,0.764,836,0.822,837,1.188,838,0.764,839,0.822,840,0.764,841,0.802,842,0.764,843,0.802,844,0.764,845,0.842,846,0.728,847,0.842,848,0.802,849,0.802,850,0.802,851,0.764,852,0.822,853,0.764,854,0.822,855,0.764,856,0.783,857,0.783,858,1.133,859,0.764,860,0.764,861,0.822,862,0.764,863,0.822,864,0.842,865,0.842,866,0.746,867,0.783,868,0.842,869,0.746,870,1.163,871,0.842,872,0.746,873,0.842,874,0.728,875,0.842,876,0.746,877,0.783,878,0.822,879,0.842,1181,3.192,1182,3.192,1258,3.5,1259,5.603,1260,3.969,1261,3.969,1262,3.969,1263,3.192,1264,3.192,1265,3.192,1266,3.192,1267,3.192,1268,3.192,1269,3.969,1270,3.969,1271,3.969,1272,3.969,1273,5.676,1274,5.603,1275,5.603,1276,2.962,1277,2.962,1278,3.192]],["title/components/BoxMeshComponent.html",[702,0.179,785,0.843]],["body/components/BoxMeshComponent.html",[3,0.065,4,0.065,5,0.058,8,0.189,10,0.803,12,1.088,13,0.977,14,0.445,15,0.821,23,0.764,24,0.762,27,0.726,29,0.68,30,0.009,31,0.732,32,0.511,33,0.84,34,0.499,35,0.591,50,0.604,53,0.538,54,0.993,55,0.938,56,0.726,58,0.145,59,0.117,60,1.287,63,0.065,67,0.072,75,0.474,87,0.003,88,0.005,89,0.003,111,0.289,112,0.566,113,0.461,123,1.367,126,0.865,127,0.655,132,0.72,133,1.42,135,1.413,139,1.45,145,0.916,146,1.367,148,0.916,154,1.582,155,1.025,156,0.831,170,1.198,178,2.381,179,5.372,182,1.271,189,2.554,190,0.639,204,0.594,214,1.302,215,0.655,232,0.639,238,2.002,243,1.084,248,0.58,249,3.427,256,0.689,269,0.707,282,0.624,287,0.624,314,0.624,334,0.538,347,0.609,354,1.636,356,3.318,357,2.773,358,3.185,359,2.467,360,2.381,361,2.955,362,2.381,363,2.662,367,1.858,370,1.858,371,2.56,373,1.715,375,0.812,388,1.858,393,0.58,416,0.609,445,1.953,455,2.092,456,2.092,463,1.12,502,0.624,564,0.639,566,0.639,578,0.977,605,0.609,626,0.671,652,0.639,655,1.235,702,0.236,705,0.609,706,0.609,707,0.609,708,0.609,709,0.609,710,0.609,723,0.624,724,0.909,725,0.687,728,0.58,730,1.739,731,1.648,732,0.671,734,1.001,739,1.584,770,0.793,771,0.872,775,0.687,776,1.001,777,1.36,778,0.687,779,1.36,780,0.624,781,0.671,782,1.025,783,0.624,784,0.687,785,1.235,786,1.169,787,1.662,788,0.624,789,0.671,790,0.687,791,0.624,792,0.671,793,0.624,794,1.199,795,0.687,796,0.639,797,0.687,798,0.624,799,0.687,800,0.624,801,0.687,802,0.624,803,0.655,804,0.687,805,0.624,806,0.671,807,0.624,808,0.687,809,0.624,810,0.671,811,0.687,812,0.687,813,0.624,814,0.687,815,0.624,816,0.687,817,0.624,818,0.655,819,0.624,820,1.169,821,1.662,822,0.624,823,0.624,824,0.624,825,0.671,826,0.624,827,0.624,828,0.687,829,0.639,830,0.624,831,1.025,832,0.624,833,1.36,834,0.624,835,0.624,836,0.671,837,1.025,838,0.624,839,0.671,840,0.624,841,0.655,842,0.624,843,0.655,844,0.624,845,0.687,846,0.594,847,0.687,848,0.655,849,0.655,850,0.655,851,0.624,852,0.671,853,0.624,854,0.671,855,0.624,856,0.639,857,0.639,858,0.977,859,0.624,860,0.624,861,0.671,862,0.624,863,0.671,864,0.687,865,0.687,866,0.609,867,0.639,868,0.687,869,0.609,870,1.035,871,0.687,872,0.609,873,0.687,874,0.594,875,0.687,876,0.609,877,0.639,878,0.671,879,0.687,1147,3.812,1196,4.13,1279,6.912,1280,1.783,1281,4.834,1282,6.579,1283,5.783,1284,3.551,1285,4.316,1286,4.279,1287,4.316,1288,4.263,1289,2.605,1290,5.372,1291,5.372,1292,6.596,1293,6.349,1294,6.349,1295,6.349,1296,5.789,1297,6.349,1298,2.605,1299,3.238,1300,2.417,1301,2.856,1302,1.941,1303,1.941,1304,1.941,1305,1.941,1306,1.941,1307,2.856,1308,1.941,1309,1.941,1310,2.035,1311,2.142,1312,3.238,1313,3.238,1314,2.142,1315,3.238,1316,2.417,1317,2.417,1318,3.238,1319,1.858,1320,2.035]],["title/interfaces/Composition.html",[64,1.596,1140,2.41]],["body/interfaces/Composition.html",[3,0.129,4,0.129,5,0.115,8,0.376,9,0.852,27,1.375,30,0.009,31,0.554,32,0.502,33,0.755,34,0.991,58,0.129,63,0.175,64,3.17,87,0.007,88,0.008,89,0.007,135,1.097,269,1.244,334,1.07,496,3.163,558,3.17,653,2.285,657,2.347,661,2.785,794,1.342,982,3.544,1136,3.544,1137,5.211,1138,3.17,1139,4.256,1140,4.522,1141,5.626,1142,3.693,1143,3.544,1144,4.256,1145,4.505,1146,4.044,1147,3.409]],["title/components/ContentProjectionComponent.html",[702,0.179,788,0.843]],["body/components/ContentProjectionComponent.html",[3,0.063,4,0.063,5,0.056,8,0.183,9,0.523,10,0.52,12,1.13,13,0.953,14,0.434,15,1.13,23,0.745,24,0.8,27,1.015,29,0.867,30,0.009,31,0.763,32,0.533,33,0.763,34,0.482,35,0.733,36,1.588,50,0.851,53,0.52,54,0.885,55,0.836,58,0.136,59,0.113,63,0.063,67,0.07,72,0.885,83,2.071,87,0.003,88,0.005,89,0.003,111,0.279,112,0.547,113,0.446,123,1.333,124,2.529,126,0.844,127,1.146,132,0.696,133,1.403,135,1.348,145,0.885,146,1.333,148,0.885,156,0.804,178,1.542,182,0.823,189,1.683,190,0.618,201,1.814,202,1.603,204,0.574,214,1.27,215,0.633,219,1.877,232,0.618,238,1.769,243,1.44,248,0.561,251,1.355,254,1.355,256,1.082,257,2.405,269,0.689,282,0.603,287,0.603,292,2.893,314,0.603,334,0.52,347,0.589,354,0.618,375,0.785,393,0.561,416,0.589,423,2.595,424,2.595,425,3.121,426,3.121,427,3.121,428,2.595,429,3.121,430,3.121,431,2.595,432,2.595,433,2.595,434,3.121,435,2.595,436,2.595,437,2.595,438,2.496,439,2.496,440,2.595,441,2.595,442,2.595,443,2.496,444,1.718,445,1.92,448,1.724,450,1.724,451,1.724,452,1.724,453,1.598,454,1.724,455,1.355,456,1.355,462,1.658,463,1.083,464,1.724,465,1.724,466,1.658,467,1.724,468,1.658,469,1.491,471,1.083,473,2.595,479,1.724,488,1.724,490,1.724,491,1.724,493,1.724,496,1.206,502,0.603,564,0.618,566,0.618,578,0.953,601,1.877,605,0.589,626,0.648,652,0.618,655,1.215,702,0.232,705,0.589,706,0.589,707,0.589,708,0.589,709,0.589,710,0.589,723,0.603,724,0.886,725,0.664,728,0.561,730,1.737,731,1.645,732,0.648,734,0.976,739,1.807,740,1.796,741,1.796,742,1.796,743,1.796,744,1.796,745,1.796,746,1.796,747,1.796,748,1.796,749,1.796,750,1.796,751,1.796,753,1.796,754,1.796,755,1.796,756,1.796,757,1.796,758,1.796,759,1.796,760,1.796,761,1.877,762,1.796,763,1.796,764,1.796,765,1.796,766,1.796,767,1.877,768,1.796,769,1.796,770,0.766,771,0.843,775,0.664,776,0.976,777,1.337,778,0.664,779,1.337,780,0.603,781,0.648,782,1,783,0.603,784,0.664,785,0.603,786,0.633,787,1.647,788,1.215,789,1.306,790,0.664,791,0.603,792,0.648,793,0.603,794,1.181,795,0.664,796,0.618,797,0.664,798,0.603,799,0.664,800,0.603,801,0.664,802,0.603,803,0.633,804,0.664,805,0.603,806,0.648,807,0.603,808,0.664,809,0.603,810,0.648,811,0.664,812,0.664,813,1.215,814,0.664,815,0.603,816,0.664,817,0.603,818,0.633,819,0.603,820,1.146,821,1.647,822,0.603,823,0.603,824,0.603,825,0.648,826,0.603,827,0.603,828,0.664,829,0.618,830,0.603,831,1,832,0.603,833,1.337,834,0.603,835,0.603,836,0.648,837,1,838,0.603,839,0.648,840,0.603,841,0.633,842,0.603,843,0.633,844,0.603,845,0.664,846,0.574,847,0.664,848,0.633,849,0.633,850,0.633,851,0.603,852,0.648,853,0.603,854,0.648,855,0.603,856,0.618,857,0.618,858,0.953,859,0.603,860,0.603,861,0.648,862,0.603,863,0.648,864,0.664,865,0.664,866,0.589,867,0.618,868,0.664,869,0.589,870,1.015,871,0.664,872,0.589,873,0.664,874,0.574,875,0.664,876,0.589,877,0.618,878,0.648,879,0.664,1053,2.761,1132,2.761,1321,4.999,1322,2.761,1323,4.713,1324,4.713,1325,6.306,1326,4.713,1327,2.761,1328,4.713,1329,2.191,1330,3.131,1331,3.131,1332,3.131,1333,3.131,1334,3.131,1335,2.761,1336,2.761,1337,3.131]],["title/components/CylinderMeshComponent.html",[702,0.179,791,0.843]],["body/components/CylinderMeshComponent.html",[3,0.07,4,0.07,5,0.062,8,0.203,10,0.846,12,1.107,13,1.028,14,0.469,15,0.849,23,0.804,24,0.778,27,0.764,29,0.708,30,0.009,31,0.74,32,0.525,33,0.694,34,0.535,35,0.608,50,0.629,53,0.577,54,1.035,55,0.978,56,0.764,58,0.148,59,0.125,60,1.34,63,0.07,67,0.077,75,0.508,87,0.004,88,0.005,89,0.004,111,0.309,112,0.606,113,0.494,123,1.439,126,0.911,127,0.701,132,0.772,133,1.456,135,1.333,139,1.663,140,1.474,145,0.981,146,1.439,148,0.981,154,1.692,155,1.079,156,0.891,170,1.247,182,1.338,189,1.511,190,0.685,204,0.637,214,1.37,215,0.701,219,2.08,232,0.685,238,2.07,243,1.116,248,0.621,249,3.514,256,0.725,269,0.744,282,0.668,287,0.668,314,0.668,334,0.577,347,0.652,354,1.658,356,3.456,357,2.919,358,3.317,359,2.596,360,2.506,361,3.056,362,2.506,363,2.801,367,1.991,370,1.991,371,3.513,373,1.838,375,0.87,388,1.991,393,0.621,416,0.652,445,2.019,463,1.2,502,0.668,564,0.685,566,0.685,578,1.028,605,0.652,626,0.718,652,0.685,655,1.278,702,0.246,705,0.652,706,0.652,707,0.652,708,0.652,709,0.652,710,0.652,723,0.668,724,0.956,725,0.736,728,0.621,730,1.744,731,1.653,732,0.718,734,1.053,739,1.613,770,0.849,771,0.935,775,0.736,776,1.053,777,1.407,778,0.736,779,1.407,780,0.668,781,0.718,782,1.079,783,0.668,784,0.736,785,0.668,786,0.701,787,1.692,788,0.668,789,0.718,790,0.736,791,1.278,792,1.247,793,0.668,794,1.234,795,0.736,796,0.685,797,0.736,798,0.668,799,0.736,800,0.668,801,0.736,802,0.668,803,0.701,804,0.736,805,0.668,806,0.718,807,0.668,808,0.736,809,0.668,810,0.718,811,0.736,812,0.736,813,0.668,814,0.736,815,0.668,816,0.736,817,0.668,818,0.701,819,0.668,820,1.218,821,1.692,822,0.668,823,0.668,824,0.668,825,0.718,826,0.668,827,0.668,828,0.736,829,0.685,830,0.668,831,1.079,832,0.668,833,1.407,834,0.668,835,0.668,836,0.718,837,1.079,838,0.668,839,0.718,840,0.668,841,0.701,842,0.668,843,0.701,844,0.668,845,0.736,846,0.637,847,0.736,848,0.701,849,0.701,850,0.701,851,0.668,852,0.718,853,0.668,854,0.718,855,0.668,856,0.685,857,0.685,858,1.028,859,0.668,860,0.668,861,0.718,862,0.668,863,0.718,864,0.736,865,0.736,866,0.652,867,0.685,868,0.736,869,0.652,870,1.078,871,0.736,872,0.652,873,0.736,874,0.637,875,0.736,876,0.652,877,0.685,878,0.718,879,0.736,1196,4.235,1213,2.201,1280,1.911,1284,2.868,1285,4.495,1302,2.08,1303,2.08,1304,2.08,1305,2.08,1306,2.08,1308,2.08,1309,2.08,1310,2.18,1311,2.295,1314,2.295,1317,2.59,1319,1.991,1320,2.18,1338,7.253,1339,5.087,1340,6.023,1341,5.312,1342,6.023,1343,6.023,1344,6.023,1345,6.023,1346,3.797,1347,3.061,1348,3.061,1349,3.061,1350,3.797,1351,2.59,1352,2.791,1353,2.59,1354,3.365,1355,4.487,1356,3.47,1357,3.47,1358,3.47,1359,3.47,1360,3.47,1361,3.47,1362,3.061,1363,3.47,1364,3.47,1365,3.47]],["title/components/DagreCompositionComponent.html",[702,0.179,793,0.843]],["body/components/DagreCompositionComponent.html",[3,0.058,4,0.058,5,0.052,8,0.17,9,0.494,12,1.203,13,0.9,14,0.41,15,1.082,23,0.704,24,0.781,27,1.079,29,0.637,30,0.01,31,0.733,32,0.509,33,0.643,34,0.448,35,0.68,50,0.811,53,0.483,54,0.554,55,0.524,56,0.813,58,0.144,59,0.105,60,0.646,63,0.058,67,0.065,75,0.425,83,1.922,87,0.003,88,0.005,89,0.003,111,0.259,112,0.508,113,0.414,116,1.229,117,3.79,124,2.709,126,0.797,127,0.587,132,0.646,133,1.363,135,1.381,154,1.464,190,0.573,195,2.207,202,1.716,204,0.533,214,1.2,215,0.587,232,0.573,238,1.69,240,1.894,243,1.034,247,2.168,248,0.52,251,1.257,256,0.635,265,3.402,268,1.742,269,0.651,279,2.034,282,1.261,287,0.56,314,0.56,332,3.755,334,0.74,340,2.945,347,0.546,354,0.573,375,0.728,393,0.52,395,2.555,416,0.546,417,1.667,421,1.539,444,1.624,445,1.848,471,2.485,498,3.482,502,0.56,510,2.168,530,2.168,531,2.168,546,2.337,549,4.53,558,2.99,563,2.337,564,0.573,566,0.573,578,0.9,584,1.742,605,0.546,626,0.602,652,0.573,653,3.11,655,1.169,657,1.974,658,3.215,659,3.342,660,3.482,661,2.626,664,2.981,665,2.343,666,2.868,680,4.041,692,2.337,702,0.221,705,0.546,706,0.546,707,0.546,708,0.546,709,0.546,710,0.546,723,0.56,724,0.837,725,0.616,728,0.52,730,1.731,731,1.639,732,0.602,734,0.922,739,0.587,770,0.711,771,0.783,775,0.616,776,0.922,777,1.287,778,0.616,779,1.287,780,0.56,781,0.602,782,0.944,783,0.56,784,0.616,785,0.56,786,0.587,787,1.612,788,0.56,789,0.602,790,0.616,791,0.56,792,0.602,793,1.169,794,1.379,795,0.616,796,0.573,797,0.616,798,1.169,799,0.616,800,0.56,801,0.616,802,0.56,803,0.587,804,0.616,805,0.56,806,0.602,807,0.56,808,0.616,809,0.56,810,0.602,811,0.616,812,0.616,813,0.56,814,0.616,815,0.56,816,0.616,817,0.56,818,0.587,819,0.56,820,1.094,821,1.612,822,0.56,823,0.56,824,0.56,825,0.602,826,0.56,827,0.56,828,0.616,829,0.573,830,0.56,831,0.944,832,0.56,833,1.287,834,0.56,835,0.56,836,0.602,837,0.944,838,0.56,839,0.602,840,0.56,841,1.094,842,0.56,843,0.587,844,0.858,845,0.616,846,0.533,847,0.616,848,0.587,849,0.587,850,0.587,851,0.56,852,0.602,853,0.56,854,0.602,855,0.56,856,0.573,857,0.573,858,0.9,859,0.56,860,0.56,861,0.602,862,0.56,863,0.602,864,0.616,865,0.616,866,0.546,867,0.573,868,0.616,869,0.546,870,0.969,871,0.616,872,0.546,873,0.616,874,0.533,875,0.616,876,0.546,877,0.573,878,0.602,879,0.616,907,1.826,982,3.604,1138,4.315,1140,3.802,1141,3.581,1213,1.257,1284,3.422,1286,3.106,1314,1.922,1366,2.563,1367,4.453,1368,5.414,1369,4.775,1370,4.775,1371,5.414,1372,5.353,1373,5.353,1374,5.353,1375,3.928,1376,6.339,1377,5.414,1378,6.069,1379,4.453,1380,2.905,1381,2.905,1382,4.453,1383,2.905,1384,2.905,1385,2.905,1386,2.905,1387,2.905,1388,2.905,1389,2.905,1390,2.905,1391,2.905,1392,2.905,1393,2.905,1394,2.905,1395,2.905,1396,3.928,1397,4.041,1398,2.905,1399,2.034,1400,1.922,1401,2.905,1402,4.882,1403,2.905,1404,2.905,1405,2.905,1406,2.905,1407,2.905,1408,2.905,1409,2.563,1410,2.905,1411,5.414,1412,2.905,1413,1.922,1414,2.905,1415,2.905,1416,5.353,1417,2.563,1418,2.905,1419,2.563,1420,2.563,1421,2.563,1422,2.563,1423,2.563,1424,2.563,1425,2.563,1426,3.928,1427,2.905,1428,2.563,1429,2.563,1430,2.905,1431,2.563,1432,4.014,1433,3.928,1434,2.563,1435,2.905,1436,2.168,1437,2.563,1438,2.563,1439,2.563,1440,2.563,1441,2.905,1442,2.563,1443,2.563,1444,2.563,1445,2.563,1446,2.905,1447,2.563,1448,2.563,1449,2.905,1450,2.905,1451,2.905,1452,2.905,1453,2.563]],["title/components/DagreLayoutComponent.html",[702,0.179,798,0.843]],["body/components/DagreLayoutComponent.html",[3,0.059,4,0.059,5,0.053,8,0.172,9,0.5,12,1.129,13,0.91,14,0.415,15,1.061,23,0.712,24,0.774,27,0.82,29,0.643,30,0.01,31,0.72,32,0.507,33,0.647,34,0.454,35,0.671,50,0.755,53,0.49,54,0.95,55,0.898,56,0.443,58,0.145,59,0.106,60,1.657,63,0.059,67,0.066,72,0.834,75,0.799,87,0.003,88,0.005,89,0.003,111,0.263,112,0.515,113,0.42,116,1.243,118,2.517,123,1.273,126,0.806,127,0.596,132,0.656,133,1.37,135,1.123,139,0.739,140,0.854,145,1.273,146,1.729,148,1.273,154,1.652,169,1.505,170,1.131,171,2.01,189,0.876,190,0.582,194,2.517,195,2.228,201,1.958,202,1.729,204,0.541,214,1.213,215,0.596,232,0.582,238,1.705,243,1.041,248,0.528,251,1.276,256,0.642,259,4.077,269,0.659,279,2.064,282,1.269,284,1.852,287,0.568,302,2.075,314,0.568,332,1.692,334,0.908,347,0.554,354,0.582,375,0.739,383,1.767,393,0.528,416,0.554,421,2.385,444,1.642,445,1.862,471,1.889,498,2.584,502,0.568,506,3.433,510,2.2,513,2.064,530,2.2,531,2.2,549,4.564,564,0.582,566,0.582,578,0.91,605,0.554,626,0.61,652,0.582,653,3.083,655,1.178,702,0.223,705,0.554,706,0.554,707,0.554,708,0.554,709,0.554,710,0.554,723,0.568,724,0.847,725,0.625,728,0.528,730,1.732,731,1.639,732,0.61,734,0.932,739,0.596,770,0.722,771,0.794,775,0.625,776,0.932,777,1.297,778,0.625,779,1.297,780,0.568,781,0.61,782,0.955,783,0.568,784,0.625,785,0.568,786,0.596,787,1.619,788,0.568,789,0.61,790,0.625,791,0.568,792,0.61,793,0.568,794,1.384,795,0.625,796,0.582,797,0.625,798,1.178,799,0.625,800,0.568,801,0.625,802,0.568,803,0.596,804,0.625,805,0.568,806,0.61,807,0.568,808,0.625,809,0.568,810,0.61,811,0.625,812,0.625,813,0.568,814,0.625,815,0.568,816,0.625,817,0.568,818,0.596,819,0.568,820,1.104,821,1.619,822,0.568,823,0.568,824,0.568,825,0.61,826,0.568,827,0.568,828,0.625,829,0.582,830,0.568,831,0.955,832,0.568,833,1.297,834,0.568,835,0.568,836,0.61,837,0.955,838,0.568,839,0.61,840,0.568,841,0.596,842,0.568,843,0.596,844,0.867,845,0.625,846,0.541,847,0.625,848,0.596,849,0.596,850,0.596,851,0.568,852,0.61,853,0.568,854,0.61,855,0.568,856,0.582,857,0.582,858,0.91,859,0.568,860,0.568,861,0.61,862,0.568,863,0.61,864,0.625,865,0.625,866,0.554,867,0.582,868,0.625,869,0.554,870,0.978,871,0.625,872,0.554,873,0.625,874,0.541,875,0.625,876,0.554,877,0.582,878,0.61,879,0.625,982,3.978,1138,4.279,1143,3.824,1146,1.852,1147,1.562,1213,1.948,1397,4.916,1399,2.064,1400,1.95,1454,2.371,1455,5.463,1456,4.503,1457,6.116,1458,6.116,1459,6.116,1460,6.116,1461,4.503,1462,6.587,1463,4.394,1464,6.587,1465,6.587,1466,6.587,1467,6.587,1468,6.587,1469,6.116,1470,6.587,1471,4.503,1472,4.919,1473,2.948,1474,2.948,1475,4.919,1476,2.948,1477,5.811,1478,2.948,1479,2.948,1480,5.299,1481,2.948,1482,4.919,1483,2.948,1484,4.919,1485,2.948,1486,2.948,1487,2.948,1488,2.948,1489,2.948,1490,2.948,1491,2.948,1492,2.948,1493,2.948,1494,2.948,1495,2.948,1496,4.503,1497,2.948,1498,2.948,1499,2.2,1500,2.948,1501,2.6,1502,2.6,1503,4.394,1504,3.622,1505,3.622,1506,2.6,1507,2.6,1508,2.6,1509,5.463,1510,2.371,1511,5.463,1512,3.972,1513,2.948,1514,2.948,1515,2.948,1516,2.948,1517,2.948,1518,2.948,1519,2.948,1520,2.948,1521,2.948,1522,6.587,1523,2.948,1524,2.948,1525,2.948,1526,2.948,1527,2.371,1528,2.948,1529,2.948,1530,2.948,1531,2.948]],["title/components/DagreNodeComponent.html",[702,0.179,800,0.843]],["body/components/DagreNodeComponent.html",[3,0.068,4,0.068,5,0.061,8,0.198,9,0.555,12,1.226,13,1.01,14,0.46,23,0.79,24,0.745,27,0.75,29,0.588,30,0.009,31,0.746,32,0.447,33,0.644,34,0.522,35,0.652,50,0.765,53,0.563,54,0.421,55,0.398,58,0.152,59,0.122,60,0.753,63,0.068,67,0.076,72,1.413,83,2.24,87,0.003,88,0.005,89,0.003,111,0.302,112,0.592,113,0.483,116,1.379,117,4.157,124,2.926,126,0.895,127,0.685,132,0.753,133,1.444,135,0.577,154,1.259,170,1.035,190,0.668,195,2.421,202,1.854,204,0.621,214,1.346,215,0.685,232,0.668,238,1.854,243,1.105,247,2.528,248,0.606,251,1.465,256,0.712,265,3.731,268,2.03,269,0.731,279,2.371,282,1.347,287,0.652,314,0.652,332,4.198,334,0.831,340,3.305,347,0.637,354,0.668,375,0.849,393,0.606,416,0.637,421,1.794,443,3.145,445,1.996,502,0.652,510,2.528,530,2.528,531,2.528,546,2.724,549,4.893,558,3.445,563,2.724,564,0.668,566,0.668,578,1.01,584,2.03,601,2.03,605,0.637,607,2.996,626,0.701,652,0.668,653,2.968,655,1.263,661,1.465,692,2.724,702,0.243,705,0.637,706,0.637,707,0.637,708,0.637,709,0.637,710,0.637,723,0.652,724,0.94,725,0.718,728,0.606,730,1.743,731,1.652,732,0.701,734,1.035,739,0.685,770,0.829,771,0.912,775,0.718,776,1.035,777,1.39,778,0.718,779,1.39,780,0.652,781,0.701,782,1.06,783,0.652,784,0.718,785,0.652,786,0.685,787,1.682,788,0.652,789,0.701,790,0.718,791,0.652,792,0.701,793,0.652,794,1.429,795,0.718,796,0.668,797,0.718,798,1.263,799,0.718,800,1.263,801,0.718,802,0.652,803,0.685,804,0.718,805,0.652,806,0.701,807,0.652,808,0.718,809,0.652,810,0.701,811,0.718,812,0.718,813,0.652,814,0.718,815,0.652,816,0.718,817,0.652,818,0.685,819,0.652,820,1.2,821,1.682,822,0.652,823,0.652,824,0.652,825,0.701,826,0.652,827,0.652,828,0.718,829,0.668,830,0.652,831,1.06,832,0.652,833,1.39,834,0.652,835,0.652,836,0.701,837,1.06,838,0.652,839,0.701,840,0.652,841,0.685,842,0.652,843,0.685,844,0.963,845,0.718,846,0.621,847,0.718,848,0.685,849,0.685,850,0.685,851,0.652,852,0.701,853,0.652,854,0.701,855,0.652,856,0.668,857,0.668,858,1.01,859,0.652,860,0.652,861,0.701,862,0.652,863,0.701,864,0.718,865,0.718,866,0.637,867,0.668,868,0.718,869,0.637,870,1.063,871,0.718,872,0.637,873,0.718,874,0.621,875,0.718,876,0.637,877,0.668,878,0.701,879,0.718,907,2.128,982,3.85,1138,4.119,1140,3.61,1329,2.371,1369,5.238,1370,5.238,1372,5.782,1373,5.782,1374,5.782,1375,4.408,1376,6.675,1396,4.408,1397,4.432,1399,2.371,1400,2.24,1409,2.987,1416,5.782,1417,2.987,1419,2.987,1420,2.987,1421,2.987,1422,2.987,1424,2.987,1425,2.987,1426,4.408,1428,2.987,1429,2.987,1431,2.987,1432,4.336,1433,4.408,1434,2.987,1436,2.528,1437,2.987,1438,2.987,1439,2.987,1440,2.987,1442,2.987,1443,2.987,1444,2.987,1445,2.987,1447,2.987,1448,2.987,1453,2.987,1512,2.987,1532,2.987,1533,4.997,1534,5.238,1535,4.997,1536,3.387,1537,3.387,1538,3.387,1539,3.387,1540,3.387,1541,3.387,1542,3.387,1543,3.387,1544,4.408,1545,4.408,1546,5.238,1547,3.387,1548,3.387,1549,3.387,1550,3.387,1551,3.387,1552,3.387,1553,3.387,1554,3.387]],["title/classes/DagreUtils.html",[67,0.098,1499,3.267]],["body/classes/DagreUtils.html",[3,0.105,4,0.105,5,0.093,8,0.304,14,0.62,15,1.046,24,0.728,29,0.961,30,0.01,31,0.721,32,0.499,33,0.803,35,0.704,50,0.78,56,0.782,58,0.135,60,1.498,63,0.105,67,0.116,75,1.092,87,0.005,88,0.007,89,0.005,91,3.887,170,1.394,334,1.489,391,3.272,496,2.875,558,3.318,607,5.412,653,2.972,661,2.253,794,1.304,982,3.708,1137,4.899,1138,4.124,1142,3.864,1143,4.932,1144,4.937,1284,2.48,1286,2.988,1397,6.651,1399,5.859,1499,5.026,1555,4.593,1556,6.734,1557,6.734,1558,6.734,1559,6.734,1560,6.734,1561,6.734,1562,6.734,1563,6.734,1564,5.208,1565,6.734,1566,5.208,1567,6.734,1568,5.208,1569,6.734,1570,5.208,1571,6.734,1572,5.208,1573,5.208,1574,5.208,1575,5.208,1576,5.208,1577,5.208,1578,5.208,1579,6.734,1580,5.208,1581,5.208,1582,5.208,1583,4.593,1584,5.94,1585,5.94,1586,5.208,1587,5.208,1588,5.208,1589,5.208,1590,4.593,1591,5.208,1592,6.734,1593,5.208,1594,4.593,1595,5.208,1596,5.208]],["title/components/DagreYamlParserComponent.html",[702,0.179,802,0.843]],["body/components/DagreYamlParserComponent.html",[3,0.061,4,0.061,5,0.054,8,0.325,9,0.511,12,1.182,13,0.93,14,0.424,15,0.899,23,0.727,24,0.736,27,0.835,29,0.826,30,0.01,31,0.738,32,0.47,33,0.738,34,0.467,35,0.663,50,0.763,53,0.504,54,0.378,55,0.357,56,0.455,58,0.158,59,0.11,60,1.712,63,0.061,67,0.068,72,0.858,75,0.813,87,0.003,88,0.005,89,0.003,111,0.27,112,0.53,113,0.432,116,1.27,118,2.562,123,1.301,126,0.824,127,0.613,132,0.675,133,1.386,145,1.301,146,1.755,148,1.301,154,0.976,169,1.548,190,0.599,194,2.562,201,1.987,204,0.557,214,1.24,215,0.613,232,0.599,238,1.736,240,2.192,243,1.054,248,0.543,251,1.313,256,0.656,269,0.673,282,1.285,287,0.584,314,0.584,332,1.741,334,1.167,347,0.57,354,0.599,375,0.76,383,1.819,393,0.543,416,0.57,421,1.607,444,1.678,445,1.889,471,1.923,498,2.641,502,0.584,543,2.124,558,3.595,564,0.599,566,0.599,578,0.93,601,1.819,605,0.57,626,0.628,645,2.676,652,0.599,653,2.934,655,1.196,686,4.105,694,5.474,696,4.904,699,2.44,702,0.227,705,0.57,706,0.57,707,0.57,708,0.57,709,0.57,710,0.57,723,0.584,724,0.865,725,0.643,728,0.543,730,1.734,731,1.642,732,0.628,734,0.953,739,0.613,770,0.742,771,0.817,775,0.643,776,0.953,777,1.316,778,0.643,779,1.316,780,0.584,781,0.628,782,0.976,783,0.584,784,0.643,785,0.584,786,0.613,787,1.632,788,0.584,789,0.628,790,0.643,791,0.584,792,0.628,793,0.887,794,1.393,795,0.643,796,0.908,797,0.643,798,0.584,799,0.643,800,0.887,801,0.643,802,1.196,803,1.762,804,0.643,805,0.584,806,0.628,807,0.584,808,0.643,809,0.584,810,0.628,811,0.643,812,0.643,813,0.584,814,0.643,815,0.584,816,0.643,817,0.584,818,0.613,819,0.584,820,1.124,821,1.632,822,0.584,823,0.584,824,0.584,825,0.628,826,0.584,827,0.584,828,0.643,829,0.599,830,0.584,831,0.976,832,0.584,833,1.316,834,0.584,835,0.584,836,0.628,837,0.976,838,0.584,839,0.628,840,0.584,841,0.613,842,0.584,843,0.613,844,0.887,845,0.643,846,0.557,847,0.643,848,0.613,849,0.613,850,0.613,851,0.584,852,0.628,853,0.584,854,0.628,855,0.584,856,0.599,857,0.599,858,0.93,859,0.584,860,0.584,861,0.628,862,0.584,863,0.628,864,0.643,865,0.643,866,0.57,867,0.599,868,0.643,869,0.57,870,0.996,871,0.643,872,0.57,873,0.643,874,0.557,875,0.643,876,0.57,877,0.599,878,0.628,879,0.643,883,2.44,1138,4.071,1140,3.674,1142,4.029,1143,2.534,1329,2.124,1400,2.007,1510,2.44,1534,4.904,1544,4.059,1545,4.059,1546,4.904,1583,4.059,1585,2.676,1590,2.676,1594,2.676,1597,2.676,1598,4.602,1599,4.602,1600,5.56,1601,4.602,1602,4.602,1603,4.602,1604,6.206,1605,4.602,1606,6.206,1607,5.56,1608,5.56,1609,4.602,1610,3.034,1611,3.034,1612,4.602,1613,3.034,1614,4.602,1615,3.034,1616,4.602,1617,3.034,1618,3.034,1619,4.602,1620,3.034,1621,3.034,1622,3.034,1623,3.034,1624,3.034,1625,3.034,1626,3.034,1627,3.034,1628,3.034,1629,3.034,1630,3.034,1631,4.602,1632,3.034,1633,3.034,1634,4.602,1635,3.034,1636,2.264,1637,3.034,1638,3.034,1639,3.034,1640,3.034,1641,3.034,1642,3.034,1643,3.034,1644,3.034,1645,3.034,1646,3.034,1647,2.676,1648,4.904,1649,3.034,1650,3.034,1651,3.034,1652,3.034,1653,3.034,1654,3.034,1655,3.034,1656,3.034,1657,3.034,1658,3.034,1659,5.56,1660,3.034,1661,3.034,1662,3.034,1663,3.034,1664,3.034,1665,3.034,1666,3.034,1667,3.034,1668,3.034,1669,3.034,1670,3.034,1671,3.034,1672,3.034,1673,3.034,1674,3.034,1675,4.602,1676,3.034,1677,3.034,1678,4.602,1679,3.034,1680,3.034,1681,3.034,1682,4.602,1683,3.034,1684,4.602,1685,3.034,1686,3.034,1687,3.034,1688,3.034,1689,3.034,1690,3.034,1691,3.034,1692,3.034,1693,3.034,1694,3.034,1695,3.034,1696,3.034,1697,4.602,1698,3.034,1699,4.602,1700,3.034,1701,3.034,1702,3.034,1703,3.034,1704,3.034]],["title/directives/DashedDrawDirective.html",[111,0.39,866,0.823]],["body/directives/DashedDrawDirective.html",[3,0.09,4,0.09,5,0.08,8,0.262,9,0.676,12,0.961,14,0.561,23,0.962,24,0.786,27,0.914,29,0.526,30,0.01,31,0.386,32,0.517,33,0.44,35,0.64,50,0.812,54,0.925,55,0.874,56,1.039,58,0.156,59,0.162,60,1.54,63,0.09,67,0.1,72,1.265,87,0.005,88,0.006,89,0.005,111,0.399,113,0.638,116,1.681,126,1.09,135,1.18,139,1.122,140,2.252,154,1.701,155,1.292,170,1.261,182,1.177,189,1.809,194,3.189,195,2.822,201,2.378,202,2.101,240,2.789,243,1.174,251,1.936,255,3.6,256,0.868,265,4.35,268,2.683,350,4.028,361,3.423,371,3.226,373,3.667,377,4.028,463,1.547,728,0.801,730,0.841,731,1.09,866,1.145,867,1.366,880,4.708,882,5.201,894,5.545,898,6.106,1147,3.667,1335,6.106,1350,3.34,1355,5.371,1705,7.816,1706,3.947,1707,6.922,1708,7.43,1709,6.922,1710,6.922,1711,6.922,1712,6.922,1713,6.922,1714,3.6,1715,6.09,1716,3.651,1717,6.09,1718,4.475,1719,4.475,1720,4.475,1721,4.475,1722,4.475,1723,4.475,1724,4.475,1725,4.475,1726,4.475,1727,4.475,1728,4.475,1729,4.475,1730,3.132,1731,3.947,1732,2.96,1733,4.475,1734,3.6,1735,3.947,1736,6.922,1737,3.6,1738,6.09,1739,3.947,1740,3.947,1741,3.6,1742,3.947,1743,3.6,1744,3.6,1745,4.475,1746,7.43,1747,4.898,1748,4.475,1749,6.922,1750,4.475,1751,4.475,1752,4.475,1753,4.475,1754,4.475,1755,4.475,1756,6.922,1757,6.09,1758,4.475,1759,4.475,1760,4.475,1761,4.475,1762,4.475,1763,6.922,1764,4.475,1765,6.922,1766,6.09,1767,4.475,1768,4.475,1769,3.6,1770,4.475,1771,6.09,1772,4.475,1773,4.475,1774,4.475,1775,6.922,1776,3.6]],["title/pipes/Deg2RadPipe.html",[1088,3.064,1777,3.064]],["body/pipes/Deg2RadPipe.html",[3,0.133,4,0.133,5,0.118,14,0.61,24,0.59,29,0.779,30,0.009,31,0.716,32,0.405,33,0.65,35,0.57,58,0.133,59,0.239,63,0.133,67,0.148,75,0.969,87,0.007,88,0.008,89,0.007,116,1.828,135,1.493,453,3.988,728,1.186,1088,5.469,1354,4.38,1777,5.469,1778,5.326,1779,5.841,1780,7.813,1781,5.326,1782,7.813,1783,6.622,1784,6.892,1785,7.726,1786,6.892,1787,5.326,1788,6.622,1789,5.326]],["title/components/DirectionalLightComponent.html",[702,0.179,805,0.843]],["body/components/DirectionalLightComponent.html",[3,0.059,4,0.059,5,0.053,8,0.172,9,0.499,10,0.489,12,1.128,13,0.909,14,0.414,15,1.129,23,0.711,24,0.799,27,1.084,29,0.849,30,0.009,31,0.756,32,0.534,33,0.75,34,0.453,35,0.725,36,1.515,50,0.839,53,0.489,54,0.985,55,0.916,56,0.819,58,0.132,59,0.106,60,0.655,63,0.059,67,0.066,72,0.832,75,0.43,87,0.003,88,0.005,89,0.003,111,0.262,112,0.514,113,0.419,123,1.272,124,2.436,126,0.805,127,1.103,132,0.655,133,1.369,135,1.385,139,0.738,145,0.832,146,1.272,148,0.832,154,1.396,155,0.954,156,0.755,165,1.45,170,1.13,178,1.45,182,0.774,189,1.955,190,0.581,201,1.747,202,1.543,204,0.54,214,1.211,215,0.595,232,0.581,238,1.907,242,4.914,243,1.433,248,0.527,251,1.946,254,1.273,256,0.989,257,2.295,269,0.658,272,2.596,282,0.567,287,0.567,292,2.785,314,0.567,334,0.489,347,0.553,354,0.581,359,2.785,375,0.738,380,3.356,393,0.527,416,0.553,423,2.476,424,2.476,425,3.005,426,3.005,427,3.005,428,2.476,429,3.005,430,3.005,431,2.476,432,2.476,433,2.476,434,3.005,435,2.476,436,2.476,437,2.476,438,2.382,439,2.382,440,2.476,441,2.476,442,2.476,443,2.382,444,1.64,445,1.86,448,1.62,450,1.62,451,1.62,452,1.62,453,1.502,454,1.62,455,1.273,456,1.273,462,1.559,463,1.018,464,1.62,465,1.62,466,1.559,467,1.62,468,1.559,469,1.401,471,1.018,473,1.62,479,1.62,488,1.62,490,1.62,491,1.62,493,1.62,496,1.133,502,0.567,564,0.581,566,0.581,578,0.909,605,0.553,626,0.609,652,0.581,655,1.177,657,1.99,677,2.215,680,2.196,702,0.223,705,0.553,706,0.553,707,0.553,708,0.553,709,0.553,710,0.553,723,0.567,724,0.845,725,0.624,727,2.06,728,0.527,730,1.732,731,1.639,732,0.609,733,4.56,734,0.931,735,4.073,736,2.196,737,2.196,739,1.796,740,1.688,741,1.688,742,1.688,743,1.688,744,1.688,745,1.688,746,1.688,747,1.688,748,1.688,749,1.688,750,1.688,751,1.688,752,1.764,753,1.688,754,1.688,755,1.688,756,1.688,757,1.688,758,1.688,759,1.688,760,1.688,761,1.764,762,1.688,763,1.688,764,1.688,765,1.688,766,1.688,767,1.764,768,1.688,769,1.688,770,0.72,771,0.793,774,2.196,775,0.624,776,0.931,777,1.296,778,0.624,779,1.296,780,0.567,781,0.609,782,0.954,783,0.567,784,0.624,785,0.567,786,0.595,787,1.618,788,0.567,789,0.609,790,0.624,791,0.567,792,0.609,793,0.567,794,1.15,795,0.624,796,0.581,797,0.624,798,0.567,799,0.624,800,0.567,801,0.624,802,0.567,803,0.595,804,0.624,805,1.177,806,1.13,807,0.567,808,0.624,809,0.567,810,0.609,811,0.624,812,0.624,813,0.567,814,0.624,815,0.567,816,0.624,817,0.567,818,0.595,819,0.567,820,1.103,821,1.618,822,0.567,823,0.567,824,0.567,825,0.609,826,0.567,827,0.567,828,0.624,829,0.581,830,0.567,831,0.954,832,0.567,833,1.296,834,0.567,835,0.567,836,0.609,837,0.954,838,0.567,839,0.609,840,0.567,841,0.595,842,0.567,843,0.595,844,0.567,845,0.624,846,0.54,847,0.624,848,0.595,849,0.595,850,0.595,851,0.567,852,0.609,853,0.567,854,0.609,855,0.567,856,0.581,857,0.581,858,0.909,859,0.567,860,0.567,861,0.609,862,0.567,863,0.609,864,0.624,865,0.624,866,0.553,867,0.581,868,0.624,869,0.553,870,0.977,871,0.624,872,0.553,873,0.624,874,0.54,875,0.624,876,0.553,877,0.581,878,0.609,879,0.624,1214,2.06,1790,6.121,1791,4.497,1792,4.497,1793,2.596,1794,2.943,1795,2.943,1796,2.943,1797,2.943,1798,2.596,1799,2.367,1800,2.943,1801,3.839,1802,2.943,1803,2.943,1804,2.943,1805,2.596,1806,2.596,1807,2.596,1808,2.943,1809,2.596,1810,2.596,1811,2.367]],["title/components/DofComponent.html",[702,0.179,807,0.843]],["body/components/DofComponent.html",[3,0.074,4,0.074,5,0.066,8,0.216,9,0.591,10,0.614,12,1.104,14,0.49,15,0.874,23,0.841,24,0.75,29,0.734,30,0.009,31,0.747,32,0.475,33,0.711,34,0.569,35,0.67,36,1.245,50,0.788,53,0.614,54,0.85,55,0.803,58,0.145,59,0.133,63,0.074,67,0.082,75,0.54,87,0.004,88,0.005,89,0.004,111,0.329,112,0.645,113,0.526,123,1.505,126,0.953,127,0.747,132,0.822,133,1.488,135,1.064,139,0.926,140,1.07,145,1.045,146,2.133,148,2.048,154,1.449,156,0.948,169,3.186,170,1.292,190,1.662,192,2.586,196,3.727,197,3.973,198,3.186,199,3.742,200,5.098,201,1.998,202,1.765,203,4.518,204,1.329,206,3.973,214,1.434,215,1.262,216,2.586,232,0.729,243,0.584,248,0.661,256,0.526,269,0.779,282,0.712,287,0.712,314,0.712,334,0.614,347,0.695,354,0.729,393,0.661,416,0.695,502,0.712,506,4.55,564,0.729,566,0.729,578,1.076,605,0.695,626,0.765,652,0.729,655,1.316,702,0.255,705,0.695,706,0.695,707,0.695,708,0.695,709,0.695,710,0.695,723,0.712,724,1.001,725,0.783,728,0.661,730,1.749,731,1.658,732,0.765,734,0.765,739,1.609,771,0.995,775,0.783,776,1.102,777,1.449,778,0.783,779,1.449,780,0.712,781,0.765,782,1.129,783,0.712,784,0.783,785,0.712,786,0.747,787,1.719,788,0.712,789,0.765,790,0.783,791,0.712,792,0.765,793,0.712,794,1.265,795,0.783,796,0.729,797,0.783,798,0.712,799,0.783,800,0.712,801,0.783,802,0.712,803,0.747,804,0.783,805,0.712,806,0.765,807,1.316,808,0.783,809,0.712,810,0.765,811,0.783,812,0.783,813,0.712,814,0.783,815,0.712,816,0.783,817,0.712,818,0.747,819,0.712,820,1.262,821,1.719,822,0.712,823,0.712,824,0.712,825,0.765,826,0.712,827,0.712,828,0.783,829,0.729,830,0.712,831,1.129,832,0.712,833,1.449,834,0.712,835,0.712,836,0.765,837,1.129,838,0.712,839,0.765,840,0.712,841,0.747,842,0.712,843,0.747,844,0.712,845,0.783,846,0.678,847,0.783,848,0.747,849,0.747,850,0.747,851,0.712,852,0.765,853,0.712,854,0.765,855,0.712,856,0.729,857,0.729,858,1.076,859,0.712,860,0.712,861,0.765,862,0.712,863,0.765,864,0.783,865,0.783,866,0.695,867,0.729,868,0.783,869,0.695,870,1.118,871,0.783,872,0.695,873,0.783,874,0.678,875,0.783,876,0.695,877,0.729,878,0.765,879,0.783,1196,3.055,1212,2.586,1221,2.586,1263,2.971,1264,2.971,1265,2.971,1266,2.971,1267,2.971,1268,2.971,1273,2.971,1284,1.759,1286,2.12,1812,3.258,1813,5.324,1814,7.241,1815,7.241,1816,7.241,1817,5.324,1818,5.324,1819,3.694,1820,3.694,1821,5.324,1822,3.694,1823,3.694,1824,3.694,1825,3.694,1826,3.694,1827,3.694,1828,6.242,1829,6.242,1830,3.694,1831,3.694,1832,6.242,1833,3.694,1834,3.694,1835,3.694,1836,5.324,1837,3.694,1838,3.258]],["title/components/DotScreenComponent.html",[702,0.179,809,0.843]],["body/components/DotScreenComponent.html",[3,0.079,4,0.079,5,0.07,8,0.229,9,0.617,10,0.652,12,1.122,14,0.512,15,0.898,23,0.878,24,0.743,29,0.759,30,0.009,31,0.754,32,0.453,33,0.728,34,0.604,35,0.682,36,1.322,50,0.804,53,0.652,54,0.692,55,0.654,58,0.155,59,0.142,63,0.079,67,0.088,75,0.574,87,0.004,88,0.006,89,0.004,111,0.35,112,0.685,113,0.559,123,1.572,126,0.995,127,0.793,132,0.873,133,1.519,135,0.669,139,1.393,140,1.137,145,1.109,146,2.176,148,1.572,154,1.179,156,1.007,165,1.933,190,1.68,192,2.746,196,3.89,197,4.148,198,3.583,199,3.869,200,5.239,201,2.066,202,1.825,203,4.643,204,1.36,206,4.148,214,1.497,215,1.305,216,2.746,232,0.774,243,0.62,248,0.995,256,0.559,269,0.813,282,0.756,287,0.756,314,0.756,320,2.352,321,2.465,334,0.652,347,0.738,354,0.774,393,0.702,416,0.738,502,0.756,541,2.595,542,2.595,564,0.774,566,0.774,578,1.124,605,0.738,626,0.812,652,0.774,655,1.352,702,0.264,705,0.738,706,0.738,707,0.738,708,0.738,709,0.738,710,0.738,723,0.756,724,1.045,725,0.832,728,0.702,730,1.753,731,1.663,732,0.812,734,0.812,739,1.634,771,1.057,775,0.832,776,1.151,777,1.489,778,0.832,779,1.489,780,0.756,781,0.812,782,1.179,783,0.756,784,0.832,785,0.756,786,0.793,787,1.744,788,0.756,789,0.812,790,0.832,791,0.756,792,0.812,793,0.756,794,1.294,795,0.832,796,0.774,797,0.832,798,0.756,799,0.832,800,0.756,801,0.832,802,0.756,803,0.793,804,0.832,805,0.756,806,0.812,807,0.756,808,0.832,809,1.352,810,1.336,811,0.832,812,0.832,813,0.756,814,0.832,815,0.756,816,0.832,817,0.756,818,0.793,819,0.756,820,1.305,821,1.744,822,0.756,823,0.756,824,0.756,825,0.812,826,0.756,827,0.756,828,0.832,829,0.774,830,0.756,831,1.179,832,0.756,833,1.489,834,0.756,835,0.756,836,0.812,837,1.179,838,0.756,839,0.812,840,0.756,841,0.793,842,0.756,843,0.793,844,0.756,845,0.832,846,0.72,847,0.832,848,0.793,849,0.793,850,0.793,851,0.756,852,0.812,853,0.756,854,0.812,855,0.756,856,0.774,857,0.774,858,1.124,859,0.756,860,0.756,861,0.812,862,0.756,863,0.812,864,0.832,865,0.832,866,0.738,867,0.774,868,0.832,869,0.738,870,1.156,871,0.832,872,0.738,873,0.832,874,0.72,875,0.832,876,0.738,877,0.774,878,0.812,879,0.832,1181,3.156,1182,3.156,1263,3.156,1264,3.156,1265,3.156,1266,3.156,1267,3.156,1268,3.156,1273,3.156,1276,2.928,1277,2.928,1278,3.156,1839,5.693,1840,3.46,1841,4.902,1842,5.693,1843,5.558,1844,4.148,1845,3.923,1846,3.923,1847,3.923,1848,3.923,1849,3.923]],["title/interfaces/Edge.html",[64,1.596,1142,2.511]],["body/interfaces/Edge.html",[3,0.126,4,0.126,5,0.113,8,0.368,9,0.841,27,1.386,30,0.009,31,0.542,32,0.551,33,0.829,34,0.969,58,0.126,63,0.174,64,3.15,87,0.006,88,0.008,89,0.006,135,1.386,269,1.235,334,1.046,496,3.133,558,3.1,653,2.234,657,3.078,661,2.723,794,1.324,982,3.465,1136,3.465,1137,5.179,1138,3.1,1139,4.162,1140,4.174,1141,4.162,1142,4.349,1143,3.465,1144,4.162,1145,4.404,1146,3.954,1147,3.333]],["title/components/EffectComposerComponent.html",[204,0.803,702,0.179]],["body/components/EffectComposerComponent.html",[3,0.073,4,0.073,5,0.065,8,0.361,9,0.583,12,0.997,14,0.484,15,1.118,23,0.83,24,0.74,29,0.726,30,0.009,31,0.745,32,0.458,33,0.706,34,0.558,35,0.666,50,0.808,53,0.602,54,0.451,55,0.426,56,0.788,58,0.151,59,0.131,60,1.374,63,0.073,67,0.081,72,1.025,75,0.53,87,0.004,88,0.005,89,0.004,111,0.323,112,0.633,113,0.516,116,1.449,126,0.94,127,0.733,132,0.806,133,1.479,139,0.908,154,1.31,156,0.93,165,1.785,170,1.087,171,1.618,189,2.011,190,0.715,194,2.845,195,2.518,196,5.809,201,2.167,202,1.915,203,4.753,204,1.242,214,1.415,215,1.248,217,3.197,219,4.059,220,6.217,225,3.197,232,0.715,243,0.573,248,0.649,256,0.748,282,0.698,287,0.698,302,1.67,314,0.698,334,0.602,347,0.681,354,0.715,393,0.649,416,0.681,502,0.698,564,0.715,566,0.715,578,1.062,605,0.681,626,0.75,652,0.715,655,1.304,665,2.93,702,0.277,705,0.681,706,0.681,707,0.681,708,0.681,709,0.681,710,0.681,723,0.698,724,0.987,725,0.769,728,0.649,730,1.748,731,1.657,732,0.75,734,0.75,775,0.769,776,1.087,777,1.436,778,0.769,779,1.436,780,0.698,781,0.75,782,1.114,783,0.698,784,0.769,785,0.698,786,0.733,787,1.711,788,0.698,789,0.75,790,0.769,791,0.698,792,0.75,793,0.698,794,1.255,795,0.769,796,0.715,797,0.769,798,0.698,799,0.769,800,0.698,801,0.769,802,0.698,803,0.733,804,0.769,805,0.698,806,0.75,807,0.698,808,0.769,809,0.698,810,0.75,811,0.769,812,0.769,813,0.698,814,0.769,815,0.698,816,0.769,817,0.698,818,0.733,819,0.698,820,1.248,821,1.711,822,0.698,823,0.698,824,0.698,825,0.75,826,0.698,827,0.698,828,0.769,829,0.715,830,0.698,831,1.114,832,0.698,833,1.436,834,0.698,835,0.698,836,0.75,837,1.114,838,0.698,839,0.75,840,0.698,841,0.733,842,0.698,843,0.733,844,0.698,845,0.769,846,1.418,847,0.769,848,0.733,849,0.733,850,0.733,851,0.698,852,0.75,853,0.698,854,0.75,855,0.698,856,0.715,857,0.715,858,1.062,859,0.698,860,0.698,861,0.75,862,0.698,863,0.75,864,0.769,865,0.769,866,0.681,867,0.715,868,0.769,869,0.681,870,1.106,871,0.769,872,0.681,873,0.769,874,0.665,875,0.769,876,0.681,877,0.715,878,0.75,879,0.769,1165,5.447,1176,5.447,1177,3.197,1180,3.197,1232,2.277,1838,3.197,1850,7.399,1851,3.197,1852,5.251,1853,6.771,1854,6.771,1855,5.251,1856,6.175,1857,6.175,1858,5.251,1859,3.624,1860,3.624,1861,5.251,1862,3.624,1863,3.624,1864,3.624,1865,3.624,1866,3.624,1867,5.251,1868,3.624,1869,3.624,1870,3.624,1871,3.624,1872,5.251,1873,3.624,1874,3.624,1875,3.624,1876,3.624,1877,3.624,1878,3.197,1879,3.624,1880,3.197,1881,3.197,1882,3.624,1883,3.624,1884,3.624,1885,3.624,1886,3.624,1887,3.624,1888,3.624,1889,3.624,1890,3.624,1891,3.624,1892,3.624,1893,3.624,1894,3.624,1895,3.624,1896,3.624]],["title/components/EmptyComponent.html",[702,0.179,813,0.843]],["body/components/EmptyComponent.html",[3,0.064,4,0.064,5,0.057,8,0.185,9,0.528,10,0.527,12,1.145,13,0.961,14,0.438,15,1.138,23,0.751,24,0.799,27,1.021,29,0.871,30,0.009,31,0.762,32,0.531,33,0.765,34,0.488,35,0.734,36,1.602,50,0.853,53,0.527,54,0.888,55,0.84,56,0.476,58,0.137,59,0.114,63,0.064,67,0.071,72,0.896,75,0.463,87,0.003,88,0.005,89,0.003,111,0.282,112,0.553,113,0.451,116,1.312,123,1.345,124,2.547,126,0.851,127,1.154,132,0.705,133,1.409,135,1.352,145,0.896,146,1.345,148,0.896,155,1.008,156,0.813,178,1.561,182,0.833,189,1.695,190,0.625,194,2.63,201,1.827,202,1.614,204,0.581,214,1.281,215,0.64,232,0.625,238,1.98,243,1.44,248,0.567,251,2.47,254,1.371,256,1.017,257,2.427,269,0.696,282,0.61,284,2.988,287,0.61,292,2.913,314,0.61,334,0.527,347,0.596,354,0.625,375,0.794,393,0.567,416,0.596,423,2.618,424,2.618,425,3.143,426,3.143,427,3.143,428,2.618,429,3.143,430,3.143,431,2.618,432,2.618,433,2.618,434,3.143,435,2.618,436,2.618,437,2.618,438,2.518,439,2.518,440,2.618,441,2.618,442,2.618,443,2.518,444,1.734,445,1.931,448,1.744,450,1.744,451,1.744,452,1.744,453,1.617,454,1.744,455,1.371,456,1.371,462,1.678,463,1.095,464,1.744,465,1.744,466,1.678,467,1.744,468,1.678,469,1.508,471,1.095,473,1.744,479,1.744,488,1.744,490,1.744,491,1.744,493,1.744,496,1.22,502,0.61,564,0.625,566,0.625,578,0.961,605,0.596,626,0.656,652,0.625,655,1.222,702,0.233,705,0.596,706,0.596,707,0.596,708,0.596,709,0.596,710,0.596,723,0.61,724,0.894,725,0.672,728,0.567,730,1.738,731,1.646,732,0.656,734,0.985,739,1.809,740,1.818,741,1.818,742,1.818,743,1.818,744,1.818,745,1.818,746,1.818,747,1.818,748,1.818,749,1.818,750,1.818,751,1.818,752,1.899,753,1.818,754,1.818,755,1.818,756,1.818,757,1.818,758,1.818,759,1.818,760,1.818,761,1.899,762,1.818,763,1.818,764,1.818,765,1.818,766,1.818,767,1.899,768,1.818,769,1.818,770,0.775,771,0.853,775,0.672,776,0.985,777,1.345,778,0.672,779,1.345,780,0.61,781,0.656,782,1.008,783,0.61,784,0.672,785,0.61,786,0.64,787,1.652,788,0.61,789,0.656,790,0.672,791,0.61,792,0.656,793,0.61,794,1.188,795,0.672,796,0.625,797,0.672,798,0.61,799,0.672,800,0.61,801,0.672,802,0.61,803,0.64,804,0.672,805,0.61,806,0.656,807,0.61,808,0.672,809,0.61,810,0.656,811,0.672,812,0.672,813,1.222,814,0.672,815,0.61,816,0.672,817,0.61,818,0.64,819,0.61,820,1.154,821,1.652,822,0.61,823,0.61,824,0.61,825,0.656,826,0.61,827,0.61,828,0.672,829,0.625,830,0.61,831,1.008,832,0.61,833,1.345,834,0.61,835,0.61,836,0.656,837,1.008,838,0.61,839,0.656,840,0.61,841,0.64,842,0.61,843,0.64,844,0.61,845,0.672,846,0.581,847,0.672,848,0.64,849,0.64,850,0.64,851,0.61,852,0.656,853,0.61,854,0.656,855,0.61,856,0.625,857,0.625,858,0.961,859,0.61,860,0.61,861,0.656,862,0.61,863,0.656,864,0.672,865,0.672,866,0.596,867,0.625,868,0.672,869,0.596,870,1.022,871,0.672,872,0.596,873,0.672,874,0.581,875,0.672,876,0.596,877,0.625,878,0.656,879,0.672,1327,2.794,1897,2.794,1898,4.755,1899,3.168]],["title/components/FogComponent.html",[702,0.179,815,0.843]],["body/components/FogComponent.html",[3,0.077,4,0.077,5,0.068,8,0.223,9,0.605,12,1.164,14,0.502,15,0.976,23,0.861,24,0.738,27,0.818,29,0.641,30,0.009,31,0.746,32,0.466,33,0.681,34,0.588,35,0.632,50,0.797,53,0.634,54,0.791,55,0.747,56,0.573,58,0.139,59,0.138,63,0.077,67,0.085,75,0.558,87,0.004,88,0.006,89,0.004,111,0.34,112,0.666,113,0.544,116,1.503,118,2.928,123,1.54,126,0.975,127,0.771,132,0.849,133,1.505,135,1.181,145,1.54,146,1.96,148,1.54,154,1.47,155,1.155,156,0.979,169,1.947,171,2.431,190,0.753,194,2.928,195,2.591,201,2.219,202,1.96,204,0.7,214,1.468,215,0.771,219,3.266,232,0.753,243,0.603,248,0.683,256,0.776,282,0.735,287,0.735,302,1.757,314,0.735,334,0.634,346,3.538,347,0.717,350,3.603,354,0.753,393,0.683,416,0.717,445,1.935,502,0.735,522,3.364,564,0.753,566,0.753,578,1.101,605,0.717,619,6.114,626,0.79,652,0.753,655,1.335,657,2.528,702,0.26,705,0.717,706,0.717,707,0.717,708,0.717,709,0.717,710,0.717,723,0.735,724,1.024,725,0.809,728,0.683,730,1.751,731,1.661,732,0.79,734,0.79,775,0.809,776,1.128,777,1.47,778,0.809,779,1.47,780,0.735,781,0.79,782,1.155,783,0.735,784,0.809,785,0.735,786,0.771,787,1.732,788,0.735,789,0.79,790,0.809,791,0.735,792,0.79,793,0.735,794,1.281,795,0.809,796,0.753,797,0.809,798,0.735,799,0.809,800,0.735,801,0.809,802,0.735,803,0.771,804,0.809,805,0.735,806,0.79,807,0.735,808,0.809,809,0.735,810,0.79,811,0.809,812,0.809,813,0.735,814,0.809,815,1.335,816,0.809,817,0.735,818,0.771,819,0.735,820,1.285,821,1.732,822,0.735,823,0.735,824,0.735,825,0.79,826,0.735,827,0.735,828,0.809,829,0.753,830,0.735,831,1.155,832,0.735,833,1.47,834,0.735,835,0.735,836,0.79,837,1.155,838,0.735,839,0.79,840,0.735,841,0.771,842,0.735,843,0.771,844,0.735,845,0.809,846,1.345,847,0.809,848,0.771,849,0.771,850,0.771,851,0.735,852,0.79,853,0.735,854,0.79,855,0.735,856,0.753,857,0.753,858,1.101,859,0.735,860,0.735,861,0.79,862,0.735,863,0.79,864,0.809,865,0.809,866,0.717,867,0.753,868,0.809,869,0.717,870,1.138,871,0.809,872,0.717,873,0.809,874,0.7,875,0.809,876,0.717,877,0.753,878,0.79,879,0.809,1159,4.382,1205,4.382,1801,3.423,1900,3.364,1901,5.448,1902,6.932,1903,5.605,1904,6.114,1905,5.448,1906,5.448,1907,3.814,1908,3.814,1909,3.814,1910,3.814,1911,3.814,1912,3.814,1913,3.814,1914,3.814,1915,3.814,1916,3.814,1917,5.448,1918,5.448,1919,3.814,1920,3.814,1921,3.814,1922,5.448,1923,3.814,1924,5.448,1925,3.814,1926,3.364,1927,3.364,1928,3.814,1929,3.814,1930,3.814]],["title/injectables/FontService.html",[0,1.401,1064,2.895]],["body/injectables/FontService.html",[0,2.415,2,3.076,3,0.125,4,0.125,5,0.112,8,0.365,9,0.837,10,1.038,12,1.196,14,0.695,15,0.965,24,0.722,27,1.294,29,0.887,30,0.009,31,0.65,32,0.461,33,0.741,35,0.65,49,4.522,53,1.038,54,0.777,55,0.734,56,1.217,58,0.163,59,0.225,60,1.389,63,0.125,67,0.139,75,0.913,87,0.006,88,0.008,89,0.006,90,5.794,93,5.63,94,5.63,95,4.154,96,4.989,98,5.63,100,5.094,101,4.659,155,1.6,269,1.104,393,1.118,739,1.639,1064,4.989,1931,5.507,1932,6.243,1933,5.022,1934,5.022,1935,5.022,1936,6.243,1937,6.243,1938,6.243,1939,5.507,1940,5.507]],["title/components/FrameMeshComponent.html",[702,0.179,817,0.843]],["body/components/FrameMeshComponent.html",[3,0.067,4,0.067,5,0.059,8,0.194,10,0.818,12,1.144,13,0.995,14,0.453,15,0.887,23,0.778,24,0.755,27,0.739,29,0.69,30,0.009,31,0.735,32,0.497,33,0.681,34,0.511,35,0.626,36,2.743,50,0.613,53,0.552,54,0.936,55,0.884,56,0.881,58,0.146,59,0.12,60,1.786,63,0.067,67,0.074,75,0.858,87,0.003,88,0.005,89,0.003,111,0.296,112,0.58,113,0.473,116,1.359,118,2.704,123,1.392,126,0.881,127,0.671,132,0.738,133,1.433,135,1.106,139,1.471,140,0.962,145,1.392,146,1.836,148,1.392,154,1.377,155,1.044,156,0.852,169,1.694,170,1.344,171,1.481,182,1.295,189,1.743,190,0.655,204,0.609,214,1.326,215,0.671,232,0.655,238,2.026,243,1.096,248,0.594,249,3.58,256,0.702,269,0.72,282,0.639,287,0.639,314,0.639,332,1.904,334,0.552,347,0.624,354,1.644,356,3.367,357,2.825,358,3.231,359,2.513,360,2.425,361,2.991,362,2.425,363,2.711,367,1.904,370,1.904,371,3.847,373,1.758,375,0.832,383,1.99,384,3.96,388,1.904,393,0.594,416,0.624,421,1.758,445,1.976,463,1.702,502,0.639,506,3.687,513,2.323,564,0.655,566,0.655,578,0.995,605,0.624,626,0.687,652,0.655,655,1.25,702,0.24,705,0.624,706,0.624,707,0.624,708,0.624,709,0.624,710,0.624,723,0.639,724,0.926,725,0.704,728,0.594,730,1.741,731,1.65,732,0.687,734,1.019,739,1.595,770,0.812,771,0.894,775,0.704,776,1.019,777,1.377,778,0.704,779,1.377,780,0.639,781,0.687,782,1.044,783,0.639,784,0.704,785,0.639,786,0.671,787,1.673,788,0.639,789,0.687,790,0.704,791,0.639,792,0.687,793,0.639,794,1.211,795,0.704,796,0.655,797,0.704,798,0.639,799,0.704,800,0.639,801,0.704,802,0.639,803,0.671,804,0.704,805,0.639,806,0.687,807,0.639,808,0.704,809,0.639,810,0.687,811,0.704,812,0.704,813,0.639,814,0.704,815,0.639,816,0.704,817,1.25,818,1.186,819,0.639,820,1.186,821,1.673,822,0.639,823,0.639,824,0.639,825,0.687,826,0.639,827,0.639,828,0.704,829,0.655,830,0.639,831,1.044,832,0.639,833,1.377,834,0.639,835,0.639,836,0.687,837,1.044,838,0.639,839,0.687,840,0.639,841,0.671,842,0.639,843,0.671,844,0.639,845,0.704,846,0.609,847,0.704,848,0.671,849,0.671,850,0.671,851,0.639,852,0.687,853,0.639,854,0.687,855,0.639,856,0.655,857,0.655,858,0.995,859,0.639,860,0.639,861,0.687,862,0.639,863,0.687,864,0.704,865,0.704,866,0.624,867,0.655,868,0.704,869,0.624,870,1.051,871,0.704,872,0.624,873,0.704,874,0.609,875,0.704,876,0.624,877,0.655,878,0.687,879,0.704,1213,2.13,1280,1.828,1289,2.669,1300,2.477,1302,1.99,1303,1.99,1304,1.99,1305,1.99,1306,1.99,1307,2.927,1308,1.99,1309,1.99,1310,2.085,1320,2.085,1351,3.674,1353,2.477,1747,3.96,1941,6.631,1942,4.923,1943,6.492,1944,6.492,1945,6.492,1946,5.868,1947,4.845,1948,6.492,1949,3.319,1950,3.319,1951,4.923,1952,4.923,1953,4.923,1954,7.722,1955,4.923,1956,8.243,1957,2.669,1958,2.927,1959,3.319,1960,7.263,1961,6.492,1962,2.927,1963,3.319,1964,3.319,1965,3.319,1966,4.342,1967,2.927,1968,2.927,1969,3.319,1970,2.927,1971,2.927]],["title/interfaces/GraphModel.html",[64,1.596,1143,2.41]],["body/interfaces/GraphModel.html",[3,0.125,4,0.125,5,0.111,8,0.364,9,0.836,27,1.358,30,0.009,31,0.536,32,0.535,33,0.878,34,0.959,58,0.125,63,0.173,64,3.141,87,0.006,88,0.008,89,0.006,135,1.061,269,1.185,334,1.035,496,3.466,558,3.068,653,2.211,657,2.271,661,2.695,794,1.316,982,4.633,1136,3.429,1137,5.043,1138,3.068,1139,4.119,1140,4.147,1141,4.119,1142,3.573,1143,4.147,1144,5.355,1145,5.889,1146,5.286,1147,4.456]],["title/components/GridActorComponent.html",[702,0.179,819,0.843]],["body/components/GridActorComponent.html",[3,0.068,4,0.068,5,0.06,8,0.197,9,0.552,12,0.968,13,1.006,14,0.458,15,1.013,24,0.762,27,0.747,29,0.696,30,0.009,31,0.737,32,0.515,33,0.581,34,0.519,35,0.601,50,0.619,53,0.56,54,0.868,55,0.82,56,1.164,58,0.14,59,0.122,60,1.68,63,0.068,67,0.075,75,0.728,87,0.003,88,0.005,89,0.003,111,0.3,112,0.588,113,0.48,126,0.891,127,0.681,135,1.321,154,1.479,155,1.055,170,1.226,190,0.665,204,0.618,215,0.681,232,0.665,238,1.848,243,0.532,248,0.891,251,1.457,256,0.709,263,2.709,269,0.728,282,1.344,287,0.649,314,0.649,334,0.56,347,0.633,354,0.665,375,0.844,393,0.603,416,0.633,444,1.815,463,1.721,471,2.738,498,4.003,502,0.649,564,0.665,566,0.665,578,1.006,601,2.019,605,0.633,607,2.983,626,0.697,652,0.665,653,3.036,655,1.259,657,2.158,659,3.6,664,3.259,665,2.561,702,0.242,705,0.633,706,0.633,707,0.633,708,0.633,709,0.633,710,0.633,723,0.649,724,0.936,725,0.714,728,0.603,730,1.742,731,1.651,732,0.697,734,1.03,739,0.681,770,0.824,775,0.714,776,1.03,777,1.387,778,0.714,779,1.387,780,0.649,781,0.697,782,1.055,783,0.649,784,0.714,785,0.649,786,0.681,787,1.679,788,0.649,789,0.697,790,0.714,791,0.649,792,0.697,793,0.649,794,1.219,795,0.714,796,0.665,797,0.714,798,0.649,799,0.714,800,0.649,801,0.714,802,0.649,803,0.681,804,0.714,805,0.649,806,0.697,807,0.649,808,0.714,809,0.649,810,0.697,811,0.714,812,0.714,813,0.649,814,0.714,815,0.649,816,0.714,817,0.649,818,0.681,819,1.259,820,1.568,821,1.679,822,0.649,823,1.259,824,0.649,825,0.697,826,0.649,827,0.649,828,0.714,829,0.665,830,0.649,831,1.055,832,0.649,833,1.387,834,0.649,835,0.649,836,0.697,837,1.055,838,0.649,839,0.697,840,0.649,841,0.681,842,0.649,843,0.681,844,0.649,845,0.714,846,0.618,847,0.714,848,0.681,849,0.681,850,0.681,851,0.649,852,0.697,853,0.649,854,0.697,855,0.649,856,0.665,857,0.665,858,1.006,859,0.649,860,0.649,861,0.697,862,0.649,863,0.697,864,0.714,865,1.255,866,0.633,867,0.665,868,0.714,869,0.633,870,1.171,871,0.714,872,0.633,873,0.714,874,0.618,875,0.714,876,0.633,877,0.665,878,0.697,879,0.714,886,3.751,907,2.116,1129,3.915,1232,2.116,1329,2.357,1400,2.227,1402,4.003,1413,3.291,1947,4.879,1972,7.542,1973,1.932,1974,4.976,1975,5.221,1976,4.976,1977,4.976,1978,4.389,1979,5.221,1980,5.221,1981,4.761,1982,5.919,1983,5.919,1984,3.368,1985,2.97,1986,4.389,1987,3.368,1988,3.483,1989,3.368,1990,3.368,1991,2.97,1992,2.709,1993,3.368,1994,4.976,1995,5.638,1996,3.368,1997,5.919,1998,3.368,1999,4.976,2000,3.368,2001,4.003,2002,2.97,2003,2.709,2004,4.976,2005,3.368,2006,3.368,2007,3.368,2008,6.976,2009,4.976,2010,3.368,2011,4.976,2012,3.368,2013,4.003,2014,3.368,2015,2.709,2016,2.357,2017,3.368,2018,3.368,2019,7.302,2020,3.368,2021,2.97,2022,3.368,2023,3.368,2024,3.368,2025,3.368,2026,3.368,2027,2.709,2028,2.97,2029,5.919,2030,3.368,2031,3.368,2032,3.368,2033,4.976,2034,3.368,2035,3.368,2036,3.368,2037,3.368,2038,3.368,2039,3.368,2040,3.368]],["title/components/GridHelperComponent.html",[702,0.179,822,0.843]],["body/components/GridHelperComponent.html",[3,0.063,4,0.063,5,0.056,8,0.182,9,0.521,10,0.518,12,1.142,13,0.949,14,0.433,15,1.136,23,0.742,24,0.801,27,1.013,29,0.866,30,0.009,31,0.761,32,0.534,33,0.762,34,0.48,35,0.732,36,1.582,50,0.85,53,0.518,54,0.883,55,0.834,56,0.468,58,0.136,59,0.113,63,0.063,67,0.07,72,0.881,75,0.456,87,0.003,88,0.005,89,0.003,111,0.278,112,0.544,113,0.444,123,1.328,124,2.522,126,0.841,127,1.143,132,0.693,133,1.4,135,1.416,145,0.881,146,1.328,148,0.881,154,1.199,155,0.996,156,0.8,178,1.535,182,0.82,189,1.679,190,0.615,201,1.809,202,1.598,204,0.572,214,1.265,215,0.63,232,0.615,238,1.964,243,1.438,248,0.558,254,1.349,256,1.011,257,2.397,269,0.687,282,0.6,287,0.6,292,2.885,314,0.6,334,0.518,347,0.586,354,0.615,375,0.781,392,3.778,393,0.558,416,0.586,423,2.586,424,2.586,425,3.112,426,3.112,427,3.112,428,2.586,429,3.112,430,3.112,431,2.586,432,2.586,433,2.586,434,3.112,435,2.586,436,2.586,437,2.586,438,2.488,439,2.488,440,2.586,441,2.586,442,2.586,443,2.488,444,1.713,445,1.915,448,1.716,450,1.716,451,1.716,452,1.716,453,1.591,454,1.716,455,1.349,456,1.349,462,1.651,463,1.078,464,1.716,465,1.716,466,1.651,467,1.716,468,1.651,469,1.484,471,1.078,473,1.716,479,1.716,488,1.716,490,1.716,491,1.716,493,1.716,496,1.2,502,0.6,564,0.615,566,0.615,578,0.949,605,0.586,626,0.645,652,0.615,655,1.212,702,0.231,705,0.586,706,0.586,707,0.586,708,0.586,709,0.586,710,0.586,723,0.6,724,0.883,725,0.661,728,0.558,730,1.736,731,1.644,732,0.645,734,0.973,739,1.806,740,1.788,741,1.788,742,2.695,743,1.788,744,1.788,745,1.788,746,1.788,747,1.788,748,1.788,749,1.788,750,1.788,751,1.788,752,1.868,753,1.788,754,1.788,755,1.788,756,1.788,757,1.788,758,1.788,759,1.788,760,1.788,761,1.868,762,1.788,763,1.788,764,1.788,765,1.788,766,1.788,767,1.868,768,1.788,769,1.788,770,0.763,771,0.84,775,0.661,776,0.973,777,1.334,778,0.661,779,1.334,780,0.6,781,0.645,782,0.996,783,0.6,784,0.661,785,0.6,786,0.63,787,1.645,788,0.6,789,0.645,790,0.661,791,0.6,792,0.645,793,0.6,794,1.179,795,0.661,796,0.615,797,0.661,798,0.6,799,0.661,800,0.6,801,0.661,802,0.6,803,0.63,804,0.661,805,0.6,806,0.645,807,0.6,808,0.661,809,0.6,810,0.645,811,0.661,812,0.661,813,0.6,814,0.661,815,0.6,816,0.661,817,0.6,818,0.63,819,0.6,820,1.365,821,1.645,822,1.212,823,0.6,824,0.6,825,0.645,826,0.6,827,0.6,828,0.661,829,0.615,830,0.6,831,0.996,832,0.6,833,1.334,834,0.6,835,0.6,836,0.645,837,0.996,838,0.6,839,0.645,840,0.6,841,0.63,842,0.6,843,0.63,844,0.6,845,0.661,846,0.572,847,0.661,848,0.63,849,0.63,850,0.63,851,0.6,852,0.645,853,0.6,854,0.645,855,0.6,856,0.615,857,0.615,858,0.949,859,0.6,860,0.6,861,0.645,862,0.6,863,0.645,864,0.661,865,0.661,866,0.586,867,0.615,868,0.661,869,0.586,870,1.012,871,0.661,872,0.586,873,0.661,874,0.572,875,0.661,876,0.586,877,0.615,878,0.645,879,0.661,1127,2.507,1129,3.738,1130,2.749,2041,5.55,2042,4.697,2043,4.985,2044,4.697,2045,4.697,2046,3.116,2047,3.116,2048,3.116]],["title/components/GridMeshComponent.html",[702,0.179,823,0.843]],["body/components/GridMeshComponent.html",[3,0.071,4,0.071,5,0.064,8,0.208,10,0.86,12,1.114,13,1.046,14,0.477,15,0.858,23,0.818,24,0.763,27,0.777,29,0.718,30,0.009,31,0.743,32,0.51,33,0.7,34,0.547,35,0.614,50,0.638,53,0.59,54,0.98,55,0.926,56,0.533,58,0.15,59,0.128,60,1.586,63,0.071,67,0.079,72,1.004,87,0.004,88,0.005,89,0.004,111,0.317,112,0.62,113,0.506,123,1.463,126,0.926,127,0.718,132,0.79,133,1.468,135,1.215,139,1.53,145,1.004,146,1.463,148,1.004,154,1.512,155,1.097,156,0.912,170,1.264,182,1.361,190,0.701,204,0.652,214,1.394,215,0.718,232,0.701,238,2.093,240,1.109,243,1.127,248,0.636,249,3.193,256,0.737,261,3.133,269,0.757,282,0.684,287,0.684,314,0.684,334,0.59,347,0.668,354,1.665,356,3.503,357,2.969,358,3.361,359,2.641,360,2.549,361,2.384,362,2.549,363,2.85,367,2.038,370,2.038,371,3.552,373,1.881,375,0.89,393,0.636,416,0.668,445,2.042,455,1.537,456,1.537,462,1.881,463,1.228,502,0.684,564,0.701,566,0.701,578,1.046,605,0.668,626,0.735,652,0.701,655,1.292,702,0.25,705,0.668,706,0.668,707,0.668,708,0.668,709,0.668,710,0.668,723,0.684,724,0.973,725,0.753,728,0.636,730,1.746,731,1.655,732,0.735,734,1.072,739,1.623,770,0.869,771,0.957,775,0.753,776,1.072,777,1.422,778,0.753,779,1.422,780,0.684,781,0.735,782,1.097,783,0.684,784,0.753,785,0.684,786,0.718,787,1.702,788,0.684,789,0.735,790,0.753,791,0.684,792,0.735,793,0.684,794,1.245,795,0.753,796,0.701,797,0.753,798,0.684,799,0.753,800,0.684,801,0.753,802,0.684,803,0.718,804,0.753,805,0.684,806,0.735,807,0.684,808,0.753,809,0.684,810,0.735,811,0.753,812,0.753,813,0.684,814,0.753,815,0.684,816,0.753,817,0.684,818,0.718,819,0.684,820,1.504,821,1.702,822,0.684,823,1.292,824,0.684,825,0.735,826,0.684,827,0.684,828,0.753,829,0.701,830,0.684,831,1.097,832,0.684,833,1.422,834,0.684,835,0.684,836,0.735,837,1.097,838,0.684,839,0.735,840,0.684,841,0.718,842,0.684,843,0.718,844,0.684,845,0.753,846,0.652,847,0.753,848,0.718,849,0.718,850,0.718,851,0.684,852,0.735,853,0.684,854,0.735,855,0.684,856,0.701,857,0.701,858,1.046,859,0.684,860,0.684,861,0.735,862,0.684,863,0.735,864,0.753,865,0.753,866,0.668,867,0.701,868,0.753,869,0.668,870,1.093,871,0.753,872,0.668,873,0.753,874,0.652,875,0.753,876,0.668,877,0.701,878,0.735,879,0.753,1129,4.037,1213,2.641,1280,1.956,1298,4.162,1300,2.651,1302,2.129,1303,2.129,1304,2.129,1305,2.129,1306,2.129,1308,2.129,1309,2.129,1310,2.232,1311,2.349,1351,2.651,1353,2.651,1979,5.384,1980,5.384,1981,5.395,1986,4.564,1988,3.622,2015,2.857,2021,3.133,2049,6.775,2050,5.175,2051,6.707,2052,2.857,2053,3.552,2054,6.104,2055,3.133,2056,5.384,2057,3.133,2058,3.552,2059,3.552,2060,3.552,2061,5.175,2062,3.552,2063,5.175,2064,3.552]],["title/components/HemisphereLightComponent.html",[702,0.179,824,0.843]],["body/components/HemisphereLightComponent.html",[3,0.061,4,0.061,5,0.054,8,0.178,9,0.511,10,0.505,12,1.136,13,0.932,14,0.425,15,1.133,23,0.728,24,0.8,27,1.156,29,0.859,30,0.009,31,0.759,32,0.534,33,0.756,34,0.468,35,0.729,36,1.553,50,0.845,53,0.505,54,0.958,55,0.906,56,0.456,58,0.134,59,0.11,60,0.676,63,0.061,67,0.068,72,0.86,75,0.445,87,0.003,88,0.005,89,0.003,111,0.271,112,0.531,113,0.433,123,1.303,124,2.484,126,0.825,127,1.125,132,0.676,133,1.387,135,1.421,145,0.86,146,1.303,148,0.86,154,1.318,155,0.977,156,0.78,178,1.497,182,0.799,189,1.983,190,0.6,201,1.782,202,1.574,204,0.558,214,1.242,215,0.614,232,0.6,238,1.939,243,1.436,248,0.544,254,1.315,256,1.001,257,2.352,269,0.674,282,0.585,287,0.585,292,2.841,314,0.585,334,0.505,347,0.571,354,0.6,375,0.762,393,0.544,416,0.571,423,2.538,424,2.538,425,3.065,426,3.065,427,3.065,428,2.538,429,3.065,430,3.065,431,2.538,432,2.538,433,2.538,434,3.065,435,2.538,436,2.538,437,2.538,438,2.441,439,2.441,440,2.538,441,2.538,442,2.538,443,2.441,444,1.681,445,1.891,448,1.674,450,1.674,451,1.674,452,1.674,453,1.551,454,1.674,455,1.315,456,1.315,462,1.61,463,1.051,464,1.674,465,1.674,466,1.61,467,1.674,468,1.61,469,1.447,471,1.051,473,1.674,479,1.674,488,1.674,490,1.674,491,1.674,493,1.674,496,1.171,502,0.585,564,0.6,566,0.6,578,0.932,605,0.571,626,0.629,652,0.6,655,1.197,677,2.27,702,0.228,705,0.571,706,0.571,707,0.571,708,0.571,709,0.571,710,0.571,723,0.585,724,0.866,725,0.645,727,2.128,728,0.544,730,1.734,731,1.642,732,0.629,733,4.636,734,0.954,735,4.155,736,2.268,737,2.268,739,1.802,740,1.744,741,1.744,742,1.744,743,2.644,744,1.744,745,1.744,746,1.744,747,1.744,748,1.744,749,1.744,750,1.744,751,1.744,752,1.822,753,1.744,754,1.744,755,1.744,756,1.744,757,1.744,758,1.744,759,1.744,760,1.744,761,1.822,762,1.744,763,1.744,764,1.744,765,1.744,766,1.744,767,1.822,768,1.744,769,1.744,770,0.744,771,0.819,774,2.268,775,0.645,776,0.954,777,1.318,778,0.645,779,1.318,780,0.585,781,0.629,782,0.977,783,0.585,784,0.645,785,0.585,786,0.614,787,1.633,788,0.585,789,0.629,790,0.645,791,0.585,792,0.629,793,0.585,794,1.166,795,0.645,796,0.6,797,0.645,798,0.585,799,0.645,800,0.585,801,0.645,802,0.585,803,0.614,804,0.645,805,0.585,806,0.629,807,0.585,808,0.645,809,0.585,810,0.629,811,0.645,812,0.645,813,0.585,814,0.645,815,0.585,816,0.645,817,0.585,818,0.614,819,0.585,820,1.125,821,1.633,822,0.585,823,0.585,824,1.197,825,1.153,826,0.585,827,0.585,828,0.645,829,0.6,830,0.585,831,0.977,832,0.585,833,1.318,834,0.585,835,0.585,836,0.629,837,0.977,838,0.585,839,0.629,840,0.585,841,0.614,842,0.585,843,0.614,844,0.585,845,0.645,846,0.558,847,0.645,848,0.614,849,0.614,850,0.614,851,0.585,852,0.629,853,0.585,854,0.629,855,0.585,856,0.6,857,0.6,858,0.932,859,0.585,860,0.585,861,0.629,862,0.585,863,0.629,864,0.645,865,0.645,866,0.571,867,0.6,868,0.645,869,0.571,870,0.997,871,0.645,872,0.571,873,0.645,874,0.558,875,0.645,876,0.571,877,0.6,878,0.629,879,0.645,2065,5.889,2066,4.609,2067,5.567,2068,5.567,2069,4.065,2070,4.609,2071,3.04,2072,3.04,2073,3.04]],["title/injectables/IconService.html",[0,1.401,1065,2.75]],["body/injectables/IconService.html",[0,2.074,1,5.552,2,2.419,3,0.099,4,0.146,5,0.088,8,0.287,9,0.719,10,0.816,11,5.077,12,1.113,13,1.31,14,0.597,15,1.091,16,5.212,17,5.212,18,5.212,19,5.212,20,4.426,21,5.212,22,5.212,24,0.769,26,4.536,27,1.355,29,0.969,30,0.009,31,0.71,32,0.521,33,0.809,34,1.235,35,0.724,36,2.599,37,4.536,38,5.077,40,4.536,41,3.664,43,3.664,45,3.664,47,3.664,49,3.885,50,0.758,51,3.664,53,1.077,54,0.806,55,0.762,56,0.737,58,0.13,59,0.177,63,0.13,64,1.79,65,4.072,66,5.639,67,0.11,75,0.948,85,3.664,87,0.005,88,0.007,89,0.005,139,1.818,140,2.575,170,1.66,269,1.061,739,1.744,1065,4.072,2074,3.949,2075,4.91,2076,6.363,2077,4.91,2078,4.33,2079,4.33,2080,4.33,2081,4.33,2082,4.33,2083,5.716,2084,4.91,2085,4.33,2086,3.949,2087,7.52,2088,6.857,2089,6.857,2090,4.33,2091,4.33,2092,4.33,2093,4.33,2094,4.33,2095,4.33,2096,4.33,2097,4.33,2098,6.398,2099,4.33,2100,4.33,2101,4.33,2102,4.33,2103,4.33,2104,4.33,2105,4.33,2106,4.33,2107,4.33]],["title/interfaces/IconSource.html",[64,1.596,2076,3.267]],["body/interfaces/IconSource.html",[0,2.308,1,4.53,3,0.117,4,0.117,5,0.104,8,0.339,9,0.8,10,0.964,11,4.059,12,0.805,20,3.327,26,4.059,27,1.082,30,0.009,32,0.479,34,0.893,37,4.059,38,4.059,40,4.059,58,0.145,59,0.209,63,0.145,64,2.114,65,4.93,66,5.833,67,0.129,75,1.055,85,4.328,87,0.006,88,0.007,89,0.006,139,2.229,140,2.631,170,1.748,269,1.148,1065,3.644,1136,3.193,2074,4.664,2076,6.3,2083,5.115,2086,4.664,2087,7.94,2088,7.24,2089,7.24,2090,5.115,2091,5.115,2092,5.115,2093,5.115,2094,5.115,2095,5.115,2096,5.115,2097,5.115,2098,6.92,2099,5.115,2100,5.115,2101,5.115,2102,5.115,2103,5.115,2104,5.115,2105,5.115,2106,5.115,2107,5.115]],["title/components/LayerActorComponent.html",[702,0.179,826,0.843]],["body/components/LayerActorComponent.html",[3,0.075,4,0.075,5,0.067,8,0.219,9,0.596,12,0.746,13,1.086,14,0.495,15,1.04,24,0.77,27,1.032,29,0.44,30,0.009,31,0.739,32,0.504,33,0.368,34,0.577,35,0.627,50,0.718,53,0.622,54,0.466,55,0.44,56,0.944,58,0.126,59,0.135,63,0.075,67,0.084,75,0.548,87,0.004,88,0.005,89,0.004,111,0.334,112,0.654,113,0.533,126,0.962,127,1.271,135,1.451,154,1.458,190,0.739,204,0.687,215,0.757,232,0.739,238,1.963,240,1.963,243,0.592,248,0.67,251,1.62,256,0.766,269,0.786,282,1.402,287,0.721,314,0.721,334,0.622,347,0.704,350,2.476,354,0.739,375,0.938,393,0.67,395,3.084,416,0.704,417,2.148,444,1.96,471,2.699,498,3.943,502,0.721,564,0.739,566,0.739,578,1.086,605,0.704,626,0.775,652,0.739,653,3.067,655,1.324,657,2.293,658,3.64,659,3.784,660,3.943,661,2.721,664,3.463,665,2.721,666,3.331,680,4.693,702,0.257,705,0.704,706,0.704,707,0.704,708,0.704,709,0.704,710,0.704,723,0.721,724,1.01,725,0.794,728,0.67,730,1.75,731,1.659,732,0.775,734,1.113,739,0.757,770,0.916,775,0.794,776,1.113,777,1.458,778,0.794,779,1.458,780,0.721,781,0.775,782,1.14,783,0.721,784,0.794,785,0.721,786,0.757,787,1.725,788,0.721,789,0.775,790,0.794,791,0.721,792,0.775,793,0.721,794,1.271,795,0.794,796,0.739,797,0.794,798,0.721,799,0.794,800,0.721,801,0.794,802,0.721,803,0.757,804,0.794,805,0.721,806,0.775,807,0.721,808,0.794,809,0.721,810,0.775,811,0.794,812,0.794,813,0.721,814,0.794,815,0.721,816,0.794,817,0.721,818,0.757,819,0.721,820,1.271,821,1.725,822,0.721,823,0.721,824,0.721,825,0.775,826,1.324,827,0.721,828,0.794,829,0.739,830,0.721,831,1.14,832,0.721,833,1.458,834,0.721,835,0.721,836,0.775,837,1.14,838,0.721,839,0.775,840,0.721,841,0.757,842,0.721,843,0.757,844,0.721,845,0.794,846,0.687,847,0.794,848,0.757,849,0.757,850,0.757,851,0.721,852,0.775,853,0.721,854,0.775,855,0.721,856,0.739,857,0.739,858,1.086,859,0.721,860,0.721,861,0.775,862,0.721,863,0.775,864,0.794,865,1.334,866,0.704,867,0.739,868,0.794,869,0.704,870,1.126,871,0.794,872,0.704,873,0.794,874,0.687,875,0.794,876,0.704,877,0.739,878,0.775,879,0.794,1213,1.62,1284,2.994,1286,4.478,1400,2.476,1402,5.528,1423,3.301,1973,2.148,1975,5.546,1985,3.301,1991,3.301,1992,3.011,2003,3.011,2108,7.619,2109,5.374,2110,6.288,2111,3.743,2112,5.374,2113,3.743,2114,3.743,2115,3.743,2116,3.743,2117,3.743,2118,3.301,2119,3.743,2120,3.743,2121,3.743,2122,3.743,2123,6.288,2124,3.743]],["title/components/LineConnectorComponent.html",[702,0.179,827,0.843]],["body/components/LineConnectorComponent.html",[3,0.062,4,0.113,5,0.055,8,0.181,9,0.519,10,0.777,12,1.225,13,0.945,14,0.431,15,0.862,23,0.739,24,0.788,29,0.55,30,0.009,31,0.721,32,0.527,33,0.616,34,0.477,35,0.652,50,0.704,53,0.515,54,0.998,55,0.943,56,1.011,58,0.161,59,0.112,60,1.04,63,0.094,67,0.069,72,1.593,87,0.003,88,0.005,89,0.003,111,0.276,112,0.541,113,0.442,116,1.291,118,2.595,123,1.322,126,0.837,127,0.626,132,0.689,133,1.397,135,1.319,139,1.172,140,1.632,145,0.876,146,1.593,148,1.322,154,1.642,155,0.992,156,0.795,169,1.581,170,1.299,171,1.383,182,0.815,189,1.389,190,0.611,195,2.296,202,1.593,204,0.568,214,1.26,215,0.626,232,1.621,235,4.124,236,4.124,237,5.533,238,1.758,239,4.968,240,2.294,241,4.968,242,3.761,243,1.161,248,1.267,251,1.341,256,0.666,263,2.492,265,4.231,268,1.857,269,0.684,282,0.597,287,0.597,314,0.597,334,0.515,347,0.583,350,2.049,354,0.611,362,2.775,375,0.777,393,0.555,416,0.583,445,1.91,463,1.071,466,2.983,502,0.597,506,2.938,513,2.169,564,0.611,566,0.611,578,0.945,605,0.583,626,0.642,652,0.611,655,1.208,657,2.288,702,0.23,705,0.583,706,0.583,707,0.583,708,0.583,709,0.583,710,0.583,723,0.597,724,0.879,725,0.657,728,0.555,730,1.736,731,1.644,732,0.642,734,0.968,739,1.565,770,0.758,771,0.835,775,0.657,776,0.968,777,1.33,778,0.657,779,1.33,780,0.597,781,0.642,782,0.992,783,0.597,784,0.657,785,0.597,786,0.626,787,1.642,788,0.597,789,0.642,790,0.657,791,0.597,792,0.642,793,0.597,794,1.176,795,0.657,796,0.611,797,0.657,798,0.597,799,0.657,800,0.597,801,0.657,802,0.597,803,0.626,804,0.657,805,0.597,806,0.642,807,0.597,808,0.657,809,0.597,810,0.642,811,0.657,812,0.657,813,0.597,814,0.657,815,0.597,816,0.657,817,0.597,818,0.626,819,0.597,820,1.139,821,1.642,822,0.597,823,0.597,824,0.597,825,0.642,826,0.597,827,1.208,828,0.657,829,0.611,830,0.597,831,0.992,832,0.597,833,1.33,834,0.597,835,0.597,836,0.642,837,0.992,838,0.597,839,0.642,840,0.597,841,0.626,842,0.597,843,0.626,844,0.597,845,0.657,846,0.568,847,0.657,848,0.626,849,0.626,850,0.626,851,0.597,852,0.642,853,0.597,854,0.642,855,0.597,856,0.611,857,0.611,858,0.945,859,0.597,860,0.597,861,0.642,862,0.597,863,0.642,864,0.657,865,0.657,866,0.583,867,1.111,868,0.657,869,0.583,870,1.008,871,0.657,872,0.583,873,0.657,874,0.568,875,0.657,876,0.583,877,0.611,878,0.642,879,0.657,880,4.217,882,4.391,888,4.968,894,4.203,1213,2.023,1413,3.093,1734,2.492,1988,3.273,2027,3.761,2028,2.733,2125,6.909,2126,2.492,2127,4.676,2128,5.632,2129,5.632,2130,5.632,2131,5.632,2132,5.632,2133,6.273,2134,6.273,2135,6.244,2136,6.273,2137,6.273,2138,5.416,2139,4.676,2140,3.098,2141,3.098,2142,3.273,2143,3.098,2144,4.676,2145,3.098,2146,3.098,2147,3.098,2148,3.098,2149,3.098,2150,3.098,2151,3.098,2152,3.098,2153,3.098,2154,6.733,2155,3.098,2156,3.098,2157,3.098,2158,3.098,2159,3.098,2160,3.098,2161,3.098,2162,4.676,2163,3.098,2164,3.098,2165,6.273,2166,3.098,2167,3.098,2168,3.098,2169,3.098,2170,3.098,2171,4.676,2172,3.098,2173,3.098,2174,3.098,2175,3.098,2176,3.098,2177,3.098,2178,3.098,2179,3.098,2180,3.098,2181,3.098,2182,4.676,2183,3.098,2184,3.098,2185,3.098,2186,3.098,2187,3.098,2188,3.098,2189,4.676,2190,3.098,2191,3.098,2192,3.098,2193,3.098]],["title/components/MapControlsComponent.html",[702,0.179,830,0.843]],["body/components/MapControlsComponent.html",[3,0.061,4,0.061,5,0.054,8,0.177,9,0.51,10,0.503,12,1.106,14,0.423,15,0.71,23,0.726,24,0.782,29,0.54,30,0.009,31,0.718,32,0.526,33,0.451,34,0.466,35,0.604,36,1.02,50,0.762,53,0.923,54,1.018,55,0.962,56,0.454,58,0.146,59,0.109,63,0.061,67,0.068,72,1.299,75,0.443,87,0.003,88,0.005,89,0.003,111,0.27,112,0.529,113,0.431,116,1.268,118,2.558,123,1.299,126,0.822,127,0.612,132,0.673,133,1.384,135,1.336,139,1.392,140,2.113,145,1.299,146,1.753,148,0.856,154,1.752,156,0.777,165,1.491,170,0.627,171,2.05,189,0.899,190,0.597,195,2.264,201,1.777,202,1.753,204,0.555,215,0.612,232,0.597,240,1.434,243,0.478,248,0.542,256,0.655,265,3.489,268,1.814,269,0.672,279,2.118,282,0.583,287,0.583,314,0.583,334,0.503,345,2.669,347,0.569,354,0.597,383,1.814,393,0.542,416,0.569,502,0.583,564,1.614,566,1.096,568,3.695,569,5.36,570,3.215,571,4.466,572,4.986,573,3.695,574,3.7,576,2.258,578,1.253,579,2.434,580,2.434,581,2.118,582,2.434,583,2.258,584,2.754,585,1.902,586,2.434,587,2.258,588,2.258,589,2.434,590,2.434,591,2.434,592,2.434,593,2.118,594,2.434,600,2.434,601,2.754,602,2.434,603,2.434,605,0.864,606,2.434,607,1.814,611,2.258,612,2.434,614,2.434,624,3.695,626,0.627,633,2.669,649,2.434,652,0.597,655,1.194,702,0.227,705,0.569,706,0.569,707,0.569,708,0.569,709,0.569,710,0.569,723,0.583,724,0.864,725,0.642,728,0.542,730,1.734,731,1.642,732,0.627,734,0.951,739,1.555,771,0.815,775,0.642,776,0.951,777,1.315,778,0.642,779,1.315,780,0.583,781,0.627,782,0.974,783,0.583,784,0.642,785,0.583,786,0.612,787,1.631,788,0.583,789,0.627,790,0.642,791,0.583,792,0.627,793,0.583,794,1.164,795,0.642,796,0.597,797,0.642,798,0.583,799,0.642,800,0.583,801,0.642,802,0.583,803,0.612,804,0.642,805,0.583,806,0.627,807,0.583,808,0.642,809,0.583,810,0.627,811,0.642,812,0.642,813,0.583,814,0.642,815,0.583,816,0.642,817,0.583,818,0.612,819,0.583,820,1.122,821,1.631,822,0.583,823,0.583,824,0.583,825,0.627,826,0.583,827,0.583,828,0.642,829,0.597,830,1.194,831,0.974,832,0.583,833,1.315,834,0.583,835,0.583,836,0.627,837,0.974,838,0.583,839,0.627,840,0.583,841,0.612,842,0.583,843,0.612,844,0.583,845,0.642,846,0.555,847,0.642,848,0.612,849,0.612,850,0.612,851,0.583,852,0.627,853,0.583,854,0.627,855,0.583,856,0.597,857,0.597,858,0.929,859,0.583,860,0.583,861,0.627,862,0.583,863,0.627,864,0.642,865,0.642,866,0.569,867,0.597,868,0.642,869,0.569,870,0.994,871,0.642,872,0.569,873,0.642,874,0.555,875,0.642,876,0.569,877,0.597,878,0.627,879,0.642,880,4.309,882,3.886,933,2.388,1196,2.636,1213,1.988,1214,4.339,1284,1.441,1354,3.038,1716,1.814,1731,2.669,1741,2.434,1743,2.434,1776,2.434,1801,1.902,1947,3.428,2142,3.215,2194,2.434,2195,7.461,2196,2.434,2197,3.695,2198,4.897,2199,5.552,2200,5.552,2201,5.552,2202,5.552,2203,5.552,2204,5.552,2205,5.552,2206,4.897,2207,5.552,2208,5.552,2209,4.897,2210,5.552,2211,4.897,2212,4.593,2213,3.026,2214,3.026,2215,3.026,2216,3.026,2217,4.593,2218,3.026,2219,3.026,2220,4.593,2221,3.026,2222,3.026,2223,3.026,2224,5.467,2225,3.026,2226,3.026,2227,3.026,2228,3.026,2229,2.669,2230,3.026,2231,3.026,2232,3.026,2233,3.026,2234,2.669,2235,2.669,2236,2.669,2237,2.669,2238,2.669,2239,4.593,2240,2.669,2241,4.052,2242,4.052,2243,2.669,2244,4.052,2245,4.052,2246,3.026,2247,2.669,2248,2.669,2249,3.026,2250,3.026,2251,3.026,2252,4.593,2253,3.026,2254,3.026,2255,3.026,2256,4.593,2257,3.026,2258,3.026,2259,3.026,2260,3.026,2261,3.026,2262,3.026,2263,3.026,2264,3.026,2265,3.026,2266,3.026,2267,3.026,2268,3.026,2269,3.026,2270,3.026,2271,4.593,2272,3.026,2273,3.026,2274,3.026,2275,2.258,2276,3.428]],["title/components/ModelActorComponent.html",[702,0.179,709,0.823]],["body/components/ModelActorComponent.html",[3,0.076,4,0.076,5,0.067,8,0.22,9,0.599,10,0.626,12,0.876,13,1.092,14,0.498,15,1.042,23,0.854,24,0.775,27,1.241,29,0.635,30,0.009,31,0.745,32,0.516,33,0.677,34,0.973,35,0.594,50,0.721,53,0.626,54,0.672,55,0.635,58,0.147,59,0.136,60,0.839,63,0.076,67,0.084,75,0.551,87,0.004,88,0.005,89,0.004,111,0.336,112,0.658,113,0.537,126,0.967,127,0.762,132,0.839,133,1.499,135,0.642,139,0.945,154,1.146,170,0.78,190,0.744,204,0.692,214,1.455,215,0.762,232,0.744,243,1.153,248,0.675,256,0.77,269,0.79,282,0.726,287,0.726,314,0.726,334,1.354,347,0.709,354,0.744,375,0.945,393,0.675,395,3.099,410,3.325,416,0.709,417,2.163,444,1.97,445,2.099,471,2.384,502,0.726,564,0.744,566,0.744,578,1.092,605,0.709,626,0.78,652,1.706,653,2.696,655,1.406,657,1.97,658,3.344,659,3.476,660,3.622,661,2.337,662,3.394,663,3.394,664,2.975,665,2.337,666,2.861,677,1.857,702,0.258,705,0.709,706,0.709,707,0.709,708,0.709,709,1.296,710,0.709,723,0.726,724,1.016,725,0.799,728,0.675,730,1.75,731,1.66,732,0.78,734,1.118,739,1.691,770,0.922,771,1.015,775,0.799,776,1.118,777,1.462,778,0.799,779,1.462,780,0.726,781,0.78,782,1.146,783,0.726,784,0.799,785,0.726,786,0.762,787,1.727,788,0.726,789,0.78,790,0.799,791,0.726,792,0.78,793,0.726,794,1.275,795,0.799,796,0.744,797,0.799,798,0.726,799,0.799,800,0.726,801,0.799,802,0.726,803,0.762,804,0.799,805,0.726,806,0.78,807,0.726,808,0.799,809,0.726,810,0.78,811,0.799,812,0.799,813,0.726,814,0.799,815,0.726,816,0.799,817,0.726,818,0.762,819,0.726,820,1.276,821,1.727,822,0.726,823,0.726,824,0.726,825,0.78,826,0.726,827,0.726,828,0.799,829,0.744,830,0.726,831,1.146,832,0.726,833,1.462,834,0.726,835,0.726,836,0.78,837,1.146,838,0.726,839,0.78,840,0.726,841,0.762,842,0.726,843,0.762,844,1.041,845,0.799,846,0.692,847,0.799,848,0.762,849,0.762,850,0.762,851,0.726,852,0.78,853,0.726,854,0.78,855,0.726,856,0.744,857,0.744,858,1.092,859,0.726,860,0.726,861,0.78,862,0.726,863,0.78,864,0.799,865,1.462,866,0.709,867,0.744,868,0.799,869,0.709,870,1.13,871,0.799,872,0.709,873,0.799,874,0.692,875,0.799,876,0.709,877,0.744,878,0.78,879,0.799,1066,5.173,1973,2.163,1992,4.345,2002,4.764,2003,3.032,2277,6.698,2278,5.402,2279,6.313,2280,2.493,2281,2.493,2282,2.493,2283,2.493,2284,2.493,2285,2.493,2286,2.493,2287,2.493,2288,2.493,2289,2.493,2290,2.493,2291,3.769,2292,3.769,2293,3.325,2294,3.769,2295,3.769,2296,3.325,2297,3.325]],["title/injectables/ModelService.html",[0,1.401,1066,2.895]],["body/injectables/ModelService.html",[0,2.185,1,5.616,2,2.619,3,0.107,4,0.151,5,0.095,8,0.311,9,0.757,10,0.884,11,5.276,12,1.141,13,1.38,14,0.629,15,1.109,16,5.49,17,5.49,18,5.49,19,5.49,20,4.563,21,5.49,22,5.49,24,0.78,26,4.778,27,1.367,29,0.99,30,0.009,31,0.725,32,0.53,33,0.827,34,1.267,35,0.737,36,2.679,37,4.778,38,5.276,40,4.778,41,3.968,43,3.968,45,3.968,47,3.968,49,4.092,50,0.788,51,3.968,53,1.134,54,0.849,55,0.803,56,0.798,58,0.137,59,0.192,63,0.107,65,5.448,66,4.986,67,0.119,75,0.998,87,0.005,88,0.007,89,0.005,182,1.795,198,2.714,248,0.952,269,0.998,320,3.187,321,3.341,541,3.517,542,3.517,739,1.77,1066,4.514,1276,3.968,1277,3.968,2078,4.69,2079,4.69,2080,4.69,2081,4.69,2082,4.69,2085,4.69,2086,4.277,2298,4.69,2299,5.317,2300,5.317,2301,5.317,2302,5.317,2303,5.317,2304,5.317]],["title/interfaces/NearestIntersection.html",[64,1.596,2305,3.267]],["body/interfaces/NearestIntersection.html",[0,1.982,3,0.092,4,0.092,5,0.082,8,0.268,9,0.687,15,1.034,23,0.725,30,0.01,32,0.378,56,0.93,58,0.157,59,0.166,60,1.67,63,0.092,64,1.672,67,0.102,72,1.982,75,1.228,87,0.005,88,0.006,89,0.005,112,1.225,116,1.266,119,4.316,139,1.15,140,2.175,155,1.313,170,1.282,172,4.095,182,1.206,189,1.839,195,2.525,198,2.341,199,2.749,202,1.297,229,3.689,240,2.746,243,0.979,251,3.392,256,1.177,408,4.405,455,2.679,456,3.248,469,2.184,496,1.767,574,2.259,613,3.21,666,2.429,870,1.344,886,2.631,895,3.689,905,3.689,915,6.037,1136,2.525,1212,3.21,1213,2.679,1221,3.21,1232,4.405,1436,3.423,1636,3.423,1730,3.21,1769,3.689,2016,6.12,2142,3.21,2305,6.028,2306,3.689,2307,5.232,2308,3.21,2309,4.045,2310,5.461,2311,4.045,2312,6.183,2313,4.045,2314,5.232,2315,3.423,2316,6.183,2317,4.045,2318,4.045,2319,4.045,2320,4.045,2321,4.045,2322,4.045,2323,4.045,2324,4.045,2325,4.045,2326,4.045,2327,4.045,2328,6.183,2329,4.045,2330,4.045,2331,3.689,2332,4.045,2333,4.045,2334,4.045,2335,4.045,2336,4.636,2337,4.045,2338,4.045,2339,5.461,2340,6.183,2341,6.183,2342,5.461,2343,5.461,2344,6.914,2345,6.914,2346,5.461,2347,4.045,2348,4.045,2349,6.183,2350,3.423,2351,4.045,2352,5.461,2353,5.461,2354,4.045,2355,4.045,2356,4.045,2357,4.045,2358,4.045,2359,4.045,2360,4.045,2361,4.98,2362,4.045,2363,4.045,2364,4.045,2365,4.045,2366,4.045,2367,4.045,2368,5.461,2369,4.621,2370,4.045,2371,6.62,2372,5.461,2373,4.045,2374,4.045,2375,4.045,2376,4.045]],["title/interfaces/Node.html",[64,1.596,558,2.156]],["body/interfaces/Node.html",[3,0.126,4,0.126,5,0.112,8,0.367,9,0.84,27,1.386,30,0.009,31,0.541,32,0.547,33,0.862,34,1.3,58,0.126,63,0.174,64,3.149,87,0.006,88,0.008,89,0.006,135,1.071,269,1.235,334,1.403,496,3.131,558,3.731,653,2.231,657,2.291,661,2.719,794,1.323,982,3.46,1136,3.46,1137,5.177,1138,3.096,1139,4.156,1140,4.17,1141,4.156,1142,3.606,1143,3.46,1144,4.156,1145,4.399,1146,3.949,1147,3.328]],["title/components/ObjLoaderComponent.html",[416,0.823,702,0.179]],["body/components/ObjLoaderComponent.html",[3,0.071,4,0.122,5,0.133,8,0.206,9,0.571,10,0.856,12,1.091,13,1.041,14,0.474,15,0.451,23,0.814,24,0.714,27,1.223,29,0.606,30,0.009,31,0.737,32,0.468,33,0.657,34,0.544,35,0.444,50,0.369,53,0.586,54,0.439,55,0.415,56,1.067,58,0.154,59,0.127,60,1.146,63,0.071,67,0.079,75,0.516,87,0.004,88,0.005,89,0.004,95,3.349,96,4.022,105,4.538,111,0.314,112,0.616,113,0.503,126,0.922,127,0.713,132,0.785,133,1.465,154,1.418,156,0.906,165,1.738,182,0.928,189,1.048,190,0.696,204,0.647,214,1.387,215,0.713,232,0.696,240,1.898,243,1.124,248,0.632,254,1.527,256,0.734,269,0.753,282,0.68,287,0.68,293,4.422,298,2.334,302,1.626,305,6.077,314,1.43,318,2.217,334,1.306,340,2.334,341,2.334,346,1.801,347,1.551,354,0.696,361,3.08,375,0.884,377,2.334,391,2.217,393,1.197,394,3.605,395,2.955,397,3.087,398,2.47,399,2.47,400,2.47,401,2.334,402,2.47,403,2.47,404,2.334,405,2.47,406,2.47,407,2.47,408,2.217,416,1.257,417,2.025,445,2.035,502,0.68,564,0.696,566,0.696,578,1.041,593,2.47,605,0.663,626,0.731,652,0.696,655,1.288,702,0.291,705,0.663,706,0.663,707,0.663,708,0.663,709,0.663,710,0.663,723,0.68,724,0.968,725,0.748,728,0.632,730,1.746,731,1.655,732,0.731,734,1.066,739,1.041,770,0.864,771,0.951,775,0.748,776,1.066,777,1.418,778,0.748,779,1.418,780,0.68,781,0.731,782,1.092,783,0.68,784,0.748,785,0.68,786,0.713,787,1.7,788,0.68,789,0.731,790,0.748,791,0.68,792,0.731,793,0.68,794,1.242,795,0.748,796,0.696,797,0.748,798,0.68,799,0.748,800,0.68,801,0.748,802,0.68,803,0.713,804,0.748,805,0.68,806,0.731,807,0.68,808,0.748,809,0.68,810,0.731,811,0.748,812,0.748,813,0.68,814,0.748,815,0.68,816,0.748,817,0.68,818,0.713,819,0.68,820,1.229,821,1.7,822,0.68,823,0.68,824,0.68,825,0.731,826,0.68,827,0.68,828,0.748,829,0.696,830,0.68,831,1.092,832,0.68,833,1.418,834,0.68,835,0.68,836,0.731,837,1.092,838,0.68,839,0.731,840,0.68,841,0.713,842,0.68,843,0.713,844,0.68,845,0.748,846,0.647,847,0.748,848,0.713,849,0.713,850,0.713,851,0.68,852,0.731,853,0.68,854,0.731,855,0.68,856,0.696,857,0.696,858,1.041,859,0.68,860,0.68,861,0.731,862,0.68,863,0.731,864,0.748,865,0.748,866,0.663,867,0.696,868,0.748,869,0.663,870,1.089,871,0.748,872,0.663,873,0.748,874,0.647,875,0.748,876,0.663,877,0.696,878,0.731,879,0.748,1067,4.422,1940,3.112,2377,6.931,2378,2.47,2379,5.15,2380,5.15,2381,5.15,2382,3.112,2383,5.15,2384,6.761,2385,6.686,2386,6.686,2387,4.891,2388,5.15,2389,3.112,2390,5.719,2391,7.11,2392,7.11,2393,6.271,2394,7.11,2395,5.15,2396,2.633,2397,3.528,2398,2.838,2399,3.528,2400,2.633,2401,3.528,2402,5.15,2403,3.112,2404,3.528,2405,3.528,2406,3.528,2407,3.528,2408,3.528,2409,2.633,2410,3.528,2411,3.528,2412,5.15,2413,3.112,2414,5.15,2415,2.47,2416,3.605,2417,3.528,2418,3.112,2419,3.112,2420,3.112,2421,3.528,2422,3.528,2423,3.528,2424,3.528,2425,3.112,2426,3.528,2427,3.528,2428,3.528,2429,3.528,2430,3.528]],["title/injectables/ObjLoaderService.html",[0,1.401,1067,2.895]],["body/injectables/ObjLoaderService.html",[0,2.32,2,2.881,3,0.117,4,0.117,5,0.105,8,0.342,9,0.804,10,0.972,12,1.174,14,0.668,15,1.083,24,0.754,27,1.271,29,0.926,30,0.009,31,0.679,32,0.481,33,0.774,35,0.679,49,4.345,50,0.757,53,0.972,54,0.902,55,0.852,56,1.236,58,0.17,59,0.211,63,0.117,67,0.13,75,0.856,87,0.006,88,0.007,89,0.006,90,5.704,93,5.409,94,5.409,95,3.991,96,4.794,98,5.409,100,4.949,101,4.364,155,1.537,240,2.458,269,1.06,302,2.694,334,0.972,393,1.41,739,1.592,1067,4.794,1933,4.704,1934,4.704,1935,4.704,2384,5.158,2387,6.335,2403,5.158,2415,4.093,2416,5.073,2425,5.158,2431,6.947,2432,4.704,2433,7.247,2434,5.848,2435,7.247,2436,7.876,2437,5.848,2438,5.848,2439,5.848,2440,5.848,2441,5.848,2442,5.158,2443,5.848]],["title/components/ObjectLoaderComponent.html",[702,0.179,832,0.843]],["body/components/ObjectLoaderComponent.html",[3,0.08,4,0.131,5,0.072,8,0.234,9,0.625,10,0.937,12,1.104,13,1.139,14,0.519,23,0.891,24,0.665,27,0.846,29,0.471,30,0.009,31,0.747,32,0.399,33,0.641,34,0.616,35,0.345,53,0.665,54,0.498,55,0.471,56,1.121,58,0.156,59,0.144,63,0.08,67,0.089,75,0.585,87,0.004,88,0.006,89,0.004,95,3.593,111,0.357,112,0.699,113,0.57,126,1.009,127,0.809,132,0.89,133,1.528,155,1.195,156,1.027,182,1.052,190,0.79,204,0.734,214,1.518,215,0.809,232,0.79,240,2.037,243,1.18,248,0.716,254,1.732,256,1.009,269,0.825,282,0.771,287,0.771,293,4.684,298,2.647,302,1.844,305,2.987,314,1.492,318,2.515,334,1.373,341,2.647,346,2.042,347,0.752,354,0.79,375,1.003,393,1.425,394,3.945,397,3.379,398,2.801,399,2.801,400,2.801,401,2.647,402,2.801,403,2.801,404,2.647,405,2.801,406,2.801,407,2.801,408,2.515,416,0.752,445,2.156,502,0.771,564,0.79,566,0.79,578,1.139,605,0.752,626,0.829,652,0.79,655,1.364,665,1.732,702,0.267,705,0.752,706,0.752,707,0.752,708,0.752,709,0.752,710,0.752,723,0.771,724,1.06,725,0.849,728,0.716,730,1.754,731,1.664,732,0.829,734,1.167,739,1.139,770,0.979,771,1.078,775,0.849,776,1.167,777,1.502,778,0.849,779,1.502,780,0.771,781,0.829,782,1.195,783,0.771,784,0.849,785,0.771,786,0.809,787,1.752,788,0.771,789,0.829,790,0.849,791,0.771,792,0.829,793,0.771,794,1.304,795,0.849,796,0.79,797,0.849,798,0.771,799,0.849,800,0.771,801,0.849,802,0.771,803,0.809,804,0.849,805,0.771,806,0.829,807,0.771,808,0.849,809,0.771,810,0.829,811,0.849,812,0.849,813,0.771,814,0.849,815,0.771,816,0.849,817,0.771,818,0.809,819,0.771,820,1.319,821,1.752,822,0.771,823,0.771,824,0.771,825,0.829,826,0.771,827,0.771,828,0.849,829,0.79,830,0.771,831,1.195,832,1.364,833,1.502,834,0.771,835,0.771,836,0.829,837,1.195,838,0.771,839,0.829,840,0.771,841,0.809,842,0.771,843,0.809,844,0.771,845,0.849,846,0.734,847,0.849,848,0.809,849,0.809,850,0.809,851,0.771,852,0.829,853,0.771,854,0.829,855,0.771,856,0.79,857,0.79,858,1.139,859,0.771,860,0.771,861,0.829,862,0.771,863,0.829,864,0.849,865,0.849,866,0.752,867,0.79,868,0.849,869,0.752,870,1.168,871,0.849,872,0.752,873,0.849,874,0.734,875,0.849,876,0.752,877,0.79,878,0.829,879,0.849,1170,3.53,2378,2.801,2389,3.53,2393,3.53,2396,2.987,2398,3.219,2400,2.987,2415,2.801,2416,3.945,2442,3.53,2444,6.247,2445,5.636,2446,5.636,2447,5.636,2448,4.002,2449,3.53,2450,4.002,2451,4.002,2452,4.002,2453,3.53,2454,3.53,2455,4.002]],["title/components/OrbitControlsComponent.html",[702,0.179,834,0.843]],["body/components/OrbitControlsComponent.html",[3,0.075,4,0.075,5,0.067,8,0.217,9,0.593,10,0.618,12,1.081,14,0.493,23,0.845,24,0.751,29,0.629,30,0.009,31,0.743,32,0.487,33,0.525,34,0.573,35,0.625,36,1.252,50,0.759,53,0.618,54,0.666,55,0.629,56,0.558,58,0.146,59,0.134,63,0.075,67,0.083,75,0.544,87,0.004,88,0.005,89,0.004,111,0.331,112,0.649,113,0.53,116,1.476,118,2.886,123,1.512,126,0.957,127,0.751,132,0.827,133,1.492,135,0.911,140,1.077,145,1.512,146,1.937,148,1.051,154,1.328,156,0.954,170,0.77,189,1.104,190,0.733,201,2.005,202,1.771,204,0.682,215,0.751,232,0.733,240,1.669,243,0.587,248,0.665,256,0.762,269,0.782,282,0.716,287,0.716,314,0.716,334,0.618,347,0.699,354,0.733,383,2.228,393,0.665,416,0.699,502,0.716,564,1.678,566,1.432,568,4.301,569,5.838,570,3.743,571,5.038,572,5.51,573,4.301,574,3.926,576,2.774,578,1.385,579,2.99,580,2.99,581,2.602,582,2.99,583,2.774,584,3.206,585,2.336,586,2.99,587,2.774,588,2.774,589,2.99,590,2.99,591,2.99,592,2.99,593,2.602,594,2.99,600,2.99,601,3.206,602,2.99,603,2.99,605,1.005,606,2.99,607,2.228,611,3.991,612,2.99,614,2.99,624,4.301,626,0.77,649,2.99,652,0.733,655,1.32,702,0.256,705,0.699,706,0.699,707,0.699,708,0.699,709,0.699,710,0.699,723,0.716,724,1.005,725,0.788,728,0.665,730,1.749,731,1.659,732,0.77,734,1.107,739,1.641,771,1.001,775,0.788,776,1.107,777,1.453,778,0.788,779,1.453,780,0.716,781,0.77,782,1.134,783,0.716,784,0.788,785,0.716,786,0.751,787,1.722,788,0.716,789,0.77,790,0.788,791,0.716,792,0.77,793,0.716,794,1.268,795,0.788,796,0.733,797,0.788,798,0.716,799,0.788,800,0.716,801,0.788,802,0.716,803,0.751,804,0.788,805,0.716,806,0.77,807,0.716,808,0.788,809,0.716,810,0.77,811,0.788,812,0.788,813,0.716,814,0.788,815,0.716,816,0.788,817,0.716,818,0.751,819,0.716,820,1.266,821,1.722,822,0.716,823,0.716,824,0.716,825,0.77,826,0.716,827,0.716,828,0.788,829,0.733,830,0.716,831,1.134,832,0.716,833,1.453,834,1.32,835,0.716,836,0.77,837,1.134,838,0.716,839,0.77,840,0.716,841,0.751,842,0.716,843,0.751,844,0.716,845,0.788,846,0.682,847,0.788,848,0.751,849,0.751,850,0.751,851,0.716,852,0.77,853,0.716,854,0.77,855,0.716,856,0.733,857,0.733,858,1.081,859,0.716,860,0.716,861,0.77,862,0.716,863,0.77,864,0.788,865,0.788,866,0.699,867,0.733,868,0.788,869,0.699,870,1.121,871,0.788,872,0.699,873,0.788,874,0.682,875,0.788,876,0.699,877,0.733,878,0.77,879,0.788,1196,3.068,1284,1.77,1716,2.228,1801,2.336,2194,2.99,2196,2.99,2197,4.301,2198,5.525,2209,5.525,2211,5.525,2224,4.717,2229,3.278,2234,3.278,2235,3.278,2236,3.278,2237,3.278,2238,3.278,2240,3.278,2241,4.717,2242,4.717,2243,3.278,2244,4.717,2245,4.717,2247,3.278,2248,3.278,2275,2.774,2276,3.991,2456,6.042,2457,5.347,2458,3.717,2459,3.717,2460,3.717,2461,3.717]],["title/components/OrthographicCameraComponent.html",[702,0.179,835,0.843]],["body/components/OrthographicCameraComponent.html",[3,0.072,4,0.072,5,0.064,8,0.208,9,0.575,10,0.592,12,1.147,13,1.048,14,0.477,15,0.913,23,0.819,24,0.764,29,0.719,30,0.009,31,0.743,32,0.498,33,0.6,34,0.548,35,0.662,36,1.199,50,0.839,53,0.592,54,0.645,55,0.61,56,0.534,58,0.143,59,0.129,60,0.792,63,0.072,67,0.079,72,1.466,75,0.521,87,0.004,88,0.005,89,0.004,111,0.317,112,1.523,113,0.507,116,1.43,118,2.816,119,3.929,120,4.916,121,4.916,122,5.4,123,1.466,124,2.728,125,4.169,126,0.928,127,1.236,128,4.169,129,4.169,130,4.169,131,4.169,132,0.792,133,1.47,135,1.342,139,0.892,140,1.502,145,1.466,146,1.899,148,1.466,150,4.169,152,5.011,154,1.099,155,1.099,156,0.914,165,1.754,167,4.916,169,1.817,170,0.737,171,1.589,172,3.428,190,0.702,204,0.653,215,0.72,232,0.702,243,0.563,248,0.637,256,0.507,269,0.758,282,0.686,287,0.686,314,0.686,334,0.592,347,0.669,354,0.702,375,0.892,393,0.637,416,0.669,502,0.686,564,0.702,566,0.702,578,1.048,605,0.669,626,0.737,652,0.702,655,1.293,702,0.275,705,0.669,706,0.669,707,0.669,708,0.669,709,0.669,710,0.669,723,0.686,724,0.974,725,0.755,728,0.637,730,1.746,731,1.655,732,0.737,734,1.073,739,1.69,770,0.871,771,0.959,775,0.755,776,1.073,777,1.424,778,0.755,779,1.424,780,0.686,781,0.737,782,1.099,783,0.686,784,0.755,785,0.686,786,0.72,787,1.703,788,0.686,789,0.737,790,0.755,791,0.686,792,0.737,793,0.686,794,1.246,795,0.755,796,0.702,797,0.755,798,0.686,799,0.755,800,0.686,801,0.755,802,0.686,803,0.72,804,0.755,805,0.686,806,0.737,807,0.686,808,0.755,809,0.686,810,0.737,811,0.755,812,0.755,813,0.686,814,0.755,815,0.686,816,0.755,817,0.686,818,0.72,819,0.686,820,1.236,821,1.703,822,0.686,823,0.686,824,0.686,825,0.737,826,0.686,827,0.686,828,0.755,829,0.702,830,0.686,831,1.099,832,0.686,833,1.424,834,0.686,835,1.293,836,1.266,837,1.099,838,0.686,839,0.737,840,0.686,841,0.72,842,0.686,843,0.72,844,0.686,845,0.755,846,0.653,847,0.755,848,0.72,849,0.72,850,0.72,851,0.686,852,0.737,853,0.686,854,0.737,855,0.686,856,0.702,857,0.702,858,1.048,859,0.686,860,0.686,861,0.737,862,0.686,863,0.737,864,0.755,865,0.755,866,0.669,867,0.702,868,0.755,869,0.669,870,1.094,871,0.755,872,0.669,873,0.755,874,0.653,875,0.755,876,0.669,877,0.702,878,0.737,879,0.755,932,2.354,1212,3.628,1213,3.409,1214,2.492,1221,3.628,1844,3.868,1881,3.14,2462,5.922,2463,2.863,2464,5.183,2465,6.714,2466,4.572,2467,3.14,2468,3.14,2469,3.14,2470,3.14,2471,3.14,2472,3.56,2473,3.56,2474,3.56,2475,3.56,2476,3.14,2477,3.14,2478,3.14,2479,3.14,2480,3.56,2481,3.56,2482,3.56,2483,5.183,2484,3.56,2485,3.56,2486,3.56,2487,3.56,2488,7.135,2489,3.56,2490,3.56,2491,3.56,2492,3.56,2493,3.56,2494,3.14,2495,3.56,2496,3.56]],["title/components/PerspectiveCameraComponent.html",[702,0.179,838,0.843]],["body/components/PerspectiveCameraComponent.html",[3,0.075,4,0.075,5,0.067,8,0.218,9,0.595,10,0.62,12,1.107,13,1.084,14,0.494,15,0.93,23,0.847,24,0.774,29,0.738,30,0.009,31,0.748,32,0.515,33,0.617,34,0.575,35,0.652,36,1.257,50,0.815,53,0.62,54,0.464,55,0.439,56,0.56,58,0.146,59,0.135,63,0.075,67,0.083,87,0.004,88,0.005,89,0.004,111,0.332,112,1.532,113,0.532,119,4.003,120,5.049,121,5.049,122,5.52,123,1.516,124,2.802,125,4.313,126,0.96,127,1.269,128,4.313,129,4.313,130,4.313,131,4.313,132,0.83,133,1.494,135,1.45,139,0.935,140,1.081,145,1.055,146,1.516,148,1.055,150,4.313,152,4.685,154,1.455,155,1.137,156,0.958,172,2.468,190,0.736,204,0.685,215,0.754,232,0.736,243,0.59,248,0.668,256,0.532,259,2.785,269,0.784,282,0.719,287,0.719,302,2.471,314,0.719,334,0.62,347,0.702,354,0.736,375,0.935,393,0.668,416,0.702,502,0.719,564,0.736,566,0.736,578,1.084,605,0.702,626,0.773,652,0.736,655,1.322,702,0.257,705,0.702,706,0.702,707,0.702,708,0.702,709,0.702,710,0.702,723,0.719,724,1.008,725,0.791,728,0.668,730,1.749,731,1.659,732,0.773,734,1.11,739,1.705,770,0.913,771,1.005,775,0.791,776,1.11,777,1.455,778,0.791,779,1.455,780,0.719,781,0.773,782,1.137,783,0.719,784,0.791,785,0.719,786,0.754,787,1.723,788,0.719,789,0.773,790,0.791,791,0.719,792,0.773,793,0.719,794,1.27,795,0.791,796,0.736,797,0.791,798,0.719,799,0.791,800,0.719,801,0.791,802,0.719,803,0.754,804,0.791,805,0.719,806,0.773,807,0.719,808,0.791,809,0.719,810,0.773,811,0.791,812,0.791,813,0.719,814,0.791,815,0.719,816,0.791,817,0.719,818,0.754,819,0.719,820,1.269,821,1.723,822,0.719,823,0.719,824,0.719,825,0.773,826,0.719,827,0.719,828,0.791,829,0.736,830,0.719,831,1.137,832,0.719,833,1.455,834,0.719,835,0.719,836,0.773,837,1.137,838,1.322,839,1.3,840,0.719,841,0.754,842,0.719,843,0.754,844,0.719,845,0.791,846,0.685,847,0.791,848,0.754,849,0.754,850,0.754,851,0.719,852,0.773,853,0.719,854,0.773,855,0.719,856,0.736,857,0.736,858,1.084,859,0.719,860,0.719,861,0.773,862,0.719,863,0.773,864,0.791,865,0.791,866,0.702,867,0.736,868,0.791,869,0.702,870,1.124,871,0.791,872,0.702,873,0.791,874,0.685,875,0.791,876,0.702,877,0.736,878,0.773,879,0.791,1903,5.537,1904,5.537,1926,3.291,1927,3.291,2463,3.001,2466,3.291,2467,3.291,2468,3.291,2469,3.291,2470,3.291,2471,3.291,2476,3.291,2477,3.291,2478,4.73,2479,3.291,2494,3.291,2497,6.412,2498,5.362,2499,6.277,2500,5.362,2501,3.731,2502,3.731,2503,3.731,2504,3.731,2505,3.731,2506,3.731,2507,3.731,2508,3.731,2509,3.731,2510,3.731]],["title/components/PlaneMeshComponent.html",[702,0.179,840,0.843]],["body/components/PlaneMeshComponent.html",[3,0.066,4,0.066,5,0.059,8,0.192,10,0.811,12,1.091,13,0.986,14,0.449,15,0.883,23,0.771,24,0.753,27,0.732,29,0.685,30,0.009,31,0.733,32,0.502,33,0.816,34,0.505,35,0.594,50,0.609,53,0.545,54,0.958,55,0.905,56,0.875,58,0.145,59,0.118,60,1.608,63,0.066,67,0.073,75,0.714,87,0.003,88,0.005,89,0.003,111,0.292,112,0.573,113,0.467,116,1.346,118,2.684,123,1.379,126,0.873,127,0.663,132,0.729,133,1.427,135,1.34,139,1.46,140,0.95,145,1.379,146,1.825,148,1.379,154,1.463,155,1.035,156,0.842,169,1.673,170,1.336,171,1.463,179,4.815,182,1.283,189,2.442,190,0.647,204,0.601,214,1.314,215,0.663,232,0.647,238,2.014,243,1.09,248,0.587,249,3.565,256,0.695,269,0.714,282,0.631,287,0.631,314,0.631,332,1.881,334,0.545,347,0.616,354,1.64,356,3.343,357,2.799,358,3.208,359,2.49,360,2.403,361,2.973,362,2.403,363,2.686,367,1.881,370,1.881,371,3.83,373,1.736,375,0.822,383,1.965,384,3.923,388,1.881,393,0.587,416,0.616,421,1.736,445,1.964,455,2.111,456,2.111,463,1.134,502,0.631,505,2.891,506,3.661,513,2.295,564,0.647,566,0.647,578,0.986,605,0.616,626,0.679,652,0.647,655,1.243,702,0.238,705,0.616,706,0.616,707,0.616,708,0.616,709,0.616,710,0.616,723,0.631,724,0.917,725,0.695,728,0.587,730,1.74,731,1.649,732,0.679,734,1.01,739,1.589,770,0.802,771,0.883,775,0.695,776,1.01,777,1.368,778,0.695,779,1.368,780,0.631,781,0.679,782,1.035,783,0.631,784,0.695,785,0.631,786,0.663,787,1.667,788,0.631,789,0.679,790,0.695,791,0.631,792,0.679,793,0.631,794,1.205,795,0.695,796,0.647,797,0.695,798,0.631,799,0.695,800,0.631,801,0.695,802,0.631,803,0.663,804,0.695,805,0.631,806,0.679,807,0.631,808,0.695,809,0.631,810,0.679,811,0.695,812,0.695,813,0.631,814,0.695,815,0.631,816,0.695,817,0.631,818,0.663,819,0.631,820,1.178,821,1.667,822,0.631,823,0.631,824,0.631,825,0.679,826,0.631,827,0.631,828,0.695,829,0.647,830,0.631,831,1.035,832,0.631,833,1.368,834,0.631,835,0.631,836,0.679,837,1.035,838,0.631,839,0.679,840,1.243,841,1.178,842,0.631,843,0.663,844,0.631,845,0.695,846,0.601,847,0.695,848,0.663,849,0.663,850,0.663,851,0.631,852,0.679,853,0.631,854,0.679,855,0.631,856,0.647,857,0.647,858,0.986,859,0.631,860,0.631,861,0.679,862,0.631,863,0.679,864,0.695,865,0.695,866,0.616,867,0.647,868,0.695,869,0.616,870,1.043,871,0.695,872,0.616,873,0.695,874,0.601,875,0.695,876,0.616,877,0.647,878,0.679,879,0.695,1147,3.418,1196,3.702,1280,1.805,1284,3.663,1285,4.348,1286,4.415,1287,4.815,1289,2.637,1290,4.815,1291,4.815,1292,6.189,1293,5.691,1294,5.691,1295,5.691,1296,5.19,1297,5.691,1298,2.637,1300,2.446,1301,4.302,1302,1.965,1303,1.965,1304,1.965,1305,1.965,1306,1.965,1308,1.965,1309,1.965,1310,2.06,1314,3.226,1316,3.64,1317,3.64,1319,1.881,1320,2.06,1747,3.923,1966,4.302,1967,2.891,1968,2.891,1970,2.891,1971,2.891,2511,6.605,2512,4.878,2513,2.891,2514,3.278,2515,4.302,2516,3.278,2517,4.878]],["title/components/PointLightComponent.html",[702,0.179,842,0.843]],["body/components/PointLightComponent.html",[3,0.06,4,0.06,5,0.053,8,0.174,9,0.502,10,0.493,12,1.13,13,0.915,14,0.417,15,1.13,23,0.715,24,0.8,27,1.087,29,0.852,30,0.009,31,0.757,32,0.535,33,0.751,34,0.457,35,0.726,36,1.525,50,0.841,53,0.493,54,0.971,55,0.918,56,0.446,58,0.133,59,0.107,60,0.66,63,0.06,67,0.066,72,0.839,75,0.434,87,0.003,88,0.005,89,0.003,111,0.264,112,0.518,113,0.423,123,1.28,124,2.449,126,0.81,127,1.109,132,0.66,133,1.374,135,1.402,139,0.744,140,1.312,145,0.839,146,1.28,148,0.839,154,1.401,155,0.96,156,0.762,165,1.462,170,0.615,178,1.462,182,0.781,189,2.068,190,0.586,201,1.756,202,1.551,204,0.545,214,1.219,215,0.6,232,0.586,238,1.916,243,1.434,248,0.531,254,1.284,256,0.992,257,2.31,269,0.662,282,0.572,287,0.572,292,2.8,314,0.572,334,0.493,347,0.558,354,0.586,359,2.8,375,0.744,380,3.378,393,0.531,416,0.558,423,2.492,424,2.492,425,3.021,426,3.021,427,3.021,428,2.492,429,3.021,430,3.021,431,2.492,432,2.492,433,2.492,434,3.021,435,2.492,436,2.492,437,2.492,438,2.397,439,2.397,440,2.492,441,2.492,442,2.492,443,2.397,444,1.65,445,1.868,448,1.634,450,1.634,451,1.634,452,1.634,453,1.515,454,1.634,455,1.284,456,1.284,462,1.572,463,1.026,464,1.634,465,1.634,466,1.572,467,1.634,468,1.572,469,1.413,471,1.026,473,1.634,479,1.634,488,1.634,490,1.634,491,1.634,493,1.634,496,1.143,502,0.572,564,0.586,566,0.586,578,0.915,605,0.558,626,0.615,652,0.586,655,1.182,657,2.001,677,2.23,702,0.224,705,0.558,706,0.558,707,0.558,708,0.558,709,0.558,710,0.558,723,0.572,724,0.851,725,0.629,727,2.078,728,0.531,730,1.732,731,1.64,732,0.615,733,4.58,734,0.937,735,4.094,736,2.215,737,2.215,739,1.798,740,1.703,741,1.703,742,1.703,743,1.703,744,2.597,745,1.703,746,1.703,747,1.703,748,1.703,749,1.703,750,1.703,751,1.703,752,1.779,753,1.703,754,1.703,755,1.703,756,1.703,757,1.703,758,1.703,759,1.703,760,1.703,761,1.779,762,1.703,763,1.703,764,1.703,765,1.703,766,1.703,767,1.779,768,1.703,769,1.703,770,0.726,771,0.8,774,2.215,775,0.629,776,0.937,777,1.302,778,0.629,779,1.302,780,0.572,781,0.615,782,0.96,783,0.572,784,0.629,785,0.572,786,0.6,787,1.622,788,0.572,789,0.615,790,0.629,791,0.572,792,0.615,793,0.572,794,1.154,795,0.629,796,0.586,797,0.629,798,0.572,799,0.629,800,0.572,801,0.629,802,0.572,803,0.6,804,0.629,805,0.572,806,0.615,807,0.572,808,0.629,809,0.572,810,0.615,811,0.629,812,0.629,813,0.572,814,0.629,815,0.572,816,0.629,817,0.572,818,0.6,819,0.572,820,1.109,821,1.622,822,0.572,823,0.572,824,0.572,825,0.615,826,0.572,827,0.572,828,0.629,829,0.586,830,0.572,831,0.96,832,0.572,833,1.302,834,0.572,835,0.572,836,0.615,837,0.96,838,0.572,839,0.615,840,0.572,841,0.6,842,1.182,843,1.109,844,0.572,845,0.629,846,0.545,847,0.629,848,0.6,849,0.6,850,0.6,851,0.572,852,0.615,853,0.572,854,0.615,855,0.572,856,0.586,857,0.586,858,0.915,859,0.572,860,0.572,861,0.615,862,0.572,863,0.615,864,0.629,865,0.629,866,0.558,867,0.586,868,0.629,869,0.558,870,0.982,871,0.629,872,0.558,873,0.629,874,0.545,875,0.629,876,0.558,877,0.586,878,0.615,879,0.629,1793,3.992,1798,2.618,1799,2.387,1805,2.618,1806,2.618,1807,4.839,1809,3.992,1810,2.618,1811,2.387,2069,2.618,2142,2.078,2369,4.094,2518,6.142,2519,4.526,2520,2.968,2521,2.968,2522,2.968,2523,2.968,2524,2.968]],["title/pipes/Rad2DegPipe.html",[1089,3.064,1777,3.064]],["body/pipes/Rad2DegPipe.html",[3,0.133,4,0.133,5,0.118,14,0.608,24,0.588,29,0.777,30,0.009,31,0.715,32,0.403,33,0.649,35,0.569,58,0.133,59,0.238,63,0.133,67,0.147,75,0.966,87,0.007,88,0.008,89,0.007,116,1.823,135,1.492,391,4.149,453,4.574,728,1.182,1089,5.46,1354,4.368,1777,5.46,1778,5.312,1781,5.312,1784,6.88,1785,6.88,1786,6.88,1787,5.312,1789,5.312,2525,5.825,2526,7.801,2527,7.801,2528,6.604]],["title/directives/RaycasterCameraDirective.html",[111,0.39,869,0.823]],["body/directives/RaycasterCameraDirective.html",[3,0.13,4,0.13,5,0.116,8,0.379,14,0.71,23,1.219,24,0.687,29,0.762,30,0.009,31,0.558,32,0.396,33,0.636,35,0.558,50,0.806,58,0.165,59,0.234,63,0.13,67,0.145,87,0.007,88,0.008,89,0.007,111,0.577,112,1.489,113,0.923,116,2.129,119,4.535,194,3.795,201,2.729,240,2.408,574,4.398,613,4.535,728,1.16,730,1.218,731,1.381,869,1.45,870,1.381,1101,4.535,1714,5.211,1716,4.624,1732,4.285,2529,5.447,2530,5.715,2531,6.479,2532,6.479,2533,6.479]],["title/interfaces/RaycasterEmitEvent.html",[64,1.596,1995,3.064]],["body/interfaces/RaycasterEmitEvent.html",[3,0.112,4,0.112,5,0.1,8,0.326,9,0.781,23,0.881,30,0.01,32,0.43,33,0.691,50,0.735,56,1.157,58,0.168,59,0.201,60,1.565,63,0.141,64,2.033,67,0.124,87,0.006,88,0.007,89,0.006,111,0.497,116,1.539,155,1.492,182,1.466,194,3.241,195,2.868,201,1.785,202,1.577,240,2.701,243,1.319,256,0.795,347,1.449,471,2.799,498,4.644,574,3.797,584,3.343,585,3.504,702,0.354,724,1.323,731,1.26,870,1.494,874,1.023,886,4.422,1101,3.903,1136,3.071,1716,3.343,1730,3.903,1732,3.688,1737,6.199,1744,5.659,1995,4.925,2001,4.485,2013,5.659,2016,5.965,2307,5.752,2308,3.903,2314,5.752,2315,4.162,2336,4.653,2350,4.162,2529,3.688,2534,4.485,2535,4.919,2536,4.919,2537,4.919,2538,4.919,2539,4.919,2540,4.919,2541,4.919,2542,4.485,2543,4.485,2544,4.162,2545,6.798,2546,4.919,2547,6.798,2548,4.919,2549,4.919,2550,4.919,2551,4.919,2552,4.919,2553,4.919,2554,4.919,2555,4.919,2556,4.919,2557,4.919,2558,4.919,2559,4.919,2560,4.919,2561,4.919,2562,4.919,2563,4.919,2564,4.919,2565,4.919]],["title/directives/RaycasterEnableDirective.html",[111,0.39,872,0.823]],["body/directives/RaycasterEnableDirective.html",[3,0.132,4,0.132,5,0.118,8,0.384,14,0.717,23,1.23,24,0.693,29,0.773,30,0.009,31,0.567,32,0.402,33,0.646,35,0.567,50,0.813,58,0.156,59,0.237,63,0.132,67,0.147,87,0.007,88,0.008,89,0.007,111,0.586,113,0.937,116,2.148,194,3.819,199,4.665,201,2.742,240,2.053,574,4.367,728,1.177,730,1.236,731,1.393,870,1.393,872,1.463,1101,4.603,1732,4.35,2529,5.482,2566,5.801,2567,6.576,2568,6.576,2569,6.576,2570,6.576]],["title/directives/RaycasterGroupDirective.html",[111,0.39,874,0.803]],["body/directives/RaycasterGroupDirective.html",[3,0.097,4,0.097,5,0.086,8,0.282,14,0.59,23,1.012,24,0.78,29,0.845,30,0.01,31,0.619,32,0.468,33,0.706,35,0.72,50,0.898,56,1.079,58,0.16,59,0.174,60,1.424,63,0.129,64,1.758,67,0.108,87,0.005,88,0.006,89,0.005,111,0.43,113,0.687,116,1.767,155,1.358,182,1.268,194,3.312,195,2.931,201,2.451,202,2.166,240,2.812,243,1.26,256,0.687,347,1.351,391,3.029,444,2.335,471,2.891,498,4.394,574,4.119,584,3.838,585,4.023,658,3.391,702,0.313,724,1.44,728,0.863,730,0.906,731,1.371,870,1.539,874,1.175,886,4.574,1101,3.375,1714,3.878,1716,3.838,1730,3.375,1732,3.189,1737,5.782,1744,5.15,1978,5.647,1995,3.375,2001,5.15,2013,5.15,2016,5.032,2307,3.598,2308,3.375,2314,5.365,2315,3.598,2336,5.065,2350,4.778,2529,5.828,2534,3.878,2535,5.647,2536,5.647,2537,5.647,2538,5.647,2539,5.647,2540,5.647,2541,5.647,2542,5.782,2543,5.782,2544,5.365,2545,6.34,2546,4.252,2547,6.34,2548,4.252,2549,4.252,2550,4.252,2551,6.755,2552,4.252,2553,4.252,2554,4.252,2555,6.755,2556,4.252,2557,4.252,2558,4.252,2559,6.755,2560,4.252,2561,4.252,2562,4.252,2563,4.252,2564,4.252,2565,4.252,2571,6.402,2572,4.821,2573,4.821,2574,4.821,2575,4.821,2576,4.821,2577,4.821,2578,4.821,2579,4.821,2580,4.821]],["title/injectables/RaycasterService.html",[0,1.401,574,2.156]],["body/injectables/RaycasterService.html",[0,1.708,2,1.825,3,0.074,4,0.074,5,0.066,8,0.217,9,0.592,14,0.491,15,1.121,23,0.988,24,0.792,29,0.915,30,0.01,31,0.67,32,0.475,33,0.764,35,0.738,50,0.88,54,0.851,55,0.805,56,0.939,58,0.146,59,0.134,60,1.522,63,0.074,64,1.351,67,0.083,72,1.768,75,1.165,87,0.004,88,0.005,89,0.004,112,1.319,116,1.023,119,4.385,139,1.715,140,2.188,155,1.132,170,1.105,172,3.529,182,0.974,189,1.585,195,2.176,198,3.491,199,4.101,202,1.934,229,2.98,240,2.859,243,1.081,251,2.96,256,0.975,395,3.061,408,3.929,455,2.706,456,3.267,469,1.764,496,2.055,574,2.629,613,2.594,658,2.826,666,3.312,870,1.352,886,3.925,895,5.029,905,5.502,915,5.502,1212,2.594,1213,2.309,1221,2.594,1232,3.929,1436,5.105,1636,2.765,1730,2.594,1769,2.98,2016,5.678,2142,2.594,2305,5.635,2306,2.98,2307,2.765,2308,2.594,2309,4.706,2310,6.034,2311,5.515,2312,5.515,2313,3.268,2314,4.666,2315,2.765,2316,5.515,2317,3.268,2318,3.268,2319,3.268,2320,3.268,2321,3.268,2322,3.268,2323,3.268,2324,3.268,2325,3.268,2326,3.268,2327,6.034,2328,5.515,2329,6.034,2330,5.515,2331,4.292,2332,3.268,2333,4.706,2334,3.268,2335,3.268,2336,4.524,2337,3.268,2338,4.706,2339,4.706,2340,5.515,2341,5.515,2342,4.706,2343,4.706,2344,6.394,2345,6.394,2346,4.706,2347,3.268,2348,3.268,2349,5.515,2350,3.982,2351,3.268,2352,4.706,2353,4.706,2354,4.706,2355,5.515,2356,3.268,2357,3.268,2358,3.268,2359,4.706,2360,4.706,2361,4.292,2362,3.268,2363,3.268,2364,4.706,2365,3.268,2366,3.268,2367,3.268,2368,4.706,2369,3.982,2370,3.268,2371,6.034,2372,4.706,2373,3.268,2374,3.268,2375,3.268,2376,3.268,2581,5.336,2582,5.336,2583,5.336,2584,5.336,2585,5.336,2586,4.706,2587,5.336,2588,3.705,2589,3.705,2590,3.705,2591,3.705,2592,3.705,2593,2.98,2594,3.705,2595,3.705,2596,3.705,2597,3.705,2598,3.705,2599,3.705,2600,3.705,2601,3.705,2602,3.705,2603,3.705,2604,3.705,2605,3.705,2606,3.705,2607,3.705,2608,3.705,2609,3.705]],["title/components/RendererCanvasComponent.html",[605,0.823,702,0.179]],["body/components/RendererCanvasComponent.html",[3,0.073,4,0.073,5,0.065,8,0.211,9,0.581,12,0.856,14,0.483,15,0.865,23,0.828,24,0.718,29,0.616,30,0.009,31,0.74,32,0.413,33,0.515,34,0.557,35,0.582,50,0.644,53,0.601,54,0.45,55,0.425,58,0.105,59,0.13,63,0.073,67,0.081,75,0.767,87,0.004,88,0.005,89,0.004,111,0.322,112,0.631,113,0.515,116,1.446,117,4.315,124,3.018,126,0.938,127,0.73,132,0.804,133,1.477,139,0.906,140,1.518,154,1.111,170,1.085,189,1.556,190,0.713,198,1.844,204,0.663,215,0.73,232,0.713,240,2.241,243,0.571,248,0.938,256,0.515,282,0.696,287,0.696,314,0.696,320,2.166,321,2.271,334,0.601,346,2.674,347,0.679,354,0.713,393,0.647,395,3.006,401,4.472,416,0.679,502,0.696,541,2.39,542,2.39,564,0.713,566,1.216,576,5.763,578,1.367,581,3.668,583,3.91,584,3.141,588,3.91,601,3.141,605,1.271,607,3.141,626,0.748,652,0.713,655,1.302,665,2.267,702,0.252,705,0.679,706,0.679,707,0.679,708,0.679,709,0.679,710,0.679,723,0.696,724,0.985,725,0.766,728,0.647,730,1.747,731,1.657,732,0.748,734,0.748,775,0.766,776,1.085,777,1.434,778,0.766,779,1.434,780,0.696,781,0.748,782,1.111,783,0.696,784,0.766,785,0.696,786,0.73,787,1.71,788,0.696,789,0.748,790,0.766,791,0.696,792,0.748,793,0.696,794,1.254,795,0.766,796,0.713,797,0.766,798,0.696,799,0.766,800,0.696,801,0.766,802,0.696,803,0.73,804,0.766,805,0.696,806,0.748,807,0.696,808,0.766,809,0.696,810,0.748,811,0.766,812,0.766,813,0.696,814,0.766,815,0.696,816,0.766,817,0.696,818,0.73,819,0.696,820,1.246,821,1.71,822,0.696,823,0.696,824,0.696,825,0.748,826,0.696,827,0.696,828,0.766,829,0.713,830,0.696,831,1.111,832,0.696,833,1.434,834,0.696,835,0.696,836,0.748,837,1.111,838,0.696,839,0.748,840,0.696,841,0.73,842,0.696,843,0.73,844,1.577,845,0.766,846,0.663,847,0.766,848,0.73,849,0.73,850,0.73,851,0.696,852,0.748,853,0.696,854,0.748,855,0.696,856,0.713,857,0.713,858,1.059,859,0.696,860,0.696,861,0.748,862,0.696,863,0.748,864,0.766,865,0.766,866,0.679,867,0.713,868,0.766,869,0.679,870,1.104,871,0.766,872,0.679,873,0.766,874,0.663,875,0.766,876,0.679,877,0.713,878,0.748,879,0.766,886,4.538,887,5.438,932,2.018,1054,3.187,1111,3.187,1276,2.697,1277,2.697,1284,1.72,1329,2.529,1716,2.166,1801,4.51,1880,4.622,2194,2.906,2197,4.214,2275,2.697,2276,5.046,2610,7.222,2611,3.187,2612,6.362,2613,6.164,2614,5.24,2615,5.24,2616,6.164,2617,5.24,2618,6.761,2619,5.437,2620,5.24,2621,5.24,2622,6.164,2623,5.24,2624,3.613,2625,3.613,2626,5.24,2627,3.613,2628,5.24,2629,5.24,2630,3.613,2631,5.24,2632,3.613,2633,3.613,2634,3.613,2635,6.761,2636,5.24,2637,5.24,2638,5.24,2639,5.24,2640,5.24,2641,5.24,2642,5.24,2643,5.24,2644,5.24,2645,5.24,2646,5.24,2647,3.613,2648,3.613,2649,3.613,2650,3.613,2651,3.613,2652,3.613,2653,3.613,2654,3.613,2655,3.613,2656,5.24,2657,3.613,2658,3.187,2659,3.613,2660,3.613,2661,3.613,2662,3.613,2663,3.613,2664,3.613,2665,3.613,2666,3.613,2667,3.613,2668,3.613,2669,5.24,2670,3.613,2671,3.613,2672,2.697]],["title/injectables/RendererService.html",[0,1.401,133,0.864]],["body/injectables/RendererService.html",[0,1.824,2,2.003,3,0.082,4,0.082,5,0.073,8,0.238,9,0.632,12,0.564,14,0.525,15,1.161,20,3.776,23,0.901,24,0.79,27,0.988,29,0.959,30,0.01,31,0.703,32,0.528,33,0.801,35,0.731,50,0.835,54,0.506,55,0.478,56,0.61,58,0.156,59,0.147,60,1.464,63,0.082,67,0.091,68,4.585,72,1.861,75,1.043,87,0.004,88,0.006,89,0.004,112,1.36,119,4.287,133,1.125,135,1.121,140,2.067,152,4.912,155,1.209,165,3.514,170,1.612,172,4.967,203,4.967,204,1.428,215,0.822,220,4.585,240,2.828,255,3.27,346,3.833,570,4.607,613,2.846,647,5.027,665,3.086,846,1.428,1108,2.689,1117,4.892,1129,4.967,1205,5.737,1213,1.759,1284,3.396,1286,2.333,1508,5.027,1799,3.27,1878,3.586,2331,4.585,2361,6.041,2586,5.027,2612,6.262,2619,6.624,2658,7.558,2672,3.035,2673,3.586,2674,5.7,2675,7.132,2676,7.132,2677,7.132,2678,5.7,2679,5.7,2680,5.7,2681,5.7,2682,3.586,2683,5.7,2684,5.7,2685,4.066,2686,4.066,2687,4.066,2688,4.066,2689,5.7,2690,4.066,2691,4.066,2692,5.7,2693,4.066,2694,4.066,2695,5.7,2696,4.066,2697,5.7,2698,4.066,2699,5.7,2700,4.066,2701,4.066,2702,4.066,2703,4.066,2704,4.066,2705,6.581,2706,4.066,2707,4.066,2708,4.066,2709,4.066,2710,5.7,2711,4.066,2712,6.581,2713,4.066,2714,4.066,2715,4.066,2716,5.7,2717,4.066,2718,4.066,2719,4.066,2720,4.066,2721,4.066,2722,4.066,2723,7.132,2724,4.066,2725,4.066,2726,4.066,2727,4.066,2728,4.066,2729,4.066,2730,4.066,2731,4.066,2732,4.066,2733,5.7,2734,5.7,2735,4.066,2736,4.066,2737,4.066,2738,4.066,2739,4.066,2740,4.066,2741,5.7,2742,4.066,2743,4.066,2744,4.066]],["title/classes/SVGLoader.html",[67,0.098,2745,3.064]],["body/classes/SVGLoader.html",[3,0.031,4,0.031,5,0.027,8,0.09,9,0.386,14,0.243,23,0.417,24,0.558,27,0.23,29,0.678,30,0.01,31,0.47,32,0.253,33,0.635,35,0.52,50,0.16,54,0.634,55,0.409,56,1.254,58,0.031,60,1.985,63,0.031,66,2.735,67,0.034,72,2.43,75,1.081,87,0.002,88,0.003,89,0.002,91,1.144,96,2.301,135,0.593,140,1.198,155,0.325,170,0.966,178,0.755,180,1.971,189,2.472,198,0.783,248,0.274,254,1.143,256,0.496,269,0.386,297,1.233,302,3.06,312,1.144,320,0.919,393,0.74,397,1.583,412,1.352,438,1.843,439,1.843,455,1.506,456,1.506,463,0.913,496,2.768,543,4.524,558,3.934,581,1.073,587,1.144,607,3.875,622,1.352,634,1.352,657,2.103,699,1.233,786,0.703,810,0.547,841,0.31,843,1.104,856,0.521,858,0.836,897,1.352,907,0.963,933,0.591,973,4.075,1052,6.431,1146,0.963,1147,0.812,1191,2.124,1213,2.942,1232,3.203,1286,3.461,1290,1.971,1291,1.144,1296,1.233,1354,2.735,1399,1.073,1413,3.371,1432,1.014,1636,1.144,1647,1.352,1648,3.069,1735,2.33,1781,4.639,1787,4.852,1789,2.799,1811,1.233,1842,2.33,1844,2.597,1957,3.327,1981,2.124,1988,1.073,2015,1.233,2043,1.352,2055,5.701,2056,3.648,2138,1.233,2206,5.858,2369,1.971,2390,6.59,2409,2.597,2413,2.33,2453,1.352,2593,2.124,2672,1.144,2745,2.895,2746,5.701,2747,1.352,2748,3.479,2749,3.479,2750,4.136,2751,2.641,2752,3.479,2753,3.479,2754,4.136,2755,3.479,2756,1.533,2757,2.641,2758,3.479,2759,3.479,2760,1.533,2761,4.136,2762,1.533,2763,1.533,2764,1.533,2765,3.069,2766,1.533,2767,5.768,2768,5.768,2769,5.768,2770,1.533,2771,2.641,2772,2.641,2773,2.641,2774,2.641,2775,2.641,2776,1.533,2777,4.136,2778,4.136,2779,5.097,2780,1.533,2781,1.533,2782,1.533,2783,4.114,2784,1.533,2785,1.533,2786,8.193,2787,6.463,2788,1.533,2789,7.291,2790,1.533,2791,6.032,2792,6.032,2793,5.46,2794,1.533,2795,2.641,2796,3.479,2797,2.641,2798,4.136,2799,2.641,2800,1.533,2801,8.032,2802,1.533,2803,3.479,2804,1.533,2805,1.533,2806,1.533,2807,1.533,2808,1.533,2809,1.533,2810,1.533,2811,1.533,2812,1.533,2813,1.533,2814,1.533,2815,1.533,2816,2.641,2817,1.533,2818,1.533,2819,1.533,2820,1.533,2821,1.533,2822,1.533,2823,1.533,2824,1.533,2825,1.533,2826,1.533,2827,1.533,2828,2.641,2829,1.533,2830,1.533,2831,3.479,2832,1.533,2833,2.641,2834,7.476,2835,2.641,2836,6.032,2837,4.136,2838,2.641,2839,1.533,2840,1.533,2841,1.533,2842,1.533,2843,1.533,2844,1.533,2845,1.352,2846,1.533,2847,1.533,2848,1.533,2849,1.533,2850,1.533,2851,3.479,2852,1.533,2853,3.479,2854,1.533,2855,2.641,2856,1.533,2857,1.533,2858,1.533,2859,3.479,2860,3.479,2861,1.533,2862,2.641,2863,3.479,2864,1.533,2865,1.533,2866,1.533,2867,2.641,2868,2.641,2869,2.641,2870,1.533,2871,2.641,2872,2.641,2873,2.641,2874,4.136,2875,1.533,2876,1.533,2877,2.641,2878,1.533,2879,1.533,2880,1.533,2881,1.533,2882,1.533,2883,1.533,2884,1.533,2885,1.533,2886,2.641,2887,1.533,2888,1.533,2889,1.533,2890,2.641,2891,2.641,2892,1.533,2893,1.533,2894,2.641,2895,3.069,2896,4.136,2897,6.262,2898,6.262,2899,3.479,2900,3.479,2901,3.479,2902,1.533,2903,1.533,2904,2.641,2905,4.664,2906,2.641,2907,1.533,2908,2.641,2909,5.097,2910,4.136,2911,5.097,2912,4.136,2913,2.641,2914,6.032,2915,6.032,2916,2.641,2917,4.664,2918,2.641,2919,1.533,2920,1.533,2921,1.533,2922,1.533,2923,3.479,2924,3.479,2925,2.641,2926,1.533,2927,4.664,2928,4.664,2929,4.664,2930,4.664,2931,2.641,2932,1.533,2933,1.533,2934,1.533,2935,1.533,2936,1.533,2937,1.533,2938,1.533,2939,1.533,2940,2.641,2941,1.533,2942,1.533,2943,1.533,2944,4.664,2945,2.641,2946,4.664,2947,1.533,2948,2.641,2949,1.533,2950,4.136,2951,1.533,2952,2.641,2953,1.533,2954,1.533,2955,3.479,2956,1.533,2957,1.533,2958,1.533,2959,5.768,2960,1.533,2961,2.641,2962,4.136,2963,2.641,2964,2.641,2965,1.533,2966,1.533,2967,1.533,2968,2.641,2969,1.533,2970,1.533,2971,1.533,2972,1.533,2973,3.479,2974,2.641,2975,1.533,2976,1.533,2977,1.233,2978,3.479,2979,1.533,2980,1.533,2981,1.533,2982,1.533,2983,1.533,2984,1.533,2985,1.533,2986,1.533,2987,1.533,2988,1.533,2989,1.533,2990,1.533,2991,1.533,2992,1.533,2993,1.533,2994,1.533,2995,1.533,2996,1.533,2997,1.533,2998,1.533,2999,4.136,3000,1.533,3001,1.533,3002,1.533,3003,1.533,3004,1.533,3005,1.533,3006,1.533,3007,1.533,3008,2.641,3009,1.533,3010,1.533,3011,1.533,3012,1.533,3013,1.533,3014,1.533,3015,1.533,3016,1.533,3017,1.533,3018,1.533,3019,1.533,3020,3.479,3021,2.641,3022,4.136,3023,2.641,3024,1.533,3025,2.641,3026,1.533,3027,3.479,3028,1.533,3029,2.641,3030,1.533,3031,1.533,3032,1.533,3033,1.533,3034,1.533,3035,1.533,3036,1.533,3037,1.533,3038,1.533,3039,1.533,3040,2.641,3041,1.533,3042,4.664,3043,1.533,3044,4.496,3045,1.533,3046,2.641,3047,1.533,3048,1.533,3049,2.641,3050,2.641,3051,2.641,3052,2.641,3053,2.641,3054,1.533,3055,2.641,3056,4.136,3057,3.479,3058,5.46,3059,2.641,3060,2.641,3061,1.533,3062,2.641,3063,1.533,3064,1.533,3065,1.533,3066,2.641,3067,3.479,3068,1.533,3069,1.533,3070,3.479,3071,1.533,3072,1.533,3073,1.533,3074,1.533,3075,1.352,3076,1.533,3077,3.479,3078,3.479,3079,1.533,3080,2.641,3081,1.533,3082,4.136,3083,3.479,3084,2.641,3085,1.533,3086,1.533,3087,1.533,3088,1.533,3089,1.533,3090,1.533,3091,1.533,3092,3.648,3093,4.136,3094,2.641,3095,3.648,3096,4.136,3097,1.533,3098,3.479,3099,2.641,3100,1.533,3101,3.479,3102,1.533,3103,1.533,3104,1.533,3105,2.641,3106,1.533,3107,1.533,3108,2.641,3109,1.533,3110,1.533,3111,2.641,3112,1.533,3113,1.533,3114,1.533,3115,1.533,3116,2.641,3117,1.533,3118,1.533,3119,1.533,3120,1.533,3121,1.533,3122,1.533,3123,3.479,3124,3.479,3125,1.533,3126,3.479,3127,1.533,3128,3.479,3129,1.533,3130,2.641,3131,1.533,3132,2.33,3133,1.533,3134,2.641,3135,1.533,3136,1.533,3137,1.533,3138,1.533,3139,1.533,3140,1.533,3141,1.533,3142,1.533,3143,1.533,3144,2.641,3145,1.533,3146,1.533,3147,1.533,3148,1.533,3149,1.533,3150,1.533,3151,1.352,3152,1.533,3153,1.533,3154,1.533,3155,1.533,3156,2.641,3157,2.641,3158,1.533,3159,1.533,3160,1.533,3161,1.533,3162,1.533,3163,3.479,3164,1.533,3165,1.533,3166,1.533,3167,4.664,3168,1.533,3169,1.533,3170,1.533,3171,1.533,3172,2.641,3173,1.533,3174,1.533,3175,1.533,3176,1.533,3177,1.533,3178,1.533,3179,1.533,3180,1.533,3181,1.533,3182,1.533,3183,1.533,3184,1.533,3185,1.533,3186,1.533,3187,1.533,3188,1.533,3189,1.533,3190,1.533,3191,1.533,3192,1.533,3193,1.533,3194,1.533,3195,1.533,3196,1.352,3197,1.533,3198,1.533,3199,1.533,3200,2.641,3201,2.641,3202,2.641,3203,1.533]],["title/components/SVGLoaderComponent.html",[702,0.179,855,0.843]],["body/components/SVGLoaderComponent.html",[3,0.066,4,0.117,5,0.058,8,0.191,9,0.54,10,0.808,12,1.002,13,0.983,14,0.448,15,0.744,23,0.769,24,0.767,27,1.268,29,0.684,30,0.009,31,0.733,32,0.516,33,0.676,34,1.184,35,0.501,50,0.508,53,0.543,54,0.899,55,0.904,56,1.084,58,0.15,59,0.118,60,1.778,63,0.066,67,0.073,72,0.923,75,0.85,87,0.003,88,0.005,89,0.003,95,3.2,100,3.056,105,2.436,111,0.291,112,0.57,113,0.465,126,0.871,127,0.66,132,0.726,133,1.425,135,1.097,139,1.614,140,1.866,154,1.695,155,1.031,156,0.838,170,1.333,182,0.859,190,0.644,204,0.599,214,1.31,215,0.66,232,0.644,240,1.814,243,1.088,248,0.585,249,1.554,254,1.413,256,0.693,269,0.711,282,0.629,287,0.629,293,4.259,298,2.159,302,2.678,314,1.391,318,2.051,330,2.626,334,1.243,341,2.159,346,1.666,347,0.614,354,0.644,360,2.863,361,3.173,374,2.159,375,0.818,377,2.159,378,2.436,393,1.153,394,3.404,395,2.79,397,2.915,398,2.285,399,2.285,400,2.285,401,2.159,402,2.285,403,2.285,404,2.159,405,2.285,406,2.285,407,2.285,408,2.051,416,0.614,417,2.79,421,1.729,445,1.96,463,1.129,502,0.629,564,0.644,566,0.644,578,0.983,605,0.614,626,0.676,652,0.644,655,1.24,657,1.19,702,0.238,705,0.614,706,0.614,707,0.614,708,0.614,709,0.614,710,0.614,723,0.629,724,0.914,725,0.692,728,0.585,730,1.74,731,1.648,732,0.676,734,1.007,739,0.983,770,0.799,771,0.879,775,0.692,776,1.007,777,1.366,778,0.692,779,1.366,780,0.629,781,0.676,782,1.031,783,0.629,784,0.692,785,0.629,786,0.66,787,1.666,788,0.629,789,0.676,790,0.692,791,0.629,792,0.676,793,0.629,794,1.203,795,0.692,796,0.644,797,0.692,798,0.629,799,0.692,800,0.629,801,0.692,802,0.629,803,0.66,804,0.692,805,0.629,806,0.676,807,0.629,808,0.692,809,0.629,810,0.676,811,0.692,812,0.692,813,0.629,814,0.692,815,0.629,816,0.692,817,0.629,818,0.66,819,0.629,820,1.175,821,1.666,822,0.629,823,0.629,824,0.629,825,0.676,826,0.629,827,0.629,828,0.692,829,0.644,830,0.629,831,1.031,832,0.629,833,1.366,834,0.629,835,0.629,836,0.676,837,1.031,838,0.629,839,0.676,840,0.629,841,0.66,842,0.629,843,0.66,844,0.629,845,0.692,846,0.599,847,0.692,848,0.66,849,0.66,850,0.66,851,0.629,852,0.676,853,0.629,854,0.676,855,1.24,856,1.147,857,0.644,858,0.983,859,0.629,860,0.629,861,0.676,862,0.629,863,0.676,864,0.692,865,0.692,866,0.614,867,0.644,868,0.692,869,0.614,870,1.04,871,0.692,872,0.614,873,0.692,874,0.599,875,0.692,876,0.614,877,0.644,878,0.676,879,0.692,1065,4.699,1068,4.259,1319,1.873,1463,4.674,1527,2.626,1957,2.626,1958,2.88,1962,2.88,2088,4.674,2089,4.674,2293,2.88,2296,2.88,2297,5.126,2336,3.216,2378,2.285,2390,2.626,2396,2.436,2400,2.436,2745,4.068,2783,4.289,3092,5.126,3095,5.126,3204,7.552,3205,4.863,3206,5.811,3207,6.886,3208,4.863,3209,3.265,3210,3.265,3211,4.863,3212,3.265,3213,3.912,3214,3.265,3215,3.265,3216,3.265,3217,4.863,3218,3.265,3219,3.265,3220,3.265,3221,3.265,3222,2.88,3223,3.265,3224,3.265,3225,3.265,3226,2.436,3227,2.626,3228,3.265,3229,6.439,3230,3.265,3231,3.265,3232,3.265,3233,3.265,3234,3.265,3235,3.265,3236,4.863,3237,3.265,3238,3.265,3239,3.265,3240,3.265,3241,3.265,3242,3.265,3243,3.265,3244,3.265,3245,4.863,3246,3.265,3247,3.265,3248,3.265,3249,4.863,3250,2.88,3251,3.265,3252,2.88]],["title/components/SceneComponent.html",[702,0.179,846,0.803]],["body/components/SceneComponent.html",[3,0.061,4,0.061,5,0.054,8,0.177,9,0.509,10,0.502,12,1.134,13,0.928,14,0.423,15,1.138,23,0.725,24,0.797,27,1.094,29,0.857,30,0.009,31,0.758,32,0.53,33,0.755,34,0.466,35,0.729,36,1.546,50,0.844,53,0.502,54,0.907,55,0.857,56,0.833,58,0.134,59,0.109,60,0.672,63,0.061,67,0.067,72,0.855,75,0.671,87,0.003,88,0.005,89,0.003,111,0.409,112,0.528,113,0.431,116,1.266,118,2.556,123,1.298,124,2.476,126,0.822,127,1.121,132,0.672,133,1.384,135,1.377,140,0.876,145,1.298,146,1.752,148,1.298,154,0.973,155,0.973,156,0.776,165,1.489,169,1.543,170,0.626,171,1.349,178,1.489,182,0.795,189,1.648,190,0.596,201,1.776,202,1.569,204,0.555,214,1.236,215,0.611,232,0.596,238,1.934,243,1.435,248,0.541,254,1.308,256,0.999,257,2.342,269,0.671,282,0.582,287,0.582,292,2.831,314,0.582,334,0.502,346,3.4,347,0.568,354,0.596,375,0.758,383,1.812,393,0.541,416,0.568,421,1.601,423,2.527,424,2.527,425,3.055,426,3.055,427,3.055,428,2.527,429,3.055,430,3.055,431,2.527,432,2.527,433,2.527,434,3.411,435,2.527,436,2.527,437,2.527,438,2.431,439,2.431,440,2.527,441,2.527,442,2.527,443,2.431,444,1.673,445,2.028,448,1.664,450,1.664,451,1.664,452,1.664,453,1.543,454,1.664,455,1.308,456,1.308,462,1.601,463,1.045,464,1.664,465,1.664,466,1.601,467,1.664,468,1.601,469,1.439,471,1.045,473,1.664,479,1.664,488,1.664,490,1.664,491,1.664,493,1.664,496,1.164,502,0.582,506,3.486,564,0.596,566,0.596,578,0.928,605,0.568,626,0.626,652,0.596,655,1.193,677,2.261,702,0.227,705,0.568,706,0.568,707,0.568,708,0.568,709,0.568,710,0.568,723,0.582,724,0.863,725,0.641,728,0.541,730,1.734,731,1.642,732,0.626,734,0.95,739,1.801,740,1.734,741,1.734,742,1.734,743,2.633,744,1.734,745,1.734,746,1.734,747,1.734,748,2.633,749,1.734,750,1.734,751,1.734,752,1.812,753,1.734,754,1.734,755,1.734,756,1.734,757,1.734,758,1.734,759,1.734,760,1.734,762,1.734,763,1.734,764,1.734,765,1.734,766,1.734,768,1.734,769,1.734,770,0.74,771,0.814,775,0.641,776,0.95,777,1.314,778,0.641,779,1.314,780,0.582,781,0.626,782,0.973,783,0.582,784,0.641,785,0.582,786,0.611,787,1.631,788,0.582,789,0.626,790,0.641,791,0.582,792,0.626,793,0.582,794,1.163,795,0.641,796,0.596,797,0.641,798,0.582,799,0.641,800,0.582,801,0.641,802,0.582,803,0.611,804,0.641,805,0.582,806,0.626,807,0.582,808,0.641,809,0.582,810,0.626,811,0.641,812,0.641,813,0.582,814,0.641,815,0.582,816,0.641,817,0.582,818,0.611,819,0.582,820,1.121,821,1.631,822,0.582,823,0.582,824,0.582,825,0.626,826,0.582,827,0.582,828,0.641,829,0.596,830,0.582,831,0.973,832,0.582,833,1.314,834,0.582,835,0.582,836,0.626,837,0.973,838,0.582,839,0.626,840,0.582,841,0.611,842,0.582,843,0.611,844,0.582,845,0.641,846,1.137,847,0.641,848,0.611,849,0.611,850,0.611,851,0.582,852,0.626,853,0.582,854,0.626,855,0.582,856,0.596,857,0.596,858,0.928,859,0.582,860,0.582,861,0.626,862,0.582,863,0.626,864,0.641,865,0.641,866,0.568,867,0.596,868,0.641,869,0.568,870,0.993,871,0.641,872,0.568,873,0.641,874,0.555,875,0.641,876,0.568,877,0.596,878,0.626,879,0.641,1159,4.462,3253,2.666,3254,4.589,3255,5.547,3256,4.589,3257,3.022,3258,3.022,3259,3.022,3260,4.589,3261,3.022,3262,3.022,3263,3.022,3264,3.022]],["title/components/ServerBarrelActorComponent.html",[702,0.179,705,0.823]],["body/components/ServerBarrelActorComponent.html",[3,0.083,4,0.083,5,0.074,8,0.241,9,0.638,10,0.684,13,1.162,14,0.529,15,1,24,0.758,27,0.994,30,0.009,31,0.745,32,0.5,34,1.02,35,0.571,50,0.692,53,0.684,54,0.715,55,0.676,58,0.133,59,0.149,63,0.083,67,0.092,87,0.004,88,0.006,89,0.004,111,0.367,112,0.719,113,0.586,126,1.029,127,0.832,135,0.701,139,1.031,170,0.852,190,0.812,204,0.755,215,0.832,232,0.812,243,0.65,248,0.737,256,0.586,269,0.841,282,0.793,287,0.793,314,0.793,334,0.684,347,0.774,354,0.812,375,1.031,393,0.737,416,0.774,444,2.096,471,2.479,502,0.793,564,0.812,566,0.812,578,1.162,605,0.774,626,0.852,652,1.729,653,1.461,655,1.545,657,2.096,658,3.508,659,3.647,660,3.8,661,2.487,662,3.611,663,3.611,664,3.165,665,2.487,666,3.044,677,2.027,702,0.271,705,1.348,706,0.774,707,0.774,708,0.774,709,0.774,710,0.774,723,0.793,724,1.081,725,0.873,728,0.737,730,1.756,731,1.666,732,0.852,734,1.19,739,1.72,770,1.007,775,0.873,776,1.19,777,1.521,778,0.873,779,1.521,780,0.793,781,0.852,782,1.219,783,0.793,784,0.873,785,0.793,786,0.832,787,1.763,788,0.793,789,0.852,790,0.873,791,0.793,792,0.852,793,0.793,794,1.318,795,0.873,796,0.812,797,0.873,798,0.793,799,0.873,800,0.793,801,0.873,802,0.793,803,0.832,804,0.873,805,0.793,806,0.852,807,0.793,808,0.873,809,0.793,810,0.852,811,0.873,812,0.873,813,0.793,814,0.873,815,0.793,816,0.873,817,0.793,818,0.832,819,0.793,820,1.339,821,1.763,822,0.793,823,0.793,824,0.793,825,0.852,826,0.793,827,0.793,828,0.873,829,0.812,830,0.793,831,1.219,832,0.793,833,1.521,834,0.793,835,0.793,836,0.852,837,1.219,838,0.793,839,0.852,840,0.793,841,0.832,842,0.793,843,0.832,844,0.793,845,0.873,846,0.755,847,0.873,848,1.449,849,0.832,850,0.832,851,0.793,852,0.852,853,0.793,854,0.852,855,0.793,856,0.812,857,0.812,858,1.162,859,0.793,860,0.793,861,0.852,862,0.793,863,0.852,864,0.873,865,1.521,866,0.774,867,0.812,868,0.873,869,0.774,870,1.186,871,0.873,872,0.774,873,0.873,874,0.755,875,0.873,876,0.774,877,0.812,878,0.852,879,0.873,1973,2.361,2280,2.722,2281,2.722,2282,2.722,2283,2.722,2284,2.722,2285,2.722,2286,2.722,2287,2.722,2288,2.722,2289,2.722,2290,2.722,3265,2.88,3266,5.747]],["title/components/ServerCompactActorComponent.html",[702,0.179,706,0.823]],["body/components/ServerCompactActorComponent.html",[3,0.083,4,0.083,5,0.074,8,0.241,9,0.638,10,0.684,13,1.162,14,0.529,15,1,24,0.758,27,0.994,30,0.009,31,0.745,32,0.5,34,1.02,35,0.571,50,0.692,53,0.684,54,0.715,55,0.676,58,0.133,59,0.149,63,0.083,67,0.092,87,0.004,88,0.006,89,0.004,111,0.367,112,0.719,113,0.586,126,1.029,127,0.832,135,0.701,139,1.031,170,0.852,190,0.812,204,0.755,215,0.832,232,0.812,243,0.65,248,0.737,256,0.586,269,0.841,282,0.793,287,0.793,314,0.793,334,0.684,347,0.774,354,0.812,375,1.031,393,0.737,416,0.774,444,2.096,471,2.479,502,0.793,564,0.812,566,0.812,578,1.162,605,0.774,626,0.852,652,1.729,653,1.461,655,1.545,657,2.096,658,3.508,659,3.647,660,3.8,661,2.487,662,3.611,663,3.611,664,3.165,665,2.487,666,3.044,677,2.027,702,0.271,705,0.774,706,1.348,707,0.774,708,0.774,709,0.774,710,0.774,723,0.793,724,1.081,725,0.873,728,0.737,730,1.756,731,1.666,732,0.852,734,1.19,739,1.72,770,1.007,775,0.873,776,1.19,777,1.521,778,0.873,779,1.521,780,0.793,781,0.852,782,1.219,783,0.793,784,0.873,785,0.793,786,0.832,787,1.763,788,0.793,789,0.852,790,0.873,791,0.793,792,0.852,793,0.793,794,1.318,795,0.873,796,0.812,797,0.873,798,0.793,799,0.873,800,0.793,801,0.873,802,0.793,803,0.832,804,0.873,805,0.793,806,0.852,807,0.793,808,0.873,809,0.793,810,0.852,811,0.873,812,0.873,813,0.793,814,0.873,815,0.793,816,0.873,817,0.793,818,0.832,819,0.793,820,1.339,821,1.763,822,0.793,823,0.793,824,0.793,825,0.852,826,0.793,827,0.793,828,0.873,829,0.812,830,0.793,831,1.219,832,0.793,833,1.521,834,0.793,835,0.793,836,0.852,837,1.219,838,0.793,839,0.852,840,0.793,841,0.832,842,0.793,843,0.832,844,0.793,845,0.873,846,0.755,847,0.873,848,0.832,849,1.449,850,0.832,851,0.793,852,0.852,853,0.793,854,0.852,855,0.793,856,0.812,857,0.812,858,1.162,859,0.793,860,0.793,861,0.852,862,0.793,863,0.852,864,0.873,865,1.521,866,0.774,867,0.812,868,0.873,869,0.774,870,1.186,871,0.873,872,0.774,873,0.873,874,0.755,875,0.873,876,0.774,877,0.812,878,0.852,879,0.873,1973,2.361,2280,2.722,2281,2.722,2282,2.722,2283,2.722,2284,2.722,2285,2.722,2286,2.722,2287,2.722,2288,2.722,2289,2.722,2290,2.722,3265,2.88,3267,5.747]],["title/components/ServerIconActorComponent.html",[702,0.179,707,0.823]],["body/components/ServerIconActorComponent.html",[3,0.083,4,0.083,5,0.074,8,0.242,9,0.64,10,0.687,13,1.166,14,0.531,15,1.002,24,0.759,27,0.997,30,0.009,31,0.746,32,0.5,34,1.206,35,0.572,50,0.694,53,0.687,54,0.718,55,0.678,58,0.133,59,0.149,63,0.083,67,0.092,87,0.004,88,0.006,89,0.004,111,0.369,112,0.723,113,0.589,126,1.033,127,0.836,135,0.705,139,1.037,170,0.856,190,0.816,204,0.759,215,0.836,232,0.816,243,0.654,248,0.741,256,0.589,269,0.844,282,0.797,287,0.797,314,0.797,334,0.687,347,0.778,354,0.816,375,1.037,393,0.741,416,0.778,444,2.103,471,2.485,502,0.797,564,0.816,566,0.816,578,1.166,605,0.778,626,0.856,652,1.73,653,1.468,655,1.547,657,2.103,658,3.518,659,3.657,660,3.811,661,2.496,662,3.624,663,3.624,664,3.176,665,2.496,666,3.055,677,2.038,702,0.272,705,0.778,706,0.778,707,1.351,708,0.778,709,0.778,710,0.778,723,0.797,724,1.084,725,0.877,728,0.741,730,1.756,731,1.666,732,0.856,734,1.194,739,1.722,770,1.012,775,0.877,776,1.194,777,1.524,778,0.877,779,1.524,780,0.797,781,0.856,782,1.223,783,0.797,784,0.877,785,0.797,786,0.836,787,1.765,788,0.797,789,0.856,790,0.877,791,0.797,792,0.856,793,0.797,794,1.32,795,0.877,796,0.816,797,0.877,798,0.797,799,0.877,800,0.797,801,0.877,802,0.797,803,0.836,804,0.877,805,0.797,806,0.856,807,0.797,808,0.877,809,0.797,810,0.856,811,0.877,812,0.877,813,0.797,814,0.877,815,0.797,816,0.877,817,0.797,818,0.836,819,0.797,820,1.343,821,1.765,822,0.797,823,0.797,824,0.797,825,0.856,826,0.797,827,0.797,828,0.877,829,0.816,830,0.797,831,1.223,832,0.797,833,1.524,834,0.797,835,0.797,836,0.856,837,1.223,838,0.797,839,0.856,840,0.797,841,0.836,842,0.797,843,0.836,844,0.797,845,0.877,846,0.759,847,0.877,848,0.836,849,0.836,850,0.836,851,0.797,852,0.856,853,0.797,854,0.856,855,0.797,856,0.816,857,0.816,858,1.166,859,0.797,860,0.797,861,0.856,862,0.797,863,0.856,864,0.877,865,1.524,866,0.778,867,0.816,868,0.877,869,0.778,870,1.189,871,0.877,872,0.778,873,0.877,874,0.759,875,0.877,876,0.778,877,0.816,878,0.856,879,0.877,1973,2.373,2280,2.736,2281,2.736,2282,2.736,2283,2.736,2284,2.736,2285,2.736,2286,2.736,2287,2.736,2288,2.736,2289,2.736,2290,2.736,3265,2.895,3268,5.768]],["title/components/ServerStandActorComponent.html",[702,0.179,708,0.823]],["body/components/ServerStandActorComponent.html",[3,0.083,4,0.083,5,0.074,8,0.241,9,0.639,10,0.685,13,1.163,14,0.53,15,1,24,0.759,27,0.995,30,0.009,31,0.746,32,0.5,34,1.021,35,0.571,50,0.693,53,0.685,54,0.716,55,0.677,58,0.133,59,0.149,63,0.083,67,0.092,87,0.004,88,0.006,89,0.004,111,0.367,112,0.72,113,0.587,126,1.03,127,0.833,135,0.702,139,1.033,170,0.853,190,0.813,204,0.756,215,0.833,232,0.813,243,0.651,248,0.738,256,0.587,269,0.842,282,0.794,287,0.794,314,0.794,334,0.685,347,0.775,354,0.813,375,1.033,393,0.738,416,0.775,444,2.098,471,2.481,502,0.794,564,0.813,566,0.813,578,1.163,605,0.775,626,0.853,652,1.729,653,1.463,655,1.546,657,2.098,658,3.511,659,3.651,660,3.804,661,2.49,662,3.616,663,3.616,664,3.169,665,2.49,666,3.048,677,2.031,702,0.271,705,0.775,706,0.775,707,0.775,708,1.349,709,0.775,710,0.775,723,0.794,724,1.082,725,0.874,728,0.738,730,1.756,731,1.666,732,0.853,734,1.192,739,1.721,770,1.009,775,0.874,776,1.192,777,1.522,778,0.874,779,1.522,780,0.794,781,0.853,782,1.22,783,0.794,784,0.874,785,0.794,786,0.833,787,1.764,788,0.794,789,0.853,790,0.874,791,0.794,792,0.853,793,0.794,794,1.318,795,0.874,796,0.813,797,0.874,798,0.794,799,0.874,800,0.794,801,0.874,802,0.794,803,0.833,804,0.874,805,0.794,806,0.853,807,0.794,808,0.874,809,0.794,810,0.853,811,0.874,812,0.874,813,0.794,814,0.874,815,0.794,816,0.874,817,0.794,818,0.833,819,0.794,820,1.34,821,1.764,822,0.794,823,0.794,824,0.794,825,0.853,826,0.794,827,0.794,828,0.874,829,0.813,830,0.794,831,1.22,832,0.794,833,1.522,834,0.794,835,0.794,836,0.853,837,1.22,838,0.794,839,0.853,840,0.794,841,0.833,842,0.794,843,0.833,844,0.794,845,0.874,846,0.756,847,0.874,848,0.833,849,0.833,850,1.45,851,0.794,852,0.853,853,0.794,854,0.853,855,0.794,856,0.813,857,0.813,858,1.163,859,0.794,860,0.794,861,0.853,862,0.794,863,0.853,864,0.874,865,1.522,866,0.775,867,0.813,868,0.874,869,0.775,870,1.187,871,0.874,872,0.775,873,0.874,874,0.756,875,0.874,876,0.775,877,0.813,878,0.853,879,0.874,1973,2.365,2280,2.726,2281,2.726,2282,2.726,2283,2.726,2284,2.726,2285,2.726,2286,2.726,2287,2.726,2288,2.726,2289,2.726,2290,2.726,3265,2.885,3269,5.754]],["title/components/SphereMeshComponent.html",[702,0.179,851,0.843]],["body/components/SphereMeshComponent.html",[3,0.075,4,0.075,5,0.067,8,0.218,10,0.891,12,1.128,13,1.084,14,0.494,15,0.878,23,0.847,24,0.764,27,0.805,29,0.738,30,0.009,31,0.748,32,0.51,33,0.714,34,0.575,35,0.626,50,0.656,53,0.62,54,0.854,55,0.807,56,0.805,58,0.152,59,0.135,60,1.396,63,0.075,67,0.083,75,0.546,87,0.004,88,0.005,89,0.004,111,0.332,112,0.652,113,0.532,123,1.516,126,0.96,127,0.754,132,0.83,133,1.494,135,1.329,139,1.573,145,1.055,146,1.516,148,1.055,154,1.455,155,1.137,156,0.958,170,1.3,182,1.41,190,0.736,204,0.685,214,1.445,215,0.754,232,0.736,238,2.142,243,1.149,248,0.668,249,3.604,256,0.764,269,0.784,282,0.719,287,0.719,314,0.719,334,0.62,347,0.702,354,1.679,356,3.602,357,3.077,358,3.457,359,2.737,360,2.642,361,3.162,362,2.642,363,2.953,367,2.141,370,2.141,371,3.635,373,1.976,375,0.935,388,2.141,393,0.668,416,0.702,445,2.089,463,1.29,502,0.719,564,0.736,566,0.736,578,1.084,605,0.702,626,0.773,652,0.736,655,1.322,702,0.257,705,0.702,706,0.702,707,0.702,708,0.702,709,0.702,710,0.702,723,0.719,724,1.008,725,0.791,728,0.668,730,1.749,731,1.659,732,0.773,734,1.11,739,1.643,770,0.913,771,1.005,775,0.791,776,1.11,777,1.455,778,0.791,779,1.455,780,0.719,781,0.773,782,1.137,783,0.719,784,0.791,785,0.719,786,0.754,787,1.723,788,0.719,789,0.773,790,0.791,791,0.719,792,0.773,793,0.719,794,1.27,795,0.791,796,0.736,797,0.791,798,0.719,799,0.791,800,0.719,801,0.791,802,0.719,803,0.754,804,0.791,805,0.719,806,0.773,807,0.719,808,0.791,809,0.719,810,0.773,811,0.791,812,0.791,813,0.719,814,0.791,815,0.719,816,0.791,817,0.719,818,0.754,819,0.719,820,1.269,821,1.723,822,0.719,823,0.719,824,0.719,825,0.773,826,0.719,827,0.719,828,0.791,829,0.736,830,0.719,831,1.137,832,0.719,833,1.455,834,0.719,835,0.719,836,0.773,837,1.137,838,0.719,839,0.773,840,0.719,841,0.754,842,0.719,843,0.754,844,0.719,845,0.791,846,0.685,847,0.791,848,0.754,849,0.754,850,0.754,851,1.322,852,1.3,853,0.719,854,0.773,855,0.719,856,0.736,857,0.736,858,1.084,859,0.719,860,0.719,861,0.773,862,0.719,863,0.773,864,0.791,865,0.791,866,0.702,867,0.736,868,0.791,869,0.702,870,1.124,871,0.791,872,0.702,873,0.791,874,0.685,875,0.791,876,0.702,877,0.736,878,0.773,879,0.791,1280,2.055,1287,4.685,1302,2.237,1303,2.237,1304,2.237,1305,2.237,1306,2.237,1308,2.237,1309,2.237,1310,2.345,1311,2.468,1316,2.785,1319,2.141,1320,2.345,1349,3.291,1353,2.785,3270,6.675,3271,5.362,3272,6.277,3273,5.537,3274,5.362,3275,3.731,3276,3.731,3277,3.731,3278,3.731]],["title/directives/StatsAutoShowDirective.html",[111,0.39,876,0.823]],["body/directives/StatsAutoShowDirective.html",[3,0.131,4,0.131,5,0.117,8,0.382,14,0.714,23,1.225,24,0.691,29,0.768,30,0.009,31,0.563,32,0.399,33,0.642,35,0.563,50,0.81,58,0.156,59,0.236,63,0.131,67,0.146,87,0.007,88,0.008,89,0.007,111,0.582,113,0.931,116,2.139,194,3.808,201,2.736,240,2.039,502,1.681,728,1.169,730,1.228,731,1.388,876,1.457,877,1.529,878,1.605,1117,5.562,1119,5.761,1732,4.32,2682,5.761,3279,7.289,3280,5.761,3281,6.532,3282,6.532,3283,6.532]],["title/injectables/StatsService.html",[0,1.401,1117,2.75]],["body/injectables/StatsService.html",[0,2.332,2,2.906,3,0.119,4,0.119,5,0.106,8,0.345,9,0.809,14,0.671,15,1.16,23,1.249,24,0.78,30,0.01,32,0.36,35,0.731,50,0.903,58,0.146,59,0.213,63,0.119,67,0.132,87,0.006,88,0.007,89,0.006,116,1.628,195,2.971,202,2.335,240,2.468,247,6.163,340,5.461,877,1.728,886,3.384,1117,4.578,1232,4.578,1432,5.461,2895,5.202,3284,5.202,3285,8.257,3286,7.286,3287,5.898,3288,5.898,3289,5.898,3290,5.898,3291,5.898,3292,5.898,3293,5.898,3294,5.898,3295,5.898,3296,5.898,3297,8.641,3298,5.898,3299,7.286,3300,5.898,3301,5.898,3302,5.898,3303,5.898]],["title/components/StlLoaderComponent.html",[702,0.179,853,0.843]],["body/components/StlLoaderComponent.html",[3,0.078,4,0.129,5,0.069,8,0.226,9,0.61,10,0.914,12,1.093,13,1.111,14,0.506,23,0.869,24,0.718,27,1.15,29,0.454,30,0.009,31,0.743,32,0.468,33,0.629,34,0.595,35,0.333,53,0.642,54,0.797,55,0.753,56,1.15,58,0.158,59,0.139,60,1.223,63,0.078,67,0.086,75,0.565,87,0.004,88,0.006,89,0.004,95,3.524,111,0.344,112,0.675,113,0.551,126,0.984,127,0.781,132,0.859,133,1.511,135,0.937,139,0.968,154,1.479,155,1.166,156,0.992,170,1.138,182,1.016,190,0.762,204,0.709,214,1.481,215,0.781,232,0.762,240,1.998,243,1.164,248,0.692,249,1.839,254,1.672,256,0.783,269,0.804,282,0.744,287,0.744,293,4.611,298,2.555,302,1.78,314,1.475,318,2.428,334,1.309,341,2.555,346,1.972,347,0.726,354,0.762,360,3.153,361,3.394,362,3.153,374,2.555,375,0.968,376,3.107,377,2.555,378,2.883,393,1.41,394,3.848,397,3.296,398,2.704,399,2.704,400,2.704,401,2.555,402,2.704,403,2.704,404,2.555,405,2.704,406,2.704,407,2.704,408,2.428,416,0.726,445,2.123,463,1.336,502,0.744,564,0.762,566,0.762,578,1.111,605,0.726,626,0.8,652,0.762,655,1.343,677,2.708,702,0.262,705,0.726,706,0.726,707,0.726,708,0.726,709,0.726,710,0.726,723,0.744,724,1.034,725,0.819,728,0.692,730,1.752,731,1.662,732,0.8,734,1.138,739,1.111,770,0.945,771,1.041,775,0.819,776,1.138,777,1.479,778,0.819,779,1.479,780,0.744,781,0.8,782,1.166,783,0.744,784,0.819,785,0.744,786,0.781,787,1.738,788,0.744,789,0.8,790,0.819,791,0.744,792,0.8,793,0.744,794,1.287,795,0.819,796,0.762,797,0.819,798,0.744,799,0.819,800,0.744,801,0.819,802,0.744,803,0.781,804,0.819,805,0.744,806,0.8,807,0.744,808,0.819,809,0.744,810,0.8,811,0.819,812,0.819,813,0.744,814,0.819,815,0.744,816,0.819,817,0.744,818,0.781,819,0.744,820,1.294,821,1.738,822,0.744,823,0.744,824,0.744,825,0.8,826,0.744,827,0.744,828,0.819,829,0.762,830,0.744,831,1.166,832,0.744,833,1.479,834,0.744,835,0.744,836,0.8,837,1.166,838,0.744,839,0.8,840,0.744,841,0.781,842,0.744,843,0.781,844,0.744,845,0.819,846,0.709,847,0.819,848,0.781,849,0.781,850,0.781,851,0.744,852,0.8,853,1.343,854,1.325,855,0.744,856,0.762,857,0.762,858,1.111,859,0.744,860,0.744,861,0.8,862,0.744,863,0.8,864,0.819,865,0.819,866,0.726,867,0.762,868,0.819,869,0.726,870,1.146,871,0.819,872,0.726,873,0.819,874,0.709,875,0.819,876,0.726,877,0.762,878,0.8,879,0.819,1319,2.217,2378,2.704,2396,2.883,2398,3.107,2400,2.883,2415,2.704,2416,3.848,2449,3.408,3222,3.408,3304,6.948,3305,5.497,3306,5.497,3307,3.863,3308,3.863,3309,6.4,3310,3.863,3311,3.863,3312,3.863,3313,3.863]],["title/injectables/SvgLoaderService.html",[0,1.401,1068,2.895]],["body/injectables/SvgLoaderService.html",[0,2.392,2,3.028,3,0.124,4,0.124,5,0.11,8,0.359,9,0.829,10,1.022,12,1.191,14,0.688,15,0.956,24,0.718,27,1.289,29,0.879,30,0.009,31,0.644,32,0.457,33,0.734,35,0.644,49,4.48,53,1.022,54,0.765,55,0.723,56,1.209,58,0.168,59,0.222,60,1.368,63,0.124,67,0.137,75,0.899,87,0.006,88,0.008,89,0.006,90,5.773,93,5.577,94,5.577,95,4.115,96,4.943,98,5.577,100,5.059,101,4.588,155,1.304,269,1.093,302,2.832,393,1.101,397,3.685,739,1.628,1068,4.943,1933,4.945,1934,4.945,1935,4.945,1939,5.422,2415,4.303,2416,5.231,2432,4.945,2745,5.231,2765,5.422,3314,5.422,3315,6.147,3316,6.147,3317,6.147,3318,6.147,3319,6.147]],["title/components/TextMeshComponent.html",[702,0.179,859,0.843]],["body/components/TextMeshComponent.html",[3,0.056,4,0.056,5,0.049,8,0.162,9,0.583,10,0.713,12,1.178,13,0.867,14,0.484,15,0.672,20,1.587,23,0.678,24,0.79,27,1.188,29,0.696,30,0.01,31,0.718,32,0.526,33,0.665,34,0.426,35,0.646,50,0.669,53,0.46,54,1.037,55,0.98,56,0.788,58,0.147,59,0.1,60,1.316,63,0.056,67,0.096,72,1.213,75,0.99,87,0.003,88,0.004,89,0.003,95,3.257,100,2.694,105,2.065,111,0.247,112,0.483,113,0.394,126,0.768,127,0.559,132,0.615,133,1.336,135,1.349,139,1.604,140,1.521,154,1.767,155,0.909,156,0.71,170,1.511,182,1.128,189,1.273,190,0.546,202,1.485,204,0.508,214,1.155,215,0.559,219,1.658,232,0.546,238,1.639,240,2.278,243,1.153,248,0.495,249,2.816,251,1.855,256,0.748,269,0.627,282,0.533,287,1.502,288,3.2,290,3.782,291,3.782,292,2.68,293,3.912,294,4.631,297,3.449,302,1.275,304,2.44,305,2.065,306,2.44,308,2.44,309,2.44,310,2.225,311,2.44,312,3.2,313,2.44,314,0.826,315,2.44,316,2.44,317,2.44,318,1.738,319,2.44,330,3.449,332,3.393,334,0.46,347,0.52,350,2.836,354,0.546,358,3.257,359,2.68,360,2.587,361,2.949,362,3.691,363,2.891,371,2.781,373,2.271,374,1.83,375,0.693,376,2.225,377,1.83,378,2.065,379,2.44,380,2.065,381,2.44,382,2.44,388,1.587,393,0.495,395,2.46,416,0.52,417,2.46,421,2.271,445,1.801,463,0.957,502,0.533,564,0.546,566,0.546,578,0.867,605,0.52,626,0.573,652,0.546,655,1.139,702,0.215,705,0.52,706,0.52,707,0.52,708,0.52,709,0.52,710,0.52,723,0.533,724,0.806,725,0.587,728,0.495,730,1.726,731,1.633,732,0.573,734,0.888,739,1.428,770,0.677,771,0.745,775,0.587,776,0.888,777,1.254,778,0.587,779,1.254,780,0.533,781,0.573,782,0.909,783,0.533,784,0.587,785,0.533,786,0.559,787,1.589,788,0.533,789,0.573,790,0.587,791,0.533,792,0.573,793,0.533,794,1.118,795,0.587,796,0.546,797,0.587,798,0.533,799,0.587,800,0.533,801,0.587,802,0.533,803,0.559,804,0.587,805,0.533,806,0.573,807,0.533,808,0.587,809,0.533,810,0.573,811,0.587,812,0.587,813,0.533,814,0.587,815,0.533,816,0.587,817,0.533,818,0.559,819,0.533,820,1.061,821,1.589,822,0.533,823,0.533,824,0.533,825,0.573,826,0.533,827,0.533,828,0.587,829,0.546,830,0.533,831,0.909,832,0.533,833,1.254,834,0.533,835,0.533,836,0.573,837,0.909,838,0.533,839,0.573,840,0.533,841,0.559,842,0.533,843,0.559,844,0.533,845,0.587,846,0.508,847,0.587,848,0.559,849,0.559,850,0.559,851,0.533,852,0.573,853,0.533,854,0.573,855,0.533,856,0.546,857,0.546,858,1.656,859,1.139,860,0.533,861,0.573,862,0.533,863,0.573,864,0.587,865,0.587,866,0.52,867,0.546,868,0.587,869,0.52,870,0.94,871,0.587,872,0.52,873,0.587,874,0.508,875,0.587,876,0.52,877,0.546,878,0.573,879,0.587,973,2.065,1064,3.912,1129,3.912,1213,1.855,1214,4.14,1280,1.523,1284,2.816,1314,1.83,1319,1.587,1346,2.065,1347,2.44,1351,3.2,1352,2.225,1463,4.223,1527,2.225,2052,3.449,2057,2.44,3213,3.449,3226,2.065,3320,7.706,3321,4.288,3322,5.25,3323,5.25,3324,5.25,3325,4.288,3326,5.914,3327,5.914,3328,5.914,3329,5.914,3330,5.914,3331,5.914,3332,5.25,3333,7.493,3334,4.288,3335,2.44,3336,2.766,3337,2.766,3338,2.766,3339,2.766,3340,2.766,3341,2.766,3342,2.766,3343,2.766,3344,4.288,3345,2.766,3346,4.288,3347,2.766,3348,2.766,3349,2.766,3350,2.766,3351,4.288,3352,6.4,3353,2.766,3354,2.766,3355,2.766,3356,2.766,3357,2.766,3358,2.766,3359,4.288,3360,2.766,3361,2.766,3362,2.766,3363,2.766,3364,2.766,3365,2.766,3366,2.44,3367,2.766,3368,2.766,3369,2.766,3370,2.766,3371,4.288,3372,4.288,3373,2.766,3374,4.288,3375,4.288,3376,2.766,3377,2.766,3378,2.766,3379,4.288,3380,2.766,3381,2.766,3382,2.766,3383,2.766,3384,2.766,3385,4.288,3386,2.766]],["title/components/TorusMeshComponent.html",[702,0.179,860,0.843]],["body/components/TorusMeshComponent.html",[3,0.071,4,0.071,5,0.063,8,0.205,10,0.853,12,1.111,13,1.038,14,0.473,15,0.854,23,0.811,24,0.767,27,0.771,29,0.713,30,0.009,31,0.741,32,0.514,33,0.697,34,0.541,35,0.611,50,0.634,53,0.584,54,0.977,55,0.923,56,0.771,58,0.149,59,0.127,60,1.349,63,0.071,67,0.078,75,0.514,87,0.004,88,0.005,89,0.004,111,0.313,112,0.614,113,0.501,123,1.452,126,0.919,127,0.71,132,0.782,133,1.463,135,1.337,139,1.52,145,0.993,146,1.452,148,0.993,154,1.572,155,1.089,156,0.902,170,1.256,182,1.35,189,1.982,190,0.693,204,0.645,214,1.383,215,0.71,232,0.693,238,2.083,243,1.122,248,0.629,249,3.529,256,0.732,269,0.751,282,0.677,287,0.677,314,0.677,334,0.584,347,0.66,354,1.661,356,3.48,357,2.945,358,3.34,359,2.62,360,2.529,361,3.074,362,2.529,363,2.827,367,2.016,370,2.016,371,3.534,373,1.861,375,0.881,388,2.016,393,0.629,416,0.66,445,2.031,463,1.215,502,0.677,564,0.693,566,0.693,578,1.038,605,0.66,626,0.727,652,0.693,655,1.285,702,0.248,705,0.66,706,0.66,707,0.66,708,0.66,709,0.66,710,0.66,723,0.677,724,0.965,725,0.745,728,0.629,730,1.745,731,1.654,732,0.727,734,1.063,739,1.618,770,0.86,771,0.946,775,0.745,776,1.063,777,1.415,778,0.745,779,1.415,780,0.677,781,0.727,782,1.089,783,0.677,784,0.745,785,0.677,786,0.71,787,1.698,788,0.677,789,0.727,790,0.745,791,0.677,792,0.727,793,0.677,794,1.24,795,0.745,796,0.693,797,0.745,798,0.677,799,0.745,800,0.677,801,0.745,802,0.677,803,0.71,804,0.745,805,0.677,806,0.727,807,0.677,808,0.745,809,0.677,810,0.727,811,0.745,812,0.745,813,0.677,814,0.745,815,0.677,816,0.745,817,0.677,818,0.71,819,0.677,820,1.226,821,1.698,822,0.677,823,0.677,824,0.677,825,0.727,826,0.677,827,0.677,828,0.745,829,0.693,830,0.677,831,1.089,832,0.677,833,1.415,834,0.677,835,0.677,836,0.727,837,1.089,838,0.677,839,0.727,840,0.677,841,0.71,842,0.677,843,0.71,844,0.677,845,0.745,846,0.645,847,0.745,848,0.71,849,0.71,850,0.71,851,0.677,852,0.727,853,0.677,854,0.727,855,0.677,856,0.693,857,0.693,858,1.038,859,0.677,860,1.285,861,1.585,862,0.677,863,0.727,864,0.745,865,0.745,866,0.66,867,0.693,868,0.745,869,0.66,870,1.086,871,0.745,872,0.66,873,0.745,874,0.645,875,0.745,876,0.66,877,0.693,878,0.727,879,0.745,973,4.979,1213,2.221,1280,1.934,1302,2.106,1303,2.106,1304,2.106,1305,2.106,1306,2.106,1308,2.106,1309,2.106,1310,2.207,1311,2.324,1319,2.016,1320,2.207,1341,5.35,1346,2.622,1348,3.099,1350,3.831,1352,2.826,1354,3.395,1362,4.528,2977,4.129,3151,5.35,3273,6.752,3387,6.922,3388,5.133,3389,7.655,3390,6.066,3391,4.528,3392,3.099,3393,5.133,3394,3.099,3395,3.513,3396,5.133,3397,5.133,3398,3.513]],["title/modules/UxActorModule.html",[926,1.734,3399,3.267]],["body/modules/UxActorModule.html",[3,0.128,4,0.128,5,0.114,30,0.009,58,0.174,59,0.229,63,0.128,67,0.142,87,0.006,88,0.008,89,0.006,393,1.137,829,1.805,857,1.805,928,2.446,929,2.936,932,2.936,933,2.446,934,2.516,937,3.2,945,3.401,946,3.298,947,3.401,948,2.748,950,3.2,971,5.526,974,5.601,977,5.601,978,5.601,3399,6.826,3400,5.601,3401,5.601,3402,5.601,3403,6.35,3404,6.35,3405,6.35]],["title/components/VideoMeshComponent.html",[702,0.179,862,0.843]],["body/components/VideoMeshComponent.html",[3,0.059,4,0.09,5,0.052,8,0.17,9,0.495,10,0.741,12,1.235,13,0.902,14,0.411,15,0.778,23,0.705,24,0.783,27,0.814,29,0.638,30,0.009,31,0.719,32,0.525,33,0.747,34,0.449,35,0.639,50,0.752,53,0.741,54,1.03,55,0.973,56,0.912,58,0.149,59,0.105,60,1.538,63,0.059,67,0.065,75,0.653,87,0.003,88,0.005,89,0.003,111,0.26,112,0.509,113,0.415,116,1.231,123,1.262,126,0.799,127,0.589,132,0.648,133,1.364,135,1.116,139,1.732,140,1.898,145,0.824,146,1.262,148,0.824,154,1.574,155,0.946,156,0.748,170,1.635,179,4.535,182,1.173,189,2.204,190,0.575,194,2.498,195,2.211,198,1.487,201,1.945,202,1.718,204,0.534,214,1.202,215,0.589,232,0.575,238,1.897,243,1.035,248,0.799,249,3.291,256,0.636,265,3.407,268,1.746,269,0.653,282,0.561,284,1.83,287,0.561,314,0.561,320,1.746,321,1.83,333,2.569,334,0.484,347,0.548,354,1.601,356,3.111,357,2.56,358,3.346,359,2.277,360,2.198,361,3.184,362,2.198,363,2.457,367,1.671,370,1.671,371,3.219,375,0.73,388,1.671,393,0.521,416,0.548,445,1.85,455,1.93,456,1.93,463,1.007,469,2.582,502,0.561,541,1.926,542,1.926,543,2.039,564,0.575,566,0.575,578,0.902,605,0.548,626,0.603,652,0.575,655,1.171,665,1.26,702,0.222,705,0.548,706,0.548,707,0.548,708,0.548,709,0.548,710,0.548,723,0.561,724,0.839,725,0.618,728,0.521,730,1.731,731,1.638,732,0.603,734,0.924,739,1.538,770,0.713,771,0.785,775,0.618,776,0.924,777,1.289,778,0.618,779,1.289,780,0.561,781,0.603,782,0.946,783,0.561,784,0.618,785,0.561,786,0.589,787,1.613,788,0.561,789,0.603,790,0.618,791,0.561,792,0.603,793,0.561,794,1.144,795,0.618,796,0.575,797,0.618,798,0.561,799,0.618,800,0.561,801,0.618,802,0.561,803,0.589,804,0.618,805,0.561,806,0.603,807,0.561,808,0.618,809,0.561,810,0.603,811,0.618,812,0.618,813,0.561,814,0.618,815,0.561,816,0.618,817,0.561,818,0.589,819,0.561,820,1.096,821,1.613,822,0.561,823,0.561,824,0.561,825,0.603,826,0.561,827,0.561,828,0.618,829,0.575,830,0.561,831,0.946,832,0.561,833,1.289,834,0.561,835,0.561,836,0.603,837,0.946,838,0.561,839,0.603,840,0.561,841,0.589,842,0.561,843,0.589,844,0.561,845,0.618,846,0.534,847,0.618,848,0.589,849,0.589,850,0.589,851,0.561,852,0.603,853,0.561,854,0.603,855,0.561,856,0.575,857,0.575,858,0.902,859,0.561,860,0.561,861,0.603,862,1.171,863,1.49,864,0.618,865,0.618,866,0.548,867,0.575,868,0.618,869,0.548,870,0.971,871,0.618,872,0.548,873,0.618,874,0.534,875,0.618,876,0.548,877,0.575,878,0.603,879,0.618,880,4.258,882,4.254,894,4.889,1147,3.219,1169,2.569,1196,3.487,1280,1.604,1284,3.119,1285,4.047,1286,3.759,1287,4.047,1288,3.935,1290,4.535,1291,4.535,1292,4.888,1302,1.746,1303,1.746,1304,1.746,1305,1.746,1306,1.746,1308,1.746,1309,1.746,1311,1.926,1314,1.926,1316,2.174,1317,2.174,1319,1.671,1320,1.83,1346,2.174,1432,1.926,1510,2.343,1739,2.569,1740,2.569,1741,2.343,1742,2.569,1743,2.343,1776,2.343,2027,2.343,2052,2.343,2454,3.935,2513,2.569,2515,2.569,3335,2.569,3366,2.569,3391,2.569,3392,2.569,3394,2.569,3406,7.506,3407,4.461,3408,5.422,3409,5.422,3410,5.422,3411,5.422,3412,4.783,3413,2.912,3414,4.461,3415,2.912,3416,2.912,3417,2.912,3418,2.912,3419,2.912,3420,2.912,3421,4.461,3422,2.912,3423,2.912,3424,2.912,3425,2.912,3426,2.912,3427,2.912,3428,2.912,3429,2.912,3430,2.912,3431,2.912,3432,2.912,3433,2.912,3434,2.912,3435,2.912,3436,2.912,3437,2.912,3438,2.912,3439,2.912,3440,2.912,3441,2.912,3442,2.912,3443,2.912,3444,2.912,3445,4.461,3446,2.912,3447,2.912,3448,2.912,3449,2.912,3450,2.912]],["title/components/WorkstationActorComponent.html",[702,0.179,710,0.823]],["body/components/WorkstationActorComponent.html",[3,0.082,4,0.082,5,0.073,8,0.238,9,0.633,10,0.676,13,1.153,14,0.525,15,0.996,24,0.764,27,1.071,30,0.009,31,0.744,32,0.507,34,1.014,35,0.567,50,0.688,53,0.676,54,0.819,55,0.774,58,0.132,59,0.147,63,0.082,67,0.091,87,0.004,88,0.006,89,0.004,111,0.363,112,0.711,113,0.58,126,1.021,127,0.823,135,0.693,139,1.02,154,1.21,170,0.843,190,0.803,204,0.747,215,0.823,232,0.803,243,0.643,248,0.729,256,0.58,269,0.834,282,0.784,287,0.784,314,0.784,334,0.676,347,0.765,354,0.803,375,1.02,393,0.729,416,0.765,444,2.08,471,2.467,502,0.784,564,0.803,566,0.803,578,1.153,605,0.765,626,0.843,652,1.726,653,2.025,655,1.447,657,2.08,658,3.487,659,3.626,660,3.778,661,2.468,662,3.584,663,3.584,664,3.141,665,2.468,666,3.021,677,2.005,702,0.269,705,0.765,706,0.765,707,0.765,708,0.765,709,0.765,710,1.341,723,0.784,724,1.072,725,0.863,728,0.729,730,1.755,731,1.665,732,0.843,734,1.477,739,1.717,770,0.996,775,0.863,776,1.181,777,1.513,778,0.863,779,1.513,780,0.784,781,0.843,782,1.21,783,0.784,784,0.863,785,0.784,786,0.823,787,1.759,788,0.784,789,0.843,790,0.863,791,0.784,792,0.843,793,0.784,794,1.312,795,0.863,796,0.803,797,0.863,798,0.784,799,0.863,800,0.784,801,0.863,802,0.784,803,0.823,804,0.863,805,0.784,806,0.843,807,0.784,808,0.863,809,0.784,810,0.843,811,0.863,812,0.863,813,0.784,814,0.863,815,0.784,816,0.863,817,0.784,818,0.823,819,0.784,820,1.331,821,1.759,822,0.784,823,0.784,824,0.784,825,0.843,826,0.784,827,0.784,828,0.863,829,0.803,830,0.784,831,1.21,832,0.784,833,1.513,834,0.784,835,0.784,836,0.843,837,1.21,838,0.784,839,0.843,840,0.784,841,0.823,842,0.784,843,0.823,844,0.784,845,0.863,846,0.747,847,0.863,848,0.823,849,0.823,850,0.823,851,0.784,852,0.843,853,0.784,854,0.843,855,0.784,856,0.803,857,0.803,858,1.153,859,0.784,860,0.784,861,0.843,862,0.784,863,0.843,864,1.396,865,1.513,866,0.765,867,0.803,868,0.863,869,0.765,870,1.179,871,0.863,872,0.765,873,0.863,874,0.747,875,0.863,876,0.765,877,0.803,878,0.843,879,0.863,1973,2.335,2118,3.589,2280,2.692,2281,2.692,2282,2.692,2283,2.692,2284,2.692,2285,2.692,2286,2.692,2287,2.692,2288,2.692,2289,2.692,2290,2.692,3412,5.807,3451,5.03,3452,5.703,3453,5.703,3454,5.703]],["title/coverage.html",[3455,5.291]],["body/coverage.html",[0,2.631,1,2.057,5,0.059,6,4.825,7,4.812,30,0.01,32,0.2,34,0.504,56,0.491,61,2.443,62,2.443,64,2.866,65,2.057,67,0.13,72,2.631,87,0.003,88,0.005,89,0.003,90,2.165,92,2.887,111,0.753,112,0.572,114,2.887,115,2.887,133,0.646,190,0.646,191,2.887,192,2.291,193,2.887,204,0.601,232,0.646,233,2.887,234,2.887,243,0.517,249,1.559,256,0.694,282,0.631,283,4.344,284,2.057,285,2.887,287,0.631,288,2.443,289,4.344,314,0.631,334,0.544,354,0.646,355,2.887,374,2.165,389,2.887,390,2.887,416,0.615,502,0.631,543,5.239,558,1.613,564,0.646,565,2.887,566,0.646,567,2.887,574,1.613,605,0.615,652,0.646,653,3.173,654,2.887,655,0.631,656,2.887,686,2.165,687,2.887,688,2.887,702,0.375,705,0.615,706,0.615,707,0.615,708,0.615,709,0.615,710,0.615,723,0.631,726,2.887,727,4.513,770,0.801,780,0.631,783,0.631,785,0.631,788,0.631,791,0.631,793,0.631,796,0.646,798,0.631,800,0.631,802,0.631,803,0.662,805,0.631,807,0.631,809,0.631,813,0.631,815,0.631,817,0.631,819,0.631,822,0.631,823,0.631,824,0.631,826,0.631,827,0.631,829,0.646,830,0.631,832,0.631,834,0.631,835,0.631,838,0.631,840,0.631,842,0.631,846,0.601,848,0.662,849,0.662,850,0.662,851,0.631,853,0.631,855,0.631,857,0.646,859,0.631,860,0.631,862,0.631,866,0.615,869,0.615,872,0.615,874,0.601,876,0.615,880,1.878,881,2.887,1064,2.165,1065,2.057,1066,2.165,1067,2.165,1068,2.165,1088,2.291,1089,2.291,1108,2.165,1117,2.057,1126,2.887,1127,3.92,1137,1.962,1138,4.265,1139,4.56,1140,1.803,1142,1.878,1143,1.803,1148,5.186,1185,2.633,1187,2.633,1197,2.633,1258,2.887,1279,2.887,1280,4.328,1321,2.887,1322,2.887,1338,2.887,1350,2.443,1366,2.887,1413,2.165,1454,6.322,1472,2.633,1475,2.633,1477,2.633,1480,2.633,1482,2.633,1484,2.633,1499,2.443,1504,2.633,1505,2.633,1532,2.887,1555,2.887,1597,2.887,1705,2.887,1706,2.887,1777,3.411,1779,2.887,1790,2.887,1801,2.057,1812,2.887,1839,2.887,1840,2.887,1844,3.637,1850,2.887,1851,2.887,1897,2.887,1900,2.887,1931,2.887,1941,2.887,1947,2.443,1972,2.887,1973,4.59,1988,5.384,1995,2.291,2041,2.887,2049,2.887,2065,2.887,2074,3.92,2076,2.443,2108,2.887,2125,2.633,2126,2.633,2195,2.887,2196,3.92,2277,2.887,2298,2.887,2305,2.443,2306,3.92,2377,2.887,2378,4.513,2431,2.887,2432,3.92,2444,2.887,2456,2.887,2462,2.887,2463,3.92,2497,2.887,2511,2.887,2518,2.887,2525,2.887,2529,4.265,2530,2.887,2534,3.92,2566,2.887,2610,2.887,2611,2.887,2673,2.887,2745,2.291,2746,2.887,2747,2.887,2977,5.186,3044,2.887,3204,2.887,3226,2.443,3227,2.633,3253,2.887,3265,4.513,3270,2.887,3279,2.887,3280,2.887,3284,2.887,3304,2.887,3314,2.887,3320,2.887,3387,2.887,3406,2.887,3451,2.887,3455,2.887,3456,2.633,3457,3.274,3458,4.873,3459,5.821,3460,3.274,3461,2.887,3462,3.274,3463,3.274,3464,8.384,3465,8.766,3466,7.227,3467,5.821,3468,4.873,3469,4.873,3470,4.873,3471,6.448,3472,7.485,3473,4.873,3474,4.873,3475,3.274,3476,3.274,3477,3.274,3478,3.274,3479,3.274,3480,3.274,3481,5.821,3482,2.887,3483,3.274,3484,3.274,3485,4.873,3486,3.274,3487,6.894,3488,6.448,3489,3.274,3490,3.274,3491,4.873,3492,3.274,3493,3.274,3494,5.821,3495,4.873,3496,4.873,3497,3.274,3498,3.274,3499,3.274,3500,3.274,3501,3.274,3502,4.873,3503,3.274,3504,3.274,3505,3.274,3506,3.274,3507,3.274,3508,3.274,3509,3.274,3510,3.274,3511,3.274,3512,3.274,3513,6.894,3514,3.274,3515,3.274,3516,4.873,3517,3.274,3518,2.887,3519,2.887,3520,3.274,3521,2.887,3522,2.887,3523,2.887,3524,2.887,3525,2.887,3526,3.92,3527,3.92,3528,3.92,3529,3.92,3530,2.887,3531,2.887,3532,2.887,3533,2.887,3534,2.887,3535,2.887,3536,2.887,3537,2.887,3538,3.274,3539,3.274]],["title/dependencies.html",[929,2.03,2420,3.214]],["body/dependencies.html",[30,0.009,59,0.243,87,0.007,88,0.008,89,0.007,155,1.426,268,4.031,500,5.931,794,1.175,803,1.359,929,2.59,948,2.909,3540,6.724,3541,9.056,3542,6.724,3543,6.724,3544,7.884,3545,6.341,3546,6.724,3547,6.724,3548,6.724,3549,6.724,3550,6.724,3551,6.724,3552,6.724,3553,6.724,3554,6.724,3555,6.724,3556,6.724,3557,6.724,3558,6.724,3559,6.724]],["title/miscellaneous/enumerations.html",[3560,2.41,3561,4.649]],["body/miscellaneous/enumerations.html",[8,0.382,30,0.009,55,1.079,87,0.007,88,0.008,89,0.007,248,1.388,653,2.319,867,1.289,1138,3.218,1734,5.254,2125,5.254,2126,6.234,2135,6.836,2138,6.234,2308,5.425,2529,4.32,2542,6.234,2543,6.234,2544,5.784,2672,5.784,2845,6.836,3461,7.289,3560,4.32,3561,5.761,3562,7.75,3563,6.836,3564,7.75,3565,6.532,3566,6.532,3567,7.75,3568,7.75,3569,7.75,3570,7.75,3571,7.75]],["title/miscellaneous/functions.html",[3560,2.41,3572,4.649]],["body/miscellaneous/functions.html",[8,0.36,27,0.924,29,1.027,30,0.009,31,0.752,33,0.858,35,0.722,50,0.782,87,0.006,88,0.008,89,0.006,187,6.597,199,3.69,360,3.684,361,3.446,362,3.032,373,3.26,374,4.947,391,3.868,496,2.371,578,1.512,657,2.244,661,2.663,702,0.252,770,1.83,1282,5.429,2336,5.328,2593,6.48,3226,5.582,3227,6.016,3250,5.429,3252,5.429,3518,5.429,3519,6.597,3521,5.429,3522,6.597,3523,6.597,3524,5.429,3525,6.597,3526,4.951,3527,6.016,3528,6.016,3529,6.016,3530,7.106,3532,5.429,3533,6.597,3534,5.429,3535,6.597,3536,5.429,3537,6.597,3560,4.071,3572,5.429,3573,6.155,3574,6.155,3575,6.155,3576,5.429,3577,6.155,3578,6.155,3579,6.155,3580,6.155,3581,7.479,3582,6.155,3583,6.155,3584,6.155,3585,6.155,3586,6.155,3587,7.479,3588,6.155]],["title/index.html",[8,0.213,3589,3.214,3590,3.214]],["body/index.html",[30,0.009,58,0.142,72,1.581,87,0.006,88,0.007,89,0.006,119,3.078,155,1.185,180,4.171,182,1.47,322,7.366,346,3.596,415,7.145,417,3.207,501,4.496,503,4.93,593,5.67,611,4.171,623,4.93,724,1.57,731,1.568,734,1.459,776,1.157,794,0.976,844,1.077,846,1.026,887,4.496,926,2.214,950,2.347,971,4.427,1278,4.496,1284,3.355,1336,4.93,1432,3.697,1716,3.351,1801,4.427,1841,4.93,2275,4.171,2276,4.171,2387,4.496,2409,4.171,2419,7.366,2544,4.171,2612,4.496,3075,6.214,3132,4.93,3213,4.496,3456,6.206,3545,4.496,3591,5.589,3592,5.589,3593,5.589,3594,5.589,3595,8.526,3596,5.589,3597,7.045,3598,5.589,3599,5.589,3600,5.589,3601,5.589,3602,5.589,3603,8.526,3604,5.589,3605,7.045,3606,5.589,3607,5.589,3608,5.589,3609,5.589,3610,5.589,3611,5.589,3612,5.589,3613,7.045,3614,7.045,3615,7.715,3616,7.045,3617,5.589,3618,5.589,3619,5.589,3620,5.589,3621,5.589,3622,5.589,3623,5.589,3624,5.589,3625,5.589,3626,5.589,3627,5.589,3628,5.589,3629,5.589,3630,5.589,3631,5.589,3632,5.589,3633,5.589,3634,5.589,3635,5.589,3636,5.589,3637,5.589,3638,8.351,3639,5.589,3640,5.589,3641,5.589,3642,5.589,3643,5.589,3644,5.589,3645,5.589,3646,5.589,3647,5.589,3648,5.589,3649,7.045,3650,5.589,3651,5.589,3652,7.045,3653,7.715,3654,5.589,3655,5.589,3656,5.589,3657,5.589,3658,7.045,3659,5.589,3660,5.589,3661,5.589,3662,5.589,3663,5.589,3664,5.589,3665,5.589,3666,5.589,3667,4.93,3668,5.589,3669,5.589,3670,5.589,3671,5.589]],["title/license.html",[3589,3.214,3590,3.214,3672,3.214]],["body/license.html",[30,0.008,87,0.006,88,0.008,89,0.006,184,7.965,310,5.121,501,5.121,886,3.653,934,2.523,2382,5.616,2409,5.697,2418,5.616,3456,5.121,3667,5.616,3672,5.616,3673,6.367,3674,8.175,3675,6.367,3676,6.367,3677,6.367,3678,6.367,3679,7.633,3680,6.367,3681,6.367,3682,6.367,3683,6.367,3684,6.367,3685,7.633,3686,6.367,3687,6.367,3688,8.175,3689,6.367,3690,7.633,3691,6.367,3692,6.367,3693,6.367,3694,6.367,3695,6.367,3696,6.367,3697,6.367,3698,6.367,3699,6.367,3700,7.633,3701,6.367,3702,6.367,3703,6.367,3704,6.367,3705,6.367,3706,6.367,3707,6.367,3708,7.633,3709,7.633,3710,6.367,3711,6.367,3712,6.367,3713,6.367,3714,6.367,3715,6.367,3716,6.367,3717,6.367,3718,6.367,3719,6.367,3720,6.367,3721,6.367,3722,6.367,3723,6.367,3724,6.367,3725,6.367,3726,6.367,3727,6.367,3728,6.367,3729,6.367,3730,6.367,3731,6.367,3732,6.367,3733,6.367,3734,6.367,3735,6.367]],["title/modules.html",[928,2.311]],["body/modules.html",[30,0.008,87,0.006,88,0.008,89,0.006,856,1.83,927,4.469,928,2.459,939,4.469,951,4.469,958,4.469,965,4.765,971,4.012,983,4.469,996,4.469,1004,4.469,1012,4.469,1019,4.469,1029,4.469,1030,4.469,1031,4.469,1032,4.469,1040,4.469,1063,4.469,3399,4.765,3545,7.46,3736,9.274,3737,9.274]],["title/overview.html",[3738,5.291]],["body/overview.html",[2,1.431,30,0.01,87,0.003,88,0.005,89,0.003,91,2.168,113,0.414,133,1.068,204,1.319,416,1.351,574,2.667,605,1.351,686,3.581,705,1.351,706,1.351,707,1.351,708,1.351,709,1.351,710,1.351,723,1.464,724,0.546,729,4.355,780,1.384,783,1.384,785,1.384,788,1.043,791,1.384,793,1.384,796,1.418,798,1.384,800,1.384,802,1.384,805,1.384,807,1.384,809,1.384,813,1.384,815,1.384,817,1.384,819,1.384,822,1.384,823,1.384,824,1.384,826,1.384,827,1.384,829,1.418,830,1.384,832,1.384,834,1.384,835,1.384,838,1.384,840,1.384,842,1.384,846,1.319,851,1.384,853,1.384,855,1.384,857,1.418,859,1.384,860,1.384,862,1.384,866,1.351,869,1.351,872,1.351,874,1.319,876,1.351,880,3.106,927,5.321,928,1.119,929,1.715,930,2.563,931,2.563,932,1.715,933,1.119,934,1.151,939,5.674,940,2.563,941,2.563,942,2.563,951,5.431,952,2.563,953,2.563,954,2.563,958,5.674,959,2.563,960,2.563,961,2.563,965,6.768,966,2.563,967,2.563,968,2.563,969,2.563,970,2.563,971,5.536,983,6.112,984,2.563,985,2.563,986,2.563,996,5.838,997,2.563,998,2.563,999,2.563,1004,5.955,1005,2.563,1006,2.563,1007,2.563,1008,2.563,1012,5.955,1013,2.563,1014,2.563,1015,2.563,1019,6.212,1020,2.563,1021,2.563,1022,2.563,1026,2.563,1027,2.563,1028,2.563,1029,6.31,1030,5.92,1031,5.735,1032,5.605,1040,5.19,1058,2.563,1059,2.563,1060,2.563,1061,2.563,1062,2.563,1063,5.431,1064,3.581,1065,3.402,1066,3.581,1067,3.581,1068,3.581,1085,2.563,1086,2.563,1087,2.563,1088,5.031,1089,5.031,1094,2.563,1095,2.563,1096,2.563,1097,2.563,1104,2.563,1105,2.563,1106,2.563,1107,2.563,1108,3.581,1113,2.563,1114,2.563,1115,2.563,1116,2.563,1117,3.402,1121,2.563,1122,2.563,1123,2.563,1136,1.6,1213,1.257,1413,1.922,1503,2.337,1584,2.563,1778,2.337,3196,2.563,3399,5.791,3400,2.563,3401,2.563,3402,2.563,3482,2.563,3738,2.563,3739,2.905]],["title/miscellaneous/variables.html",[3560,2.41,3740,4.649]],["body/miscellaneous/variables.html",[6,3.867,7,5.728,8,0.323,27,1.249,30,0.01,32,0.546,50,0.731,54,1.127,55,1.065,61,5.22,62,5.22,72,1.978,87,0.006,88,0.007,89,0.006,135,1.449,189,1.641,653,1.962,907,3.472,923,5.626,1138,2.722,1148,4.444,1185,5.626,1187,5.626,1188,6.169,1189,6.169,1190,7.34,1191,4.444,1192,4.873,1193,4.873,1194,4.873,1195,6.169,1196,4.013,1197,5.626,1198,6.169,1199,6.169,1200,6.169,1201,6.169,1202,4.873,1203,6.169,1454,7.093,1472,5.626,1475,5.626,1477,5.626,1480,5.626,1482,5.626,1484,5.626,1501,4.873,1502,4.873,1503,6.173,1504,5.626,1505,5.626,1506,4.873,1507,4.873,3526,4.444,3527,5.626,3528,5.626,3529,5.626,3531,6.169,3560,3.654,3563,7.706,3576,4.873,3740,4.873,3741,7.674,3742,6.994,3743,5.525]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/ContentProjectionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0,0",{"_index":2059,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":1795,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":1355,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["0.001",{"_index":1811,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{}}}],["0.01",{"_index":1821,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1818,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":1214,"title":{},"body":{"injectables/BloomService.html":{},"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.11.4",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["0.131.3",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3346,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":3393,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":2142,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":738,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3465,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3487,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3488,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3472,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3473,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3459,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3471,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3481,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3458,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3517,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3467,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3507,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3515,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":3463,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":3460,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":3493,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3513,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3466,"title":{},"body":{"coverage.html":{}}}],["0/47",{"_index":3462,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3468,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3474,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3516,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":3137,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0000aa",{"_index":1906,"title":{},"body":{"components/FogComponent.html":{}}}],["0xffffff",{"_index":2027,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1",{"_index":189,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1196,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.05",{"_index":1986,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.10.2",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":2224,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.667.0",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3520,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3483,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3514,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":3486,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":3504,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":3484,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3470,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3503,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":350,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["100",{"_index":1801,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":2489,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":2482,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2670,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":1809,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11",{"_index":3502,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3196,"title":{},"body":{"classes/SVGLoader.html":{},"overview.html":{}}}],["12.2.2",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1503,"title":{},"body":{"components/DagreLayoutComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":3469,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1584,"title":{},"body":{"classes/DagreUtils.html":{},"overview.html":{}}}],["180",{"_index":1789,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["2",{"_index":1213,"title":{},"body":{"injectables/BloomService.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1955,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/10",{"_index":3492,"title":{},"body":{"coverage.html":{}}}],["2/17",{"_index":3510,"title":{},"body":{"coverage.html":{}}}],["2/28",{"_index":3511,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":3499,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":3512,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":3491,"title":{},"body":{"coverage.html":{}}}],["2/34",{"_index":3494,"title":{},"body":{"coverage.html":{}}}],["2/35",{"_index":3495,"title":{},"body":{"coverage.html":{}}}],["2/36",{"_index":3497,"title":{},"body":{"coverage.html":{}}}],["2/37",{"_index":3496,"title":{},"body":{"coverage.html":{}}}],["2/46",{"_index":3476,"title":{},"body":{"coverage.html":{}}}],["2/49",{"_index":3478,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1947,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/MapControlsComponent.html":{},"coverage.html":{}}}],["200",{"_index":2217,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":3676,"title":{},"body":{"license.html":{}}}],["25",{"_index":3508,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1413,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["3.11.1",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":3490,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2051,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["33",{"_index":3505,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":3489,"title":{},"body":{"coverage.html":{}}}],["373",{"_index":2340,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["3d",{"_index":182,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["3d.ts",{"_index":289,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["3d.ts:10",{"_index":366,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:111",{"_index":495,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:118",{"_index":476,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:127",{"_index":478,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:13",{"_index":368,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:135",{"_index":477,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:143",{"_index":474,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:156",{"_index":475,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:16",{"_index":364,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:160",{"_index":492,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:175",{"_index":482,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:179",{"_index":483,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:181",{"_index":484,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:185",{"_index":480,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:19",{"_index":307,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{}}}],["3d.ts:192",{"_index":489,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:202",{"_index":481,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:206",{"_index":494,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:22",{"_index":365,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:24",{"_index":303,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:25",{"_index":457,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:26",{"_index":458,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:28",{"_index":372,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:31",{"_index":296,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:32",{"_index":470,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:33",{"_index":295,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:36",{"_index":459,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:37",{"_index":460,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:38",{"_index":461,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:39",{"_index":301,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["3d.ts:40",{"_index":449,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:42",{"_index":447,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:44",{"_index":472,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:46",{"_index":497,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:48",{"_index":446,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:50",{"_index":369,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:57",{"_index":485,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:62",{"_index":300,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["3d.ts:68",{"_index":299,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["3d.ts:86",{"_index":486,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:97",{"_index":487,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3ds",{"_index":186,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["4",{"_index":1844,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["4/16",{"_index":3509,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3480,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":3501,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":3500,"title":{},"body":{"coverage.html":{}}}],["444444",{"_index":2070,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["48",{"_index":3739,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1988,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["50",{"_index":1131,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["500",{"_index":1807,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":3479,"title":{},"body":{"coverage.html":{}}}],["5dade2",{"_index":367,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["6",{"_index":2977,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["6.6.7",{"_index":3552,"title":{},"body":{"dependencies.html":{}}}],["6/18",{"_index":3506,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":3498,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":3485,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1350,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["8.3.2",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3482,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["90",{"_index":2759,"title":{},"body":{"classes/SVGLoader.html":{}}}],["95",{"_index":2451,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_fillrule",{"_index":3058,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_height",{"_index":1368,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["_materialcolor",{"_index":3322,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_model",{"_index":394,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["_overridematerialcolor",{"_index":3206,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":3323,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":2110,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["a0",{"_index":3006,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a0a0a0",{"_index":1402,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["a1",{"_index":3007,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a4a4a4",{"_index":1423,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["above",{"_index":3707,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:10",{"_index":2300,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:13",{"_index":2085,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":2084,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:16",{"_index":2078,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":2081,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:23",{"_index":2299,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":2082,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":2079,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":2080,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:49",{"_index":2075,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:58",{"_index":2077,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:8",{"_index":2301,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":90,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:10",{"_index":3315,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:13",{"_index":2434,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1934,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1933,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:8",{"_index":1932,"title":{},"body":{"injectables/FontService.html":{}}}],["abstractcamera",{"_index":112,"title":{"directives/AbstractCamera.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractcamera:10",{"_index":2468,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:11",{"_index":2469,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:12",{"_index":2470,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:14",{"_index":2471,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:16",{"_index":2467,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:22",{"_index":2472,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:24",{"_index":2478,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:35",{"_index":2502,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:36",{"_index":2473,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:45",{"_index":2503,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:56",{"_index":2474,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:59",{"_index":2476,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:69",{"_index":2477,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:8",{"_index":2479,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcomposeeffect",{"_index":190,"title":{"directives/AbstractComposeEffect.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:18",{"_index":1264,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:22",{"_index":1262,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:23",{"_index":1846,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:24",{"_index":1822,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":1845,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:29",{"_index":1263,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:30",{"_index":1261,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:37",{"_index":1265,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:41",{"_index":1267,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:45",{"_index":1266,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:50",{"_index":1823,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:9",{"_index":1268,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":232,"title":{"directives/AbstractConnector.html":{}},"body":{"directives/AbstractConnector.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractconnector:10",{"_index":2150,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:107",{"_index":2157,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:13",{"_index":2151,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:15",{"_index":2168,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:16",{"_index":2169,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:18",{"_index":2159,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:26",{"_index":2160,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:50",{"_index":2153,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractconnector:85",{"_index":2158,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractemptydirective",{"_index":282,"title":{"directives/AbstractEmptyDirective.html":{}},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractemptydirective:8",{"_index":1400,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["abstractlazyobject3d",{"_index":287,"title":{"directives/AbstractLazyObject3D.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d:102",{"_index":3354,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:19",{"_index":3362,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:24",{"_index":3361,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:33",{"_index":3355,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:39",{"_index":3358,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:62",{"_index":3357,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractlazyobject3d:68",{"_index":3356,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":354,"title":{"directives/AbstractMesh.html":{}},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractmesh:10",{"_index":1304,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:13",{"_index":1305,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:16",{"_index":1302,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:19",{"_index":1306,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:22",{"_index":1303,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:24",{"_index":1310,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmesh:28",{"_index":1309,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:33",{"_index":1311,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:50",{"_index":1308,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmesh:55",{"_index":2514,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["abstractmesh:67",{"_index":1949,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["abstractmesh:68",{"_index":3417,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":314,"title":{"directives/AbstractModelLoader.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractmodelloader#afterinit",{"_index":326,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractmodelloader:12",{"_index":2400,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["abstractmodelloader:21",{"_index":2396,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["abstractobject3d",{"_index":243,"title":{"directives/AbstractObject3D.html":{}},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractobject3d#addchild",{"_index":327,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractobject3d.renderer",{"_index":319,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["abstractobject3d:111",{"_index":767,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["abstractobject3d:118",{"_index":754,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:127",{"_index":756,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:135",{"_index":755,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:143",{"_index":752,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:156",{"_index":753,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:160",{"_index":765,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:175",{"_index":759,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:181",{"_index":760,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:185",{"_index":757,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:192",{"_index":764,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:202",{"_index":758,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:206",{"_index":766,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:21",{"_index":1327,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{}}}],["abstractobject3d:23",{"_index":1132,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{}}}],["abstractobject3d:24",{"_index":742,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:25",{"_index":743,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:26",{"_index":744,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:27",{"_index":1794,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["abstractobject3d:31",{"_index":748,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:32",{"_index":749,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:33",{"_index":750,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:35",{"_index":3257,"title":{},"body":{"components/SceneComponent.html":{}}}],["abstractobject3d:36",{"_index":745,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:37",{"_index":746,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:38",{"_index":747,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:40",{"_index":741,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:42",{"_index":740,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:44",{"_index":751,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:46",{"_index":768,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:48",{"_index":769,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:57",{"_index":761,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["abstractobject3d:86",{"_index":762,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:97",{"_index":763,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractorbitcontrols",{"_index":564,"title":{"directives/AbstractOrbitControls.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractorbitcontrols:13",{"_index":2236,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:14",{"_index":2238,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:22",{"_index":2229,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:24",{"_index":2237,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:25",{"_index":2460,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:34",{"_index":2459,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:41",{"_index":2230,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:49",{"_index":2461,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:56",{"_index":2233,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:58",{"_index":2234,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:74",{"_index":2235,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:96",{"_index":2231,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractserveractor",{"_index":652,"title":{"directives/AbstractServerActor.html":{}},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractserveractor:11",{"_index":2285,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:14",{"_index":2286,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:17",{"_index":2284,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:20",{"_index":2283,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:23",{"_index":2280,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:25",{"_index":2290,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:28",{"_index":2282,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:30",{"_index":2289,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:35",{"_index":2288,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:40",{"_index":2287,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:8",{"_index":2281,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accepted",{"_index":2809,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accepts",{"_index":3168,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accessed",{"_index":317,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["accessors",{"_index":395,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["acquisition",{"_index":335,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["action",{"_index":3729,"title":{},"body":{"license.html":{}}}],["actor",{"_index":865,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor'},{'name",{"_index":821,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":977,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":1973,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:19",{"_index":2111,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:22",{"_index":2112,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:23",{"_index":2005,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:25",{"_index":1989,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:26",{"_index":1984,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:27",{"_index":1985,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["actor.component.ts:28",{"_index":1987,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:30",{"_index":1993,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:31",{"_index":1992,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:32",{"_index":1990,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:33",{"_index":1991,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["actor.component.ts:35",{"_index":2114,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:36",{"_index":2003,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:37",{"_index":2113,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:38",{"_index":2006,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:39",{"_index":2118,"title":{},"body":{"components/LayerActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:40",{"_index":2002,"title":{},"body":{"components/GridActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:41",{"_index":2119,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:43",{"_index":2117,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:47",{"_index":2116,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:48",{"_index":2000,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:51",{"_index":2115,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:57",{"_index":1996,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:84",{"_index":1998,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.module.ts",{"_index":974,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.ts",{"_index":656,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:11",{"_index":672,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:14",{"_index":673,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:17",{"_index":671,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:20",{"_index":670,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:23",{"_index":667,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:25",{"_index":678,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:28",{"_index":669,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:30",{"_index":676,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:35",{"_index":675,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:40",{"_index":674,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:8",{"_index":668,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actorclick",{"_index":663,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actorrepository",{"_index":1608,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["actorrepositoryservice",{"_index":686,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actual_component",{"_index":879,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":345,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/MapControlsComponent.html":{}}}],["addchild",{"_index":424,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["addchild(object",{"_index":473,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["addgroup",{"_index":2581,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":2333,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addnode",{"_index":1372,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["addpass",{"_index":1852,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1861,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["advanced",{"_index":2272,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["aftercontentinit",{"_index":1455,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["afterinit",{"_index":292,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["afterviewinit",{"_index":194,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":3678,"title":{},"body":{"license.html":{}}}],["align",{"_index":1462,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["allintersections",{"_index":3025,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.push",{"_index":3043,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.sort",{"_index":3048,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allowcoloroverride",{"_index":2087,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allpaths",{"_index":3055,"title":{},"body":{"classes/SVGLoader.html":{}}}],["along",{"_index":1296,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["alpha",{"_index":2720,"title":{},"body":{"injectables/RendererService.html":{}}}],["alternating",{"_index":3087,"title":{},"body":{"classes/SVGLoader.html":{}}}],["always",{"_index":2640,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["ambient",{"_index":732,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":723,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amiahole",{"_index":3110,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amiahole.ishole",{"_index":3112,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amount",{"_index":3086,"title":{},"body":{"classes/SVGLoader.html":{}}}],["and/or",{"_index":3698,"title":{},"body":{"license.html":{}}}],["ang",{"_index":2932,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angle",{"_index":2962,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angles",{"_index":452,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["angular",{"_index":322,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"index.html":{}}}],["angular/animations",{"_index":3540,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":948,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":894,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animated",{"_index":888,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{}}}],["animation",{"_index":882,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animation.module",{"_index":1046,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":936,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":938,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1731,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":1045,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":903,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":880,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":896,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":3432,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["another",{"_index":3034,"title":{},"body":{"classes/SVGLoader.html":{}}}],["antialias",{"_index":2719,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":2423,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["anything",{"_index":620,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["aperture",{"_index":1814,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1831,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":3649,"title":{},"body":{"index.html":{}}}],["app",{"_index":3592,"title":{},"body":{"index.html":{}}}],["appear",{"_index":2939,"title":{},"body":{"classes/SVGLoader.html":{}}}],["appliedmaterial",{"_index":374,"title":{},"body":{"directives/AbstractMesh.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(color",{"_index":3244,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedmaterial(materialcolor",{"_index":3580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":376,"title":{},"body":{"directives/AbstractMesh.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":197,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":206,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applymaterial",{"_index":356,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["applymatrix3",{"_index":2984,"title":{},"body":{"classes/SVGLoader.html":{}}}],["applyposition",{"_index":120,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["applyrotation",{"_index":425,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyscale",{"_index":426,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyshadowprops",{"_index":357,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["applyshadowprops(mesh",{"_index":370,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["applytranslation",{"_index":427,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyzaxisup",{"_index":121,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["arc",{"_index":3151,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["arcdivisions",{"_index":2787,"title":{},"body":{"classes/SVGLoader.html":{}}}],["area",{"_index":2645,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":2624,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":3733,"title":{},"body":{"license.html":{}}}],["around",{"_index":2963,"title":{},"body":{"classes/SVGLoader.html":{}}}],["array",{"_index":496,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["array.length",{"_index":2959,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrays",{"_index":3166,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrow",{"_index":3571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":152,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":2505,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":2086,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":3344,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["assets/svg/?.svg",{"_index":2095,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":3686,"title":{},"body":{"license.html":{}}}],["association",{"_index":3569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":731,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["atft.module",{"_index":978,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":927,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":939,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":951,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":958,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":965,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":983,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":996,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":1004,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":1012,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":1019,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":971,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":1029,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":1040,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":1030,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":1031,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":1032,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":1063,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":1337,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["authors",{"_index":3723,"title":{},"body":{"license.html":{}}}],["auto",{"_index":502,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"index.html":{}}}],["autoplay",{"_index":3410,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":2199,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":2200,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":909,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["ax",{"_index":3011,"title":{},"body":{"classes/SVGLoader.html":{}}}],["axes",{"_index":781,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":780,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":179,"title":{},"body":{"directives/AbstractCamera.html":{},"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["b0",{"_index":3002,"title":{},"body":{"classes/SVGLoader.html":{}}}],["b1",{"_index":3003,"title":{},"body":{"classes/SVGLoader.html":{}}}],["background",{"_index":3255,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":3263,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":848,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["base",{"_index":544,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":3632,"title":{},"body":{"index.html":{}}}],["baseinfo",{"_index":1137,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1581,"title":{},"body":{"classes/DagreUtils.html":{}}}],["baseintersections",{"_index":3066,"title":{},"body":{"classes/SVGLoader.html":{}}}],["baseintersections.push",{"_index":3071,"title":{},"body":{"classes/SVGLoader.html":{}}}],["basetexture",{"_index":1200,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":3213,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["beginning",{"_index":2882,"title":{},"body":{"classes/SVGLoader.html":{}}}],["behaviour",{"_index":2664,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":3598,"title":{},"body":{"index.html":{}}}],["bevel",{"_index":3127,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bevelenabled",{"_index":3326,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":3327,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":3328,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":3329,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":3330,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bignumber",{"_index":3093,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bindings",{"_index":3604,"title":{},"body":{"index.html":{}}}],["black",{"_index":1170,"title":{},"body":{"injectables/BloomService.html":{},"components/ObjectLoaderComponent.html":{}}}],["blender",{"_index":185,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["bloom",{"_index":2709,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":1112,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["bloom_scene_layer",{"_index":1186,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":1149,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2735,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":1150,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":1209,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":1215,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":1108,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":1201,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":1259,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":784,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":783,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":3627,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1824,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1837,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["border",{"_index":1141,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["bounding",{"_index":3027,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox",{"_index":3023,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox.getcenter",{"_index":3024,"title":{},"body":{"classes/SVGLoader.html":{}}}],["box",{"_index":786,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["box2",{"_index":2795,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boxmeshcomponent",{"_index":785,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":2834,"title":{},"body":{"classes/SVGLoader.html":{}}}],["browse",{"_index":3737,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3545,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":1502,"title":{},"body":{"components/DagreLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["buffergeometry",{"_index":2796,"title":{},"body":{"classes/SVGLoader.html":{}}}],["buffers",{"_index":3167,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bug",{"_index":2450,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":3075,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["bump",{"_index":3660,"title":{},"body":{"index.html":{}}}],["butt",{"_index":3130,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bx",{"_index":3012,"title":{},"body":{"classes/SVGLoader.html":{}}}],["c",{"_index":3675,"title":{},"body":{"license.html":{}}}],["cache",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1935,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:18",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":261,"title":{},"body":{"directives/AbstractConnector.html":{},"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":2674,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":2684,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":3523,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":3584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":312,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/AnimationService.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{}}}],["camera",{"_index":119,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["camera'},{'name",{"_index":837,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":949,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":2463,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":2466,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":2501,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":2500,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":2475,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":1102,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":2530,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":2532,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":2531,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":1035,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":944,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.ts",{"_index":115,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["camera.ts:10",{"_index":136,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:11",{"_index":137,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:12",{"_index":138,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:14",{"_index":141,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:16",{"_index":134,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:24",{"_index":149,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:41",{"_index":144,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:43",{"_index":151,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:45",{"_index":147,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:59",{"_index":142,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:69",{"_index":143,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:8",{"_index":153,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera/abstract",{"_index":613,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":1034,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":871,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["can't",{"_index":3031,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cant",{"_index":1768,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":2612,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":845,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":2723,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2741,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":616,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":2615,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":2613,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":2611,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":2632,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":2623,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":2627,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":2634,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":2648,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:48",{"_index":2626,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:52",{"_index":2630,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2740,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2739,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2738,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2732,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":2616,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":1052,"title":{},"body":{"modules/AtftModule.html":{},"classes/SVGLoader.html":{}}}],["cast",{"_index":2421,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":359,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["catch",{"_index":1647,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["catch(err",{"_index":351,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["cdref",{"_index":1377,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["center",{"_index":973,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["center.ts",{"_index":3525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":972,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":1972,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":2108,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/layout/dagre",{"_index":1138,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["center/server/abstract",{"_index":654,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/model",{"_index":2277,"title":{},"body":{"components/ModelActorComponent.html":{},"coverage.html":{}}}],["center/server/server",{"_index":3265,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":3451,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["center/service/actor",{"_index":687,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centerboundingbox",{"_index":3060,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centerboundingbox.y",{"_index":3062,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centered",{"_index":1463,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":906,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":257,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["changedetectorref",{"_index":1378,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["changelog",{"_index":3653,"title":{},"body":{"index.html":{}}}],["changes",{"_index":148,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["changes['listeningcontrolelement",{"_index":625,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["changes['rotatespeed",{"_index":2240,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":2243,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":3682,"title":{},"body":{"license.html":{}}}],["check",{"_index":2999,"title":{},"body":{"classes/SVGLoader.html":{}}}],["child",{"_index":1335,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1748,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childcameras",{"_index":568,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["childlren",{"_index":423,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["children",{"_index":546,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["childs",{"_index":2537,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2845,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["claim",{"_index":3726,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["classifyresult.loc",{"_index":3009,"title":{},"body":{"classes/SVGLoader.html":{}}}],["click",{"_index":2544,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clock",{"_index":2129,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["clone",{"_index":3635,"title":{},"body":{"index.html":{}}}],["closed",{"_index":3142,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closeparpos",{"_index":2957,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closer",{"_index":3154,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cloud",{"_index":2101,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":930,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":931,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":940,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":942,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":941,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":952,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":954,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":953,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":959,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":961,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":960,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":966,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":970,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":969,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":968,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":967,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":984,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":986,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":985,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":997,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":999,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":998,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":1005,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":1007,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":1008,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":1006,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":1013,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":1014,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":1015,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":1020,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":1021,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":1022,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":1026,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":1028,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":1027,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":1058,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":1062,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":1059,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":1060,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":1061,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":1085,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":1086,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":1087,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":1094,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":1095,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":1096,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":1097,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":1104,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":1106,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":1107,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":1105,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":1113,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":1116,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":1114,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":1115,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":1121,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":1122,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":1123,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":3400,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":3402,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":3401,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":3403,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2812,"title":{},"body":{"classes/SVGLoader.html":{}}}],["colinear",{"_index":2998,"title":{},"body":{"classes/SVGLoader.html":{}}}],["color",{"_index":657,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":3662,"title":{},"body":{"index.html":{}}}],["command",{"_index":2885,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands",{"_index":2875,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands.length",{"_index":2881,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commits",{"_index":3656,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":947,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":720,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":849,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["component",{"_index":702,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":778,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["componentfactory",{"_index":700,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":694,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["components",{"_index":724,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":192,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":995,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":991,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":992,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":994,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":203,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":812,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":216,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1851,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1859,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1860,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1858,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1865,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1866,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1864,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:55",{"_index":1862,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:61",{"_index":1868,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:75",{"_index":1869,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:81",{"_index":1863,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":2541,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":1140,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":795,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composition.border",{"_index":1703,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component",{"_index":1625,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component.ts",{"_index":1366,"title":{},"body":{"components/DagreCompositionComponent.html":{},"coverage.html":{}}}],["composition.component.ts:119",{"_index":1389,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:125",{"_index":1394,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:143",{"_index":1398,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:161",{"_index":1395,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:34",{"_index":1383,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:36",{"_index":1380,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:38",{"_index":1401,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:40",{"_index":1382,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:48",{"_index":1407,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:52",{"_index":1384,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:53",{"_index":1386,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:54",{"_index":1387,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:55",{"_index":1385,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:57",{"_index":1381,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:59",{"_index":1403,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:60",{"_index":1405,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:61",{"_index":1404,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:62",{"_index":1379,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:81",{"_index":1393,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:85",{"_index":1392,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:89",{"_index":1391,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:93",{"_index":1390,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:99",{"_index":1388,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.composition",{"_index":1701,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.label",{"_index":1699,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.name",{"_index":1697,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref",{"_index":1695,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.border",{"_index":1702,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.composition",{"_index":1700,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.label",{"_index":1698,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.name",{"_index":1696,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositions",{"_index":1145,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1573,"title":{},"body":{"classes/DagreUtils.html":{}}}],["compute",{"_index":2913,"title":{},"body":{"classes/SVGLoader.html":{}}}],["conditions",{"_index":3706,"title":{},"body":{"license.html":{}}}],["config",{"_index":3642,"title":{},"body":{"index.html":{}}}],["configurelisteners",{"_index":571,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["connection",{"_index":3734,"title":{},"body":{"license.html":{}}}],["connector",{"_index":2128,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector'},{'name",{"_index":828,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":957,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":2126,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.component.ts:114",{"_index":2152,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:127",{"_index":2156,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":2147,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:26",{"_index":2149,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:27",{"_index":2146,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":2141,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:29",{"_index":2143,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:30",{"_index":2148,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2145,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:33",{"_index":2140,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":2161,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:35",{"_index":2166,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":2167,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":2163,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":2164,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":2139,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:92",{"_index":2155,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.module",{"_index":1072,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":956,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.ts",{"_index":234,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["connector.ts:10",{"_index":244,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:13",{"_index":245,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:15",{"_index":266,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:16",{"_index":267,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:18",{"_index":250,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:26",{"_index":264,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:36",{"_index":252,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:46",{"_index":246,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:52",{"_index":253,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector/atft",{"_index":1071,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":2538,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console",{"_index":3527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":2826,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.error('contentprojectioncomponent",{"_index":1333,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.error(err",{"_index":352,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log",{"_index":2859,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcamera.constructor",{"_index":157,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcamera.ngafterviewinit",{"_index":158,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":218,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":226,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":221,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractlazyobject3d",{"_index":339,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractlazyobject3d.startloading",{"_index":331,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractmodelloader.model",{"_index":419,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["console.log('abstractobject3d.addchild",{"_index":538,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.constructor",{"_index":504,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.findbyname",{"_index":552,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":505,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/PlaneMeshComponent.html":{}}}],["console.log('abstractobject3d.ngoninit",{"_index":518,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ondestroy",{"_index":514,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.removechild",{"_index":545,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":717,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":2332,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":916,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":914,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":1134,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":1204,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":1312,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1828,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('changed",{"_index":2190,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":1358,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":1359,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dagrecompositioncomponent.addnode",{"_index":1427,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.layout",{"_index":1446,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.removenode",{"_index":1435,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.syncgraphnodes",{"_index":1441,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.update",{"_index":1452,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrelayoutcomponent.layout",{"_index":1512,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('dagrelayoutcomponent.ngonchanges",{"_index":1530,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrelayoutcomponent.syncgraphcontainer",{"_index":1526,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrenodecomponent.addnode",{"_index":1551,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.constructor",{"_index":1549,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.removenode",{"_index":1552,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraph",{"_index":1554,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraphnodes",{"_index":1553,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1579,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('dagreyamlparsercomponent",{"_index":1689,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createcomposition",{"_index":1693,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createedge",{"_index":1674,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createnode",{"_index":1653,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.destroyall",{"_index":1687,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.ngonchanges",{"_index":1632,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.parseandcreate",{"_index":1634,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('darkennonbloomed",{"_index":1253,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1736,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1761,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":2040,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":1928,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1870,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1888,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1876,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1871,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1873,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1889,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1923,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":2014,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":1920,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1915,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1936,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('framemeshcomponent.getgeometry",{"_index":1950,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('framemeshcomponent.ngonchanges",{"_index":1964,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":2011,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":2046,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":2104,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1764,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('lineposition",{"_index":2039,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('looking",{"_index":2031,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":1916,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('node",{"_index":1443,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":2448,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":2440,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":2563,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orbitcontrolscomponent.constructor",{"_index":617,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orbitcontrolscomponent.ngafterviewinit",{"_index":642,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":2480,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":2487,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":2504,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":2509,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":2561,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":2334,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2714,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2660,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2650,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2718,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2653,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":2007,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":683,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":682,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":679,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":3276,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('stlloadercomponent.loadlazyobject",{"_index":3312,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["console.log('svgloadercomponent.icon",{"_index":3232,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloadercomponent.loadlazyobject",{"_index":3240,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":3318,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":3378,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":3375,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.set",{"_index":3372,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":2323,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":3424,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(event",{"_index":2356,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1770,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn",{"_index":2855,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.warn('bloomservice.init",{"_index":1244,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('dagrecompositioncomponent.constructor",{"_index":1418,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.warn('dagrenodecomponent.constructor",{"_index":1550,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.warn('dagreyamlparsercomponent.parseandcreate",{"_index":1649,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractConnector.html":{},"directives/AbstractObject3D.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":1714,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(manager",{"_index":2756,"title":{},"body":{"classes/SVGLoader.html":{}}}],["constructor(raycasterservice",{"_index":2567,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":132,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(resolver",{"_index":693,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2682,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["container",{"_index":1534,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["content",{"_index":789,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentchild",{"_index":609,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchild(renderercanvascomponent",{"_index":606,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentchildren",{"_index":610,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchildren(abstractcamera",{"_index":602,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentprojection",{"_index":1325,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":788,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continue",{"_index":2954,"title":{},"body":{"classes/SVGLoader.html":{}}}],["contract",{"_index":3730,"title":{},"body":{"license.html":{}}}],["control",{"_index":581,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["control.module",{"_index":1039,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":963,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":1038,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":569,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":831,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":964,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":2198,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":2196,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:101",{"_index":2232,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":2458,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":2457,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:17",{"_index":2226,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":2228,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":2213,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":2214,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":2216,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":2215,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":2227,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":2222,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":2218,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":2219,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":2225,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":2223,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":2221,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:31",{"_index":2212,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.ts",{"_index":567,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["controls.ts:13",{"_index":604,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:14",{"_index":608,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:22",{"_index":577,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:24",{"_index":575,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:33",{"_index":597,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:49",{"_index":598,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:55",{"_index":599,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:58",{"_index":595,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:74",{"_index":596,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["conventional",{"_index":3655,"title":{},"body":{"index.html":{}}}],["converts",{"_index":1784,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":2015,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["copies",{"_index":3700,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3685,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3674,"title":{},"body":{"license.html":{}}}],["core",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":3175,"title":{},"body":{"classes/SVGLoader.html":{}}}],["counting",{"_index":3085,"title":{},"body":{"classes/SVGLoader.html":{}}}],["coverage",{"_index":3455,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":2894,"title":{},"body":{"classes/SVGLoader.html":{}}}],["create",{"_index":247,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":122,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createcomposition",{"_index":1601,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createcomposition(composition",{"_index":1612,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["created",{"_index":628,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["createedge",{"_index":1602,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge(edge",{"_index":1614,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createlinemesh",{"_index":237,"title":{},"body":{"directives/AbstractConnector.html":{},"components/LineConnectorComponent.html":{}}}],["createnode",{"_index":1603,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createnode(node",{"_index":1616,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["creates",{"_index":3582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createshapes",{"_index":2751,"title":{},"body":{"classes/SVGLoader.html":{}}}],["createshapes(shapepath",{"_index":2763,"title":{},"body":{"classes/SVGLoader.html":{}}}],["creation",{"_index":183,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["cross",{"_index":3089,"title":{},"body":{"classes/SVGLoader.html":{}}}],["css",{"_index":2665,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["current",{"_index":412,"title":{},"body":{"directives/AbstractModelLoader.html":{},"classes/SVGLoader.html":{}}}],["currentgeometry",{"_index":1967,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currentgeometry.attributes",{"_index":1970,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currently",{"_index":2637,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentnode",{"_index":490,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["currentnode.childlren.some(child",{"_index":559,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.name",{"_index":557,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.object",{"_index":556,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentpointl",{"_index":3190,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpointr",{"_index":3191,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform",{"_index":2863,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.copy",{"_index":2867,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.identity",{"_index":2870,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.multiplymatrices",{"_index":2969,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.scale",{"_index":2971,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.set",{"_index":2973,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.translate",{"_index":2960,"title":{},"body":{"classes/SVGLoader.html":{}}}],["curvesegments",{"_index":3331,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cx",{"_index":2914,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cxp",{"_index":2909,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cy",{"_index":2915,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cylinder",{"_index":792,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":791,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cyp",{"_index":2911,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d",{"_index":2056,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["d.match",{"_index":2876,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dadada",{"_index":3359,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["dagre",{"_index":794,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dagre.graphlabel",{"_index":1144,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":1397,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1580,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":793,"title":{"components/DagreCompositionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":796,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayout",{"_index":1369,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["dagrelayoutcomponent",{"_index":798,"title":{"components/DagreLayoutComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":800,"title":{"components/DagreNodeComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1499,"title":{"classes/DagreUtils.html":{}},"body":{"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreutils.modeltograph(this.graphmodel",{"_index":1523,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["dagreyamlparsercomponent",{"_index":802,"title":{"components/DagreYamlParserComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":3727,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":2201,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":1154,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":1156,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":1151,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1734,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1709,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":867,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":866,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1710,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashoffset",{"_index":2187,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["dashsize",{"_index":2133,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["data",{"_index":397,"title":{},"body":{"directives/AbstractModelLoader.html":{},"modules/AtftDataCenterActorModule.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["deal",{"_index":3687,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3735,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":945,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["decorators",{"_index":601,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["def",{"_index":2180,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/variables.html":{}}}],["default_align",{"_index":1472,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_edgesep",{"_index":1475,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_margin",{"_index":1477,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_nodesep",{"_index":1504,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_rankdir",{"_index":1482,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranker",{"_index":1484,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranksep",{"_index":1505,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_sep",{"_index":1480,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultdpi",{"_index":2748,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defaultid",{"_index":689,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaults",{"_index":1292,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defaultunit",{"_index":2749,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["defines",{"_index":1234,"title":{},"body":{"injectables/BloomService.html":{}}}],["defs",{"_index":2750,"title":{},"body":{"classes/SVGLoader.html":{}}}],["deg2rad",{"_index":1780,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":1092,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":1088,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1788,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1785,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":1257,"title":{},"body":{"injectables/BloomService.html":{}}}],["delta",{"_index":2925,"title":{},"body":{"classes/SVGLoader.html":{}}}],["demo",{"_index":3599,"title":{},"body":{"index.html":{}}}],["denom",{"_index":2997,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dependencies",{"_index":929,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":3617,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":2408,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":1282,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":1283,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthwrite",{"_index":360,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthwrite'].some(propname",{"_index":385,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["descendants",{"_index":603,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["description",{"_index":391,"title":{},"body":{"directives/AbstractModelLoader.html":{},"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":664,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["destroy",{"_index":1690,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["destroyall",{"_index":1604,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["details",{"_index":3651,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1921,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":3612,"title":{},"body":{"index.html":{}}}],["development",{"_index":3633,"title":{},"body":{"index.html":{}}}],["df",{"_index":2877,"title":{},"body":{"classes/SVGLoader.html":{}}}],["directional",{"_index":806,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":805,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":111,"title":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1732,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directive.ts",{"_index":285,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"coverage.html":{}}}],["directive.ts:8",{"_index":286,"title":{},"body":{"directives/AbstractEmptyDirective.html":{}}}],["directives",{"_index":113,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["disable",{"_index":198,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["disablefog",{"_index":1902,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":2275,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":2369,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["distribute",{"_index":3696,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":2043,"title":{},"body":{"components/GridHelperComponent.html":{},"classes/SVGLoader.html":{}}}],["dl",{"_index":1501,"title":{},"body":{"components/DagreLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["document.body.addeventlistener('keydown",{"_index":3293,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":3301,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":3425,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":3421,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":3456,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dof",{"_index":1813,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":808,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":807,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":626,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["don't",{"_index":634,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["done",{"_index":465,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["dosetfirstpoint",{"_index":2873,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dot",{"_index":810,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dots",{"_index":2805,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dotscreencomponent",{"_index":809,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1847,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["dq",{"_index":2901,"title":{},"body":{"classes/SVGLoader.html":{}}}],["draw",{"_index":1707,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":989,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1706,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":1718,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":1719,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1721,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1722,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1720,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:16",{"_index":1727,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1728,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1729,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1715,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:27",{"_index":1724,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:36",{"_index":1726,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:67",{"_index":1723,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:92",{"_index":1725,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":868,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["duplicated",{"_index":3198,"title":{},"body":{"classes/SVGLoader.html":{}}}],["during",{"_index":468,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["dynamic",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1648,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["e.g",{"_index":3610,"title":{},"body":{"index.html":{}}}],["edge",{"_index":1142,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":797,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["edge.color",{"_index":1684,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component",{"_index":1626,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component.ts",{"_index":3461,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.from",{"_index":1680,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.name",{"_index":1591,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1590,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["edge.type",{"_index":1682,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge1",{"_index":3005,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edge2",{"_index":3001,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edgeref",{"_index":1677,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.from",{"_index":1679,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.materialcolor",{"_index":1685,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.to",{"_index":1681,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.type",{"_index":1683,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edges",{"_index":1147,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["edgesep",{"_index":1464,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["edgesgeom",{"_index":1750,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":3562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":215,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":1051,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":988,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":193,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:18",{"_index":209,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:29",{"_index":208,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:37",{"_index":211,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:41",{"_index":213,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:45",{"_index":212,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:54",{"_index":210,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:56",{"_index":207,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:9",{"_index":205,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":1050,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":1165,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":1224,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1877,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":204,"title":{"components/EffectComposerComponent.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":578,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":576,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["elements/vertex",{"_index":3172,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ellipse",{"_index":2847,"title":{},"body":{"classes/SVGLoader.html":{}}}],["embedded",{"_index":1334,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":2536,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["emits",{"_index":884,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":922,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":925,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":2379,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":284,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/DagreLayoutComponent.html":{},"components/EmptyComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["empty'},{'name",{"_index":814,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":1003,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":813,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":199,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":1103,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":2566,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":2569,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":2568,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":873,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":895,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":2202,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":619,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/FogComponent.html":{}}}],["end",{"_index":255,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["end.x",{"_index":2920,"title":{},"body":{"classes/SVGLoader.html":{}}}],["end.y",{"_index":2922,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endcaps",{"_index":3153,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endpoints",{"_index":3000,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ensure",{"_index":3197,"title":{},"body":{"classes/SVGLoader.html":{}}}],["entire",{"_index":3623,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":1185,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":975,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["enum",{"_index":2174,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["enumerations",{"_index":3561,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop",{"_index":3032,"title":{},"body":{"classes/SVGLoader.html":{}}}],["enveloping",{"_index":3037,"title":{},"body":{"classes/SVGLoader.html":{}}}],["envelops",{"_index":3033,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equally",{"_index":2893,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equals",{"_index":3143,"title":{},"body":{"classes/SVGLoader.html":{}}}],["error",{"_index":1053,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["error('camera",{"_index":646,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["error('webglrenderer",{"_index":648,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["error.ts",{"_index":3529,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":320,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["eslint/directive",{"_index":323,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["eslint/no",{"_index":542,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["especially",{"_index":318,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["etc",{"_index":908,"title":{},"body":{"injectables/AnimationService.html":{}}}],["euler",{"_index":451,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["evenodd",{"_index":3081,"title":{},"body":{"classes/SVGLoader.html":{}}}],["event",{"_index":886,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"license.html":{}}}],["event.altkey",{"_index":3294,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":2013,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.face.a",{"_index":2033,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":2035,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":2037,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":3295,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":2343,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":2341,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":2358,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":3567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":471,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["events",{"_index":584,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":2642,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["examples",{"_index":3609,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":3136,"title":{},"body":{"classes/SVGLoader.html":{}}}],["executes",{"_index":3440,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["execution",{"_index":910,"title":{},"body":{"injectables/AnimationService.html":{}}}],["existent",{"_index":2858,"title":{},"body":{"classes/SVGLoader.html":{}}}],["existing",{"_index":3165,"title":{},"body":{"classes/SVGLoader.html":{}}}],["exists",{"_index":342,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["explore",{"_index":3596,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":1055,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":946,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["express",{"_index":3714,"title":{},"body":{"license.html":{}}}],["extends",{"_index":269,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":2016,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":1295,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["factory",{"_index":1675,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["fail",{"_index":3528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":1650,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["false",{"_index":140,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":1903,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1930,"title":{},"body":{"components/FogComponent.html":{}}}],["feel",{"_index":3666,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":1717,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ffa0a0",{"_index":684,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["fff0f0",{"_index":681,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ffffff",{"_index":677,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/ModelActorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/StlLoaderComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["fileloader",{"_index":2797,"title":{},"body":{"classes/SVGLoader.html":{}}}],["files",{"_index":2382,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":2406,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":2428,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["finalcomposer",{"_index":1152,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":1229,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":1235,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1769,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["findbyname",{"_index":428,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["findbyname(name",{"_index":479,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["findmesh",{"_index":1746,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1767,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1760,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["first",{"_index":3144,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstpoint",{"_index":2871,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstxofpath",{"_index":3073,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fit",{"_index":3622,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":3537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":3719,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1056,"title":{},"body":{"modules/AtftModule.html":{}}}],["fixcenter",{"_index":3226,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":3252,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":3386,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["flag",{"_index":308,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["flex",{"_index":2276,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32array(4",{"_index":2024,"title":{},"body":{"components/GridActorComponent.html":{}}}],["float32bufferattribute",{"_index":2798,"title":{},"body":{"classes/SVGLoader.html":{}}}],["floating",{"_index":2935,"title":{},"body":{"classes/SVGLoader.html":{}}}],["focus",{"_index":1815,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1827,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1901,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":816,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":990,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":815,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":3654,"title":{},"body":{"index.html":{}}}],["following",{"_index":3705,"title":{},"body":{"license.html":{}}}],["font",{"_index":3333,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":3324,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontservice",{"_index":1064,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fonturl",{"_index":3332,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fork/svgloader",{"_index":3317,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2747,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["fork/svgloader.ts:1676",{"_index":2764,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2113",{"_index":2770,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2138",{"_index":2788,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2167",{"_index":2794,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:24",{"_index":2760,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:25",{"_index":2762,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:26",{"_index":2757,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:40",{"_index":2780,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:74",{"_index":2782,"title":{},"body":{"classes/SVGLoader.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractOrbitControls.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["fov",{"_index":2499,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":1197,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":818,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["framemeshcomponent",{"_index":817,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":3667,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":2488,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":543,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["functions",{"_index":3572,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":3703,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":1216,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":1220,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":1222,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":1183,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":1399,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}}}],["g.graph().height",{"_index":1529,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.graph().width",{"_index":1528,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.node(name",{"_index":1445,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.nodes().foreach((name",{"_index":1442,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1577,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1589,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph",{"_index":1575,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1582,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1586,"title":{},"body":{"classes/DagreUtils.html":{}}}],["gapsize",{"_index":2134,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["general",{"_index":2058,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["generate",{"_index":503,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{}}}],["generated",{"_index":3157,"title":{},"body":{"classes/SVGLoader.html":{}}}],["generates",{"_index":3138,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geo",{"_index":2017,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":2020,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geoetry",{"_index":258,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["geometry",{"_index":463,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute",{"_index":3163,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geometry.setattribute('position",{"_index":2022,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry.setpositions(positions",{"_index":2176,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getcamera",{"_index":2675,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":2647,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getchildren",{"_index":429,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["getcomponentfactory",{"_index":691,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":697,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1853,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":2582,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":2364,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getgeometry",{"_index":1943,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["getgraph",{"_index":1457,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getgraphmodel",{"_index":1458,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getheight",{"_index":1406,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["geticon",{"_index":3223,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["getintersections",{"_index":3039,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getisenabled",{"_index":2608,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1558,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1563,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlineposition",{"_index":1976,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":1994,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":358,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":3363,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmodel",{"_index":410,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ModelActorComponent.html":{}}}],["getnodecomponent",{"_index":1605,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodecomponent(id",{"_index":1619,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodetransform",{"_index":2830,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getobject",{"_index":430,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["getoverridematerialcolor",{"_index":3220,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["getpositions",{"_index":2132,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getrenderpane",{"_index":2633,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscanlineintersections",{"_index":3021,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getscene",{"_index":2676,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getstrokestyle",{"_index":2752,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getstrokestyle(width",{"_index":2766,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gettext",{"_index":3365,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":3325,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":3351,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":3589,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2677,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":2120,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":3634,"title":{},"body":{"index.html":{}}}],["given",{"_index":3140,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gl_fragcolor",{"_index":1202,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":1192,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":589,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["goals",{"_index":3601,"title":{},"body":{"index.html":{}}}],["granted",{"_index":3681,"title":{},"body":{"license.html":{}}}],["graph",{"_index":549,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["graphmodel",{"_index":1143,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["graphupdated",{"_index":1370,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["grid",{"_index":820,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":819,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":1982,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":1983,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":822,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":823,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":2067,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":2336,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["group.add(mesh",{"_index":3247,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["group.directive",{"_index":1100,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":2534,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":2572,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":2573,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":2571,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":2574,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":2579,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":2580,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":2578,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":2577,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":2576,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":2575,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":2335,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":875,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":2310,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["guidelines",{"_index":3659,"title":{},"body":{"index.html":{}}}],["h",{"_index":3116,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.for",{"_index":3118,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.identifier",{"_index":3120,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.ishole",{"_index":3117,"title":{},"body":{"classes/SVGLoader.html":{}}}],["halfx",{"_index":1954,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":1956,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["height",{"_index":1284,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["height(height",{"_index":1410,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["heightsegments",{"_index":1285,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["heightsegments'].some(propname",{"_index":2516,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":392,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":782,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":1002,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":1127,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":1130,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":2044,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":1074,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":1001,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":1073,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":1330,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":3607,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":825,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":824,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":3680,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1733,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1711,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hides",{"_index":402,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["hierarchy",{"_index":3076,"title":{},"body":{"classes/SVGLoader.html":{}}}],["hightsegments",{"_index":3272,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holder",{"_index":353,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["holders",{"_index":3724,"title":{},"body":{"license.html":{}}}],["hole",{"_index":3084,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes",{"_index":3114,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes.foreach",{"_index":3119,"title":{},"body":{"classes/SVGLoader.html":{}}}],["horizontalblurshader",{"_index":1271,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":3624,"title":{},"body":{"index.html":{}}}],["host",{"_index":1716,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2649,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":2629,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":2620,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":776,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2658,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":2407,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1557,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":3636,"title":{},"body":{"index.html":{}}}],["https://github.com/mrdoob/three.js/pull/10315",{"_index":594,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":2303,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/angular",{"_index":3453,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":2103,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":2097,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":2100,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":2091,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["i.destroy",{"_index":1691,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["i.e",{"_index":2644,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":2349,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.identifier",{"_index":3069,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.name",{"_index":563,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["i.object",{"_index":2345,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":2352,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.t",{"_index":3013,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.trim",{"_index":2890,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1",{"_index":3049,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1.point.x",{"_index":3051,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2",{"_index":3050,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2.point.x",{"_index":3052,"title":{},"body":{"classes/SVGLoader.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["icon(icon",{"_index":3231,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["iconprovider",{"_index":2293,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["iconprovider.allowcoloroverride",{"_index":3238,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.isccw",{"_index":3235,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.noholes",{"_index":3237,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.url",{"_index":2296,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["icons/?.svg",{"_index":2098,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":2093,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":2092,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":1065,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":2076,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":699,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["ideas",{"_index":3669,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":3044,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["ignorepaused",{"_index":2360,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":1278,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":2639,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":116,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":3715,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":950,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2807,"title":{},"body":{"classes/SVGLoader.html":{}}}],["included",{"_index":2418,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":3690,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":1057,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":2220,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":3648,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":739,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractLazyObject3D.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["init(renderer",{"_index":1158,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1854,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initialize",{"_index":1508,"title":{},"body":{"components/DagreLayoutComponent.html":{},"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2689,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":337,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1712,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":200,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["injector",{"_index":1376,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["innerpoint",{"_index":3194,"title":{},"body":{"classes/SVGLoader.html":{}}}],["input",{"_index":154,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["inputs",{"_index":126,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["inside",{"_index":3036,"title":{},"body":{"classes/SVGLoader.html":{}}}],["install",{"_index":3616,"title":{},"body":{"index.html":{}}}],["instance",{"_index":311,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["instanceof",{"_index":1747,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["instances",{"_index":1600,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["instead",{"_index":2455,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrated",{"_index":3608,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":735,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":1136,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersect",{"_index":2995,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection",{"_index":3016,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.t",{"_index":3014,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.x",{"_index":3018,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.y",{"_index":3019,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection[0",{"_index":2375,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":2374,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersectionlocationtype.right",{"_index":3010,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections",{"_index":3020,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.foreach",{"_index":3041,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.push",{"_index":3017,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersectionsraw.push",{"_index":3015,"title":{},"body":{"classes/SVGLoader.html":{}}}],["invalid",{"_index":407,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["isahole",{"_index":3105,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole.filter",{"_index":3115,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isccw",{"_index":2088,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["iscw",{"_index":3046,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isenabled",{"_index":2330,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isfirstpoint",{"_index":2872,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ishole",{"_index":3082,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholefor",{"_index":3083,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholeto",{"_index":3053,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isolation",{"_index":3597,"title":{},"body":{"index.html":{}}}],["isready",{"_index":2583,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":2359,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isrotated",{"_index":2988,"title":{},"body":{"classes/SVGLoader.html":{}}}],["issue",{"_index":592,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["istransformrotated",{"_index":2989,"title":{},"body":{"classes/SVGLoader.html":{}}}],["it's",{"_index":911,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":1979,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":1980,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["j",{"_index":2891,"title":{},"body":{"classes/SVGLoader.html":{}}}],["jetbrains",{"_index":3665,"title":{},"body":{"index.html":{}}}],["join",{"_index":3132,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["joins",{"_index":3152,"title":{},"body":{"classes/SVGLoader.html":{}}}],["js",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(g.node(name",{"_index":1444,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["k",{"_index":2372,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["keyboard",{"_index":586,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["kind",{"_index":3713,"title":{},"body":{"license.html":{}}}],["known",{"_index":591,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["l",{"_index":2880,"title":{},"body":{"classes/SVGLoader.html":{}}}],["label",{"_index":661,"title":{},"body":{"directives/AbstractServerActor.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["large_arc_flag",{"_index":2907,"title":{},"body":{"classes/SVGLoader.html":{}}}],["last",{"_index":2453,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"classes/SVGLoader.html":{}}}],["lastcwvalue",{"_index":3090,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointl",{"_index":3186,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointr",{"_index":3187,"title":{},"body":{"classes/SVGLoader.html":{}}}],["later",{"_index":2506,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":127,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":981,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":976,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":826,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":982,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":799,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layout.component",{"_index":1409,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["layout.component.ts",{"_index":1454,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout.component.ts:107",{"_index":1493,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:127",{"_index":1494,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:133",{"_index":1489,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:137",{"_index":1495,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:143",{"_index":1488,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:38",{"_index":1473,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":1483,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:40",{"_index":1481,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":1476,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:42",{"_index":1486,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:43",{"_index":1478,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:44",{"_index":1479,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:45",{"_index":1485,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:47",{"_index":1474,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:49",{"_index":1487,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:51",{"_index":1498,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:52",{"_index":1471,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:68",{"_index":1492,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:73",{"_index":1491,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:78",{"_index":1490,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:97",{"_index":1497,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["lazy",{"_index":288,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/TextMeshComponent.html":{},"coverage.html":{}}}],["lazyobject",{"_index":290,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["left",{"_index":3160,"title":{},"body":{"classes/SVGLoader.html":{}}}],["legend",{"_index":775,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["len",{"_index":2931,"title":{},"body":{"classes/SVGLoader.html":{}}}],["length",{"_index":1290,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":3591,"title":{},"body":{"index.html":{}}}],["liability",{"_index":3728,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3725,"title":{},"body":{"license.html":{}}}],["library",{"_index":3603,"title":{},"body":{"index.html":{}}}],["license",{"_index":3672,"title":{"license.html":{}},"body":{"license.html":{}}}],["lies",{"_index":3004,"title":{},"body":{"classes/SVGLoader.html":{}}}],["light",{"_index":733,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light'},{'name",{"_index":779,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":1798,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":1011,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":727,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":737,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":736,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":2069,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1793,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":1792,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":773,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":1076,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":1010,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":1810,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":1802,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":1806,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":1803,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":1805,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":1804,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":1800,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":2523,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":1808,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":2522,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":2524,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":1797,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":1075,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":3606,"title":{},"body":{"index.html":{}}}],["limit",{"_index":3029,"title":{},"body":{"classes/SVGLoader.html":{}}}],["limitation",{"_index":3691,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3716,"title":{},"body":{"license.html":{}}}],["line",{"_index":248,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["line.geometry.attributes.position",{"_index":2030,"title":{},"body":{"components/GridActorComponent.html":{}}}],["line2",{"_index":2154,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linecap",{"_index":2768,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lineconnectorcomponent",{"_index":827,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1759,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":3564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linegeometry",{"_index":2171,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linejoin",{"_index":2767,"title":{},"body":{"classes/SVGLoader.html":{}}}],["linematerial",{"_index":2165,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["lineposition",{"_index":2029,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":2032,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":2034,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":2036,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":2038,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lines",{"_index":1735,"title":{},"body":{"directives/DashedDrawDirective.html":{},"classes/SVGLoader.html":{}}}],["linetype",{"_index":2135,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linetype.dashed",{"_index":2144,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linewidth",{"_index":2136,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["link",{"_index":325,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["list",{"_index":690,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listen",{"_index":582,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["listened",{"_index":588,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["listeningcontrolelement",{"_index":573,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["load",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(url",{"_index":2776,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loaded",{"_index":305,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["loader",{"_index":393,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":833,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":1018,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":2378,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":2446,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:16",{"_index":3310,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":3217,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":3307,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:21",{"_index":2399,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":3222,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":2389,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:25",{"_index":3306,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":3211,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:31",{"_index":2395,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:34",{"_index":3308,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:39",{"_index":2388,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":3224,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":3219,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:48",{"_index":3214,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:49",{"_index":2397,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:51",{"_index":3210,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:54",{"_index":3215,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:57",{"_index":3216,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:60",{"_index":3209,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":3212,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:66",{"_index":3208,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:77",{"_index":3218,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load",{"_index":2824,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.load(key",{"_index":1939,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":1078,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":1017,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service",{"_index":2405,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.service.ts",{"_index":2432,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":2438,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:22",{"_index":2437,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.setpath",{"_index":2818,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setrequestheader",{"_index":2820,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setwithcredentials",{"_index":2822,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.ts",{"_index":390,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":409,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:21",{"_index":396,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:32",{"_index":411,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader/atft",{"_index":1077,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader/services/font.service",{"_index":3369,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loaderactorcomponent",{"_index":829,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":298,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["loadlazyobject",{"_index":293,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":3641,"title":{},"body":{"index.html":{}}}],["logic",{"_index":889,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":469,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"components/VideoMeshComponent.html":{}}}],["m",{"_index":2978,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ma",{"_index":2803,"title":{},"body":{"classes/SVGLoader.html":{}}}],["main",{"_index":923,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":3663,"title":{},"body":{"index.html":{}}}],["manager",{"_index":2758,"title":{},"body":{"classes/SVGLoader.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":2239,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":830,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":3628,"title":{},"body":{"index.html":{}}}],["marginx",{"_index":1465,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marginy",{"_index":1466,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marked",{"_index":2535,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":361,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":3519,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":362,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":3370,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":2425,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["materialcreator.preload",{"_index":2426,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":3581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":1153,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.acos",{"_index":2933,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.cos",{"_index":2916,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.max",{"_index":2906,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.min",{"_index":2934,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.pi",{"_index":1354,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin",{"_index":2918,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.sqrt",{"_index":2896,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.tan",{"_index":2974,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matline",{"_index":2130,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["matrix",{"_index":2976,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix3",{"_index":2799,"title":{},"body":{"classes/SVGLoader.html":{}}}],["max",{"_index":187,"title":{},"body":{"directives/AbstractCamera.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1816,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1834,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdistance",{"_index":2203,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maximum",{"_index":3131,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxpolarangle",{"_index":2204,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxx",{"_index":3095,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":3092,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxzoom",{"_index":2205,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":2083,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["means",{"_index":406,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["merchantability",{"_index":3718,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3694,"title":{},"body":{"license.html":{}}}],["merged",{"_index":3155,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mesh",{"_index":249,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh'},{'name",{"_index":787,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":379,"title":{},"body":{"directives/AbstractMesh.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":1025,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":1280,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:110",{"_index":3353,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:111",{"_index":3419,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":3275,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":1353,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":3274,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":1352,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":1300,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":1347,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":3415,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":1351,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":1348,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":1298,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":1349,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":3392,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":1356,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":1346,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":1289,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":3391,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":3360,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":2052,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":1301,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":3413,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":1357,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":3394,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":1299,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":3366,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":3423,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":2513,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":3420,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:48",{"_index":3422,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":1288,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":3349,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":3347,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":3342,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":1307,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":3335,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":3339,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":3338,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":3336,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":3337,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":3345,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":3340,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":3348,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":3343,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":3341,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:87",{"_index":3416,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":3334,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:91",{"_index":3418,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:98",{"_index":3350,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.geometry",{"_index":1966,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.module",{"_index":1080,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":1024,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":381,"title":{},"body":{"directives/AbstractMesh.html":{},"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":1079,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["meshposition",{"_index":2019,"title":{},"body":{"components/GridActorComponent.html":{}}}],["message",{"_index":3570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":728,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["method",{"_index":297,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["middle",{"_index":2060,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":3677,"title":{},"body":{"license.html":{}}}],["mindistance",{"_index":2206,"title":{},"body":{"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["minimum",{"_index":3146,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minx",{"_index":3096,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miny",{"_index":3094,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minzoom",{"_index":2207,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":3560,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3673,"title":{},"body":{"license.html":{}}}],["miter",{"_index":3128,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miterlimit",{"_index":2769,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mm",{"_index":2811,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mode",{"_index":3650,"title":{},"body":{"index.html":{}}}],["model",{"_index":334,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["model(model",{"_index":2292,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["model(newmodelurl",{"_index":418,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["model.compositions",{"_index":1593,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.compositions?.foreach(i",{"_index":1640,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.edges",{"_index":1587,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1588,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges?.foreach(i",{"_index":1644,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.layout",{"_index":1596,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1594,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["model.nodes.length",{"_index":1639,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.nodes?.foreach(i",{"_index":1642,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.ts",{"_index":1139,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":709,"title":{"components/ModelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelpath",{"_index":2279,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["models/?.obj",{"_index":2304,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":1066,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1559,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1565,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":1194,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":506,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreLayoutComponent.html":{},"components/DofComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["modify",{"_index":3693,"title":{},"body":{"license.html":{}}}],["module",{"_index":926,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftModule.html":{},"index.html":{}}}],["modules",{"_index":928,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":3647,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":583,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mouseenter",{"_index":2542,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":2543,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":2365,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1880,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mtlloader",{"_index":2384,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":2436,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1574,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiples",{"_index":3133,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mustrerender",{"_index":167,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":3411,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["n",{"_index":2992,"title":{},"body":{"classes/SVGLoader.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["native",{"_index":580,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["near",{"_index":1904,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":2368,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":2371,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":2305,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":2373,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":2376,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["need",{"_index":618,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["network",{"_index":1506,"title":{},"body":{"components/DagreLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["newgeometry",{"_index":1968,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newgeometry.attributes",{"_index":1971,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newmodelurl",{"_index":414,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["newobject3dinstance",{"_index":238,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["newpoints",{"_index":3203,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newpoints.push",{"_index":3202,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newtexturepath",{"_index":2402,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["next",{"_index":321,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["nextpointl",{"_index":3192,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nextpointr",{"_index":3193,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ng",{"_index":1336,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":1459,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ngafterviewinit",{"_index":201,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":937,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":123,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngonchanges(changes",{"_index":145,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngondestroy",{"_index":202,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["node",{"_index":558,"title":{"interfaces/Node.html":{}},"body":{"directives/AbstractObject3D.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":801,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["node.childnodes",{"_index":2866,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.component",{"_index":1627,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.component.ts",{"_index":1532,"title":{},"body":{"components/DagreNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:103",{"_index":1542,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:16",{"_index":1536,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:18",{"_index":1537,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:20",{"_index":1547,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:22",{"_index":1548,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:23",{"_index":1535,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:42",{"_index":1540,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:47",{"_index":1538,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:66",{"_index":1539,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:71",{"_index":1541,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:89",{"_index":1543,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.composition",{"_index":1585,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.getattribute",{"_index":2874,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.hasattribute",{"_index":2837,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.height",{"_index":1451,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.href.baseval.substring",{"_index":2852,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.icon",{"_index":1670,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.label",{"_index":1583,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.model",{"_index":1672,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.name",{"_index":1659,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.nodename",{"_index":2833,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.nodetype",{"_index":2829,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet",{"_index":2887,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules",{"_index":2888,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules.length",{"_index":2889,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.type",{"_index":1664,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.viewportelement.getelementbyid",{"_index":2854,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.width",{"_index":1450,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.x",{"_index":1447,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["node.y",{"_index":1448,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["nodefactory",{"_index":1654,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef",{"_index":1656,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.composition",{"_index":1660,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.container.createcomponent(serverfactory",{"_index":1666,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.name",{"_index":1658,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["nodes",{"_index":1146,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["nodesep",{"_index":1467,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["noholes",{"_index":2089,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["nom1",{"_index":2996,"title":{},"body":{"classes/SVGLoader.html":{}}}],["non",{"_index":2857,"title":{},"body":{"classes/SVGLoader.html":{}}}],["none",{"_index":2672,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":3722,"title":{},"body":{"license.html":{}}}],["nonzero",{"_index":3059,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normal",{"_index":3164,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normals",{"_index":2791,"title":{},"body":{"classes/SVGLoader.html":{}}}],["note",{"_index":585,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":3708,"title":{},"body":{"license.html":{}}}],["now",{"_index":336,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["npm",{"_index":2419,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["null",{"_index":1232,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":135,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/variables.html":{}}}],["number.epsilon",{"_index":3008,"title":{},"body":{"classes/SVGLoader.html":{}}}],["numpoints",{"_index":3200,"title":{},"body":{"classes/SVGLoader.html":{}}}],["obj",{"_index":347,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":2554,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":2552,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":2553,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.clone",{"_index":2430,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["obj.ismesh",{"_index":1251,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":1255,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":2558,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":2556,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":2557,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":256,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["object.module",{"_index":1037,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":1070,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1745,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1730,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":1036,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/scene.component",{"_index":2707,"title":{},"body":{"injectables/RendererService.html":{}}}],["object3d",{"_index":306,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["objectloader",{"_index":3611,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":832,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloader",{"_index":2387,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":416,"title":{"components/ObjLoaderComponent.html":{}},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloaderservice",{"_index":1067,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":917,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":3684,"title":{},"body":{"license.html":{}}}],["official",{"_index":3645,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1981,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["old",{"_index":341,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["once",{"_index":627,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["onchanges",{"_index":118,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["onclick",{"_index":658,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["onclick(event",{"_index":2350,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":659,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ondestroy",{"_index":195,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"components/VideoMeshComponent.html":{}}}],["one",{"_index":254,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{}}}],["onerror",{"_index":2779,"title":{},"body":{"classes/SVGLoader.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["onload",{"_index":2777,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onlyunique(value",{"_index":1628,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["onmouseclick",{"_index":1977,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":1999,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":1978,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":2001,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":2559,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":2584,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":2338,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onprogress",{"_index":2778,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onresize",{"_index":2617,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onresize(event",{"_index":2628,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":660,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ontouchstart",{"_index":2585,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":2354,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":2137,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["open",{"_index":3141,"title":{},"body":{"classes/SVGLoader.html":{}}}],["openended",{"_index":1340,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["openparpos",{"_index":2955,"title":{},"body":{"classes/SVGLoader.html":{}}}],["operation",{"_index":467,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["optimization",{"_index":891,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":3620,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":566,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["orbitcontrols",{"_index":611,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":834,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":454,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["orgconsoleerror",{"_index":3531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1762,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":836,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":835,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oter",{"_index":3035,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections",{"_index":3067,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections.push",{"_index":3072,"title":{},"body":{"classes/SVGLoader.html":{}}}],["others",{"_index":2246,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":3732,"title":{},"body":{"license.html":{}}}],["out",{"_index":934,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outerpoint",{"_index":3195,"title":{},"body":{"classes/SVGLoader.html":{}}}],["outline",{"_index":2671,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":498,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":444,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["over",{"_index":2938,"title":{},"body":{"classes/SVGLoader.html":{}}}],["overridematerialcolor",{"_index":3207,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":3230,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":3738,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":313,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["p",{"_index":3042,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.getpoints",{"_index":3091,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.identifier",{"_index":3111,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.points",{"_index":3113,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.x",{"_index":3099,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.y",{"_index":3098,"title":{},"body":{"classes/SVGLoader.html":{}}}],["package",{"_index":2420,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pairs",{"_index":3174,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pane",{"_index":2635,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":2208,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":1291,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":1787,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["parameter",{"_index":3134,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3150,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parent",{"_index":445,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["parent.ts",{"_index":3533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentinitialized",{"_index":291,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["parentscene",{"_index":219,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/TextMeshComponent.html":{}}}],["parenttype",{"_index":3587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":2753,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parse(text",{"_index":2781,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseandcreate",{"_index":1606,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parsecirclenode",{"_index":2846,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecssstylesheet",{"_index":2835,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsedefs(node",{"_index":2850,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseellipsenode",{"_index":2848,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloats",{"_index":2886,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloatwithunits",{"_index":2945,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseint(number(this.materialcolor).tostring",{"_index":2181,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["parselinenode",{"_index":2849,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenode",{"_index":2828,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenodetransform",{"_index":2942,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepathnode",{"_index":2838,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolygonnode",{"_index":2842,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolylinenode",{"_index":2844,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parser",{"_index":1599,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser'},{'name",{"_index":804,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["parser.component.ts",{"_index":1597,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{}}}],["parser.component.ts:102",{"_index":1617,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:121",{"_index":1615,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:138",{"_index":1618,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:148",{"_index":1613,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:40",{"_index":1610,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:42",{"_index":1611,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:44",{"_index":1624,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:46",{"_index":1609,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:57",{"_index":1621,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:62",{"_index":1622,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:75",{"_index":1623,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:98",{"_index":1620,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parserectnode",{"_index":2840,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsestyle",{"_index":2836,"title":{},"body":{"classes/SVGLoader.html":{}}}],["particular",{"_index":3720,"title":{},"body":{"license.html":{}}}],["pass",{"_index":196,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1891,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1893,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1895,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1894,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patchconsoletofailonerror",{"_index":3530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":2390,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["path.boundingbox.containspoint",{"_index":3038,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.color",{"_index":3243,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.color.setstyle",{"_index":2861,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.absellipse",{"_index":2926,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.currentpoint.copy",{"_index":2884,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.identifier",{"_index":3045,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.iscw",{"_index":3047,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.points",{"_index":3040,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.subpaths",{"_index":2991,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.toshapes(this.isccw",{"_index":3246,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.userdata",{"_index":2865,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata.style",{"_index":3149,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths",{"_index":2783,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["paths.foreach",{"_index":3026,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.push",{"_index":2864,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pause",{"_index":2327,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":2311,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2814,"title":{},"body":{"classes/SVGLoader.html":{}}}],["per",{"_index":2806,"title":{},"body":{"classes/SVGLoader.html":{}}}],["performance",{"_index":890,"title":{},"body":{"injectables/AnimationService.html":{}}}],["permission",{"_index":3679,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3701,"title":{},"body":{"license.html":{}}}],["person",{"_index":3683,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3702,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":839,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":838,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pick",{"_index":621,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["pipe",{"_index":1777,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":1042,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":1091,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":1041,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1778,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1786,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":1218,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2668,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":841,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["planemeshcomponent",{"_index":840,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playbackerror",{"_index":3408,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["plus",{"_index":3170,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point",{"_index":843,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["point.copy",{"_index":2883,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point.x",{"_index":3074,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0l",{"_index":3188,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0r",{"_index":3189,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointlightcomponent",{"_index":842,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["points",{"_index":2789,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.foreach(p",{"_index":3097,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.length",{"_index":3201,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke",{"_index":2754,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke(points",{"_index":2785,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers",{"_index":2755,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers(points",{"_index":2790,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polygon",{"_index":2841,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polyline",{"_index":2843,"title":{},"body":{"classes/SVGLoader.html":{}}}],["portions",{"_index":3711,"title":{},"body":{"license.html":{}}}],["pos",{"_index":2008,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":907,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/GridActorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":263,"title":{},"body":{"directives/AbstractConnector.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["positionx",{"_index":128,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positiony",{"_index":129,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz",{"_index":130,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz'].some(propname",{"_index":168,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["pq",{"_index":2904,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preallocate",{"_index":3178,"title":{},"body":{"classes/SVGLoader.html":{}}}],["precision",{"_index":2936,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preloading",{"_index":2412,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":2414,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preservedrawingbuffer",{"_index":2619,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["previous",{"_index":403,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["private",{"_index":240,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["project",{"_index":3615,"title":{},"body":{"index.html":{}}}],["projection",{"_index":1324,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":790,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":1084,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":1322,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:14",{"_index":1326,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":1193,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":3742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":3573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":3741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":3574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":3563,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../fix",{"_index":3575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":3565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../patch",{"_index":3576,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../provide",{"_index":3577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":3566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":3578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":3579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":653,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":3475,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":3477,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":3404,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":881,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":904,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":899,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":901,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":902,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":900,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":935,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":1033,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/abstract",{"_index":114,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":943,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":2462,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":2497,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/abstract",{"_index":565,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":962,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":2195,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":2456,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":987,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":191,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":1258,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":1260,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1812,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1820,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1819,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1817,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1839,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1850,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1705,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1900,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:12",{"_index":1907,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1909,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1908,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:16",{"_index":1905,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:27",{"_index":1912,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:36",{"_index":1911,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:42",{"_index":1910,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:48",{"_index":1914,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:53",{"_index":1913,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/abstract",{"_index":283,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":1069,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/abstract",{"_index":233,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":955,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":2125,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":1321,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":1000,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":1126,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1897,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1899,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":2041,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":726,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":1009,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":1790,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":2065,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2518,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/abstract",{"_index":389,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":1016,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":2377,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2444,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1931,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":2074,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":2298,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":2431,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":3314,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/stl",{"_index":3304,"title":{},"body":{"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":3204,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/abstract",{"_index":355,"title":{},"body":{"directives/AbstractMesh.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":1023,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":1279,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":1338,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":1941,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":2049,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2511,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":3270,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":3387,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":3406,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":3253,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":3256,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":1124,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":3320,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":1090,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1779,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1783,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":2525,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":2528,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":1098,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":2529,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":2306,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":2597,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":2592,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":2591,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":2606,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":2607,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":2604,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":2603,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":2605,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":2587,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":2594,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":2601,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":2602,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":2590,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":2589,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":2598,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":2599,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":2609,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":2600,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":2588,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":2596,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":2595,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":1109,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":1148,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:109",{"_index":1157,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:118",{"_index":1164,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:33",{"_index":1174,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":1171,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":1168,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":1172,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":1166,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":1173,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":1175,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:41",{"_index":1161,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:93",{"_index":1162,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":2610,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2673,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:102",{"_index":2685,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:110",{"_index":2700,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:117",{"_index":2687,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":2703,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:121",{"_index":2686,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:125",{"_index":2688,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:129",{"_index":2696,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2704,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2702,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2706,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2701,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":2683,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:27",{"_index":2698,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:31",{"_index":2694,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:36",{"_index":2691,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:53",{"_index":2690,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:89",{"_index":2693,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":3279,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":1118,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":3284,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":3291,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":3290,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":3287,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":3289,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":3288,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":3286,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2746,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":3518,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":3521,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":3524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/patch",{"_index":3526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":3532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":3534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":3536,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":2415,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1937,"title":{},"body":{"injectables/FontService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["property",{"_index":401,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["propname",{"_index":169,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["props",{"_index":1799,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["provided",{"_index":501,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{},"license.html":{}}}],["provideparent",{"_index":770,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":729,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":1128,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":1281,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":3586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":1323,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":1339,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(dagrecompositioncomponent",{"_index":1367,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["provideparent(dagrelayoutcomponent",{"_index":1456,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["provideparent(dagrenodecomponent",{"_index":1533,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["provideparent(dagreyamlparsercomponent",{"_index":1598,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":1791,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1898,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":1942,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":1974,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":2042,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":2050,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":2066,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":2109,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":2127,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(modelactorcomponent",{"_index":2278,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":2445,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":2383,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":2464,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":2498,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":2512,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":2519,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":3254,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":3266,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":3267,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":3268,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":3269,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":3271,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(stlloadercomponent",{"_index":3305,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":3205,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":3321,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":3388,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":3407,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":3452,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":2105,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":2106,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":2107,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pruning",{"_index":3028,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pt",{"_index":2813,"title":{},"body":{"classes/SVGLoader.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["publish",{"_index":3695,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3670,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3721,"title":{},"body":{"license.html":{}}}],["px",{"_index":2761,"title":{},"body":{"classes/SVGLoader.html":{}}}],["q",{"_index":2905,"title":{},"body":{"classes/SVGLoader.html":{}}}],["querylist",{"_index":600,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rad2deg",{"_index":2526,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":1093,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":1089,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":1341,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":453,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SceneComponent.html":{}}}],["radius",{"_index":3273,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":1342,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":1343,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["rankdir",{"_index":1468,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker",{"_index":1469,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker'].some(propname",{"_index":1531,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranksep",{"_index":1470,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["raycast",{"_index":635,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["raycaster",{"_index":870,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["raycaster.module",{"_index":1048,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":1099,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":1101,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":1047,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":614,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":869,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1995,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":872,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":2308,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":2353,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":2348,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":2347,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":874,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":574,"title":{"injectables/RaycasterService.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1545,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["readonly",{"_index":893,"title":{},"body":{"injectables/AnimationService.html":{}}}],["receiveshadow",{"_index":363,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["recreate",{"_index":630,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rect",{"_index":2839,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rectangular",{"_index":1294,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["recursionbyname",{"_index":431,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["recursionbyname(currentnode",{"_index":488,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["reference",{"_index":304,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["references",{"_index":2856,"title":{},"body":{"classes/SVGLoader.html":{}}}],["refreshlayout",{"_index":1460,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["register",{"_index":692,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["register(id",{"_index":701,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":2416,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["relative",{"_index":2391,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["release",{"_index":3652,"title":{},"body":{"index.html":{}}}],["releasecontributors",{"_index":3661,"title":{},"body":{"index.html":{}}}],["remove",{"_index":340,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removechild",{"_index":432,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechild(object",{"_index":491,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname",{"_index":433,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname(name",{"_index":493,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["removed",{"_index":408,"title":{},"body":{"directives/AbstractModelLoader.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["removeduplicatedpoints",{"_index":3199,"title":{},"body":{"classes/SVGLoader.html":{}}}],["removefromarray",{"_index":3535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":3588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removenode",{"_index":1373,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["removepass",{"_index":1855,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1867,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":665,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["rendered",{"_index":2636,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":844,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":1219,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":1044,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":1110,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":1111,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":1043,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer",{"_index":615,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["renderer/renderer.service",{"_index":156,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":605,"title":{"components/RendererCanvasComponent.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice",{"_index":133,"title":{"injectables/RendererService.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":3258,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":2646,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpane",{"_index":2622,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":1176,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":1208,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1882,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":1207,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1856,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":3602,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":688,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":704,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":695,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:28",{"_index":703,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:36",{"_index":698,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requestanimationframe",{"_index":892,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":920,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":3671,"title":{},"body":{"index.html":{}}}],["required",{"_index":3441,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["res",{"_index":554,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["reset",{"_index":933,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":2618,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2667,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2678,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2692,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2663,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1940,"title":{},"body":{"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{}}}],["resolve(data.paths",{"_index":3319,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(mesh",{"_index":3313,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["resolve(model",{"_index":2442,"title":{},"body":{"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolver",{"_index":696,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["resourcepath",{"_index":2385,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resources",{"_index":2392,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["restorematerial",{"_index":1155,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":1163,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":2643,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":3689,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":2329,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returned",{"_index":3124,"title":{},"body":{"classes/SVGLoader.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":3161,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rights",{"_index":3692,"title":{},"body":{"license.html":{}}}],["rotate",{"_index":2961,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rotatespeed",{"_index":2209,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotatex",{"_index":435,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatey",{"_index":436,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez",{"_index":437,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez'].some(propname",{"_index":507,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["rotation",{"_index":450,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotation/damping/panning",{"_index":636,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rotations",{"_index":3088,"title":{},"body":{"classes/SVGLoader.html":{}}}],["round",{"_index":3126,"title":{},"body":{"classes/SVGLoader.html":{}}}],["run",{"_index":3638,"title":{},"body":{"index.html":{}}}],["rx",{"_index":2897,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rx,ry",{"_index":2892,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rxjs",{"_index":268,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{}}}],["rxs",{"_index":2899,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ry",{"_index":2898,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rys",{"_index":2900,"title":{},"body":{"classes/SVGLoader.html":{}}}],["s",{"_index":2895,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["safely",{"_index":316,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["same",{"_index":3169,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sample",{"_index":3630,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":1199,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":3618,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1842,"title":{},"body":{"components/DotScreenComponent.html":{},"classes/SVGLoader.html":{}}}],["scaletofit",{"_index":3227,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":3250,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["scalex",{"_index":438,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scaley",{"_index":439,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scalez",{"_index":440,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["scalez'].some(propname",{"_index":511,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["scanline",{"_index":3022,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections",{"_index":3063,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.foreach",{"_index":3068,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.sort",{"_index":3065,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlinemaxx",{"_index":3057,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineminx",{"_index":3056,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scene",{"_index":346,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"index.html":{}}}],["scene'},{'name",{"_index":847,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":3259,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":1083,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1857,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":846,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scope",{"_index":2816,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager",{"_index":2817,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager.itemerror",{"_index":2827,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.parse",{"_index":2825,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.path",{"_index":2819,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.requestheader",{"_index":2821,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.withcredentials",{"_index":2823,"title":{},"body":{"classes/SVGLoader.html":{}}}],["screen",{"_index":1841,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":811,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":993,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1840,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1843,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":2210,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["search",{"_index":3030,"title":{},"body":{"classes/SVGLoader.html":{}}}],["searching",{"_index":553,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["see",{"_index":415,"title":{},"body":{"directives/AbstractModelLoader.html":{},"index.html":{}}}],["seems",{"_index":2452,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":1293,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":666,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["selector",{"_index":730,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["self",{"_index":1629,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["self.indexof(value",{"_index":1630,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["sell",{"_index":3699,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1881,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":3568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":655,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":979,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":980,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":705,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":706,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverfactory",{"_index":1662,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["servericonactorcomponent",{"_index":707,"title":{"components/ServerIconActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverref",{"_index":1665,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.icon",{"_index":1669,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.label",{"_index":1668,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.model",{"_index":1671,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.name",{"_index":1667,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverstandactorcomponent",{"_index":708,"title":{"components/ServerStandActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":883,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{}}}],["services",{"_index":3228,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["services/obj",{"_index":2404,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["set",{"_index":417,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":2586,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":2331,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2679,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2695,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setheight(height",{"_index":1408,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["seticon(icon",{"_index":3225,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setmaterialcolor(materialcolor",{"_index":3364,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setmaterials",{"_index":2433,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":2435,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(model",{"_index":2291,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["setmodel(newmodelurl",{"_index":413,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["setoverridematerialcolor(value",{"_index":3221,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":2680,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2697,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":3367,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":2401,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["settimeout",{"_index":349,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["settings",{"_index":400,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["settled",{"_index":1245,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":572,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":2121,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":1181,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1849,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":1217,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":1275,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":1274,"title":{},"body":{"components/BlurComponent.html":{}}}],["shall",{"_index":3709,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1957,"title":{},"body":{"components/FrameMeshComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["shape.holes.push",{"_index":3121,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shape.lineto",{"_index":1960,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":1961,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":1959,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shapepath",{"_index":2765,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["shapepath.userdata.style.fillrule",{"_index":3107,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapes",{"_index":3245,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["shapestoreturn",{"_index":3108,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn.push",{"_index":3122,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils",{"_index":2800,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils.isclockwise",{"_index":3100,"title":{},"body":{"classes/SVGLoader.html":{}}}],["show",{"_index":878,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":1120,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":3280,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":3282,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":3281,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":662,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["sides",{"_index":1297,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["signal",{"_index":309,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["similarly",{"_index":181,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["simple",{"_index":3594,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":146,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["simplepath",{"_index":3054,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox",{"_index":3064,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox.getcenter",{"_index":3061,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.identifier",{"_index":3070,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths",{"_index":3101,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.filter",{"_index":3102,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.foreach",{"_index":3109,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.map",{"_index":3106,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplex",{"_index":1507,"title":{},"body":{"components/DagreLayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["single",{"_index":2662,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":1129,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":3522,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":1944,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":1945,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skewx",{"_index":2972,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skewy",{"_index":2975,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skip",{"_index":3261,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":214,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":2068,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["slightly",{"_index":2937,"title":{},"body":{"classes/SVGLoader.html":{}}}],["smaapass",{"_index":1236,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":1237,"title":{},"body":{"injectables/BloomService.html":{}}}],["snyk",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":184,"title":{},"body":{"directives/AbstractCamera.html":{},"license.html":{}}}],["solid",{"_index":2138,"title":{},"body":{"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":3426,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":3428,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source/target",{"_index":262,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["sourcesub",{"_index":235,"title":{},"body":{"directives/AbstractConnector.html":{},"components/LineConnectorComponent.html":{}}}],["sp",{"_index":3103,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sp.points.length",{"_index":3104,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sphere",{"_index":852,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":851,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["split",{"_index":2949,"title":{},"body":{"classes/SVGLoader.html":{}}}],["square",{"_index":3129,"title":{},"body":{"classes/SVGLoader.html":{}}}],["src/app.component.html",{"_index":3619,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":3629,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":3644,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":3626,"title":{},"body":{"index.html":{}}}],["stack",{"_index":3077,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.length",{"_index":3078,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.pop",{"_index":3079,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.push",{"_index":3080,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stand",{"_index":850,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["standard",{"_index":3657,"title":{},"body":{"index.html":{}}}],["start",{"_index":897,"title":{},"body":{"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["start.x",{"_index":2919,"title":{},"body":{"classes/SVGLoader.html":{}}}],["start.y",{"_index":2921,"title":{},"body":{"classes/SVGLoader.html":{}}}],["started",{"_index":3590,"title":{"index.html":{},"license.html":{}},"body":{}}],["startloading",{"_index":294,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["statements",{"_index":3457,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":607,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/GridActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["stats",{"_index":877,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":1119,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":1049,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2708,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":876,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":1117,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":1607,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["step",{"_index":2413,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{}}}],["still",{"_index":587,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["stl",{"_index":854,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stlloader",{"_index":3309,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["stlloadercomponent",{"_index":853,"title":{"components/StlLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stop",{"_index":898,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{}}}],["stories",{"_index":3643,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":3595,"title":{},"body":{"index.html":{}}}],["storybook.js",{"_index":3646,"title":{},"body":{"index.html":{}}}],["strange",{"_index":2661,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":3123,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokecolor",{"_index":2771,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinecap",{"_index":2774,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinejoin",{"_index":2773,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokemiterlimit",{"_index":2775,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokewidth",{"_index":2772,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style",{"_index":2786,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill",{"_index":2860,"title":{},"body":{"classes/SVGLoader.html":{}}}],["styles",{"_index":2194,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":2197,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":3704,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":3697,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3668,"title":{},"body":{"index.html":{}}}],["subpaths",{"_index":2990,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subpaths.length",{"_index":2993,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subscribe",{"_index":905,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":924,"title":{},"body":{"injectables/AnimationService.html":{}}}],["subscribeevents",{"_index":2551,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscribers",{"_index":3439,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["subscription",{"_index":265,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["substantial",{"_index":3710,"title":{},"body":{"license.html":{}}}],["successful",{"_index":405,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["suffix",{"_index":324,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super",{"_index":2804,"title":{},"body":{"classes/SVGLoader.html":{}}}],["super(rendererservice",{"_index":771,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.afterinit",{"_index":328,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().add(obj",{"_index":348,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().remove(this.lazyobject",{"_index":344,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.ngafterviewinit",{"_index":1510,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":383,"title":{},"body":{"directives/AbstractMesh.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":279,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/MapControlsComponent.html":{}}}],["super.ngoninit",{"_index":1424,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["super.startloading",{"_index":422,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["super.updateparent",{"_index":3262,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":3736,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":3664,"title":{},"body":{"index.html":{}}}],["svg",{"_index":856,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgangle",{"_index":2924,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader",{"_index":2745,"title":{"classes/SVGLoader.html":{}},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["svgloader.getstrokestyle",{"_index":3147,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.parse",{"_index":3148,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.pointstostrokewithbuffers",{"_index":3162,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloadercomponent",{"_index":855,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":1068,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["sweep_flag",{"_index":2908,"title":{},"body":{"classes/SVGLoader.html":{}}}],["switch",{"_index":2832,"title":{},"body":{"classes/SVGLoader.html":{}}}],["syncgraph",{"_index":1374,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphcontainer",{"_index":1461,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphcontainer(g",{"_index":1496,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphnodes",{"_index":1375,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphnodes(g",{"_index":1396,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["t2",{"_index":2994,"title":{},"body":{"classes/SVGLoader.html":{}}}],["table",{"_index":3539,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3538,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":242,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DirectionalLightComponent.html":{},"components/LineConnectorComponent.html":{}}}],["targetopacity",{"_index":1713,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["targetsub",{"_index":236,"title":{},"body":{"directives/AbstractConnector.html":{},"components/LineConnectorComponent.html":{}}}],["template",{"_index":734,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":2614,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["temptransform0",{"_index":2943,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1",{"_index":2968,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1.identity().translate",{"_index":2964,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2",{"_index":2967,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2.identity().rotate",{"_index":2965,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3",{"_index":2970,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3.multiplymatrices",{"_index":2966,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_1",{"_index":3179,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_2",{"_index":3180,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_3",{"_index":3181,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_4",{"_index":3182,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_5",{"_index":3183,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_6",{"_index":3184,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_7",{"_index":3185,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.set",{"_index":2981,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.x",{"_index":2986,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.y",{"_index":2987,"title":{},"body":{"classes/SVGLoader.html":{}}}],["test",{"_index":3613,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3639,"title":{},"body":{"index.html":{}}}],["text",{"_index":858,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":3373,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":1082,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":1125,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":1081,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":3405,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":857,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":859,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":2454,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texture2d",{"_index":1203,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["texturepath",{"_index":2386,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["texturepath(newtexturepath",{"_index":2410,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":2393,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["theta",{"_index":2923,"title":{},"body":{"classes/SVGLoader.html":{}}}],["thetalength",{"_index":1344,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":1345,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":1946,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["thickness'].some(propname",{"_index":1965,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._height",{"_index":1411,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this._materialcolor",{"_index":3371,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._model",{"_index":420,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["this._overridematerialcolor",{"_index":3229,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":3374,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":2123,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.actorclick.emit",{"_index":685,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["this.actorrepository.getcomponentfactory(id",{"_index":1652,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.addnode",{"_index":1425,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.addpass(renderpass",{"_index":1883,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.afterinit",{"_index":521,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.align",{"_index":1514,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.animate",{"_index":1739,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":1740,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":921,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":919,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":918,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1741,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1776,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":2273,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1742,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.start",{"_index":1743,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":912,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":913,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1832,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":231,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.applymaterial",{"_index":386,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.applyposition",{"_index":164,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.applyrotation",{"_index":508,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyscale",{"_index":512,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyshadowprops(mesh",{"_index":1320,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.applytranslation",{"_index":510,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.applyzaxisup",{"_index":163,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.aspect",{"_index":2743,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":3442,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":2252,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":2254,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":3382,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":3385,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":3384,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":3383,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2737,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2736,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2713,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":1223,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":1227,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":1228,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":1226,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":1248,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":1233,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":1225,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2711,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":1206,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":1252,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.calculateaspectratio(canvas",{"_index":2744,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":172,"title":{},"body":{"directives/AbstractCamera.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":2510,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":2493,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":2361,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.layers.enable(this.layer",{"_index":161,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.layers.enableall",{"_index":162,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.left",{"_index":2490,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":2495,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.position.set",{"_index":173,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.right",{"_index":2491,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":2492,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.up.set(0",{"_index":188,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2710,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":2494,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":2485,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2657,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2659,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":380,"title":{},"body":{"directives/AbstractMesh.html":{},"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.cdref.detectchanges",{"_index":1415,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.cdref['destroyed",{"_index":1414,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.centered",{"_index":1527,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":513,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.childcameras",{"_index":643,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first",{"_index":644,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first.camera",{"_index":2247,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.childlren",{"_index":561,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.filter(i",{"_index":562,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.indexof(object",{"_index":547,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.push(object",{"_index":539,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.splice(index",{"_index":548,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.click.emit",{"_index":2564,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":680,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":220,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":225,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":1892,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1890,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":227,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":2715,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1896,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1878,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1886,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composition",{"_index":1431,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.configurelisteners",{"_index":651,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.constructor.name",{"_index":537,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.container.createcomponent(factory",{"_index":1678,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.container.createcomponent(nodefactory",{"_index":1657,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.contentprojection",{"_index":1331,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":1332,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":624,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":633,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{}}}],["this.controls.addeventlistener('end",{"_index":640,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.addeventlistener('start",{"_index":638,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.autorotate",{"_index":2251,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":2253,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":2257,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dispose",{"_index":631,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.enabledamping",{"_index":2255,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":2263,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":2265,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":2269,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":2261,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":2267,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":2249,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":2274,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":2241,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":2259,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":2271,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":2244,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":3300,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcamera",{"_index":159,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.createcomposition(i",{"_index":1641,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createedge(i",{"_index":1645,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createlinemesh",{"_index":270,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.createnode(i",{"_index":1643,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.curvesegments",{"_index":3381,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dagrelayout",{"_index":1416,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getchildren().push(this",{"_index":1428,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel",{"_index":1426,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes",{"_index":1439,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.filter(i",{"_index":1440,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.push",{"_index":1429,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.refreshlayout",{"_index":1433,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.removechildbyname(this.name",{"_index":1438,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.updated.subscribe(this.syncgraph",{"_index":1422,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dampingfactor",{"_index":2258,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":1247,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":1256,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashcolor",{"_index":1754,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashincrement",{"_index":1772,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashsize",{"_index":2186,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.defaultdpi",{"_index":2808,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.defaultid",{"_index":718,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":2815,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.depth",{"_index":1315,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":1318,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthwrite",{"_index":378,"title":{},"body":{"directives/AbstractMesh.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.destroyall",{"_index":1637,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.disable",{"_index":229,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1929,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":2521,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":2048,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.edges",{"_index":1749,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1755,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1758,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1756,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1757,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1774,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edgesep",{"_index":1517,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.enable",{"_index":228,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":915,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":2256,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1922,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1927,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":1238,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":1240,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":1241,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":1239,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":1242,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":1250,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1829,"title":{},"body":{"components/DofComponent.html":{}}}],["this.font.load(this.fonturl",{"_index":3376,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":2508,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.gapsize",{"_index":2188,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":2342,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":2357,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getgeometry",{"_index":1969,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.getlayout(model",{"_index":1576,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.getlineposition(event",{"_index":2009,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":388,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getnodecomponent((node.model",{"_index":1663,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.getobject",{"_index":384,"title":{},"body":{"directives/AbstractMesh.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.getobject().background",{"_index":3264,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getobject().material",{"_index":387,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getpositions",{"_index":2175,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.gettextmesh(font",{"_index":3377,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.graph",{"_index":1522,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel",{"_index":1509,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel.layout",{"_index":1513,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphupdated",{"_index":1421,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.graphupdated?.unsubscribe",{"_index":1437,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":2018,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":2012,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":2010,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groundcolor",{"_index":2073,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.groups",{"_index":2362,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":2363,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":2337,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":1314,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":1317,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hidedash",{"_index":1773,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.hightsegments",{"_index":3278,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":1737,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1744,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.iconservice.getsource(icon",{"_index":3233,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1872,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":1243,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1763,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":223,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.injector.get(dagrelayoutcomponent",{"_index":1417,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.instances",{"_index":1692,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.foreach(i",{"_index":1688,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(compositionref",{"_index":1704,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(edgeref",{"_index":1686,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(noderef",{"_index":1661,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(serverref",{"_index":1673,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.intensity",{"_index":774,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isccw",{"_index":3234,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.isready",{"_index":2339,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":2351,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":2053,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":2062,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":2064,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.label",{"_index":1430,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.layer",{"_index":160,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{}}}],["this.layout",{"_index":1511,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.lazyobject",{"_index":343,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.line.material.color",{"_index":2191,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.material.needsupdate",{"_index":2193,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.linewidth",{"_index":2183,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.list.get(id",{"_index":721,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":719,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":649,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":2248,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":2441,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.load(this.model",{"_index":2449,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":2443,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loadlazyobject().then(obj",{"_index":338,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.loop",{"_index":3435,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.marginx",{"_index":1519,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.marginy",{"_index":1520,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.material",{"_index":377,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":1766,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1765,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materialcolor",{"_index":2182,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.materials[obj.uuid",{"_index":1254,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.matline",{"_index":2177,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.maxblur",{"_index":1836,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdistance",{"_index":2264,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":2266,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxx",{"_index":3248,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxy",{"_index":3249,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxzoom",{"_index":2270,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":2262,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":2268,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.model",{"_index":2297,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.modelpath",{"_index":2295,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.modelservice.getsource(model",{"_index":2294,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.mouseenter.emit",{"_index":2562,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":2560,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":2422,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":2424,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":3437,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.name",{"_index":332,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.near",{"_index":1926,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.newobject3dinstance",{"_index":519,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.nodesep",{"_index":1516,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.noholes",{"_index":3236,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.object",{"_index":421,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.object.add(object.getobject",{"_index":540,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.layers.set(this.layer",{"_index":520,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent",{"_index":515,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent.remove(this.object",{"_index":517,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.position.set",{"_index":529,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.remove(object.getobject",{"_index":550,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.rotation.set",{"_index":524,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.scale.set",{"_index":533,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.objloader.load(this.model",{"_index":2429,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.objloader.setmaterials(materialcreator",{"_index":2427,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.offset",{"_index":2054,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":2314,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":2315,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":2545,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":2546,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":2547,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":2548,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":2312,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":2313,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2651,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2652,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":2316,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":2317,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":2189,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.openended",{"_index":1363,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.overridematerialcolor",{"_index":3239,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.panspeed",{"_index":2250,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":522,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/FogComponent.html":{}}}],["this.parent.addchild(this",{"_index":523,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parent.getobject",{"_index":1918,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1919,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.removechild(this",{"_index":516,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parentinitialized",{"_index":329,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.parentscene",{"_index":1917,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parseandcreate",{"_index":1631,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.pass",{"_index":230,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":224,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":1273,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1826,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1833,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1830,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1835,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":2328,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.playbackerror",{"_index":3448,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.positionx",{"_index":174,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positiony",{"_index":175,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positionz",{"_index":176,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.preservedrawingbuffer",{"_index":2655,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.radialsegments",{"_index":1362,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":3395,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":1361,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.rankdir",{"_index":1515,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranker",{"_index":1521,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranksep",{"_index":1518,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":2367,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":2549,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":2570,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.isenabled",{"_index":637,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.pause",{"_index":639,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.resume",{"_index":641,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":2533,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":382,"title":{},"body":{"directives/AbstractMesh.html":{},"components/TextMeshComponent.html":{}}}],["this.recursionbyname(child",{"_index":560,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.recursionbyname(this",{"_index":555,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.register('barrel",{"_index":713,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":712,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":714,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":716,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":711,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":715,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":2302,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":2094,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":2102,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":2096,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":2099,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":2090,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":3299,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.removenode",{"_index":1434,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.render",{"_index":2734,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":222,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1838,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.getwebglrenderer",{"_index":1875,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2654,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":171,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2669,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcamera(this",{"_index":166,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":1874,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1887,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2725,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1879,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2656,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":722,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.resolver.resolvecomponentfactory(dagrecompositioncomponent",{"_index":1694,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagreedgecomponent",{"_index":1676,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrenodecomponent",{"_index":1655,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resourcepath",{"_index":2411,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.restorematerial(i",{"_index":1249,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.rotatespeed",{"_index":2242,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.rotatex",{"_index":525,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatey",{"_index":526,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatez",{"_index":527,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalex",{"_index":534,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scaley",{"_index":535,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalez",{"_index":536,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scene",{"_index":1205,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2724,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1924,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2712,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":1246,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1884,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1885,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":2260,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":2344,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":2346,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.setupcontrols",{"_index":632,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.size",{"_index":2057,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":1951,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":1952,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.skycolor",{"_index":2072,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.solid",{"_index":2185,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.source",{"_index":271,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.source.changed.subscribe",{"_index":275,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub",{"_index":274,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub?.unsubscribe",{"_index":280,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.startloading",{"_index":330,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":3297,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":3303,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":3302,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":3298,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":3283,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2717,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.status.emit(false",{"_index":1651,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.status.emit(true",{"_index":1646,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.stop",{"_index":1771,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.subscribe",{"_index":2318,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribeevents",{"_index":2550,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.svgloader.load(this.model",{"_index":3241,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.syncgraph",{"_index":1419,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraph.bind(this",{"_index":1420,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraphcontainer(this.graph",{"_index":1524,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.syncgraphnodes(this.dagrelayout.getgraph",{"_index":1453,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.target",{"_index":272,"title":{},"body":{"directives/AbstractConnector.html":{},"components/DirectionalLightComponent.html":{}}}],["this.target.changed.subscribe",{"_index":278,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetopacity",{"_index":1775,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.targetsub",{"_index":277,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetsub?.unsubscribe",{"_index":281,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.text",{"_index":3379,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.thetalength",{"_index":1365,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":1364,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":1953,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":3296,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":2124,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.translatelabely",{"_index":1412,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.translatex",{"_index":530,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatey",{"_index":531,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatez",{"_index":532,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.trytofindgeometry",{"_index":1738,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":3396,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":3397,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":3429,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":2319,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":2565,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updatebaseinfo(g",{"_index":1592,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2733,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updated.emit",{"_index":1525,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.updateedges(g",{"_index":1595,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1578,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatelinegeometry",{"_index":276,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.updateparent",{"_index":551,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.updatezoom",{"_index":2483,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":3445,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":3444,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":3430,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":3433,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":3431,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":3443,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":3434,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":3436,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":3449,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play().then",{"_index":3446,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":3450,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videoplaybackstarted",{"_index":3447,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":3427,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.watchobjects",{"_index":273,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.webglrenderer",{"_index":647,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2731,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2716,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.renderpane",{"_index":650,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2730,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2721,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2722,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2742,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2727,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2726,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2728,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.width",{"_index":1449,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.widthsegments",{"_index":1316,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.yaml",{"_index":1635,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.zaxisup",{"_index":177,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.zoom",{"_index":2486,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":2245,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":155,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(this.color",{"_index":772,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":1133,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":1135,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":1313,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":1997,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":2023,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":2021,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["three.camera",{"_index":1160,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.clock",{"_index":2162,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color(this.background",{"_index":3260,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color(this.materialcolor",{"_index":2192,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color.getstyle",{"_index":3125,"title":{},"body":{"classes/SVGLoader.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":1360,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":1796,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1751,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":2307,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(this.color",{"_index":1925,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":3352,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1938,"title":{},"body":{"injectables/FontService.html":{}}}],["three.gridhelper",{"_index":2045,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.gridhelper(this.size",{"_index":2047,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":3242,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":2071,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":2370,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":593,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["three.layers",{"_index":1167,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.line(geometry",{"_index":2025,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":2026,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":1753,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1752,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":373,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":371,"title":{},"body":{"directives/AbstractMesh.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":1319,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.getgeometry",{"_index":1963,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":1169,"title":{},"body":{"injectables/BloomService.html":{},"components/VideoMeshComponent.html":{}}}],["three.object3d",{"_index":251,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/TextMeshComponent.html":{}}}],["three.objectloader",{"_index":2447,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":2380,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":2481,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2729,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":2507,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry",{"_index":2517,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":2515,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(this.color",{"_index":2520,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":2309,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.scene",{"_index":1159,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":1230,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.shape",{"_index":1958,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.shapebuffergeometry",{"_index":1948,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":1962,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":3277,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":3380,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":3398,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector2(window.innerwidth",{"_index":1211,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector3",{"_index":3585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":2496,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(this.maxx",{"_index":3251,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.vector3(x",{"_index":2366,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":3438,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":2705,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":612,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":3292,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/lines/line2",{"_index":2170,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linegeometry",{"_index":2172,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linematerial",{"_index":2173,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":2403,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":2439,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/stlloader",{"_index":3311,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1825,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":1180,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":217,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":1177,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":1182,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":1179,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1848,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":1184,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":1272,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":1270,"title":{},"body":{"components/BlurComponent.html":{}}}],["three@types",{"_index":2179,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["threejs",{"_index":3316,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":3637,"title":{},"body":{"index.html":{}}}],["threejs/videos/ui/retro_futuristic_ui_360p.mp4",{"_index":3454,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["throw",{"_index":645,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/DagreYamlParserComponent.html":{}}}],["thus",{"_index":629,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["time",{"_index":466,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["timescale",{"_index":2131,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["tindex",{"_index":2950,"title":{},"body":{"classes/SVGLoader.html":{}}}],["todo",{"_index":165,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":3285,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":3731,"title":{},"body":{"license.html":{}}}],["torus",{"_index":861,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":860,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":2355,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1781,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["transform(degrees",{"_index":1782,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":2527,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["transform.premultiply",{"_index":2940,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transform.translate",{"_index":2947,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformpath",{"_index":2862,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack",{"_index":2868,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.length",{"_index":2869,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.push",{"_index":2941,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts",{"_index":2948,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts.length",{"_index":2951,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext",{"_index":2952,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.indexof",{"_index":2956,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.length",{"_index":2958,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transfvec2",{"_index":2979,"title":{},"body":{"classes/SVGLoader.html":{}}}],["translate",{"_index":462,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatelabelx",{"_index":1975,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["translatelabely",{"_index":1371,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["translatex",{"_index":441,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatey",{"_index":442,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez",{"_index":443,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez'].some(propname",{"_index":509,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["transparent",{"_index":2028,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["traversechildnodes",{"_index":2831,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tree",{"_index":725,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["triangles",{"_index":3156,"title":{},"body":{"classes/SVGLoader.html":{}}}],["trigger",{"_index":333,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/VideoMeshComponent.html":{}}}],["trim",{"_index":2953,"title":{},"body":{"classes/SVGLoader.html":{}}}],["true",{"_index":170,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["truncated",{"_index":3135,"title":{},"body":{"classes/SVGLoader.html":{}}}],["try",{"_index":1636,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["trytofindgeometry",{"_index":1708,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tube",{"_index":3389,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":3390,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tx",{"_index":2944,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ty",{"_index":2946,"title":{},"body":{"classes/SVGLoader.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":541,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["typically",{"_index":464,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["typings",{"_index":2417,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["u",{"_index":3158,"title":{},"body":{"classes/SVGLoader.html":{}}}],["undefined",{"_index":302,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractOrbitControls.html":{},"modules/AtftModule.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["underlying",{"_index":2641,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":1054,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":1198,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":1231,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":2810,"title":{},"body":{"classes/SVGLoader.html":{}}}],["unknown",{"_index":2398,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["unless",{"_index":315,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{}}}],["unrealbloompass",{"_index":1178,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":1210,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":1436,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":2555,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["unused",{"_index":1276,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["up",{"_index":180,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{},"index.html":{}}}],["update",{"_index":1432,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["updateanimation",{"_index":885,"title":{},"body":{"injectables/AnimationService.html":{}}}],["updateaspectratio",{"_index":125,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":150,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatebaseinfo",{"_index":1560,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1567,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2681,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2699,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":259,"title":{},"body":{"directives/AbstractConnector.html":{},"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateedges",{"_index":1561,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1569,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1562,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1571,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":239,"title":{},"body":{"directives/AbstractConnector.html":{},"components/LineConnectorComponent.html":{}}}],["updateparent",{"_index":434,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["updatezoom",{"_index":2465,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upon",{"_index":404,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["uri",{"_index":399,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"classes/SVGLoader.html":{}}}],["usage",{"_index":3605,"title":{},"body":{"index.html":{}}}],["use",{"_index":2409,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":887,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["usednode",{"_index":2853,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usednodeid",{"_index":2851,"title":{},"body":{"classes/SVGLoader.html":{}}}],["useful",{"_index":3177,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usefull",{"_index":2540,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":3593,"title":{},"body":{"index.html":{}}}],["usually",{"_index":398,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["util",{"_index":375,"title":{},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/fix",{"_index":3368,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["utils",{"_index":1500,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["utils.ts",{"_index":1555,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1566,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:32",{"_index":1568,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:43",{"_index":1570,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:51",{"_index":1572,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:57",{"_index":1564,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":500,"title":{},"body":{"directives/AbstractObject3D.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":448,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["uv",{"_index":1191,"title":{},"body":{"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["uvs",{"_index":2792,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ux",{"_index":2927,"title":{},"body":{"classes/SVGLoader.html":{}}}],["uxactormodule",{"_index":3399,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["uy",{"_index":2928,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v",{"_index":3159,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2",{"_index":2980,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.set",{"_index":2985,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.x",{"_index":2982,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.y",{"_index":2983,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v4",{"_index":499,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["valid",{"_index":3176,"title":{},"body":{"classes/SVGLoader.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":622,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["var",{"_index":777,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["variable",{"_index":3464,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3740,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1277,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["varying",{"_index":1188,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":1189,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":1195,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":3631,"title":{},"body":{"index.html":{}}}],["vector2",{"_index":2801,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector2d",{"_index":3145,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector3",{"_index":2802,"title":{},"body":{"classes/SVGLoader.html":{}}}],["version",{"_index":3658,"title":{},"body":{"index.html":{}}}],["vertexcolors",{"_index":2184,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["vertexoffset",{"_index":2793,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vertexshader",{"_index":1187,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":1269,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":3625,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":2055,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["very",{"_index":2539,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":3614,"title":{},"body":{"index.html":{}}}],["video",{"_index":863,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":3414,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":862,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videoplaybackstarted",{"_index":3409,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videosrc",{"_index":3412,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":1329,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":2631,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('container",{"_index":1544,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["viewchild('contentprojection",{"_index":1328,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":2004,"title":{},"body":{"components/GridActorComponent.html":{}}}],["viewcontainerref",{"_index":1546,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":1190,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vx",{"_index":2929,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vy",{"_index":2930,"title":{},"body":{"classes/SVGLoader.html":{}}}],["want",{"_index":3621,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":3717,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3712,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3640,"title":{},"body":{"index.html":{}}}],["watchobjects",{"_index":241,"title":{},"body":{"directives/AbstractConnector.html":{},"components/LineConnectorComponent.html":{}}}],["wavefront",{"_index":2381,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":3600,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":2638,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":570,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"injectables/RendererService.html":{}}}],["well",{"_index":260,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["whether",{"_index":310,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/TextMeshComponent.html":{},"license.html":{}}}],["whose",{"_index":579,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["width",{"_index":1286,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":2122,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":1287,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["wiki",{"_index":1556,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window",{"_index":590,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["window.addeventlistener('click",{"_index":2321,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":2320,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":2322,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.console.error",{"_index":3743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.innerheight",{"_index":1212,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":1221,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":2325,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":2324,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":2326,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":2621,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":2625,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["witdh",{"_index":3139,"title":{},"body":{"classes/SVGLoader.html":{}}}],["within",{"_index":2394,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":3688,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2666,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":864,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":710,"title":{"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":3583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writing",{"_index":3171,"title":{},"body":{"classes/SVGLoader.html":{}}}],["written",{"_index":3173,"title":{},"body":{"classes/SVGLoader.html":{}}}],["wrong",{"_index":2178,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["x",{"_index":455,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":2061,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["x1p",{"_index":2912,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x1ps",{"_index":2903,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x_axis_rotation",{"_index":2917,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xml",{"_index":2784,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xyz",{"_index":528,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["y",{"_index":456,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":2063,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y1p",{"_index":2910,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y1ps",{"_index":2902,"title":{},"body":{"classes/SVGLoader.html":{}}}],["yaml",{"_index":803,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["yaml'].some(propname",{"_index":1633,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yaml.parse(this.yaml",{"_index":1638,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yes",{"_index":2593,"title":{},"body":{"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":178,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["z]*/ig",{"_index":2879,"title":{},"body":{"classes/SVGLoader.html":{}}}],["z][^a",{"_index":2878,"title":{},"body":{"classes/SVGLoader.html":{}}}],["zaxisup",{"_index":131,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["zone.js",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":932,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":2484,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":2211,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        defaultProvider\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (await cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      return cacheHit;\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractCamera.html":{"url":"directives/AbstractCamera.html","title":"directive - AbstractCamera","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractCamera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/camera/abstract-camera.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPosition()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyZAxisUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\n\n@Directive()\nexport abstract class AbstractCamera implements OnInit, OnChanges {\n\n  camera: T;\n\n  @Input() positionX: number;\n  @Input() positionY: number;\n  @Input() positionZ: number;\n\n  @Input() zAxisUp = false;\n\n  @Input() layer: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    // console.log('AbstractCamera.constructor');\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractCamera.ngAfterViewInit');\n    this.createCamera();\n\n    if (this.layer) {\n      this.camera.layers.enable(this.layer);\n    } else {\n      this.camera.layers.enableAll();\n    }\n\n    this.applyZAxisUp();\n    this.applyPosition();\n\n    // TODO: Directive?\n    this.rendererService.setCamera(this);\n  }\n\n  protected abstract createCamera(): void;\n\n  public abstract updateAspectRatio(aspect: number);\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let mustRerender = false;\n\n    if (['positionX', 'positionY', 'positionZ'].some(propName => propName in changes)) {\n      this.applyPosition();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n\n  }\n\n  protected applyPosition() {\n    if (this.camera) {\n      this.camera.position.set(\n        this.positionX || 0,\n        this.positionY || 0,\n        this.positionZ || 0,\n      );\n    }\n  }\n\n  protected applyZAxisUp() {\n    if (this.camera && this.zAxisUp) {\n      // Z axis up (similarly to 3D Creation Software: Blender, 3DS Max)\n      this.camera.up.set(0, 0, 1);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractComposeEffect.html":{"url":"directives/AbstractComposeEffect.html","title":"directive - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n                            OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        applyChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        initPasses\n                        \n                    \n                \n            \n            \n                \n                    \n                    initPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Directive()\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses();\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractConnector.html":{"url":"directives/AbstractConnector.html","title":"directive - AbstractConnector","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractConnector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/abstract-connector.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                sourceSub\n                            \n                            \n                                    Protected\n                                targetSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                source\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createLineMesh\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:46\n                \n            \n\n\n            \n                \n                    Create line mesh\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        updateLineGeometry\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:52\n                \n            \n\n\n            \n                \n                    If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        watchObjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchObjects()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sourceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        targetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {Subscription} from 'rxjs';\n\n@Directive()\nexport abstract class AbstractConnector extends AbstractObject3D implements OnDestroy {\n\n  @Input()\n  source: AbstractObject3D;\n\n  @Input()\n  target: AbstractObject3D;\n\n  protected sourceSub: Subscription;\n  protected targetSub: Subscription;\n\n  protected newObject3DInstance(): THREE.Object3D {\n    const line = this.createLineMesh();\n    if (this.source && this.target) {\n      this.watchObjects();\n    }\n    return line;\n  }\n\n  private watchObjects() {\n    this.sourceSub = this.source.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n\n    this.targetSub = this.target.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n  }\n\n  public ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.sourceSub?.unsubscribe();\n    this.targetSub?.unsubscribe();\n  }\n\n  /**\n   * Create line mesh\n   */\n  abstract createLineMesh(): T;\n\n  /**\n   * If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n   * // TODO: Calculate only when source/target positions were changed\n   */\n  abstract updateLineGeometry(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractEmptyDirective.html":{"url":"directives/AbstractEmptyDirective.html","title":"directive - AbstractEmptyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractEmptyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-empty-directive.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-empty-directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Directive()\nexport abstract class AbstractEmptyDirective extends AbstractObject3D {\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractLazyObject3D.html":{"url":"directives/AbstractLazyObject3D.html","title":"directive - AbstractLazyObject3D","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractLazyObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:31\n                \n            \n\n\n            \n                \n                    Abstract method for lazy loading\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:24\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:19\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, OnDestroy} from '@angular/core';\n\nimport {AbstractObject3D} from './abstract-object-3d';\n\nimport * as THREE from 'three';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AbstractLazyObject3D extends AbstractObject3D implements OnDestroy {\n\n  /**\n   * Flag to signal whether the parentScene class instance AbstractObject3D called the\n   * overwritten method {@link AbstractModelLoader#afterInit} yet.\n   *\n   * Unless that method was called, no methods and properties of {@link AbstractObject3D}\n   * may be safely accessed, especially {@link AbstractObject3D#addChild} and\n   * {@link AbstractObject3D.renderer}.\n   */\n  private parentInitialized = false;\n\n  /**\n   * This is reference to lazy loaded Object3D (async after init)\n   */\n  protected lazyObject: THREE.Object3D | undefined;\n\n\n  /**\n   * Abstract method for lazy loading\n   *\n   */\n  protected abstract loadLazyObject(): Promise;\n\n  protected afterInit() {\n    super.afterInit();\n    this.parentInitialized = true;\n    this.startLoading();\n  }\n\n  protected startLoading() {\n    // console.log('AbstractLazyObject3D.startLoading', this.name + ' / '+this.parentInitialized);\n    // Trigger model acquisition now that the parentScene has been initialized.\n    this.loadLazyObject().then(obj => {\n      // console.log('AbstractLazyObject3D loaded');\n      // remove old if exists\n      if (this.lazyObject) {\n        super.getObject().remove(this.lazyObject);\n      }\n\n      // add lazy object to scene\n      this.lazyObject = obj;\n      super.getObject().add(obj);\n\n      this.rendererService.render();\n      setTimeout(() => {\n        this.rendererService.render();\n      }, 10);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.lazyObject) {\n      super.getObject().remove(this.lazyObject);\n    }\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    // Just empty object (holder of lazy object)\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractMesh.html":{"url":"directives/AbstractMesh.html","title":"directive - AbstractMesh","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Input, OnChanges, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedMaterial} from '../../util';\n\n@Directive()\nexport abstract class AbstractMesh extends AbstractObject3D implements OnChanges {\n\n  @Input()\n  material: string;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected applyShadowProps(mesh: THREE.Mesh) {\n    mesh.castShadow = this.castShadow;\n    mesh.receiveShadow = this.receiveShadow;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.getObject()) {\n      return;\n    }\n\n    let mustRerender = false;\n    if (['material', 'materialColor', 'depthWrite'].some(propName => propName in changes)) {\n      this.applyMaterial();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  public applyMaterial() {\n    this.getObject().material = this.getMaterial();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractModelLoader.html":{"url":"directives/AbstractModelLoader.html","title":"directive - AbstractModelLoader","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractModelLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/abstract-model-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                Helper parentScene class for model loader.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _model\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:32\n                                \n                            \n                    \n                        \n                                The current model data source (usually a URI).\n\n\n                        \n                    \n\n                \n                    \n                        setmodel(newModelUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                                \n                            \n                    \n                        \n                                The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newModelUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\n\n/**\n * Helper parentScene class for model loader.\n *\n * @see ObjLoaderComponent\n */\n@Directive()\nexport abstract class AbstractModelLoader extends AbstractLazyObject3D {\n\n  protected _model: string;\n\n  /**\n   * The model data source (usually a URI).\n   * Settings this property only hides the previous model upon successful\n   * loading of the new one. This especially means that if the new data source\n   * is invalid, the old model will *not* be removed from the scene.\n   */\n  @Input()\n  public set model(newModelUrl: string) {\n    // console.log('AbstractModelLoader.model', newModelUrl);\n    this._model = newModelUrl;\n    if (this.object) {\n      super.startLoading();\n    }\n  }\n\n  /**\n   * The current model data source (usually a URI).\n   */\n  public get model() {\n    return this._model;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractObject3D.html":{"url":"directives/AbstractObject3D.html","title":"directive - AbstractObject3D","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-object-3d.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnChanges\n                            OnDestroy\n                            OnInit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:24\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:31\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:44\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {v4 as uuidv4} from 'uuid';\n\n@Directive()\nexport abstract class AbstractObject3D implements AfterViewInit, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateX: number;\n  @Input() rotateY: number;\n  @Input() rotateZ: number;\n\n  /**\n   * Translate the geometry. This is typically done as a one time operation, and not during a loop.\n   */\n  @Input() translateX: number;\n  @Input() translateY: number;\n  @Input() translateZ: number;\n\n\n  @Input() scaleX = 1;\n  @Input() scaleY = 1;\n  @Input() scaleZ = 1;\n\n  @Input() name: string = uuidv4(); // if not provided, then auto-generate\n\n  @Input() layer = 0;\n\n  @Output() changed = new EventEmitter();\n\n  protected childlren: Array> = [];\n\n  protected object: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    // console.log('AbstractObject3D.constructor', this.name);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['rotateX', 'rotateY', 'rotateZ'].some(propName => propName in changes)) {\n      this.applyRotation();\n      modified = true;\n    }\n    if (['translateX', 'translateY', 'translateZ'].some(propName => propName in changes)) {\n      this.applyTranslation();\n      modified = true;\n    }\n\n    if (['scaleX', 'scaleY', 'scaleZ'].some(propName => propName in changes)) {\n      this.applyScale();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n  public ngOnDestroy() {\n    // console.log('AbstractObject3D.OnDestroy', this.name);\n    if (this.object && this.object.parent) {\n      this.parent.removeChild(this);\n      // this.object.parent.remove(this.object);\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractObject3D.ngOnInit', this.name);\n    this.object = this.newObject3DInstance();\n    if (this.layer) {\n      this.object.layers.set(this.layer);\n    }\n\n    this.applyTranslation();\n    this.applyRotation();\n    this.applyScale();\n\n    this.afterInit();\n  }\n\n  public updateParent(): void {\n    if (this.parent) {\n      this.parent.addChild(this);\n      this.rendererService.render();\n    }\n  }\n\n  public applyRotation(): void {\n    this.object.rotation.set(\n      this.rotateX || 0,\n      this.rotateY || 0,\n      this.rotateZ || 0,\n      'XYZ'\n    );\n  }\n\n  public applyTranslation(): void {\n    this.object.position.set(\n      this.translateX || 0,\n      this.translateY || 0,\n      this.translateZ || 0\n    );\n  }\n\n  public applyScale(): void {\n    this.object.scale.set(\n      this.scaleX || 0,\n      this.scaleY || 0,\n      this.scaleZ || 0\n    );\n  }\n\n  public addChild(object: AbstractObject3D): void {\n    // (this.constructor.name + ' addChild ' + object, this.object);\n    if (this.object) {\n      // console.log('AbstractObject3D.addChild', this.name);\n      this.childlren.push(object);\n      this.object.add(object.getObject());\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected afterInit() {\n    // Base abstract class\n  }\n\n  public removeChild(object: AbstractObject3D): void {\n    if (this.object && object) {\n      // console.log('AbstractObject3D.removeChild', this.name);\n\n      // Remove from children:\n      const index = this.childlren.indexOf(object, 0);\n      if (index > -1) {\n        this.childlren.splice(index, 1);\n      }\n\n      // Remove from THREE graph:\n      this.object.remove(object.getObject());\n    }\n  }\n\n  public getObject(): T {\n    return this.object;\n  }\n\n  protected abstract newObject3DInstance(): T;\n\n  public ngAfterViewInit(): void {\n    this.updateParent();\n  }\n\n  public findByName(name: string) {\n    // console.log('AbstractObject3D.findByName: Searching name', name);\n    const res = this.recursionByName(this, name);\n    // console.log('AbstractObject3D.findByName: result', res);\n    return res;\n  }\n\n  protected recursionByName(currentNode: AbstractObject3D, name) {\n    if (currentNode.object && currentNode.name === name) {\n      return currentNode;\n    }\n    let node;\n    currentNode.childlren.some(child => node = this.recursionByName(child, name));\n    return node;\n  }\n\n\n  public getChildren() {\n    return this.childlren;\n  }\n\n  public removeChildByName(name: string) {\n    this.childlren = this.childlren.filter(i => i.name !== name);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractOrbitControls.html":{"url":"directives/AbstractOrbitControls.html","title":"directive - AbstractOrbitControls","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractOrbitControls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/control/abstract-orbit-controls.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:22\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    configureListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, ContentChild, ContentChildren, ElementRef, Input, OnChanges, OnDestroy, QueryList, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {RendererCanvasComponent} from '../renderer/renderer-canvas.component';\n\n\n@Directive()\nexport abstract class AbstractOrbitControls implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ContentChildren(AbstractCamera, {descendants: true}) childCameras: QueryList>;\n  @ContentChild(RendererCanvasComponent, {static: false}) webGlRenderer: RendererCanvasComponent;\n  /**\n   * The element on whose native element the orbit control will listen for mouse events.\n   *\n   * Note that keyboard events are still listened for on the global window object, this is\n   * a known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n   */\n  @Input()\n  public listeningControlElement: ElementRef;\n\n  protected controls: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    // console.log('OrbitControlsComponent.constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the THREE.js OrbitControls are not set up yet, we do not need to enableFog\n    // anything as they will pick the new values from the @Input properties automatically\n    // upon creation.\n    if (!this.controls) {\n      return;\n    }\n\n    if (changes['listeningControlElement']) {\n      // The DOM element the OrbitControls listen on cannot be changed once an\n      // OrbitControls object is created. We thus need to recreate it.\n      this.controls.dispose();\n      this.setUpControls();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.controls) {\n      this.controls.dispose();\n    }\n  }\n\n  protected abstract setUpControls();\n\n\n  private configureListeners() {\n    this.controls.addEventListener('change', () => {\n      this.rendererService.render();\n    });\n\n    // don't raycast during rotation/damping/panning\n    if (this.raycasterService.isEnabled) {\n      this.controls.addEventListener('start', () => {\n        this.raycasterService.pause();\n      });\n      this.controls.addEventListener('end', () => {\n        this.raycasterService.resume();\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('OrbitControlsComponent.ngAfterViewInit');\n    if (this.childCameras === undefined || this.childCameras.first === undefined) {\n      throw new Error('Camera is not found');\n    }\n    if (!this.webGlRenderer) {\n      throw new Error('webGlRenderer is not found');\n    }\n    this.listeningControlElement = this.webGlRenderer.renderPane;\n    this.setUpControls();\n    this.configureListeners();\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractServerActor.html":{"url":"directives/AbstractServerActor.html","title":"directive - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:28\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:14\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {AbstractEmptyDirective} from '../../../object';\n\n@Directive()\nexport abstract class AbstractServerActor extends AbstractEmptyDirective {\n\n  @Input()\n  label: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Output()\n  actorClick = new EventEmitter();\n\n  @Input()\n  icon: string;\n\n  color: string | number = '#ffffff';\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = '#fff0f0';\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = '#ffffff';\n  }\n\n  public onClick() {\n    console.log('ServerActorComponent.onClick');\n    this.color = '#ffa0a0';\n    this.actorClick.emit();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getComponentFactory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentFactory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(id: string, component: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        defaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId: string;\n\n  constructor(\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string): ComponentFactory {\n    const comp = this.list.get(id ?? this.defaultId);\n    const result = this.resolver.resolveComponentFactory(comp);\n    return result;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(this.color);\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        animationStep\n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stop\n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                        \n                    \n\n            \n                \n                    Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  entryComponents: [\n    ServerStandActorComponent,\n    ServerBarrelActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    ModelActorComponent,\n    DagreNodeComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\nimport {StlLoaderComponent} from './stl-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            composition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        darkenNonBloomed\n                        \n                    \n                \n            \n            \n                \n                    \n                    darkenNonBloomed(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            WebGLRenderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scene\n                                    \n                                            THREE.Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        restoreMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreMaterial(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bloomComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bloomLayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Layers()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        darkMaterial\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        finalComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        materials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer: EffectComposer;\n  private bloomComposer: EffectComposer;\n  public initialized = false;\n  protected scene: THREE.Scene;\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      // const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            border\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addChild\n                        \n                    \n                \n            \n            \n                \naddChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('contentProjection')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreCompositionComponent.html":{"url":"components/DagreCompositionComponent.html","title":"component - DagreCompositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DagreCompositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreCompositionComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-composition\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                            \n                                    Public\n                                translateLabelY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                composition\n                            \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'plane'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        removeNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        syncGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        syncGraphNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#A0A0A0'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dagreLayout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DagreLayoutComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        graphUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translateLabelY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:48\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-composition',\n  providers: [provideParent(DagreCompositionComponent)],\n  template: `\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n  `\n})\nexport class DagreCompositionComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() label: string;\n\n  @Input() border = 'plane';\n\n  private _height: number;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this.translateLabelY = this._height / 2 - 3;\n    if (!this.cdRef['destroyed']) {\n      this.cdRef.detectChanges();\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  @Input() width: number;\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  @Input() composition: string;\n\n  public color: string | number = '#A0A0A0';\n  public translateLabelY: number;\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreCompositionComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.label,\n        composition: this.composition\n      });\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreCompositionComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n\n        // console.log('DagreCompositionComponent.layout: Update position node', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n\n        this.width = node.width;\n        this.height = node.height;\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreCompositionComponent.update');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreCompositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreLayoutComponent.html":{"url":"components/DagreLayoutComponent.html","title":"component - DagreLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DagreLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreLayoutComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                graph\n                            \n                            \n                                    Protected\n                                graphModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getGraphModel\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                refreshLayout\n                            \n                            \n                                    Protected\n                                syncGraphContainer\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                centered\n                            \n                            \n                                edgesep\n                            \n                            \n                                marginx\n                            \n                            \n                                marginy\n                            \n                            \n                                nodesep\n                            \n                            \n                                rankdir\n                            \n                            \n                                ranker\n                            \n                            \n                                ranksep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ALIGN\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edgesep\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_EDGESEP\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginx\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_MARGIN\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginy\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_MARGIN\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodesep\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SEP\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rankdir\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_RANKDIR\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranker\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_RANKER\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranksep\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SEP\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGraphModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraphModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        layout\n                        \n                    \n                \n            \n            \n                \n                    \n                    layout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        refreshLayout\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLayout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        syncGraphContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphContainer(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        graph\n                        \n                    \n                \n            \n                \n                    \n                        Type :     dagre.graphlib.Graph\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        graphModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphModel\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreUtils} from './dagre-utils';\nimport {GraphModel} from './dagre-model';\n\nconst DEFAULT_ALIGN = 'DL';\nconst DEFAULT_RANKDIR = 'BT';\nconst DEFAULT_SEP = 15;\nconst DEFAULT_EDGESEP = 1;\nconst DEFAULT_NODESEP = 15;\nconst DEFAULT_RANKSEP = 15;\nconst DEFAULT_MARGIN = 0;\nconst DEFAULT_RANKER = 'network-simplex';\n\n@Component({\n  selector: 'atft-dagre-layout',\n  providers: [provideParent(DagreLayoutComponent)],\n  template: `\n    `\n})\nexport class DagreLayoutComponent extends AbstractEmptyDirective implements AfterViewInit, OnChanges, OnDestroy, AfterContentInit {\n\n  @Input() align = DEFAULT_ALIGN;\n  @Input() rankdir = DEFAULT_RANKDIR;\n  @Input() nodesep = DEFAULT_SEP;\n  @Input() edgesep = DEFAULT_EDGESEP;\n  @Input() ranksep = DEFAULT_SEP;\n  @Input() marginx = DEFAULT_MARGIN;\n  @Input() marginy = DEFAULT_MARGIN;\n  @Input() ranker = DEFAULT_RANKER;\n\n  @Input() centered = true;\n\n  @Output() updated = new EventEmitter();\n\n  protected graphModel: GraphModel;\n  protected graph: dagre.graphlib.Graph;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n\n    // Initialize empty model:\n    this.graphModel = {\n      layout: {},\n      nodes: [],\n      edges: []\n    };\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n  }\n\n  ngAfterContentInit() {\n    this.layout();\n  }\n\n\n  public layout() {\n    // console.log('DagreLayoutComponent.layout');\n    this.graphModel.layout = {\n      align: this.align ?? DEFAULT_ALIGN,\n      rankdir: this.rankdir ?? DEFAULT_RANKDIR,\n      nodesep: this.nodesep ?? DEFAULT_NODESEP,\n      edgesep: this.edgesep ?? DEFAULT_EDGESEP,\n      ranksep: this.ranksep ?? DEFAULT_RANKSEP,\n      marginx: this.marginx ?? DEFAULT_MARGIN,\n      marginy: this.marginy ?? DEFAULT_MARGIN,\n      ranker: this.ranker ?? DEFAULT_RANKER\n    };\n    this.graph = DagreUtils.modelToGraph(this.graphModel);\n    // console.log('DagreLayoutComponent.layout: graph', this.graph);\n    this.syncGraphContainer(this.graph);\n    this.updated.emit();\n    this.rendererService.render();\n  }\n\n  protected syncGraphContainer(g: dagre.graphlib.Graph) {\n    // console.log('DagreLayoutComponent.syncGraphContainer');\n    if (this.object && this.centered) {\n      this.translateX = -(g.graph().width / 2);\n      this.translateY = -(g.graph().height / 2);\n      this.applyTranslation();\n    }\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreLayoutComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    let modified = false;\n\n    if (['align', 'rankdir', 'ranksep', 'nodesep', 'edgesep', 'marginx', 'marginy', 'ranker'].some(propName => propName in changes)) {\n      this.layout();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      // this.rendererService.render();\n    }\n\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.graph = undefined;\n    this.graphModel = undefined;\n  }\n\n  public getGraphModel() {\n    return this.graphModel;\n  }\n\n  public refreshLayout() {\n    if (this.graph) {\n      this.layout();\n    }\n  }\n\n  public getGraph() {\n    return this.graph;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreNodeComponent.html":{"url":"components/DagreNodeComponent.html","title":"component - DagreNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DagreNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreNodeComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-node\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                composition\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        removeNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        syncGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        syncGraphNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('container', {read: ViewContainerRef, static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dagreLayout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DagreLayoutComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        graphUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injector, Input, OnDestroy, OnInit, Optional, SkipSelf, ViewChild, ViewContainerRef} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-node',\n  providers: [provideParent(DagreNodeComponent)],\n  template: ''\n})\nexport class DagreNodeComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() composition: string;\n\n  @Input() translateZ = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container;\n\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector\n  ) {\n    super(rendererService, parent);\n    // console.log('DagreNodeComponent.constructor');\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreNodeComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n  protected addNode() {\n    // console.log('DagreNodeComponent.addNode', this.name);\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.name,\n        composition: this.composition\n      });\n\n       // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreNodeComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n        // console.log('DagreLayoutComponent.layout: Update position', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreNodeComponent.syncGraph');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getLayout\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLayout(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.GraphLabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        modelToGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.graphlib.Graph\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        updateBaseInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    baseInfo\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        updateEdges\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        updateGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(\n      this.getLayout(model)\n    );\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout', g);\n    dagre.layout(g);\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n    this.updateBaseInfo(g, model.compositions);\n    this.updateBaseInfo(g, model.nodes);\n    this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): dagre.GraphLabel {\n    const layout: dagre.GraphLabel = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreYamlParserComponent.html":{"url":"components/DagreYamlParserComponent.html","title":"component - DagreYamlParserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DagreYamlParserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreYamlParserComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-yaml-parser\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                instances\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createComposition\n                            \n                            \n                                    Protected\n                                createEdge\n                            \n                            \n                                    Protected\n                                createNode\n                            \n                            \n                                    Protected\n                                destroyAll\n                            \n                            \n                                    Protected\n                                getNodeComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                parseAndCreate\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                yaml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, resolver: ComponentFactoryResolver, actorRepository: ActorRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorRepository\n                                                  \n                                                        \n                                                                        ActorRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        yaml\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createComposition\n                        \n                    \n                \n            \n            \n                \n                    \n                    createComposition(composition: Composition)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composition\n                                    \n                                                Composition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createEdge\n                        \n                    \n                \n            \n            \n                \n                    \n                    createEdge(edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        destroyAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getNodeComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        parseAndCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseAndCreate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('container', {read: ViewContainerRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instances\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport * as yaml from 'yaml';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreCompositionComponent} from './dagre-composition.component';\nimport {DagreEdgeComponent} from './dagre-edge.component';\nimport {Composition, Edge, GraphModel, Node} from './dagre-model';\nimport {DagreNodeComponent} from './dagre-node.component';\nimport {ActorRepositoryService} from '../service';\n\n\n/*\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n*/\n\n@Component({\n  selector: 'atft-dagre-yaml-parser',\n  providers: [provideParent(DagreYamlParserComponent)],\n  template: `\n    `\n})\nexport class DagreYamlParserComponent extends AbstractEmptyDirective implements OnChanges, AfterViewInit {\n\n  @Input() yaml;\n\n  @Output() status = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef}) container;\n\n  private instances = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected resolver: ComponentFactoryResolver,\n    protected actorRepository: ActorRepositoryService\n  ) {\n    super(rendererService, parent);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.parseAndCreate();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreYamlParserComponent.ngOnChanges', this.name);\n\n    if (!this.object) {\n      return;\n    }\n\n    if (['yaml'].some(propName => propName in changes)) {\n      this.parseAndCreate();\n    }\n  }\n\n  public parseAndCreate() {\n    // console.log('DagreYamlParserComponent.parseAndCreate');\n    if (this.yaml) {\n      try {\n        this.destroyAll();\n        const model: GraphModel = yaml.parse(this.yaml);\n\n        // console.log('DagreYamlParserComponent.parseAndCreate yaml', model);\n        if (model && model.nodes && model.nodes.length > 0) {\n\n          model.compositions?.forEach(i => this.createComposition(i));\n          model.nodes?.forEach(i => this.createNode(i));\n          model.edges?.forEach(i => this.createEdge(i));\n        }\n        this.status.emit(true);\n      } catch (e) {\n        console.warn('DagreYamlParserComponent.parseAndCreate failed', e);\n        this.status.emit(false);\n        throw e;\n      }\n    }\n  }\n\n  protected getNodeComponent(id: string) {\n    return this.actorRepository.getComponentFactory(id);\n  }\n\n  protected createNode(node: Node) {\n    // console.log('DagreYamlParserComponent.createNode', node);\n    const nodeFactory = this.resolver.resolveComponentFactory(DagreNodeComponent);\n    const nodeRef = this.container.createComponent(nodeFactory);\n    nodeRef.instance.name = node.name;\n    nodeRef.instance.composition = node.composition;\n    this.instances.push(nodeRef);\n\n    const serverFactory = this.getNodeComponent((node.model ? 'model' : node.type));\n    const serverRef = nodeRef.instance.container.createComponent(serverFactory);\n    serverRef.instance.name = node.name;\n    serverRef.instance.label = (node.label ? node.label : node.name);\n    serverRef.instance.icon = node.icon;\n    serverRef.instance.model = node.model;\n\n    this.instances.push(serverRef);\n  }\n\n\n  protected createEdge(edge: Edge) {\n    // console.log('DagreYamlParserComponent.createEdge', edge);\n    const factory = this.resolver.resolveComponentFactory(DagreEdgeComponent);\n    const edgeRef = this.container.createComponent(factory);\n    edgeRef.instance.from = edge.from;\n    edgeRef.instance.to = edge.to;\n    if (edge.type) {\n      edgeRef.instance.type = edge.type;\n    }\n    if (edge.color) {\n      edgeRef.instance.materialColor = edge.color;\n    }\n\n    this.instances.push(edgeRef);\n  }\n\n\n  protected destroyAll() {\n    // console.log('DagreYamlParserComponent.destroyAll');\n    this.instances.forEach(i => {\n      // console.log('DagreYamlParserComponent destroy', i);\n      i.destroy();\n    });\n    this.instances = [];\n  }\n\n\n  private createComposition(composition: Composition) {\n    // console.log('DagreYamlParserComponent.createComposition', node);\n    const factory = this.resolver.resolveComponentFactory(DagreCompositionComponent);\n    const compositionRef = this.container.createComponent(factory);\n    compositionRef.instance.name = composition.name;\n    compositionRef.instance.label = (composition.label ? composition.label : composition.name);\n    compositionRef.instance.composition = composition.composition;\n    compositionRef.instance.border = composition.border;\n\n    this.instances.push(compositionRef);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreYamlParserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FF0000'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        animate\n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        tryToFindGeometry\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        edges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Material\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor: string | number = '#FF0000';\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity;\n  @Input() targetOpacity;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material: THREE.Material;\n  private stop = false;\n  protected animation: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: this.dashColor}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      this.color,\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractComposeEffect\n\n                \n            \n            \n                \n                        Defined in         AbstractComposeEffect:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addPass\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removePass\n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public initComposer() {\n    if (!this.composer && this.rendererService.getWebGlRenderer()) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#0000AA'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        disableFog\n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        enableFog\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color: string | number = '#0000AA';\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(this.color, this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getGeometry\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.ShapeBufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh implements OnChanges {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected getGeometry(): THREE.ShapeBufferGeometry {\n    // console.log('FrameMeshComponent.getGeometry', this.sizeX, this.sizeY, this.thickness);\n\n    const halfX = (this.sizeX ?? 1) / 2.0;\n    const halfY = (this.sizeY ?? 1) / 2.0;\n    const t = this.thickness ?? 1;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    return geometry;\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(this.getGeometry(), material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('FrameMeshComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['sizeX', 'sizeY', 'thickness'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.ShapeBufferGeometry) {\n          const currentGeometry: THREE.ShapeBufferGeometry = mesh.geometry;\n          const newGeometry = this.getGeometry();\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n        modified = true;\n      }\n\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compositions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            edges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getLinePosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#A0A0A0'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GridMeshComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('grid', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateLabelX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport { AbstractEmptyDirective, GridMeshComponent } from '../../../object';\nimport * as THREE from 'three';\nimport {RaycasterEmitEvent} from '../../../raycaster';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends AbstractEmptyDirective {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event: RaycasterEmitEvent) {\n    // console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      // console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event: RaycasterEmitEvent): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.GridHelper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.GridHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#444444'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor: string | number = '#ffffff';\n  @Input() groundColor: string | number = '#444444';\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      this.skyColor,\n      this.groundColor,\n      this.intensity\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                IconSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowColorOverride\n                                        \n                                \n                                \n                                        \n                                            isCCW\n                                        \n                                \n                                \n                                        \n                                            noHoles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractEmptyDirective\n\n                \n            \n            \n                \n                        Defined in         AbstractEmptyDirective:8\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#A0A0A0'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translateLabelX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractEmptyDirective } from '../../../object';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends AbstractEmptyDirective {\n  @Input() label: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractConnector\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                clock\n                            \n                            \n                                    Protected\n                                line\n                            \n                            \n                                    Private\n                                matLine\n                            \n                            \n                                    Protected\n                                time\n                            \n                            \n                                    Protected\n                                timeScale\n                            \n                            \n                                    Protected\n                                sourceSub\n                            \n                            \n                                    Protected\n                                targetSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Public\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                getPositions\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateLineGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                dashSize\n                            \n                            \n                                gapSize\n                            \n                            \n                                lineType\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                solid\n                            \n                            \n                                source\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gapSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineType\n                    \n                \n                \n                    \n                        Type :         LineType\n\n                    \n                \n                \n                    \n                        Default value : LineType.dashed\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractConnector\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractConnector:13\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        animate\n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createLineMesh\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Line2\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getPositions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositions()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:107\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLineGeometry\n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:85\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        watchObjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchObjects()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractConnector\n\n                \n            \n            \n                \n                        Defined in         AbstractConnector:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        clock\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Clock()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        line\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Line2\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        matLine\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LineMaterial\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        timeScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sourceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractConnector\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractConnector:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        targetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractConnector\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractConnector:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport * as THREE from 'three';\nimport {AnimationService} from '../../animation';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {Line2} from 'three/examples/jsm/lines/Line2';\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\nimport {LineMaterial} from 'three/examples/jsm/lines/LineMaterial';\n\nexport enum LineType {\n  dashed = 'dash',\n  solid = 'solid'\n}\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector implements OnDestroy, OnChanges {\n\n  @Input() materialColor = 0xFFFFFF;\n  @Input() solid = false;\n  @Input() lineWidth = 2;\n  @Input() dashSize = 3;\n  @Input() gapSize = 0.5;\n  @Input() opacity = 1;\n  @Input() lineType: LineType = LineType.dashed;\n\n  @Input() animated = true;\n  protected animation: Subscription;\n  protected time = 0;\n  protected timeScale = 5;\n  protected clock = new THREE.Clock();\n\n  protected line: Line2;\n  private matLine: LineMaterial;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService,\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createLineMesh(): Line2 {\n    const positions = this.getPositions();\n    const geometry = new LineGeometry();\n    geometry.setPositions(positions);\n\n    this.matLine = new LineMaterial({\n      // wrong type in three@types def color?: number;\n      // color: parseInt(Number(this.materialColor).toString(), 10),\n      color: this.materialColor,\n      linewidth: this.lineWidth,\n      vertexColors: false,\n      dashed: !this.solid,\n      dashSize: this.dashSize,\n      dashOffset: 0,\n      gapSize: this.gapSize,\n      opacity: this.opacity,\n      transparent: this.opacity  propName in changes)) {\n      console.log('Changed color to', this.materialColor);\n      this.line.material.color = new THREE.Color(this.materialColor);\n      this.line.material.needsUpdate = true;\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:96\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    configureListeners()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelActorComponent.html":{"url":"components/ModelActorComponent.html","title":"component - ModelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ModelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-model-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelPath\n                            \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:36\n                                \n                            \n\n                \n                    \n                        setmodel(model: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            model\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\nimport {AbstractObject3D, ModelService} from '../../../object';\nimport {RendererService} from '../../../renderer';\n\n@Component({\n  selector: 'atft-model-actor',\n  providers: [provideParent(ModelActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ModelActorComponent extends AbstractServerActor {\n\n  @Input()\n  set model(model: string) {\n    const iconProvider = this.modelService.getSource(model);\n    this.modelPath = iconProvider.url;\n  }\n\n  get model(): string {\n    return this.model;\n  }\n\n  public modelPath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected modelService: ModelService\n  ) {\n    super(rendererService, parent);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                BaseAssetSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '3d'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            face\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mtlLoader\n                            \n                            \n                                    Protected\n                                _model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, objLoader: ObjLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objLoader\n                                                  \n                                                        \n                                                                        ObjLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:39\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:31\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:21\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mtlLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MTLLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractModelLoader\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractModelLoader:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:31\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {ObjLoaderService} from './services/obj-loader.service';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected objLoader: ObjLoaderService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    if (this.material) {\n      const preloadingStep = new Promise((resolve, reject) => {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.objLoader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      });\n      // Await preloading and load final model\n      await preloadingStep;\n    }\n\n    const obj = await this.objLoader.load(this.model);\n    return obj.clone();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setMaterials\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    materialCreator\n                                    \n                                            MTLLoader.MaterialCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OBJLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                _model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:21\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.ObjectLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractModelLoader\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractModelLoader:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    configureListeners()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractOrbitControls\n\n                \n            \n            \n                \n                        Defined in         AbstractOrbitControls:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        updateZoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPosition()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyZAxisUp()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPosition()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyZAxisUp()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCamera\n\n                \n            \n            \n                \n                        Defined in         AbstractCamera:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh implements OnChanges {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['width', 'height', 'widthSegments', 'heightSegments'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.PlaneBufferGeometry) {\n          const currentGeometry: THREE.PlaneBufferGeometry = mesh.geometry;\n          const newGeometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:111\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(this.color, this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            face\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onMouseExit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unSubscribeEvents\n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disable\n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        enable\n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFirstIntersectedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onMouseMove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onTouchStart\n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        pause\n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resume\n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        raycaster\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Raycaster()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onResize\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    onResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        resetCanvas\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getWebGlRenderer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    preserveDrawingBuffer\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resize\n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                                AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setComposer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateChildCamerasAspectRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        aspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EffectComposerComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n\n@Injectable()\nexport class RendererService {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGLoader.html":{"url":"classes/SVGLoader.html","title":"class - SVGLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/threejs-fork/SVGLoader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Loader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDPI\n                            \n                            \n                                defaultUnit\n                            \n                            \n                                defs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createShapes\n                            \n                            \n                                    Static\n                                getStrokeStyle\n                            \n                            \n                                load\n                            \n                            \n                                parse\n                            \n                            \n                                    Static\n                                pointsToStroke\n                            \n                            \n                                    Static\n                                pointsToStrokeWithBuffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager?)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'px'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createShapes\n                        \n                    \n                \n            \n            \n                \n                    \n                    createShapes(shapePath)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:1676\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shapePath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getStrokeStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStrokeStyle(width, color, lineJoin, lineCap, miterLimit)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineJoin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineCap\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    miterLimit\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { strokeColor: any; strokeWidth: any; strokeLineJoin: any; strokeLineCap: any; strokeMiterLimit: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(url, onLoad, onProgress, onError)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onLoad\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onProgress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onError\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(text)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { paths: {}; xml: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        pointsToStroke\n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStroke(points, style, arcDivisions, minDistance)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        pointsToStrokeWithBuffers\n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset?)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertices\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normals\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uvs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertexOffset\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Box2,\n  BufferGeometry,\n  FileLoader,\n  Float32BufferAttribute,\n  Loader,\n  Matrix3,\n  Path,\n  Shape,\n  ShapePath,\n  ShapeUtils,\n  Vector2,\n  Vector3\n} from 'three';\n\n/* eslint-disable */\nclass SVGLoader extends Loader {\n\n  defaultDPI = 90; // MA:\n  defaultUnit = 'px'; // MA:\n  defs = []; // MA:\n\n  constructor( manager? ) {\n\n    super( manager );\n\n    // Default dots per inch\n    this.defaultDPI = 90;\n\n    // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n    this.defaultUnit = 'px';\n\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    const scope = this;\n\n    const loader = new FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.setRequestHeader( scope.requestHeader );\n    loader.setWithCredentials( scope.withCredentials );\n    loader.load( url, function ( text ) {\n\n      try {\n\n        onLoad( scope.parse( text ) );\n\n      } catch ( e ) {\n\n        if ( onError ) {\n\n          onError( e );\n\n        } else {\n\n          console.error( e );\n\n        }\n\n        scope.manager.itemError( url );\n\n      }\n\n    }, onProgress, onError );\n\n  }\n\n  parse( text ) {\n\n    const scope = this;\n\n    function parseNode( node, style ) {\n\n      if ( node.nodeType !== 1 ) return;\n\n      const transform = getNodeTransform( node );\n\n      let traverseChildNodes = true;\n\n      let path = null;\n\n      switch ( node.nodeName ) {\n\n        case 'svg':\n          break;\n\n        case 'style':\n          parseCSSStylesheet( node );\n          break;\n\n        case 'g':\n          style = parseStyle( node, style );\n          break;\n\n        case 'path':\n          style = parseStyle( node, style );\n          if ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n          break;\n\n        case 'rect':\n          style = parseStyle( node, style );\n          path = parseRectNode( node );\n          break;\n\n        case 'polygon':\n          style = parseStyle( node, style );\n          path = parsePolygonNode( node );\n          break;\n\n        case 'polyline':\n          style = parseStyle( node, style );\n          path = parsePolylineNode( node );\n          break;\n\n        case 'circle':\n          style = parseStyle( node, style );\n          path = parseCircleNode( node );\n          break;\n\n        case 'ellipse':\n          style = parseStyle( node, style );\n          path = parseEllipseNode( node );\n          break;\n\n        case 'line':\n          style = parseStyle( node, style );\n          path = parseLineNode( node );\n          break;\n\n        case 'defs':\n          traverseChildNodes = false;\n          parseDefs(node);\n          break;\n\n        case 'use':\n          style = parseStyle( node, style );\n          const usedNodeId = node.href.baseVal.substring( 1 );\n          const usedNode = node.viewportElement.getElementById( usedNodeId );\n          if ( usedNode ) {\n\n            parseNode( usedNode, style );\n\n          } else {\n\n            console.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n          }\n\n          break;\n\n        default:\n        // console.log( node );\n\n      }\n\n      if ( path ) {\n\n        if ( style.fill !== undefined && style.fill !== 'none' ) {\n\n          path.color.setStyle( style.fill );\n\n        }\n\n        transformPath( path, currentTransform );\n\n        paths.push( path );\n\n        path.userData = { node: node, style: style };\n\n      }\n\n      if ( traverseChildNodes ) {\n\n        const nodes = node.childNodes;\n\n        for ( let i = 0; i  0 ) {\n\n          currentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n        } else {\n\n          currentTransform.identity();\n\n        }\n\n      }\n\n    }\n\n    function parsePathNode( node ) {\n\n      const path = new ShapePath();\n\n      const point = new Vector2();\n      const control = new Vector2();\n\n      const firstPoint = new Vector2();\n      let isFirstPoint = true;\n      let doSetFirstPoint = false;\n\n      const d = node.getAttribute( 'd' );\n\n      // console.log( d );\n\n      const commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n      for ( let i = 0, l = commands.length; i  0 ) {\n\n              // Reset point to beginning of Path\n              point.copy( firstPoint );\n              path.currentPath.currentPoint.copy( point );\n              isFirstPoint = true;\n\n            }\n\n            break;\n\n          default:\n            console.warn( command );\n\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false;\n\n      }\n\n      return path;\n\n    }\n\n    function parseCSSStylesheet( node ) {\n\n      if ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n      for ( let i = 0; i  i.trim() );\n\n        for ( let j = 0; j  1 ) {\n\n        // scale up rx,ry equally so cr == 1\n        const s = Math.sqrt( cr );\n        rx = s * rx;\n        ry = s * ry;\n        rxs = rx * rx;\n        rys = ry * ry;\n\n      }\n\n      const dq = ( rxs * y1ps + rys * x1ps );\n      const pq = ( rxs * rys - dq ) / dq;\n      let q = Math.sqrt( Math.max( 0, pq ) );\n      if ( large_arc_flag === sweep_flag ) q = - q;\n      const cxp = q * rx * y1p / ry;\n      const cyp = - q * ry * x1p / rx;\n\n      // Step 3: Compute (cx, cy) from (cx', cy')\n      const cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n      const cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n      // Step 4: Compute θ1 and Δθ\n      const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n      const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n      path.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n    }\n\n    function svgAngle( ux, uy, vx, vy ) {\n\n      const dot = ux * vx + uy * vy;\n      const len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n      let ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n      if ( ( ux * vy - uy * vx )  i.trim() );\n\n        for ( let i = 0; i  0 ) {\n\n        transform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n      }\n\n      currentTransform.copy( transform );\n      transformStack.push( transform );\n\n      return transform;\n\n    }\n\n    function parseNodeTransform( node ) {\n\n      const transform = new Matrix3();\n      const currentTransform = tempTransform0;\n\n      if ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n        const tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n        const ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n        transform.translate( tx, ty );\n\n      }\n\n      if ( node.hasAttribute( 'transform' ) ) {\n\n        const transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n        for ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n          const transformText = transformsTexts[ tIndex ].trim();\n\n          if ( transformText === '' ) continue;\n\n          const openParPos = transformText.indexOf( '(' );\n          const closeParPos = transformText.length;\n\n          if ( openParPos > 0 && openParPos = 1 ) {\n\n                  const tx = array[ 0 ];\n                  let ty = tx;\n\n                  if ( array.length >= 2 ) {\n\n                    ty = array[ 1 ];\n\n                  }\n\n                  currentTransform.translate( tx, ty );\n\n                }\n\n                break;\n\n              case 'rotate':\n\n                if ( array.length >= 1 ) {\n\n                  let angle = 0;\n                  let cx = 0;\n                  let cy = 0;\n\n                  // Angle\n                  angle = - array[ 0 ] * Math.PI / 180;\n\n                  if ( array.length >= 3 ) {\n\n                    // Center x, y\n                    cx = array[ 1 ];\n                    cy = array[ 2 ];\n\n                  }\n\n                  // Rotate around center (cx, cy)\n                  tempTransform1.identity().translate( - cx, - cy );\n                  tempTransform2.identity().rotate( angle );\n                  tempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n                  tempTransform1.identity().translate( cx, cy );\n                  currentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n                }\n\n                break;\n\n              case 'scale':\n\n                if ( array.length >= 1 ) {\n\n                  const scaleX = array[ 0 ];\n                  let scaleY = scaleX;\n\n                  if ( array.length >= 2 ) {\n\n                    scaleY = array[ 1 ];\n\n                  }\n\n                  currentTransform.scale( scaleX, scaleY );\n\n                }\n\n                break;\n\n              case 'skewX':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n                    0, 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'skewY':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, 0, 0,\n                    Math.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'matrix':\n\n                if ( array.length === 6 ) {\n\n                  currentTransform.set(\n                    array[ 0 ], array[ 2 ], array[ 4 ],\n                    array[ 1 ], array[ 3 ], array[ 5 ],\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n            }\n\n          }\n\n          transform.premultiply( currentTransform );\n\n        }\n\n      }\n\n      return transform;\n\n    }\n\n    function transformPath( path, m ) {\n\n      function transfVec2( v2 ) {\n\n        tempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n        v2.set( tempV3.x, tempV3.y );\n\n      }\n\n      const isRotated = isTransformRotated( m );\n\n      const subPaths = path.subPaths;\n\n      for ( let i = 0, n = subPaths.length; i = 1 ) || ( t2  1 ) ) {\n\n        //1. lines are parallel or edges don't intersect\n\n        return null;\n\n      } else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n        //2. lines are colinear\n\n        //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n        for ( let i = 0; i  Number.EPSILON ) {\n\n        classifyResult.loc = IntersectionLocationType.RIGHT;\n        return;\n\n\n      }\n\n      if ( ( ( ax * bx )  i.t = intersection.t - Number.EPSILON ) === undefined ) {\n\n            intersectionsRaw.push( intersection );\n            intersections.push( new Vector2( intersection.x, intersection.y ) );\n\n          }\n\n        }\n\n      }\n\n      return intersections;\n\n    }\n\n    function getScanlineIntersections( scanline, boundingBox, paths ) {\n\n      const center = new Vector2();\n      boundingBox.getCenter( center );\n\n      const allIntersections = [];\n\n      paths.forEach( path => {\n\n        // check if the center of the bounding box is in the bounding box of the paths.\n        // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n        // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n        if ( path.boundingBox.containsPoint( center ) ) {\n\n          const intersections = getIntersections( scanline, path.points );\n\n          intersections.forEach( p => {\n\n            allIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n          } );\n\n        }\n\n      } );\n\n      allIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      return allIntersections;\n\n    }\n\n    function isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n      if ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n        _fillRule = 'nonzero';\n\n      }\n\n      const centerBoundingBox = new Vector2();\n      simplePath.boundingBox.getCenter( centerBoundingBox );\n\n      const scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n      const scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n      scanlineIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      const baseIntersections = [];\n      const otherIntersections = [];\n\n      scanlineIntersections.forEach( i => {\n\n        if ( i.identifier === simplePath.identifier ) {\n\n          baseIntersections.push( i );\n\n        } else {\n\n          otherIntersections.push( i );\n\n        }\n\n      } );\n\n      const firstXOfPath = baseIntersections[ 0 ].point.x;\n\n      // build up the path hierarchy\n      const stack = [];\n      let i = 0;\n\n      while ( i  0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n          stack.pop();\n\n        } else {\n\n          stack.push( otherIntersections[ i ].identifier );\n\n        }\n\n        i ++;\n\n      }\n\n      stack.push( simplePath.identifier );\n\n      if ( _fillRule === 'evenodd' ) {\n\n        const isHole = stack.length % 2 === 0 ? true : false;\n        const isHoleFor = stack[ stack.length - 2 ];\n\n        return { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n      } else if ( _fillRule === 'nonzero' ) {\n\n        // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n        let isHole = true;\n        let isHoleFor = null;\n        let lastCWValue = null;\n\n        for ( let i = 0; i  {\n\n      const points = p.getPoints();\n      let maxY = - BIGNUMBER;\n      let minY = BIGNUMBER;\n      let maxX = - BIGNUMBER;\n      let minX = BIGNUMBER;\n\n      //points.forEach(p => p.y *= -1);\n\n      for ( let i = 0; i  maxY ) {\n\n          maxY = p.y;\n\n        }\n\n        if ( p.y  maxX ) {\n\n          maxX = p.x;\n\n        }\n\n        if ( p.x = minX ) {\n\n        scanlineMinX = minX - 1;\n\n      }\n\n      return { points: points, isCW: ShapeUtils.isClockWise( points ), identifier: identifier ++, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n    } );\n\n    simplePaths = simplePaths.filter( sp => sp.points.length > 0 );\n\n    // check if path is solid or a hole\n    const isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule ) );\n\n\n    const shapesToReturn = [];\n    simplePaths.forEach( p => {\n\n      const amIAHole = isAHole[ p.identifier ];\n\n      if ( ! amIAHole.isHole ) {\n\n        const shape = new Shape( p.points );\n        const holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n        holes.forEach( h => {\n\n          const path = simplePaths[ h.identifier ];\n          shape.holes.push( new Path( path.points ) );\n\n        } );\n        shapesToReturn.push( shape );\n\n      }\n\n    } );\n\n    return shapesToReturn;\n\n  }\n\n  static getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n    // Param width: Stroke width\n    // Param color: As returned by THREE.Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n      strokeColor: color,\n      strokeWidth: width,\n      strokeLineJoin: lineJoin,\n      strokeLineCap: lineCap,\n      strokeMiterLimit: miterLimit\n    };\n\n  }\n\n  static pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    if ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n      return null;\n\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n    return geometry;\n\n  }\n\n  static pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset? ) {\n\n    // This function can be called to update existing arrays or buffers.\n    // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n    // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n    // Returns number of written vertices / normals / uvs pairs\n    // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n    // 'normals' and 'uvs' buffers are optional\n\n    const tempV2_1 = new Vector2();\n    const tempV2_2 = new Vector2();\n    const tempV2_3 = new Vector2();\n    const tempV2_4 = new Vector2();\n    const tempV2_5 = new Vector2();\n    const tempV2_6 = new Vector2();\n    const tempV2_7 = new Vector2();\n    const lastPointL = new Vector2();\n    const lastPointR = new Vector2();\n    const point0L = new Vector2();\n    const point0R = new Vector2();\n    const currentPointL = new Vector2();\n    const currentPointR = new Vector2();\n    const nextPointL = new Vector2();\n    const nextPointR = new Vector2();\n    const innerPoint = new Vector2();\n    const outerPoint = new Vector2();\n\n    arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n    minDistance = minDistance !== undefined ? minDistance : 0.001;\n    vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n    // First ensure there are no duplicated points\n    points = removeDuplicatedPoints( points );\n\n    const numPoints = points.length;\n\n    if ( numPoints = minDistance ) {\n\n          newPoints.push( points[ i ] );\n\n        }\n\n      }\n\n      newPoints.push( points[ points.length - 1 ] );\n\n      return newPoints;\n\n    }\n\n  }\n\n\n}\n\nexport { SVGLoader };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                            \n                                    Protected\n                                _model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                icon\n                            \n                            \n                                isCCW\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                noHoles\n                            \n                            \n                                overrideMaterialColor\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, svgLoader: SvgLoaderService, iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgLoader\n                                                  \n                                                        \n                                                                        SvgLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCCW\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noHoles\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:21\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _overrideMaterialColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractModelLoader\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractModelLoader:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n                \n                    \n                        getoverrideMaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                                \n                            \n\n                \n                    \n                        setoverrideMaterialColor(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:41\n                                \n                            \n\n                \n                    \n                        seticon(icon: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            icon\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, fixCenter, provideParent, scaleToFit} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {IconService, SvgLoaderService} from './services';\nimport * as THREE from 'three';\n\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): string {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: string) {\n    this._overrideMaterialColor = value;\n    if (this.object) {\n      this.startLoading();\n    }\n  }\n\n  @Input()\n  set icon(icon: string) {\n    // console.log('SVGLoaderComponent.icon', icon);\n    const iconProvider = this.iconService.getSource(icon);\n    this.model = iconProvider.url;\n    this.isCCW = iconProvider.isCCW;\n    this.noHoles = iconProvider.noHoles;\n    if (!iconProvider.allowColorOverride) {\n      this.overrideMaterialColor = undefined;\n    }\n  }\n\n  get icon(): string {\n    return this.model;\n  }\n  private _overrideMaterialColor: string = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  @Input()\n  isCCW = false;\n\n  @Input()\n  noHoles = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected svgLoader: SvgLoaderService,\n    protected iconService: IconService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public async loadLazyObject(): Promise {\n    // console.log('SVGLoaderComponent.loadLazyObject', this.model);\n\n    const paths = await this.svgLoader.load(this.model);\n    const group = new THREE.Group();\n\n    for (const path of paths) {\n      const color = (this._overrideMaterialColor ? this._overrideMaterialColor : path.color);\n      const material = appliedMaterial(color, this.material, this.depthWrite);\n      const shapes: THREE.Shape[] = path.toShapes(this.isCCW, this.noHoles);\n\n      for (const shape of shapes) {\n        const geometry = new THREE.ShapeBufferGeometry(shape);\n        const mesh = new THREE.Mesh(geometry, material);\n        group.add(mesh);\n      }\n    }\n\n\n    if (this.maxX || this.maxY) {\n      scaleToFit(group, new THREE.Vector3(this.maxX, this.maxY, 0));\n    }\n    if (this.centered) {\n      fixCenter(group);\n    }\n\n    return group;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:143\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:156\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyRotation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyScale()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:135\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTranslation()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChildren()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:202\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:175\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursionByName(currentNode: AbstractObject3D, name)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentNode\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChildByName(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractObject3D:206\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background: number | string = '#ffffff';\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(this.background);\n    return scene;\n  }\n\n  public updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(this.background);\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stats\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StlLoaderComponent.html":{"url":"components/StlLoaderComponent.html","title":"component - StlLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StlLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/stl-loader.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(StlLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-stl-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                _model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractModelLoader\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModelLoader:21\n\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new STLLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractModelLoader\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractModelLoader:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\n\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\n\n@Component({\n  selector: 'atft-stl-loader',\n  providers: [provideParent(StlLoaderComponent)],\n  template: ''\n})\nexport class StlLoaderComponent extends AbstractModelLoader {\n  private loader = new STLLoader();\n\n  @Input()\n  material: string;\n\n  @Input()\n  materialColor: string | number = '#FFFFFF';\n\n  @Input()\n  depthWrite = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('StlLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, geometry => {\n          const material = appliedMaterial(this.materialColor, this.material, this.depthWrite);\n          const mesh = new THREE.Mesh(geometry, material);\n          resolve(mesh);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'StlLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:10\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, font: FontService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        font\n                                                  \n                                                        \n                                                                        FontService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getTextMesh\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    afterInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                    \n                    startLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractLazyObject3D\n\n                \n            \n            \n                \n                        Defined in         AbstractLazyObject3D:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _materialColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#DADADA'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Text'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fontCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Font\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:24\n\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:19\n\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:30\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: string | number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                        string | number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {FontService} from '../loader/services/font.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor: string | number = '#DADADA';\n  @Input()\n  set materialColor(materialColor: string | number) {\n    this._materialColor = materialColor;\n    if (this.object) {\n      // console.log('TextMeshComponent.set materialColor', materialColor + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    if (this.object) {\n      // console.log('TextMeshComponent.set text', text + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected font: FontService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject', this.name);\n\n    const font = await this.font.load(this.fontUrl);\n    // console.log('TextMeshComponent.loadLazyObject font', font);\n    return this.getTextMesh(font);\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh', this.text + ' / ' + this.name);\n    if (this.text) {\n      const geometry = new THREE.TextGeometry(this.text, {\n        font: font,\n        size: this.size,\n        height: this.height,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelOffset\n      });\n\n      const material = this.getMaterial();\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.castShadow = this.castShadow;\n      mesh.receiveShadow = this.receiveShadow;\n\n      if (this.centered) {\n        fixCenter(mesh);\n      }\n      return mesh;\n    } else {\n      return new THREE.Mesh();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_exports\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                playbackError\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                videoPlaybackStarted\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:27\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:21\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:13\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractMesh\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractMesh:19\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        animate\n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyMaterial()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mesh\n                                    \n                                            THREE.Mesh\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractMesh\n\n                \n            \n            \n                \n                        Defined in         AbstractMesh:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        heightSegments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        playbackError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Default value : document.createElement('video')\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        videoPlaybackStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        widthSegments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n  protected animation: Subscription;\n  protected videoPlaybackStarted = false;\n  protected playbackError = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected animate() {\n    // AnimationService will trigger animate() on all subscribers, then executes render() which is required for Video update.\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play().then(() => {\n            this.videoPlaybackStarted = true;\n          }, () => {\n            this.playbackError = true;\n          });\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animation?.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n\n      \n      \n      \n      \n\n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:23\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:8\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:28\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:20\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:17\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:14\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServerActor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServerActor:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n\n          \n          \n          \n          \n\n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc = 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                0 %\n                (0/47)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_ALIGN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_EDGESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_MARGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_NODESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKDIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKSEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_SEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            directive\n            AbstractServerActor\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/abstract-camera.ts\n            \n            directive\n            AbstractCamera\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/abstract-orbit-controls.ts\n            \n            directive\n            AbstractOrbitControls\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            directive\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-empty-directive.ts\n            \n            directive\n            AbstractEmptyDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n            \n            directive\n            AbstractLazyObject3D\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-object-3d.ts\n            \n            directive\n            AbstractObject3D\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/abstract-connector.ts\n            \n            directive\n            AbstractConnector\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/abstract-model-loader.ts\n            \n            directive\n            AbstractModelLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/stl-loader.component.ts\n            \n            component\n            StlLoaderComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n            \n            directive\n            AbstractMesh\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                33 %\n                (6/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                11 %\n                (2/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                7 %\n                (2/28)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            class\n            SVGLoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n            \n            function\n            patchConsoleToFailOnError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n            \n            variable\n            orgConsoleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.2.2\n        \n            @angular/common : ^12.2.2\n        \n            @angular/compiler : ^12.2.2\n        \n            @angular/core : ^12.2.2\n        \n            @angular/forms : ^12.2.2\n        \n            @angular/platform-browser : ^12.2.2\n        \n            @angular/platform-browser-dynamic : ^12.2.2\n        \n            @angular/router : ^12.2.2\n        \n            core-js : ^3.11.1\n        \n            dagre : ^0.8.5\n        \n            rxjs : ^6.6.7\n        \n            snyk : ^1.667.0\n        \n            three : ^0.131.3\n        \n            uuid : ^8.3.2\n        \n            yaml : ^1.10.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            patchConsoleToFailOnError   (projects/.../patch-console-to-fail-on-error.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appliedMaterial\n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateSize\n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fixCenter\n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        patchConsoleToFailOnError\n                        \n                    \n                \n            \n            \n                \npatchConsoleToFailOnError()\n                \n            \n\n\n\n\n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideParent\n                        \n                    \n                \n            \n            \n                \nprovideParent(component, parentType?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeFromArray\n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array, element)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scaleToFit\n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three dagre atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n\n  \n    \n    \n    \n      \n      \n    \n  \n\n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nRelease and Changelog\n\nFollow Conventional Commits.\nSee standard-version guidelines for release and changelog update.\n\nTo automatically generate changelog and bump atft version: \nnpm run releaseContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_ALIGN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_EDGESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_MARGIN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_NODESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKDIR   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKER   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKSEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_SEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            orgConsoleError   (projects/.../patch-console-to-fail-on-error.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ALIGN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_EDGESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MARGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_NODESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKDIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKSEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTIRE_SCENE_LAYER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragmentShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vertexShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        orgConsoleError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.console.error\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REPLACE_SYMBOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '?'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
