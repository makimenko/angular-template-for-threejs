var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.329,1,2.679]],["body/injectables/AbstractAssetService.html",[0,1.897,1,3.826,2,2.216,3,0.101,4,0.171,5,0.09,6,5.944,7,3.397,8,0.351,9,1.222,10,1.722,11,4.826,12,1.246,13,0.862,14,0.74,15,2.16,16,4.926,17,4.926,18,4.926,19,4.926,20,4.206,21,4.926,22,4.926,23,1.055,24,0.959,25,6.15,26,4.274,27,2.127,28,4.578,29,0.931,30,0.01,31,0.661,32,0.624,33,0.764,34,1.138,35,0.921,36,6.057,37,4.274,38,5.756,39,4.578,40,4.274,41,4.563,42,4.578,43,4.563,44,4.578,45,4.563,46,4.578,47,4.563,48,4.578,49,4.116,50,1.129,51,4.563,52,4.578,53,1.067,54,0.776,55,0.735,56,0.961,57,4.578,58,0.101,59,0.182,60,1.706,61,3.397,62,3.397,63,0.136,64,1.62,65,2.848,66,4.032,67,0.112,68,3.397,69,4.029,70,4.029,71,4.029,72,1.575,73,4.029,74,4.029,75,1.244,76,4.029,77,4.029,78,4.029,79,5.412,80,5.412,81,4.029,82,4.029,83,3.181,84,4.029,85,3.397,86,4.029,87,0.005,88,0.007,89,0.005]],["title/classes/AbstractCacheService.html",[67,0.106,90,2.824]],["body/classes/AbstractCacheService.html",[3,0.131,4,0.131,5,0.117,6,5.69,8,0.455,9,1.444,10,1.626,12,1.335,14,0.875,15,1.918,24,0.888,27,2.033,29,0.848,30,0.01,31,0.602,32,0.557,33,0.697,35,0.822,49,4.852,53,1.045,54,1.008,55,0.954,56,1.136,60,1.602,63,0.131,67,0.146,75,1.168,87,0.007,88,0.008,89,0.007,90,4.768,91,4.41,92,5.23,93,5.831,94,5.396,95,4.452,96,4.768,97,5.943,98,5.396,99,5.943,100,5.368,101,5.396,102,5.943,103,7.858,104,5.943,105,4.41,106,5.943,107,5.943,108,7.858,109,5.943,110,5.943]],["title/injectables/ActorRepositoryService.html",[0,1.329,111,2.824]],["body/injectables/ActorRepositoryService.html",[0,2.12,2,2.626,3,0.12,4,0.12,5,0.106,8,0.416,9,1.365,12,1.326,14,0.827,15,2.039,23,1.044,24,0.925,27,2.043,29,0.88,30,0.01,31,0.625,32,0.658,33,0.722,35,0.777,50,1.262,53,0.987,54,0.92,55,0.871,56,1.073,58,0.152,59,0.216,60,1.513,63,0.12,67,0.133,75,0.871,87,0.008,88,0.008,89,0.006,111,4.505,112,3.041,113,7.353,114,4.774,115,7.541,116,7.541,117,6.871,118,5.504,119,5.425,120,6.976,121,6.871,122,6.047,123,6.871,124,5.425,125,6.35,126,7.541,127,6.871,128,0.118,129,5.425,130,5.425,131,1.134,132,1.134,133,1.134,134,1.134,135,1.134,136,1.134,137,0.97,138,5.425,139,5.425,140,5.425,141,5.425,142,5.425,143,5.425,144,5.425,145,7.541,146,5.425,147,5.425,148,5.425,149,5.425]],["title/components/AmbientLightComponent.html",[128,0.064,150,0.73]],["body/components/AmbientLightComponent.html",[3,0.088,4,0.088,5,0.079,8,0.307,10,0.796,12,1.154,13,0.696,14,0.675,23,0.853,24,0.794,27,1.335,29,0.467,30,0.01,31,0.581,32,0.43,33,0.62,34,0.543,35,0.453,53,0.575,54,0.951,55,0.901,56,0.626,58,0.163,59,0.159,60,0.882,63,0.088,67,0.098,75,0.643,87,0.004,88,0.006,89,0.004,128,0.096,131,0.661,132,0.661,133,0.661,134,0.661,135,0.661,136,0.661,137,1.255,150,1.19,151,0.926,152,0.755,153,0.755,154,6.503,155,2.784,156,0.829,157,1.968,158,0.626,159,4.495,160,1.509,161,1.429,162,1.189,163,5.208,164,1.031,165,2.791,166,1.268,167,2.83,168,4.806,169,0.882,170,1.482,171,2,172,4.164,173,1.442,174,3.679,175,2.972,176,5.612,177,4.006,178,1.464,179,1.442,180,1.301,181,1.084,182,0.882,183,0.929,184,0.877,185,1.172,186,0.978,187,4.006,188,4.006,189,2.972,190,0.439,191,1.031,192,1.031,193,0.543,194,1.323,195,0.755,196,1.323,197,0.679,198,0.736,199,1.058,200,0.679,201,0.755,202,0.679,203,0.716,204,1.537,205,0.679,206,0.736,207,0.755,208,0.679,209,0.736,210,0.679,211,1.123,212,0.755,213,0.698,214,0.755,215,0.679,216,0.755,217,0.679,218,0.755,219,0.679,220,0.716,221,0.755,222,0.679,223,0.736,224,0.679,225,0.755,226,0.679,227,0.736,228,0.755,229,0.661,230,0.736,231,0.755,232,0.679,233,0.755,234,0.679,235,0.755,236,0.679,237,0.716,238,0.679,239,1.158,240,1.537,241,0.679,242,0.679,243,0.679,244,0.736,245,0.679,246,0.755,247,0.679,248,0.679,249,0.755,250,0.679,251,0.643,252,0.679,253,1.058,254,0.626,255,0.679,256,1.323,257,0.679,258,0.679,259,0.679,260,0.736,261,0.679,262,0.736,263,1.058,264,0.679,265,0.736,266,0.679,267,0.716,268,0.679,269,0.716,270,0.679,271,0.679,272,0.755,273,0.643,274,0.755,275,0.716,276,0.716,277,0.716,278,0.679,279,0.736,280,0.679,281,0.736,282,0.679,283,0.698,284,0.679,285,1.004,286,0.679,287,0.679,288,0.736,289,0.679,290,0.736,291,0.755,292,0.755,293,0.643,294,0.661,295,0.698,296,0.755,297,0.661,298,1.012,299,0.755,300,0.661,301,0.755,302,0.643,303,0.755,304,0.661,305,0.698,306,0.698,307,0.736,308,0.755]],["title/injectables/AnimationService.html",[0,1.329,309,2.247]],["body/injectables/AnimationService.html",[0,1.976,2,2.355,3,0.107,4,0.107,5,0.096,8,0.373,9,1.272,14,0.771,15,2.073,23,0.973,24,0.918,29,0.568,30,0.01,31,0.403,32,0.373,33,0.466,35,0.809,50,1.315,54,1.086,55,1.028,56,1.001,58,0.141,59,0.193,63,0.107,67,0.119,72,1.674,87,0.005,88,0.007,89,0.005,151,1.304,169,1.072,170,1.571,181,1.316,237,1.361,271,0.825,309,4.507,310,4.282,311,3.19,312,3.984,313,6.094,314,6.405,315,5.13,316,4.31,317,5.13,318,5.636,319,6.405,320,4.752,321,6.405,322,6.405,323,6.405,324,4.292,325,6.695,326,7.608,327,7.159,328,4.694,329,2.477,330,6.094,331,7.608,332,6.501,333,6.501,334,6.405,335,4.866,336,4.866,337,4.752,338,4.866,339,6.405,340,4.243,341,4.866,342,5.13,343,6.405,344,6.405,345,3.984,346,6.405,347,6.405,348,6.405,349,6.405,350,5.735,351,2.269,352,6.405,353,4.866,354,4.866,355,6.501,356,1.462,357,4.866,358,4.866,359,6.405,360,4.866,361,4.866,362,4.866,363,4.866,364,3.897,365,3.897,366,4.866,367,2.538]],["title/modules/AtftAnimationModule.html",[368,1.024,369,2.993]],["body/modules/AtftAnimationModule.html",[3,0.145,4,0.145,5,0.129,13,1.019,30,0.01,58,0.171,59,0.262,63,0.145,67,0.162,87,0.007,88,0.009,89,0.007,190,0.722,309,4.566,368,1.568,369,6.082,370,2.47,371,2.47,372,2.621,373,2.621,374,2.621,375,5.802,376,5.802,377,2.9,378,2.47,379,2.544,380,6.592,381,6.592,382,3.173,383,6.592]],["title/modules/AtftCameraModule.html",[368,1.024,384,2.993]],["body/modules/AtftCameraModule.html",[3,0.136,4,0.136,5,0.121,13,0.767,30,0.01,58,0.183,59,0.246,63,0.136,67,0.152,87,0.007,88,0.008,89,0.007,190,0.677,261,1.523,262,1.136,264,1.523,265,1.136,368,1.471,370,2.317,371,2.317,372,3.179,373,2.459,374,3.179,377,2.792,378,2.317,379,2.387,382,3.055,384,6.191,385,5.443,386,5.443,387,5.443,388,6.185,389,6.185,390,3.255,391,2.616,392,7.451,393,2.536]],["title/modules/AtftConnectorModule.html",[368,1.024,394,2.993]],["body/modules/AtftConnectorModule.html",[3,0.141,4,0.141,5,0.125,13,0.791,30,0.01,58,0.179,59,0.253,63,0.141,67,0.156,87,0.007,88,0.008,89,0.007,190,0.698,247,1.528,248,1.081,368,1.517,370,2.389,371,2.389,372,3.221,373,2.536,374,3.221,377,2.843,378,2.389,379,2.461,382,3.111,390,3.315,391,2.698,393,2.615,394,6.1,395,5.612,396,5.612,397,5.612,398,6.377,399,6.377,400,6.377]],["title/modules/AtftControlModule.html",[368,1.024,401,2.993]],["body/modules/AtftControlModule.html",[3,0.136,4,0.136,5,0.121,13,0.767,30,0.01,53,0.888,58,0.183,59,0.246,63,0.136,67,0.152,87,0.007,88,0.008,89,0.007,190,0.677,252,1.523,259,1.523,260,1.136,368,1.471,370,2.317,371,2.317,372,3.179,373,2.459,374,3.179,377,2.792,378,2.317,379,2.387,382,3.055,390,3.255,391,2.616,393,2.536,401,6.191,402,5.443,403,5.443,404,5.443,405,6.185,406,6.185,407,7.451]],["title/modules/AtftDataCenterActorModule.html",[368,1.024,408,3.196]],["body/modules/AtftDataCenterActorModule.html",[3,0.098,4,0.098,5,0.087,13,0.847,30,0.01,34,0.6,58,0.19,59,0.176,63,0.098,67,0.108,87,0.005,88,0.007,89,0.005,111,5.178,112,1.611,131,1.432,132,1.432,133,1.432,134,1.432,135,1.432,136,1.432,137,0.791,190,0.485,210,1.471,213,1.511,215,1.453,217,1.471,219,1.453,238,1.453,245,1.453,275,0.791,276,0.791,277,0.791,313,3.544,368,1.052,370,1.658,371,1.658,372,2.714,373,1.759,374,2.714,377,2.252,378,1.658,379,1.707,382,2.464,390,2.626,391,1.872,393,2.464,408,6.789,409,3.894,410,3.894,411,3.894,412,3.894,413,3.894,414,4.912,415,4.425,416,3.544,417,3.283,418,3.894,419,6.011,420,4.425,421,7.109,422,3.894,423,7.323,424,4.425,425,4.425,426,2.403]],["title/modules/AtftEffectModule.html",[368,1.024,427,2.993]],["body/modules/AtftEffectModule.html",[3,0.122,4,0.122,5,0.109,13,0.688,30,0.01,58,0.19,59,0.22,63,0.122,67,0.136,87,0.006,88,0.008,89,0.006,190,0.607,200,1.502,224,1.502,226,1.502,229,1.462,234,1.502,294,1.462,295,0.965,368,1.318,370,2.077,371,2.077,372,3.028,373,2.204,374,3.028,377,2.609,378,2.077,379,2.139,382,2.855,390,3.042,391,2.344,393,2.272,427,6.311,428,4.877,429,4.877,430,4.877,431,5.542,432,5.542,433,5.542,434,5.542,435,5.542,436,5.542,437,5.542,438,5.542,439,4.112,440,5.542]],["title/modules/AtftHelperModule.html",[368,1.024,441,2.993]],["body/modules/AtftHelperModule.html",[3,0.133,4,0.133,5,0.118,13,0.746,30,0.01,58,0.186,59,0.239,63,0.133,67,0.147,87,0.007,88,0.008,89,0.007,190,0.658,197,1.518,198,1.104,232,1.518,239,1.075,241,1.518,368,1.43,370,2.253,371,2.253,372,3.141,373,2.391,374,3.141,377,2.744,378,2.253,379,2.32,382,3.003,390,3.2,391,2.544,393,2.465,441,6.241,442,5.292,443,5.292,444,5.292,445,6.013,446,6.013,447,7.324,448,6.013]],["title/modules/AtftLightModule.html",[368,1.024,449,2.993]],["body/modules/AtftLightModule.html",[3,0.127,4,0.127,5,0.113,13,0.717,30,0.01,58,0.187,59,0.23,63,0.127,67,0.142,87,0.006,88,0.008,89,0.006,150,1.521,159,6.215,162,1.061,190,0.632,222,1.51,223,1.061,243,1.51,244,1.061,268,1.51,269,1.033,368,1.374,370,2.164,371,2.164,372,3.085,373,2.297,374,3.085,377,2.677,378,2.164,379,2.229,382,2.93,390,3.122,391,2.443,393,2.368,449,6.266,450,5.083,451,5.083,452,5.083,453,5.083,454,5.776,455,5.776,456,8.107]],["title/modules/AtftLoaderModule.html",[368,1.024,457,2.993]],["body/modules/AtftLoaderModule.html",[3,0.129,4,0.129,5,0.115,13,0.724,30,0.01,58,0.188,59,0.232,63,0.129,67,0.143,87,0.006,88,0.008,89,0.006,184,0.911,190,0.639,255,1.512,257,1.512,258,0.989,280,1.512,281,1.071,282,1.512,283,1.016,368,1.388,370,2.186,371,2.186,372,3.099,373,2.319,374,3.099,377,2.694,378,2.186,379,2.251,382,2.948,390,3.141,391,2.468,393,2.392,457,6.272,458,5.134,459,5.134,460,5.134,461,5.834,462,5.834,463,8.135]],["title/modules/AtftMeshModule.html",[368,1.024,464,2.993]],["body/modules/AtftMeshModule.html",[3,0.116,4,0.116,5,0.103,13,0.65,30,0.01,58,0.191,59,0.208,63,0.116,67,0.128,87,0.006,88,0.007,89,0.006,190,0.574,202,1.49,203,0.937,208,1.49,209,0.962,236,1.49,237,0.937,239,0.937,242,1.49,266,1.49,267,0.937,278,1.49,279,0.962,287,1.49,288,0.962,289,1.49,290,0.962,368,1.246,370,1.963,371,1.963,372,2.95,373,2.083,374,2.95,377,2.517,378,1.963,379,2.021,382,2.755,390,2.935,391,2.216,393,2.147,464,6.331,465,4.61,466,4.61,467,4.61,468,5.238,469,5.238,470,7.504]],["title/modules/AtftModule.html",[368,1.024,414,2.679]],["body/modules/AtftModule.html",[3,0.114,4,0.114,5,0.101,13,0.641,30,0.01,55,0.829,58,0.192,59,0.205,63,0.114,67,0.127,87,0.006,88,0.007,89,0.006,190,0.566,320,3.833,368,1.584,369,6.096,370,1.935,371,1.935,372,2.054,373,2.054,374,2.93,377,2.495,378,1.935,379,1.993,382,2.73,384,6.096,393,3.021,401,6.096,414,5.668,427,6.096,471,4.546,472,4.546,473,4.546,474,6.096,475,6.096,476,6.096,477,6.096,478,5.166,479,5.166,480,5.166,481,5.166,482,5.166,483,5.166,484,5.166,485,5.121,486,5.166,487,5.166,488,5.166,489,5.166,490,5.166,491,5.166,492,5.166,493,5.166,494,5.166,495,5.166,496,5.166,497,4.546,498,4.546,499,4.546,500,2.593,501,5.166,502,5.166,503,5.166]],["title/modules/AtftObjectModule.html",[368,1.024,474,2.993]],["body/modules/AtftObjectModule.html",[3,0.109,4,0.109,5,0.097,13,0.896,30,0.01,58,0.191,59,0.197,63,0.109,67,0.121,87,0.006,88,0.007,89,0.006,190,0.542,205,1.383,206,0.91,251,0.795,273,1.4,368,1.178,370,1.856,371,1.856,372,2.872,373,1.97,374,2.872,377,2.428,378,1.856,379,1.911,382,2.657,390,2.831,391,2.095,393,2.657,394,6.059,441,6.059,449,6.059,457,6.059,464,6.059,474,6.356,504,4.359,505,4.359,506,4.359,507,4.359,508,4.359,509,6.059,510,5.347,511,5.073,512,5.347,513,5.347,514,5.347,515,4.954,516,4.954,517,4.954,518,4.954,519,4.954,520,4.954,521,4.954,522,4.954,523,4.954,524,4.954,525,4.954,526,4.954,527,4.954,528,4.954,529,4.954,530,4.954]],["title/modules/AtftPipeModule.html",[368,1.024,485,2.993]],["body/modules/AtftPipeModule.html",[3,0.137,4,0.137,5,0.122,13,0.77,30,0.01,58,0.183,59,0.247,63,0.137,67,0.152,87,0.007,88,0.008,89,0.007,190,0.679,368,1.476,370,2.324,371,2.324,372,3.184,373,2.467,374,3.184,377,2.797,378,2.324,379,2.394,382,3.06,390,3.261,391,2.624,393,2.543,485,6.193,531,5.46,532,5.46,533,5.46,534,6.244,535,6.244,536,6.204,537,6.204,538,6.204,539,6.204]],["title/modules/AtftRaycasterModule.html",[368,1.024,475,2.993]],["body/modules/AtftRaycasterModule.html",[3,0.129,4,0.129,5,0.115,13,0.969,30,0.01,58,0.188,59,0.233,63,0.129,67,0.144,87,0.007,88,0.008,89,0.007,190,0.642,297,1.473,298,1.221,300,1.473,302,1.433,368,1.395,370,2.198,371,2.198,372,3.107,373,2.333,374,3.107,377,2.703,378,2.198,379,2.264,382,2.958,390,3.152,391,2.482,393,2.405,475,6.26,540,5.163,541,5.163,542,5.163,543,5.163,544,4.278,545,5.867,546,5.867,547,5.867,548,4.077,549,5.867,550,5.867]],["title/modules/AtftRendererModule.html",[368,1.024,476,2.993]],["body/modules/AtftRendererModule.html",[3,0.135,4,0.135,5,0.12,13,0.988,30,0.01,58,0.187,59,0.243,63,0.135,67,0.15,87,0.007,88,0.008,89,0.007,170,1.666,190,0.67,270,1.521,271,1.038,368,1.456,370,2.293,371,2.293,372,3.165,373,2.434,374,3.165,377,2.774,378,2.293,379,2.362,382,3.035,390,3.234,391,2.589,393,2.509,476,6.21,551,5.386,552,5.386,553,5.386,554,5.386,555,5.643,556,6.121,557,6.121,558,6.121,559,5.386,560,6.121]],["title/modules/AtftStatsModule.html",[368,1.024,477,2.993]],["body/modules/AtftStatsModule.html",[3,0.137,4,0.137,5,0.122,13,0.995,30,0.01,58,0.183,59,0.247,63,0.137,67,0.152,87,0.007,88,0.008,89,0.007,190,0.681,304,1.483,305,1.084,306,1.084,368,1.48,370,2.332,371,2.332,372,3.188,373,2.474,374,3.188,377,2.802,378,2.332,379,2.401,382,3.066,390,3.267,391,2.632,393,2.551,477,6.163,561,5.476,562,5.476,563,5.476,564,5.476,565,5.374,566,6.223,567,5.476,568,6.223]],["title/modules/AtftTextModule.html",[368,1.024,509,2.993]],["body/modules/AtftTextModule.html",[3,0.141,4,0.141,5,0.125,13,0.791,30,0.01,58,0.179,59,0.253,63,0.141,67,0.156,87,0.007,88,0.008,89,0.007,190,0.698,285,1.14,286,1.528,368,1.517,370,2.389,371,2.389,372,3.221,373,2.536,374,3.221,377,2.843,378,2.389,379,2.461,382,3.111,390,3.315,391,2.698,393,2.615,470,5.612,509,6.1,569,5.612,570,5.612,571,5.612,572,6.377,573,6.377]],["title/components/AxesHelperComponent.html",[128,0.064,197,0.73]],["body/components/AxesHelperComponent.html",[3,0.09,4,0.09,5,0.081,8,0.314,10,0.815,12,1.165,13,0.708,14,0.687,23,0.867,24,0.742,29,0.479,30,0.01,31,0.587,32,0.314,33,0.628,34,0.556,35,0.464,53,0.589,54,0.695,55,0.659,56,0.641,58,0.164,59,0.163,63,0.09,67,0.1,75,0.659,87,0.005,88,0.006,89,0.005,128,0.098,131,0.677,132,0.677,133,0.677,134,0.677,135,0.677,136,0.677,137,1.268,150,0.695,151,0.942,152,0.773,153,0.773,156,0.843,157,1.982,158,0.641,160,1.511,161,1.43,162,0.753,164,1.048,165,2.82,166,1.289,169,0.903,170,1.493,171,2.021,178,1.289,179,1.466,180,1.323,181,1.11,182,0.903,183,0.951,184,0.891,185,1.2,186,1.001,190,0.449,191,1.048,192,1.048,193,0.556,194,1.337,195,0.773,196,1.337,197,1.202,198,1.205,199,1.076,200,0.695,201,0.773,202,0.695,203,0.734,204,1.546,205,0.695,206,0.753,207,0.773,208,0.695,209,0.753,210,0.695,211,1.133,212,0.773,213,0.714,214,0.773,215,0.695,216,0.773,217,0.695,218,0.773,219,0.695,220,0.734,221,0.773,222,0.695,223,0.753,224,0.695,225,0.773,226,0.695,227,0.753,228,0.773,229,0.677,230,0.753,231,0.773,232,0.695,233,0.773,234,0.695,235,0.773,236,0.695,237,0.734,238,0.695,239,1.173,240,1.546,241,0.695,242,0.695,243,0.695,244,0.753,245,0.695,246,0.773,247,0.695,248,0.695,249,0.773,250,0.695,251,0.659,252,0.695,253,1.076,254,0.641,255,0.695,256,1.337,257,0.695,258,0.695,259,0.695,260,0.753,261,0.695,262,0.753,263,1.076,264,0.695,265,0.753,266,0.695,267,0.734,268,0.695,269,0.734,270,0.695,271,0.695,272,0.773,273,0.659,274,0.773,275,0.734,276,0.734,277,0.734,278,0.695,279,0.753,280,0.695,281,0.753,282,0.695,283,0.714,284,0.695,285,1.02,286,0.695,287,0.695,288,0.753,289,0.695,290,0.753,291,0.773,292,0.773,293,0.659,294,0.677,295,0.714,296,0.773,297,0.677,298,1.025,299,0.773,300,0.677,301,0.773,302,0.659,303,0.773,304,0.677,305,0.714,306,0.714,307,0.753,308,0.773,574,6.241,575,3.286,576,5.706,577,5.021,578,4.301,579,5.021,580,4.57,581,4.102,582,5.021,583,4.102,584,4.102]],["title/interfaces/BaseAssetSource.html",[64,1.524,65,2.679]],["body/interfaces/BaseAssetSource.html",[0,2.163,1,3.485,3,0.124,4,0.169,5,0.11,6,3.893,7,4.157,8,0.429,9,1.393,10,1.64,11,3.893,12,1.095,13,0.695,15,2.056,20,3.174,23,0.851,26,3.893,27,2.088,30,0.01,32,0.429,34,1.12,36,5.854,37,3.893,38,5.854,40,3.893,41,4.157,43,4.157,45,4.157,47,4.157,49,3.32,51,4.157,53,1.007,56,0.875,58,0.124,59,0.223,60,1.819,61,4.157,62,4.157,63,0.155,64,1.982,65,4.361,66,5.414,67,0.137,68,4.157,69,4.931,70,4.931,71,4.931,72,1.927,73,4.931,74,4.931,75,1.326,76,4.931,77,4.931,78,4.931,79,6.17,80,6.17,81,4.931,82,4.931,83,3.893,84,4.931,85,4.157,86,4.931,87,0.006,88,0.008,89,0.006,585,3.042]],["title/interfaces/BaseInfo.html",[64,1.524,586,2.552]],["body/interfaces/BaseInfo.html",[3,0.134,4,0.134,5,0.119,8,0.466,9,1.465,27,2.155,30,0.01,31,0.684,32,0.648,33,0.791,34,0.825,58,0.134,63,0.186,64,2.991,87,0.007,88,0.008,89,0.007,112,2.215,156,1.173,167,2.658,173,1.563,211,1.121,254,0.951,426,3.304,585,3.304,586,5.011,587,3.055,588,3.989,589,4.591,590,4.482,591,3.055,592,3.989,593,3.447,594,3.304,595,3.989,596,4.228,597,4.141,598,3.785,599,3.174]],["title/injectables/BloomService.html",[0,1.329,555,2.824]],["body/injectables/BloomService.html",[0,1.714,2,1.911,3,0.087,4,0.087,5,0.078,8,0.302,9,1.103,12,1.36,14,0.668,15,1.984,20,3.147,24,0.942,29,0.814,30,0.01,31,0.532,32,0.563,33,0.616,35,0.788,50,1.468,54,1.182,55,1.224,56,1.313,58,0.176,59,0.157,60,1.79,63,0.123,67,0.097,72,1.358,87,0.004,88,0.006,89,0.004,180,1.49,258,0.942,271,0.942,324,3.787,329,2.482,345,2.456,351,2.329,356,1.931,364,4.45,555,3.642,597,2.898,600,3.163,601,6.427,602,6.427,603,6.427,604,6.427,605,6.427,606,6.427,607,5.242,608,5.555,609,5.555,610,5.555,611,3.948,612,5.555,613,6.138,614,5.887,615,4.356,616,6.427,617,3.948,618,3.948,619,5.555,620,3.948,621,6.468,622,3.948,623,5.555,624,3.948,625,4.889,626,4.889,627,3.948,628,3.948,629,3.948,630,3.948,631,3.948,632,3.475,633,3.475,634,3.948,635,3.948,636,3.475,637,4.45,638,3.163,639,3.948,640,3.948,641,3.163,642,3.948,643,2.339,644,5.148,645,4.889,646,4.889,647,6.468,648,3.163,649,3.475,650,3.475,651,3.475,652,4.889,653,3.147,654,5.148,655,4.889,656,4.889,657,6.138,658,5.656,659,3.475,660,4.889,661,3.948,662,3.163,663,3.948,664,3.948,665,3.948,666,3.948,667,3.948,668,3.948,669,4.466,670,1.67,671,3.86,672,3.948,673,3.948,674,3.948,675,6.427,676,3.948,677,3.948,678,2.743,679,3.948,680,3.948,681,5.555,682,3.948,683,2.06,684,3.948,685,3.948,686,3.948,687,3.948,688,3.948,689,3.948,690,2.456,691,3.948,692,3.948,693,3.948,694,3.948,695,3.948,696,3.948,697,3.948,698,3.948,699,3.948,700,3.948,701,6.974,702,3.948,703,3.948,704,5.555,705,3.948,706,3.948,707,3.948,708,3.948,709,5.555,710,3.948,711,3.948,712,6.974,713,6.427,714,3.948,715,3.948]],["title/components/BlurComponent.html",[128,0.064,200,0.73]],["body/components/BlurComponent.html",[3,0.09,4,0.09,5,0.08,8,0.312,10,0.809,12,0.887,14,0.683,23,0.863,24,0.739,29,0.662,30,0.01,31,0.616,32,0.435,33,0.677,34,0.552,35,0.642,50,0.748,53,0.585,58,0.174,59,0.162,63,0.09,67,0.1,75,0.654,87,0.005,88,0.006,89,0.005,128,0.097,131,0.672,132,0.672,133,0.672,134,0.672,135,0.672,136,0.672,137,1.264,150,0.691,151,0.937,152,0.768,153,0.768,156,0.839,158,0.636,160,1.51,161,1.43,162,0.748,164,0.748,169,0.897,170,1.49,179,1.459,181,1.102,184,0.636,186,0.994,190,0.446,191,1.043,192,1.043,193,0.552,194,1.333,195,0.768,196,1.333,197,0.691,198,0.748,199,1.07,200,1.199,201,0.768,202,0.691,203,0.728,204,1.543,205,0.691,206,0.748,207,0.768,208,0.691,209,0.748,210,0.691,211,1.13,212,0.768,213,0.709,214,0.768,215,0.691,216,0.768,217,0.691,218,0.768,219,0.691,220,0.728,221,0.768,222,0.691,223,0.748,224,0.691,225,0.768,226,0.691,227,0.748,228,0.768,229,1.227,230,1.2,231,0.768,232,0.691,233,0.768,234,0.691,235,0.768,236,0.691,237,0.728,238,0.691,239,1.169,240,1.543,241,0.691,242,0.691,243,0.691,244,0.748,245,0.691,246,0.768,247,0.691,248,0.963,249,0.768,250,0.691,251,0.654,252,0.691,253,1.07,254,0.636,255,0.691,256,1.333,257,0.691,258,0.691,259,0.691,260,0.748,261,0.691,262,0.748,263,1.07,264,0.691,265,0.748,266,0.691,267,0.728,268,0.691,269,0.728,270,0.691,271,0.691,272,0.768,273,0.654,274,0.768,275,0.728,276,0.728,277,0.728,278,0.691,279,0.748,280,0.691,281,0.748,282,0.691,283,0.709,284,0.691,285,1.015,286,0.691,287,0.691,288,0.748,289,0.691,290,0.748,291,0.768,292,0.768,293,0.654,294,0.672,295,0.709,296,0.768,297,0.672,298,1.021,299,0.768,300,0.672,301,0.768,302,0.654,303,0.768,304,0.672,305,0.709,306,0.709,307,0.748,308,0.768,351,1.291,439,3.023,637,3.263,638,3.263,683,2.125,716,3.585,717,5.236,718,5.678,719,4.548,720,5.663,721,4.913,722,4.074,723,4.548,724,3.303,725,4.074,726,2.653,727,2.414,728,4.074,729,4.074,730,4.074,731,4.074,732,4.074,733,3.263,734,5.663,735,5.678,736,5.678,737,2.671,738,2.414,739,2.831,740,2.831,741,2.831,742,3.023,743,3.023,744,3.263]],["title/components/BoxMeshComponent.html",[128,0.064,202,0.73]],["body/components/BoxMeshComponent.html",[3,0.074,4,0.074,5,0.066,8,0.257,10,0.982,12,1.078,13,0.613,14,0.595,23,0.751,24,0.865,29,0.392,30,0.01,31,0.536,32,0.257,33,0.802,34,0.455,35,0.38,53,0.482,54,1.223,55,1.159,56,0.772,58,0.159,59,0.133,60,1.292,63,0.074,67,0.082,75,0.539,87,0.004,88,0.005,89,0.004,128,0.087,131,0.554,132,0.554,133,0.554,134,0.554,135,0.554,136,0.554,137,1.157,150,0.569,151,0.816,152,0.633,153,0.633,156,0.73,157,1.663,158,0.525,160,1.497,161,1.417,162,0.616,164,0.908,165,2.573,166,1.117,169,0.739,170,1.396,171,1.844,173,1.854,178,1.686,179,1.27,180,1.146,181,0.908,182,0.739,183,0.778,184,0.772,185,1.446,186,0.819,190,0.368,191,0.908,192,0.908,193,0.455,194,1.22,195,0.633,196,1.22,197,0.569,198,0.616,199,0.932,200,0.569,201,0.633,202,1.097,203,1.049,204,1.473,205,0.569,206,0.616,207,0.633,208,0.569,209,0.616,210,0.569,211,1.048,212,0.633,213,0.585,214,0.633,215,0.569,216,0.633,217,0.569,218,0.633,219,0.569,220,0.6,221,0.633,222,0.569,223,0.616,224,0.569,225,0.633,226,0.569,227,0.616,228,0.633,229,0.554,230,0.616,231,0.633,232,0.569,233,0.633,234,0.569,235,0.633,236,0.569,237,0.6,238,0.569,239,1.049,240,1.473,241,0.569,242,0.569,243,0.569,244,0.616,245,0.569,246,0.633,247,0.569,248,0.569,249,0.633,250,0.569,251,0.539,252,0.569,253,0.932,254,0.525,255,0.569,256,1.22,257,0.569,258,0.569,259,0.569,260,0.616,261,0.569,262,0.616,263,0.932,264,0.569,265,0.616,266,0.569,267,0.6,268,0.569,269,0.6,270,0.569,271,0.569,272,0.633,273,0.539,274,0.633,275,0.6,276,0.6,277,0.6,278,0.569,279,0.616,280,0.569,281,0.616,282,0.569,283,0.585,284,0.569,285,0.884,286,0.569,287,0.569,288,0.616,289,0.569,290,0.616,291,0.633,292,0.633,293,0.539,294,0.554,295,0.585,296,0.633,297,0.554,298,0.917,299,0.633,300,0.554,301,0.633,302,0.539,303,0.633,304,0.554,305,0.585,306,0.585,307,0.616,308,0.633,599,3.763,643,3.101,653,4.087,745,6.876,746,1.823,747,3.477,748,4.943,749,3.598,750,6.565,751,5.867,752,3.485,753,4.353,754,4.226,755,4.353,756,4.35,757,2.689,758,5.353,759,5.353,760,4.35,761,5.779,762,6.529,763,6.349,764,6.349,765,6.349,766,5.779,767,6.349,768,2.689,769,3.075,770,3.357,771,2.491,772,3.075,773,2.955,774,3.357,775,3.357,776,1.467,777,3.357,778,2.201,779,3.357,780,2.491,781,2.491,782,3.357,783,2.309,784,1.902,785,1.823,786,2.088]],["title/interfaces/Composition.html",[64,1.524,589,2.339]],["body/interfaces/Composition.html",[3,0.137,4,0.137,5,0.122,8,0.476,9,1.484,27,2.138,30,0.01,31,0.515,32,0.614,33,0.716,34,0.843,58,0.137,63,0.188,64,3.009,87,0.007,88,0.008,89,0.007,112,2.262,156,1.228,167,2.714,173,1.596,211,1.135,254,0.971,426,3.374,585,3.374,586,5.04,587,3.119,588,4.074,589,4.35,590,3.374,591,3.119,592,5.45,593,3.52,594,3.374,595,4.074,596,4.317,597,4.179,598,3.865,599,3.241]],["title/components/ContentProjectionComponent.html",[128,0.064,205,0.73]],["body/components/ContentProjectionComponent.html",[3,0.088,4,0.088,5,0.079,8,0.307,9,1.115,10,0.796,12,1.097,13,0.697,14,0.676,23,0.853,24,0.794,29,0.655,30,0.01,31,0.635,32,0.496,33,0.673,34,0.544,35,0.635,50,0.736,53,0.576,58,0.163,59,0.159,63,0.088,67,0.098,83,2.786,87,0.004,88,0.006,89,0.004,128,0.096,131,0.662,132,0.662,133,0.662,134,0.662,135,0.662,136,0.662,137,1.256,150,0.68,151,0.927,152,0.756,153,0.756,156,0.83,157,2.096,158,0.626,160,1.509,161,1.429,162,0.736,164,1.031,165,2.577,169,0.883,170,1.483,171,2.001,179,1.443,181,1.085,182,0.883,183,0.93,184,1.155,185,1.173,186,0.979,190,0.439,191,1.031,192,1.031,193,0.544,194,1.324,195,0.756,196,1.324,197,0.68,198,0.736,199,1.059,200,0.68,201,0.756,202,0.68,203,0.717,204,1.538,205,1.19,206,1.289,207,0.756,208,0.68,209,0.736,210,0.68,211,1.123,212,0.756,213,0.698,214,0.756,215,0.68,216,0.756,217,0.68,218,0.756,219,0.68,220,0.717,221,0.756,222,0.68,223,0.736,224,0.68,225,0.756,226,0.68,227,0.736,228,0.756,229,0.662,230,0.736,231,0.756,232,1.253,233,0.756,234,0.68,235,0.756,236,0.68,237,0.717,238,0.68,239,1.159,240,1.538,241,0.68,242,0.68,243,0.68,244,0.736,245,0.68,246,0.756,247,0.68,248,0.68,249,0.756,250,0.68,251,0.644,252,0.68,253,1.059,254,0.626,255,0.68,256,1.324,257,0.68,258,0.68,259,0.68,260,0.736,261,0.68,262,0.736,263,1.059,264,0.68,265,0.736,266,0.68,267,0.717,268,0.68,269,0.717,270,0.68,271,0.68,272,0.756,273,0.644,274,0.756,275,0.717,276,0.717,277,0.717,278,0.68,279,0.736,280,0.68,281,0.736,282,0.68,283,0.698,284,0.68,285,1.004,286,0.68,287,0.68,288,0.736,289,0.68,290,0.736,291,0.756,292,0.756,293,0.644,294,0.662,295,0.698,296,0.756,297,0.662,298,1.013,299,0.756,300,0.662,301,0.756,302,0.644,303,0.756,304,0.662,305,0.698,306,0.698,307,0.736,308,0.756,498,3.529,787,6.18,788,3.529,789,5.616,790,5.616,791,7.022,792,5.616,793,5.616,794,5.616,795,4.01,796,2.376,797,3.212,798,2.376,799,2.786,800,5.616,801,2.786,802,4.01,803,4.01,804,4.01,805,4.01,806,4.01,807,3.529,808,3.529,809,4.01,810,2.975]],["title/components/CylinderMeshComponent.html",[128,0.064,208,0.73]],["body/components/CylinderMeshComponent.html",[3,0.081,4,0.081,5,0.072,8,0.281,10,1.048,12,1.117,13,0.655,14,0.635,23,0.802,24,0.917,29,0.428,30,0.01,31,0.559,32,0.281,33,0.591,34,0.498,35,0.415,53,0.528,54,1.33,55,1.26,56,0.824,58,0.164,59,0.146,60,1.36,63,0.081,67,0.09,75,0.59,87,0.004,88,0.006,89,0.004,128,0.092,131,0.606,132,0.606,133,0.606,134,0.606,135,0.606,136,0.606,137,1.207,150,0.623,151,0.871,152,0.692,153,0.692,156,0.78,157,1.734,158,0.574,160,1.503,161,1.423,162,0.674,164,0.969,165,2.684,166,1.192,169,0.809,170,1.44,171,1.924,178,1.806,179,1.356,180,1.223,181,0.994,182,0.809,183,0.851,184,0.824,185,1.544,186,0.896,190,0.402,191,0.969,192,0.969,193,0.498,194,1.273,195,0.692,196,1.273,197,0.623,198,0.674,199,0.995,200,0.623,201,0.692,202,0.623,203,0.657,204,1.506,205,0.623,206,0.674,207,0.692,208,1.144,209,1.134,210,0.623,211,1.087,212,0.692,213,0.64,214,0.692,215,0.623,216,0.692,217,0.623,218,0.692,219,0.623,220,0.657,221,0.692,222,0.623,223,0.674,224,0.623,225,0.692,226,0.623,227,0.674,228,0.692,229,0.606,230,0.674,231,0.692,232,0.623,233,0.692,234,0.623,235,0.692,236,0.623,237,0.657,238,0.623,239,1.104,240,1.506,241,0.623,242,0.623,243,0.623,244,0.674,245,0.623,246,0.692,247,0.623,248,0.623,249,0.692,250,0.623,251,0.59,252,0.623,253,0.995,254,0.574,255,0.623,256,1.273,257,0.623,258,0.623,259,0.623,260,0.674,261,0.623,262,0.674,263,0.995,264,0.623,265,0.674,266,0.623,267,0.657,268,0.623,269,0.657,270,0.623,271,0.623,272,0.692,273,0.59,274,0.692,275,0.657,276,0.657,277,0.657,278,0.623,279,0.674,280,0.623,281,0.674,282,0.623,283,0.64,284,0.623,285,0.944,286,0.623,287,0.623,288,0.674,289,0.623,290,0.674,291,0.692,292,0.692,293,0.59,294,0.606,295,0.64,296,0.692,297,0.606,298,0.965,299,0.692,300,0.606,301,0.692,302,0.59,303,0.692,304,0.606,305,0.64,306,0.64,307,0.674,308,0.692,351,1.672,643,1.921,653,4.217,670,2.232,746,1.994,747,3.66,749,3.73,752,2.885,753,4.582,776,1.604,778,2.408,781,2.725,783,2.465,784,2.081,785,1.994,786,2.284,810,2.725,811,7.225,812,5.277,813,6.176,814,5.435,815,6.176,816,6.176,817,6.176,818,6.176,819,3.915,820,3.232,821,3.232,822,3.232,823,3.915,824,2.725,825,2.942,826,2.725,827,3.282,828,4.644,829,3.673,830,3.673,831,2.865,832,3.673,833,3.673,834,3.673,835,3.673,836,3.232,837,3.673,838,3.673,839,3.673]],["title/components/DagreCompositionComponent.html",[128,0.064,210,0.73]],["body/components/DagreCompositionComponent.html",[3,0.059,4,0.059,5,0.053,8,0.206,9,0.832,12,1.309,13,0.519,14,0.504,15,2.01,23,0.636,24,0.964,27,1.577,29,0.599,30,0.01,31,0.608,32,0.616,33,0.6,34,0.366,35,0.849,50,1.379,53,0.387,54,0.71,55,0.672,56,0.802,58,0.153,59,0.107,60,0.594,63,0.059,67,0.066,75,0.433,83,1.873,87,0.003,88,0.005,89,0.003,112,3.113,118,2.159,128,0.076,131,0.445,132,0.445,133,0.445,134,0.445,135,0.445,136,0.445,137,1.035,150,0.457,151,0.691,152,0.508,153,0.508,156,0.619,157,1.487,158,0.421,160,1.479,161,1.402,162,0.495,164,0.769,166,0.946,167,2.242,169,0.594,170,1.283,171,1.649,173,2.022,178,1.499,179,1.076,182,0.594,183,0.625,184,0.654,186,0.658,190,0.295,191,0.769,192,0.769,193,0.366,194,1.091,195,0.508,196,1.091,197,0.457,198,0.495,199,0.789,200,0.457,201,0.508,202,0.457,203,0.482,204,1.385,205,0.457,206,0.495,207,0.508,208,0.457,209,0.495,210,0.981,211,1.162,212,0.508,213,0.469,214,0.508,215,0.981,216,0.508,217,0.457,218,0.508,219,0.457,220,0.482,221,0.508,222,0.457,223,0.495,224,0.457,225,0.508,226,0.457,227,0.495,228,0.508,229,0.445,230,0.495,231,0.508,232,0.457,233,0.508,234,0.457,235,0.508,236,0.457,237,0.482,238,0.457,239,0.918,240,1.385,241,0.457,242,0.457,243,0.457,244,0.495,245,0.457,246,0.508,247,0.457,248,0.457,249,0.508,250,0.457,251,0.433,252,0.457,253,0.789,254,0.654,255,0.457,256,1.091,257,0.457,258,0.457,259,0.457,260,0.495,261,0.457,262,0.495,263,0.789,264,0.457,265,0.495,266,0.457,267,0.918,268,0.457,269,0.482,270,0.457,271,0.71,272,0.508,273,0.433,274,0.508,275,0.482,276,0.482,277,0.482,278,0.457,279,0.495,280,0.457,281,0.495,282,0.457,283,0.469,284,0.457,285,0.749,286,0.457,287,0.457,288,0.495,289,0.457,290,0.495,291,0.508,292,0.508,293,0.433,294,0.445,295,0.469,296,0.508,297,0.445,298,0.802,299,0.508,300,0.445,301,0.508,302,0.433,303,0.508,304,0.445,305,0.469,306,0.469,307,0.495,308,0.508,324,2.787,329,1.884,340,4.101,345,1.677,426,3.402,587,4.294,589,3.601,590,3.142,591,2.905,592,3.365,670,1.14,752,3.233,754,2.908,778,1.767,840,2.372,841,3.365,842,1.258,843,4.112,844,2.242,845,4.187,846,5.133,847,4.517,848,4.517,849,5.133,850,5.093,851,2.528,852,4.635,853,4.294,854,4.635,855,5.093,856,5.093,857,5.093,858,3.684,859,2.745,860,4.112,861,3.809,862,2.481,863,6.09,864,5.133,865,5.787,866,4.187,867,2.696,868,2.696,869,4.187,870,2.696,871,2.696,872,2.696,873,2.696,874,2.696,875,2.696,876,2.696,877,2.696,878,2.696,879,2.696,880,2.696,881,2.696,882,2.696,883,3.684,884,3.809,885,2.696,886,1.873,887,2.696,888,4.635,889,2.696,890,2.696,891,3.042,892,2.696,893,2.696,894,2.696,895,2.696,896,3.6,897,2.372,898,1.527,899,1.677,900,2.696,901,5.133,902,2.696,903,1.873,904,2.696,905,2.696,906,5.093,907,2.372,908,2.696,909,2.372,910,2.372,911,2.372,912,2.372,913,4.112,914,2.372,915,2.372,916,2.372,917,3.684,918,2.696,919,3.898,920,2.372,921,2.372,922,2.159,923,4.635,924,2.372,925,2.696,926,2.372,927,3.794,928,3.684,929,1.767,930,2.372,931,2.696,932,2,933,1.873,934,2.372,935,3.107,936,2.372,937,2.372,938,2.372,939,2.372,940,2.696,941,2.372,942,2.372,943,2.372,944,2.372,945,2.696,946,2.159,947,2.372,948,2.159,949,2.372,950,2.159,951,2.696,952,2.696,953,2.696,954,2.696,955,1.527,956,2.372]],["title/components/DagreLayoutComponent.html",[128,0.064,215,0.73]],["body/components/DagreLayoutComponent.html",[3,0.063,4,0.063,5,0.056,8,0.22,9,0.874,12,1.214,13,0.546,14,0.529,15,1.987,23,0.669,24,0.96,29,0.624,30,0.01,31,0.564,32,0.521,33,0.618,34,0.39,35,0.847,50,1.301,53,0.413,54,1.27,55,1.203,56,0.449,58,0.156,59,0.114,63,0.063,67,0.07,72,2.06,75,0.858,87,0.003,88,0.005,89,0.003,112,3.105,128,0.079,131,0.474,132,0.474,133,0.474,134,0.474,135,0.474,136,0.474,137,1.071,150,0.487,151,0.726,152,0.542,153,0.542,156,0.65,157,1.538,158,0.449,160,1.485,161,1.406,162,0.528,164,0.808,166,0.994,169,0.633,170,1.317,171,1.706,178,1.727,179,1.13,182,0.633,183,0.667,184,0.687,186,0.702,190,0.315,191,0.808,192,0.808,193,0.39,194,1.129,195,0.542,196,1.129,197,0.487,198,0.528,199,0.829,200,0.487,201,0.542,202,0.487,203,0.514,204,1.412,205,0.487,206,0.528,207,0.542,208,0.487,209,0.528,210,0.487,211,1.181,212,0.542,213,0.501,214,0.542,215,1.015,216,0.542,217,0.487,218,0.542,219,0.487,220,0.514,221,0.542,222,0.487,223,0.528,224,0.487,225,0.542,226,0.487,227,0.528,228,0.542,229,0.474,230,0.528,231,0.542,232,0.487,233,0.542,234,0.487,235,0.542,236,0.487,237,0.514,238,0.487,239,0.956,240,1.412,241,0.487,242,0.487,243,0.487,244,0.528,245,0.487,246,0.542,247,0.487,248,0.487,249,0.542,250,0.487,251,0.462,252,0.487,253,0.829,254,0.835,255,0.487,256,1.129,257,0.487,258,0.487,259,0.487,260,0.528,261,0.487,262,0.528,263,0.829,264,0.487,265,0.528,266,0.487,267,0.514,268,0.487,269,0.514,270,0.487,271,0.746,272,0.542,273,0.462,274,0.542,275,0.514,276,0.514,277,0.514,278,0.487,279,0.528,280,0.487,281,0.528,282,0.487,283,0.501,284,0.487,285,0.787,286,0.487,287,0.487,288,0.528,289,0.487,290,0.528,291,0.542,292,0.542,293,0.462,294,0.474,295,0.501,296,0.542,297,0.474,298,0.835,299,0.542,300,0.474,301,0.542,302,0.462,303,0.542,304,0.474,305,0.501,306,0.501,307,0.528,308,0.542,340,3.167,350,4.281,351,0.911,356,1.605,367,2.295,426,3.846,500,2.209,587,4.283,594,3.696,598,1.788,599,1.5,643,1.602,670,1.861,724,2.797,726,2.056,841,3.504,842,1.322,844,2.335,851,2.616,859,2.885,884,4.788,886,1.998,896,2.737,919,1.788,923,4.796,929,1.885,946,2.303,948,2.303,950,2.303,955,2.493,957,2.53,958,2.497,959,2.683,960,5.345,961,4.4,962,5.988,963,5.988,964,5.988,965,2.898,966,2.295,967,5.988,968,4.4,969,6.453,970,4.281,971,6.453,972,6.453,973,6.453,974,6.453,975,6.453,976,5.988,977,6.453,978,4.4,979,4.4,980,2.875,981,2.875,982,2.875,983,2.875,984,2.875,985,5.988,986,2.875,987,4.4,988,2.875,989,4.4,990,4.4,991,2.875,992,2.875,993,2.875,994,2.875,995,2.875,996,2.875,997,2.875,998,2.875,999,2.295,1000,2.875,1001,2.875,1002,2.875,1003,4.4,1004,2.875,1005,2.875,1006,2.133,1007,2.875,1008,2.53,1009,2.303,1010,5.345,1011,1.998,1012,5.345,1013,3.872,1014,2.875,1015,2.875,1016,2.875,1017,2.875,1018,2.875,1019,2.875,1020,2.875,1021,2.875,1022,2.875,1023,6.453,1024,2.875,1025,2.875,1026,2.875,1027,2.875,1028,2.303,1029,2.875,1030,2.875,1031,1.788,1032,2.875,1033,3.324,1034,2.875,1035,1.561,1036,1.998]],["title/components/DagreNodeComponent.html",[128,0.064,217,0.73]],["body/components/DagreNodeComponent.html",[3,0.07,4,0.07,5,0.063,8,0.245,9,0.946,12,1.34,13,0.591,14,0.573,23,0.724,24,0.912,27,1.133,29,0.556,30,0.01,31,0.625,32,0.517,33,0.605,34,0.433,35,0.801,50,1.301,53,0.459,54,0.541,55,0.513,58,0.162,59,0.127,60,0.703,63,0.07,67,0.078,72,1.638,83,2.219,87,0.004,88,0.005,89,0.004,112,2.968,118,2.557,128,0.085,131,0.527,132,0.527,133,0.527,134,0.527,135,0.527,136,0.527,137,1.129,150,0.541,151,0.786,152,0.602,153,0.602,156,0.704,157,1.622,158,0.499,160,1.493,161,1.415,162,0.586,164,0.874,166,1.076,169,0.703,170,1.371,171,1.8,178,1.287,179,1.223,182,0.703,183,0.74,184,0.744,186,0.779,190,0.35,191,0.874,192,0.874,193,0.433,194,1.19,195,0.602,196,1.19,197,0.541,198,0.586,199,0.898,200,0.541,201,0.602,202,0.541,203,0.571,204,1.454,205,0.541,206,0.586,207,0.602,208,0.541,209,0.586,210,0.541,211,1.211,212,0.602,213,0.556,214,0.602,215,1.071,216,0.602,217,1.071,218,0.602,219,0.541,220,0.571,221,0.602,222,0.541,223,0.586,224,0.541,225,0.602,226,0.541,227,0.586,228,0.602,229,0.527,230,0.586,231,0.602,232,0.541,233,0.602,234,0.541,235,0.602,236,0.541,237,0.571,238,0.541,239,1.019,240,1.454,241,0.541,242,0.541,243,0.541,244,0.586,245,0.541,246,0.602,247,0.541,248,0.541,249,0.602,250,0.541,251,0.513,252,0.541,253,0.898,254,0.744,255,0.541,256,1.19,257,0.541,258,0.541,259,0.541,260,0.586,261,0.541,262,0.586,263,0.898,264,0.541,265,0.586,266,0.541,267,0.571,268,0.541,269,0.571,270,0.541,271,0.807,272,0.602,273,0.513,274,0.602,275,0.571,276,0.571,277,0.571,278,0.541,279,0.586,280,0.541,281,0.586,282,0.541,283,0.556,284,0.541,285,0.852,286,0.541,287,0.541,288,0.586,289,0.541,290,0.586,291,0.602,292,0.602,293,0.513,294,0.527,295,0.556,296,0.602,297,0.527,298,0.89,299,0.602,300,0.527,301,0.602,302,0.513,303,0.602,304,0.527,305,0.556,306,0.556,307,0.586,308,0.602,345,1.986,356,1.431,426,3.668,587,4.094,589,3.429,590,1.734,591,3.391,799,2.219,801,2.219,841,3.734,842,1.431,843,4.562,844,2.488,847,5.012,848,5.012,850,5.557,851,2.758,852,5.058,856,5.557,857,5.557,858,4.191,863,6.459,883,4.191,884,4.226,886,2.219,891,3.375,897,2.81,898,1.809,906,5.557,907,2.81,909,2.81,910,2.81,911,2.81,912,2.81,915,2.81,916,2.81,917,4.191,919,4.406,920,2.81,921,2.81,922,2.557,923,5.058,924,2.81,926,2.81,927,4.14,928,4.191,929,2.093,930,2.81,932,2.369,933,2.219,934,2.81,935,3.534,936,2.81,937,2.81,938,2.81,939,2.81,941,2.81,942,2.81,943,2.81,944,2.81,946,2.557,947,2.81,948,2.557,949,2.81,950,2.557,955,1.809,956,2.81,1013,2.81,1037,2.81,1038,4.762,1039,5.012,1040,5.696,1041,4.762,1042,3.193,1043,3.193,1044,3.193,1045,3.193,1046,3.193,1047,3.193,1048,3.193,1049,3.193,1050,4.191,1051,4.191,1052,5.012,1053,3.309,1054,3.193,1055,3.193,1056,3.193,1057,3.193,1058,3.193,1059,3.193,1060,3.193]],["title/classes/DagreUtils.html",[67,0.106,1006,3.196]],["body/classes/DagreUtils.html",[3,0.108,4,0.108,5,0.096,8,0.376,14,0.775,15,1.934,24,0.896,29,0.925,30,0.01,31,0.674,32,0.607,33,0.759,35,0.896,50,1.32,56,0.767,58,0.142,60,1.418,63,0.108,67,0.12,75,1.154,87,0.005,88,0.007,89,0.005,91,3.64,112,2.961,211,1.092,254,1.368,311,3.217,356,1.934,426,3.497,586,4.697,587,4.084,590,2.664,591,3.233,593,3.648,594,4.754,595,4.713,597,3.75,752,2.292,754,2.779,884,6.461,886,5.652,1006,4.778,1053,6.137,1061,4.318,1062,6.44,1063,6.44,1064,6.44,1065,6.44,1066,6.44,1067,6.44,1068,6.44,1069,6.44,1070,4.906,1071,6.44,1072,4.906,1073,6.44,1074,4.906,1075,6.44,1076,4.906,1077,6.44,1078,4.906,1079,4.906,1080,4.906,1081,4.906,1082,4.906,1083,4.906,1084,4.906,1085,6.44,1086,4.906,1087,4.906,1088,4.906,1089,4.318,1090,5.667,1091,5.667,1092,4.906,1093,4.906,1094,4.906,1095,4.906,1096,4.318,1097,4.906,1098,6.44,1099,4.906,1100,4.318,1101,4.906,1102,4.906]],["title/components/DagreYamlParserComponent.html",[128,0.064,219,0.73]],["body/components/DagreYamlParserComponent.html",[3,0.062,4,0.062,5,0.055,8,0.405,9,0.862,12,1.278,13,0.538,14,0.522,15,1.649,23,0.659,24,0.899,27,1.257,29,0.788,30,0.01,31,0.617,32,0.556,33,0.696,34,0.383,35,0.821,50,1.292,53,0.406,54,0.479,55,0.453,56,0.441,58,0.168,59,0.112,60,1.641,63,0.062,67,0.069,72,0.971,75,0.849,87,0.003,88,0.005,89,0.003,111,3.889,112,2.926,120,5.22,122,4.651,125,2.262,128,0.079,131,0.466,132,0.466,133,0.466,134,0.466,135,0.466,136,0.466,137,1.061,150,0.479,151,0.716,152,0.532,153,0.532,156,0.641,157,1.524,158,0.441,160,1.483,161,1.404,162,0.519,164,0.797,166,0.981,169,0.622,170,1.308,171,1.69,178,0.981,179,1.115,182,0.622,183,0.655,184,0.678,186,0.689,190,0.309,191,0.797,192,0.797,193,0.383,194,1.118,195,0.532,196,1.118,197,0.479,198,0.519,199,0.818,200,0.479,201,0.532,202,0.479,203,0.505,204,1.404,205,0.479,206,0.519,207,0.532,208,0.479,209,0.519,210,0.736,211,1.176,212,0.532,213,0.756,214,0.532,215,0.479,216,0.532,217,0.736,218,0.532,219,1.006,220,1.522,221,0.532,222,0.479,223,0.519,224,0.479,225,0.532,226,0.479,227,0.519,228,0.532,229,0.466,230,0.519,231,0.532,232,0.479,233,0.532,234,0.479,235,0.532,236,0.479,237,0.505,238,0.479,239,0.945,240,1.404,241,0.479,242,0.479,243,0.479,244,0.519,245,0.479,246,0.532,247,0.479,248,0.479,249,0.532,250,0.479,251,0.453,252,0.479,253,0.818,254,1.056,255,0.479,256,1.118,257,0.479,258,0.479,259,0.479,260,0.519,261,0.479,262,0.519,263,0.818,264,0.479,265,0.519,266,0.479,267,0.505,268,0.479,269,0.505,270,0.479,271,0.736,272,0.532,273,0.453,274,0.532,275,0.505,276,0.505,277,0.505,278,0.479,279,0.519,280,0.479,281,0.519,282,0.479,283,0.492,284,0.479,285,0.776,286,0.479,287,0.479,288,0.519,289,0.479,290,0.519,291,0.532,292,0.532,293,0.453,294,0.466,295,0.492,296,0.532,297,0.466,298,0.826,299,0.532,300,0.466,301,0.532,302,0.453,303,0.532,304,0.466,305,0.492,306,0.492,307,0.519,308,0.532,313,2.262,329,2.2,340,3.132,587,4.035,589,3.476,591,3.533,593,3.828,594,2.356,724,2.771,726,2.027,799,1.962,801,1.962,841,3.465,842,1.304,859,2.845,896,2.699,919,1.756,955,1.6,958,2.469,959,2.653,965,2.871,966,2.264,999,2.264,1011,1.962,1031,1.756,1035,1.533,1039,4.651,1050,3.819,1051,3.819,1052,4.651,1089,3.819,1091,2.485,1096,2.485,1100,2.485,1103,2.485,1104,4.339,1105,4.339,1106,5.285,1107,4.339,1108,4.339,1109,4.339,1110,5.931,1111,4.339,1112,5.931,1113,5.285,1114,5.285,1115,4.339,1116,2.824,1117,2.824,1118,4.339,1119,2.824,1120,4.339,1121,2.824,1122,4.339,1123,2.824,1124,2.824,1125,4.339,1126,2.824,1127,2.824,1128,2.824,1129,2.824,1130,2.824,1131,2.824,1132,2.824,1133,2.824,1134,2.095,1135,2.824,1136,2.824,1137,2.824,1138,4.339,1139,2.824,1140,2.824,1141,4.339,1142,2.824,1143,2.095,1144,2.824,1145,2.824,1146,2.824,1147,2.824,1148,2.824,1149,2.824,1150,2.824,1151,2.824,1152,2.824,1153,2.824,1154,2.485,1155,4.651,1156,2.824,1157,2.824,1158,2.824,1159,2.824,1160,2.824,1161,2.824,1162,2.824,1163,2.824,1164,2.824,1165,2.824,1166,2.824,1167,5.285,1168,2.824,1169,2.824,1170,2.824,1171,2.824,1172,2.824,1173,2.824,1174,2.824,1175,2.824,1176,2.824,1177,2.824,1178,2.824,1179,2.824,1180,2.824,1181,2.824,1182,2.824,1183,4.339,1184,2.824,1185,2.824,1186,4.339,1187,2.824,1188,2.824,1189,2.824,1190,4.339,1191,2.824,1192,4.339,1193,2.824,1194,2.824,1195,2.824,1196,2.824,1197,2.824,1198,2.824,1199,2.824,1200,2.824,1201,2.824,1202,2.824,1203,2.824,1204,2.824,1205,4.339,1206,2.824,1207,4.339,1208,2.824,1209,2.824,1210,2.824,1211,2.824,1212,2.824]],["title/directives/DashedDrawDirective.html",[193,0.584,294,0.711]],["body/directives/DashedDrawDirective.html",[3,0.093,4,0.093,5,0.082,8,0.322,9,1.152,12,1.038,14,0.698,23,0.881,24,0.973,27,1.379,29,0.49,30,0.01,31,0.348,32,0.576,33,0.402,35,0.81,50,1.38,54,1.214,55,1.15,56,1.038,58,0.166,59,0.167,60,1.463,63,0.093,67,0.103,72,1.444,87,0.005,88,0.006,89,0.005,157,1.84,158,0.656,160,0.693,161,0.906,166,1.31,173,1.49,178,1.756,180,1.344,184,0.906,185,1.228,193,0.569,293,0.674,294,0.957,295,1.157,309,4.156,312,4.455,328,4.696,329,2.844,333,5.32,351,2.382,356,1.742,599,3.465,643,2.111,776,1.834,783,3.346,798,2.488,807,5.845,823,3.115,828,5.103,831,3.148,842,1.742,844,2.901,851,3.129,891,3.936,898,2.379,958,3.103,965,3.467,1213,7.618,1214,3.695,1215,6.642,1216,7.163,1217,6.642,1218,6.642,1219,6.642,1220,6.642,1221,6.642,1222,3.363,1223,5.798,1224,3.436,1225,5.798,1226,4.199,1227,3.436,1228,4.199,1229,4.199,1230,4.199,1231,4.199,1232,4.199,1233,4.199,1234,4.199,1235,4.199,1236,4.199,1237,4.928,1238,4.199,1239,4.199,1240,2.917,1241,3.695,1242,2.753,1243,4.199,1244,3.363,1245,3.695,1246,3.695,1247,6.642,1248,3.363,1249,5.798,1250,3.115,1251,3.695,1252,2.917,1253,3.695,1254,2.917,1255,3.363,1256,4.199,1257,7.163,1258,4.645,1259,4.199,1260,6.642,1261,4.199,1262,4.199,1263,4.199,1264,4.199,1265,4.199,1266,4.199,1267,6.642,1268,5.798,1269,4.199,1270,4.199,1271,4.029,1272,4.199,1273,4.199,1274,4.199,1275,6.642,1276,4.199,1277,6.642,1278,5.798,1279,4.199,1280,4.199,1281,3.363,1282,4.199,1283,5.103,1284,4.199,1285,4.199,1286,4.199,1287,6.642,1288,3.115]],["title/pipes/Deg2RadPipe.html",[534,2.993,1289,2.993]],["body/pipes/Deg2RadPipe.html",[3,0.142,4,0.142,5,0.126,14,0.772,24,0.726,29,0.749,30,0.01,31,0.673,32,0.492,33,0.615,35,0.726,58,0.142,59,0.255,63,0.142,67,0.157,75,1.03,87,0.007,88,0.008,89,0.007,158,1.003,173,2.204,534,5.293,827,3.992,842,1.928,1289,5.293,1290,5.14,1291,5.647,1292,7.617,1293,5.14,1294,7.617,1295,6.417,1296,6.703,1297,7.55,1298,6.703,1299,6.703,1300,5.14,1301,6.417,1302,5.14]],["title/components/DirectionalLightComponent.html",[128,0.064,222,0.73]],["body/components/DirectionalLightComponent.html",[3,0.083,4,0.083,5,0.074,8,0.287,10,0.745,12,1.127,13,0.665,14,0.645,23,0.814,24,0.848,27,1.275,29,0.438,30,0.01,31,0.565,32,0.411,33,0.599,34,0.509,35,0.424,53,0.539,54,1.222,55,1.095,56,0.977,58,0.159,59,0.149,60,0.827,63,0.083,67,0.092,75,0.603,87,0.004,88,0.006,89,0.004,128,0.093,131,0.619,132,0.619,133,0.619,134,0.619,135,0.619,136,0.619,137,1.219,150,0.636,151,0.884,152,0.708,153,0.708,155,2.608,156,0.792,157,1.926,158,0.586,160,1.505,161,1.425,162,0.689,163,5.059,164,0.984,165,2.711,166,1.211,167,2.731,168,4.638,169,0.827,170,1.451,171,1.943,172,2.785,173,1.377,174,3.514,175,2.785,178,1.629,179,1.377,180,1.242,181,1.015,182,0.827,183,0.87,184,0.837,185,1.098,186,0.916,189,2.785,190,0.411,191,0.984,192,0.984,193,0.509,194,1.285,195,0.708,196,1.285,197,0.636,198,0.689,199,1.01,200,0.636,201,0.708,202,0.636,203,0.671,204,1.514,205,0.636,206,0.689,207,0.708,208,0.636,209,0.689,210,0.636,211,1.096,212,0.708,213,0.654,214,0.708,215,0.636,216,0.708,217,0.636,218,0.708,219,0.636,220,0.671,221,0.708,222,1.156,223,1.148,224,0.636,225,0.708,226,0.636,227,0.689,228,0.708,229,0.619,230,0.689,231,0.708,232,0.636,233,0.708,234,0.636,235,0.708,236,0.636,237,0.671,238,0.636,239,1.118,240,1.514,241,0.636,242,0.636,243,0.636,244,0.689,245,0.636,246,0.708,247,0.636,248,0.636,249,0.708,250,0.636,251,0.603,252,0.636,253,1.01,254,0.586,255,0.636,256,1.285,257,0.636,258,0.636,259,0.636,260,0.689,261,0.636,262,0.689,263,1.01,264,0.636,265,0.689,266,0.636,267,0.671,268,0.636,269,0.671,270,0.636,271,0.636,272,0.708,273,0.603,274,0.708,275,0.671,276,0.671,277,0.671,278,0.636,279,0.689,280,0.636,281,0.689,282,0.636,283,0.654,284,0.636,285,0.958,286,0.636,287,0.636,288,0.689,289,0.636,290,0.689,291,0.708,292,0.708,293,0.603,294,0.619,295,0.654,296,0.708,297,0.619,298,0.977,299,0.708,300,0.619,301,0.708,302,0.603,303,0.708,304,0.619,305,0.654,306,0.654,307,0.689,308,0.708,356,1.878,643,1.951,671,2.608,683,1.958,798,3.176,913,3.006,1303,6.792,1304,5.359,1305,5.007,1306,6.818,1307,5.359,1308,3.303,1309,3.753,1310,3.753,1311,3.753,1312,3.753,1313,3.753,1314,4.293,1315,3.303,1316,3.006,1317,3.753,1318,4.04,1319,3.753,1320,3.753,1321,3.753,1322,3.303,1323,3.303,1324,3.303,1325,3.753,1326,3.303,1327,3.303,1328,3.006]],["title/components/DofComponent.html",[128,0.064,224,0.73]],["body/components/DofComponent.html",[3,0.083,4,0.083,5,0.074,8,0.289,10,0.749,12,0.84,14,0.647,23,0.817,24,0.849,29,0.627,30,0.01,31,0.598,32,0.412,33,0.654,34,0.511,35,0.608,50,0.692,53,0.542,54,1.062,55,1.006,58,0.159,59,0.15,63,0.083,67,0.092,75,0.605,87,0.004,88,0.006,89,0.004,128,0.093,131,0.622,132,0.622,133,0.622,134,0.622,135,0.622,136,0.622,137,1.222,150,0.639,151,0.887,152,0.711,153,0.711,156,0.795,158,0.589,160,1.505,161,1.425,162,0.692,164,0.692,166,1.215,169,0.83,170,1.453,178,1.544,179,1.381,181,1.02,184,0.589,186,0.92,190,0.413,191,0.987,192,0.987,193,0.511,194,1.288,195,0.711,196,1.288,197,0.639,198,0.692,199,1.014,200,0.639,201,0.711,202,0.639,203,0.674,204,1.516,205,0.639,206,0.692,207,0.711,208,0.639,209,0.692,210,0.639,211,1.098,212,0.711,213,0.657,214,0.711,215,0.639,216,0.711,217,0.639,218,0.711,219,0.639,220,0.674,221,0.711,222,0.639,223,0.692,224,1.158,225,0.711,226,0.639,227,0.692,228,0.711,229,1.192,230,1.151,231,0.711,232,0.639,233,0.711,234,0.639,235,0.711,236,0.639,237,0.674,238,0.639,239,1.121,240,1.516,241,0.639,242,0.639,243,0.639,244,0.692,245,0.639,246,0.711,247,0.639,248,0.639,249,0.711,250,0.639,251,0.605,252,0.639,253,1.014,254,0.589,255,0.639,256,1.288,257,0.639,258,0.639,259,0.639,260,0.692,261,0.639,262,0.692,263,1.014,264,0.639,265,0.692,266,0.639,267,0.674,268,0.639,269,0.674,270,0.639,271,0.639,272,0.711,273,0.605,274,0.711,275,0.674,276,0.674,277,0.674,278,0.639,279,0.692,280,0.639,281,0.692,282,0.639,283,0.657,284,0.639,285,0.962,286,0.639,287,0.639,288,0.692,289,0.639,290,0.692,291,0.711,292,0.711,293,0.605,294,0.622,295,0.657,296,0.711,297,0.622,298,0.979,299,0.711,300,0.622,301,0.711,302,0.605,303,0.711,304,0.622,305,0.657,306,0.657,307,0.692,308,0.711,351,1.195,356,1.882,439,2.798,653,3.046,669,2.62,678,2.62,717,5.02,719,4.307,720,5.473,721,4.747,723,4.307,724,3.192,726,3.192,727,2.234,733,3.02,734,3.02,752,1.762,754,2.136,1033,4.493,1035,3.403,1329,3.318,1330,5.377,1331,7.223,1332,7.223,1333,7.223,1334,5.377,1335,5.377,1336,3.771,1337,3.771,1338,5.377,1339,3.771,1340,3.771,1341,3.771,1342,3.771,1343,3.771,1344,3.771,1345,6.267,1346,6.267,1347,3.771,1348,3.771,1349,6.267,1350,3.771,1351,3.771,1352,3.771,1353,5.377,1354,3.771,1355,3.318]],["title/components/DotScreenComponent.html",[128,0.064,226,0.73]],["body/components/DotScreenComponent.html",[3,0.089,4,0.089,5,0.079,8,0.308,10,0.799,12,0.879,14,0.677,23,0.855,24,0.795,29,0.657,30,0.01,31,0.613,32,0.431,33,0.673,34,0.545,35,0.636,50,0.738,53,0.578,54,0.682,55,0.646,58,0.169,59,0.16,63,0.089,67,0.099,75,0.646,87,0.004,88,0.006,89,0.004,128,0.096,131,0.664,132,0.664,133,0.664,134,0.664,135,0.664,136,0.664,137,1.257,150,0.682,151,0.929,152,0.758,153,0.758,156,0.832,158,0.628,160,1.509,161,1.429,162,0.738,164,0.738,166,1.272,169,0.886,170,1.484,178,1.272,179,1.446,181,1.088,184,0.628,186,0.981,190,0.44,191,1.033,192,1.033,193,0.545,194,1.325,195,0.758,196,1.325,197,0.682,198,0.738,199,1.061,200,0.682,201,0.758,202,0.682,203,0.719,204,1.539,205,0.682,206,0.738,207,0.758,208,0.682,209,0.738,210,0.682,211,1.125,212,0.758,213,0.7,214,0.758,215,0.682,216,0.758,217,0.682,218,0.758,219,0.682,220,0.719,221,0.758,222,0.682,223,0.738,224,0.682,225,0.758,226,1.192,227,1.192,228,0.758,229,1.221,230,1.192,231,0.758,232,0.682,233,0.758,234,0.682,235,0.758,236,0.682,237,0.719,238,0.682,239,1.161,240,1.539,241,0.682,242,0.682,243,0.682,244,0.738,245,0.682,246,0.758,247,0.682,248,0.954,249,0.758,250,0.682,251,0.646,252,0.682,253,1.061,254,0.628,255,0.682,256,1.325,257,0.682,258,0.682,259,0.682,260,0.738,261,0.682,262,0.738,263,1.061,264,0.682,265,0.738,266,0.682,267,0.719,268,0.682,269,0.719,270,0.682,271,0.682,272,0.758,273,0.646,274,0.758,275,0.719,276,0.719,277,0.719,278,0.682,279,0.738,280,0.682,281,0.738,282,0.682,283,0.7,284,0.682,285,1.006,286,0.682,287,0.682,288,0.738,289,0.682,290,0.738,291,0.758,292,0.758,293,0.646,294,0.664,295,0.7,296,0.758,297,0.664,298,1.014,299,0.758,300,0.664,301,0.758,302,0.646,303,0.758,304,0.664,305,0.7,306,0.7,307,0.738,308,0.758,351,1.274,439,2.984,637,3.221,638,3.221,683,2.098,717,5.2,719,4.508,720,5.632,721,4.886,723,4.508,724,3.285,726,1.879,727,3.335,733,3.221,734,3.221,737,2.637,738,2.383,739,2.795,740,2.795,741,2.795,742,2.984,743,2.984,744,3.221,1356,6.512,1357,3.539,1358,4.952,1359,5.713,1360,5.627,1361,4.508,1362,4.022,1363,4.022,1364,4.022,1365,4.022,1366,4.022]],["title/interfaces/Edge.html",[64,1.524,593,2.44]],["body/interfaces/Edge.html",[3,0.134,4,0.134,5,0.119,8,0.464,9,1.461,27,2.155,30,0.01,31,0.502,32,0.676,33,0.789,34,0.821,58,0.134,63,0.186,64,2.988,87,0.007,88,0.008,89,0.007,112,2.205,156,1.218,167,3.6,173,2.036,211,1.118,254,0.946,426,3.289,585,3.289,586,5.004,587,3.041,588,3.971,589,3.995,590,3.289,591,3.041,592,3.971,593,4.168,594,3.289,595,3.971,596,4.209,597,4.133,598,3.768,599,3.16]],["title/components/EffectComposerComponent.html",[128,0.064,229,0.711]],["body/components/EffectComposerComponent.html",[3,0.075,4,0.075,5,0.067,8,0.453,9,0.991,12,1.083,14,0.601,15,2.083,23,0.758,24,0.913,29,0.69,30,0.01,31,0.6,32,0.531,33,0.664,34,0.461,35,0.847,50,1.376,53,0.489,54,0.577,55,0.546,56,0.78,58,0.16,59,0.135,60,1.302,63,0.075,67,0.083,72,1.17,75,0.546,87,0.004,88,0.006,89,0.004,128,0.097,131,0.561,132,0.561,133,0.561,134,0.561,135,0.561,136,0.561,137,1.165,150,0.577,151,0.824,152,0.641,153,0.641,158,0.531,160,1.498,161,1.418,162,0.625,164,0.625,166,1.128,169,0.749,170,1.403,178,1.336,179,1.282,181,0.92,184,0.78,190,0.372,191,0.916,192,0.916,193,0.461,194,1.228,195,0.641,196,1.228,197,0.577,198,0.625,199,0.941,200,0.577,201,0.641,202,0.577,203,0.608,204,1.478,205,0.577,206,0.625,207,0.641,208,0.577,209,0.625,210,0.577,211,1.054,212,0.641,213,0.592,214,0.641,215,0.577,216,0.641,217,0.577,218,0.641,219,0.577,220,0.608,221,0.641,222,0.577,223,0.625,224,0.577,225,0.641,226,0.577,227,0.625,228,0.641,229,1.075,230,1.086,231,0.641,232,0.577,233,0.641,234,0.577,235,0.641,236,0.577,237,0.608,238,0.577,239,1.057,240,1.478,241,0.577,242,0.577,243,0.577,244,0.625,245,0.577,246,0.641,247,0.577,248,0.577,249,0.641,250,0.577,251,0.546,252,0.577,253,0.941,254,0.531,255,0.577,256,1.228,257,0.577,258,0.577,259,0.577,260,0.625,261,0.577,262,0.625,263,0.941,264,0.577,265,0.625,266,0.577,267,0.608,268,0.577,269,0.608,270,0.577,271,0.577,272,0.641,273,1.203,274,0.641,275,0.608,276,0.608,277,0.608,278,0.577,279,0.625,280,0.577,281,0.625,282,0.577,283,0.592,284,0.577,285,0.893,286,0.577,287,0.577,288,0.625,289,0.577,290,0.625,291,0.641,292,0.641,293,0.546,294,0.561,295,0.592,296,0.641,297,0.561,298,0.924,299,0.641,300,0.561,301,0.641,302,0.546,303,0.641,304,0.561,305,0.592,306,0.592,307,0.625,308,0.641,324,3.536,356,1.499,367,1.774,500,1.708,621,5.203,632,5.203,633,2.994,636,2.994,643,2.371,683,1.774,690,2.116,721,4.819,810,4.832,842,1.499,844,2.583,851,2.845,958,2.762,965,3.152,1355,2.994,1367,7.193,1368,2.994,1369,4.991,1370,6.512,1371,6.512,1372,4.991,1373,5.912,1374,5.912,1375,4.991,1376,3.402,1377,3.402,1378,4.991,1379,8.079,1380,3.402,1381,3.402,1382,3.402,1383,3.402,1384,3.402,1385,4.991,1386,3.402,1387,3.402,1388,3.402,1389,3.402,1390,3.402,1391,4.991,1392,3.402,1393,3.402,1394,6.592,1395,3.402,1396,3.402,1397,3.402,1398,2.994,1399,3.402,1400,2.994,1401,2.994,1402,3.402,1403,3.402,1404,3.402,1405,3.402,1406,3.402,1407,3.402,1408,3.402,1409,3.402,1410,3.402,1411,3.402,1412,3.402,1413,3.402,1414,3.402,1415,3.402,1416,3.402,1417,3.402]],["title/components/EmptyComponent.html",[128,0.064,232,0.73]],["body/components/EmptyComponent.html",[3,0.092,4,0.092,5,0.082,8,0.32,10,0.83,12,1.172,13,0.717,14,0.695,23,0.878,24,0.653,29,0.487,30,0.01,31,0.592,32,0.32,33,0.634,34,0.567,35,0.472,53,0.6,56,0.653,58,0.165,59,0.166,63,0.092,67,0.102,75,0.671,87,0.005,88,0.006,89,0.005,128,0.098,131,0.689,132,0.689,133,0.689,134,0.689,135,0.689,136,0.689,137,1.278,150,0.708,151,0.953,152,0.787,153,0.787,156,0.854,157,1.994,158,0.653,160,1.512,161,1.431,162,0.767,164,1.061,165,2.842,169,0.92,170,1.502,171,2.037,179,1.484,180,1.34,181,1.13,182,0.92,183,0.968,184,0.903,185,1.222,186,1.019,190,0.457,191,1.061,192,1.061,193,0.567,194,1.347,195,0.787,196,1.347,197,0.708,198,0.767,199,1.089,200,0.708,201,0.787,202,0.708,203,0.747,204,1.552,205,0.708,206,0.767,207,0.787,208,0.708,209,0.767,210,0.708,211,1.14,212,0.787,213,0.727,214,0.787,215,0.708,216,0.787,217,0.708,218,0.787,219,0.708,220,0.747,221,0.787,222,0.708,223,0.767,224,0.708,225,0.787,226,0.708,227,0.767,228,0.787,229,0.689,230,0.767,231,0.787,232,1.212,233,0.787,234,0.708,235,0.787,236,0.708,237,0.747,238,0.708,239,1.185,240,1.552,241,0.708,242,0.708,243,0.708,244,0.767,245,0.708,246,0.787,247,0.708,248,0.708,249,0.787,250,0.708,251,0.671,252,0.708,253,1.089,254,0.653,255,0.708,256,1.347,257,0.708,258,0.708,259,0.708,260,0.767,261,0.708,262,0.767,263,1.089,264,0.708,265,0.767,266,0.708,267,0.747,268,0.708,269,0.747,270,0.708,271,0.708,272,0.787,273,0.671,274,0.787,275,0.747,276,0.747,277,0.747,278,0.708,279,0.767,280,0.708,281,0.767,282,0.708,283,0.727,284,0.708,285,1.033,286,0.708,287,0.708,288,0.767,289,0.708,290,0.767,291,0.787,292,0.787,293,0.671,294,0.689,295,0.727,296,0.787,297,0.689,298,1.035,299,0.787,300,0.689,301,0.787,302,0.671,303,0.787,304,0.689,305,0.727,306,0.727,307,0.767,308,0.787,798,3.926,842,1.736,958,3.095,1009,4.628,1418,3.676,1419,5.778,1420,4.177,1421,4.177]],["title/components/FogComponent.html",[128,0.064,234,0.73]],["body/components/FogComponent.html",[3,0.08,4,0.08,5,0.071,8,0.276,9,1.035,12,1.278,14,0.627,15,1.806,23,0.792,24,0.913,27,1.239,29,0.608,30,0.01,31,0.588,32,0.513,33,0.641,34,0.489,35,0.803,50,1.359,53,0.518,54,1.037,55,0.982,56,0.564,58,0.148,59,0.143,63,0.08,67,0.088,75,0.579,87,0.004,88,0.006,89,0.004,128,0.091,131,0.595,132,0.595,133,0.595,134,0.595,135,0.595,136,0.595,137,1.197,150,0.612,151,0.86,152,0.68,153,0.68,158,0.564,160,1.502,161,1.422,162,0.663,164,0.663,166,1.177,167,2.925,169,0.795,170,1.432,171,1.742,173,1.338,178,1.513,179,1.338,180,1.208,181,0.976,184,0.814,190,0.395,191,0.957,192,0.957,193,0.489,194,1.262,195,0.68,196,1.262,197,0.612,198,0.663,199,0.982,200,0.612,201,0.68,202,0.612,203,0.645,204,1.5,205,0.612,206,0.663,207,0.68,208,0.612,209,0.663,210,0.612,211,1.079,212,0.68,213,0.628,214,0.68,215,0.612,216,0.68,217,0.612,218,0.68,219,0.612,220,0.645,221,0.68,222,0.612,223,0.663,224,0.612,225,0.68,226,0.612,227,0.663,228,0.68,229,0.595,230,0.663,231,0.68,232,0.612,233,0.68,234,1.135,235,0.68,236,0.612,237,0.645,238,0.612,239,1.093,240,1.5,241,0.612,242,0.612,243,0.612,244,0.663,245,0.612,246,0.68,247,0.612,248,0.612,249,0.68,250,0.612,251,0.579,252,0.612,253,0.982,254,0.564,255,0.612,256,1.262,257,0.612,258,0.612,259,0.612,260,0.663,261,0.612,262,0.663,263,0.982,264,0.612,265,0.663,266,0.612,267,0.645,268,0.612,269,0.645,270,0.612,271,0.612,272,0.68,273,1.14,274,0.68,275,0.645,276,0.645,277,0.645,278,0.612,279,0.663,280,0.612,281,0.663,282,0.612,283,0.628,284,0.612,285,0.932,286,0.612,287,0.612,288,0.663,289,0.612,290,0.663,291,0.68,292,0.68,293,0.579,294,0.595,295,0.628,296,0.68,297,0.595,298,0.955,299,0.68,300,0.595,301,0.68,302,0.579,303,0.68,304,0.595,305,0.628,306,0.628,307,0.663,308,0.68,367,2.718,500,1.811,607,4.39,614,4.173,662,4.173,724,3.128,726,2.434,810,3.865,842,1.565,844,2.671,851,2.925,958,2.857,959,3.07,965,3.24,966,2.718,999,2.718,1035,1.959,1227,3.087,1318,3.087,1422,3.175,1423,5.21,1424,6.696,1425,6.696,1426,5.381,1427,5.892,1428,5.21,1429,5.21,1430,3.608,1431,3.608,1432,3.608,1433,3.608,1434,3.608,1435,3.608,1436,3.608,1437,3.608,1438,3.608,1439,3.608,1440,5.21,1441,3.608,1442,5.21,1443,3.608,1444,3.608,1445,3.608,1446,5.21,1447,3.608,1448,5.21,1449,3.608,1450,3.175,1451,3.175,1452,3.608,1453,3.608,1454,3.608]],["title/injectables/FontService.html",[0,1.329,510,2.824]],["body/injectables/FontService.html",[0,2.218,2,2.823,3,0.129,4,0.129,5,0.115,8,0.447,9,1.428,10,1.548,12,1.347,14,0.865,15,1.755,24,0.92,27,2.051,29,0.909,30,0.01,31,0.645,32,0.597,33,0.746,35,0.881,49,4.619,53,0.838,54,0.989,55,0.937,56,1.218,58,0.172,59,0.232,60,1.285,63,0.129,67,0.143,75,0.937,87,0.006,88,0.008,89,0.006,90,5.578,93,5.335,94,6.036,95,4.073,96,4.714,98,5.783,100,5.334,101,4.328,156,1.062,180,1.667,251,0.937,510,4.714,796,4.619,1455,5.134,1456,5.834,1457,4.673,1458,4.673,1459,4.673,1460,4.673,1461,5.834,1462,5.834,1463,5.834,1464,5.134,1465,5.134]],["title/components/FrameMeshComponent.html",[128,0.064,236,0.73]],["body/components/FrameMeshComponent.html",[3,0.075,4,0.075,5,0.067,8,0.261,10,0.993,12,1.201,13,0.62,14,0.602,15,1.445,23,0.76,24,0.848,29,0.583,30,0.01,31,0.575,32,0.383,33,0.624,34,0.462,35,0.669,36,5.617,50,0.626,53,0.49,54,1.004,55,0.951,56,0.925,58,0.16,59,0.136,60,1.756,63,0.075,67,0.084,75,0.951,87,0.004,88,0.006,89,0.004,128,0.088,131,0.563,132,0.563,133,0.563,134,0.563,135,0.563,136,0.563,137,1.166,150,0.578,151,0.825,152,0.643,153,0.643,156,0.739,157,1.675,158,0.533,160,1.498,161,1.418,162,0.626,164,0.918,165,2.592,166,1.13,169,0.751,170,1.404,171,1.858,178,1.473,179,1.285,180,1.159,181,0.923,182,0.751,183,0.791,184,0.781,185,1.463,186,0.832,190,0.373,191,0.918,192,0.918,193,0.462,194,1.229,195,0.643,196,1.229,197,0.578,198,0.626,199,0.943,200,0.578,201,0.643,202,0.578,203,0.61,204,1.479,205,0.578,206,0.626,207,0.643,208,0.578,209,0.626,210,0.578,211,1.055,212,0.643,213,0.594,214,0.643,215,0.578,216,0.643,217,0.578,218,0.643,219,0.578,220,0.61,221,0.643,222,0.578,223,0.626,224,0.578,225,0.643,226,0.578,227,0.626,228,0.643,229,0.563,230,0.626,231,0.643,232,0.578,233,0.643,234,0.578,235,0.643,236,1.105,237,1.059,238,0.578,239,1.059,240,1.479,241,0.578,242,0.578,243,0.578,244,0.626,245,0.578,246,0.643,247,0.578,248,0.578,249,0.643,250,0.578,251,0.548,252,0.578,253,0.943,254,0.533,255,0.578,256,1.229,257,0.578,258,0.578,259,0.578,260,0.626,261,0.578,262,0.626,263,0.943,264,0.578,265,0.626,266,0.578,267,0.61,268,0.578,269,0.61,270,0.578,271,0.578,272,0.643,273,0.548,274,0.643,275,0.61,276,0.61,277,0.61,278,0.578,279,0.626,280,0.578,281,0.626,282,0.578,283,0.594,284,0.578,285,0.894,286,0.578,287,0.578,288,0.626,289,0.578,290,0.626,291,0.643,292,0.643,293,0.548,294,0.563,295,0.594,296,0.643,297,0.563,298,0.925,299,0.643,300,0.563,301,0.643,302,0.548,303,0.643,304,0.563,305,0.594,306,0.594,307,0.626,308,0.643,351,1.081,356,1.024,367,1.779,670,2.115,724,3.046,726,2.336,746,1.852,747,3.508,749,3.785,757,2.732,771,2.53,776,2.184,783,2.336,784,1.932,786,2.121,824,3.71,826,2.53,831,3.54,842,1.502,919,2.121,955,1.932,959,2.972,966,2.608,999,2.608,1031,2.121,1033,3.683,1035,1.852,1036,2.37,1258,4.005,1466,6.766,1467,5,1468,6.52,1469,6.52,1470,6.52,1471,5.92,1472,4.838,1473,6.52,1474,3.001,1475,3.001,1476,7.689,1477,3.41,1478,5,1479,8.177,1480,3.41,1481,3.41,1482,2.732,1483,3.001,1484,3.41,1485,7.255,1486,6.52,1487,3.001,1488,3.41,1489,3.41,1490,3.41,1491,4.4,1492,4.4,1493,3.001,1494,3.001,1495,3.41,1496,3.001,1497,3.001]],["title/interfaces/GraphModel.html",[64,1.524,594,2.339]],["body/interfaces/GraphModel.html",[3,0.132,4,0.132,5,0.118,8,0.459,9,1.451,27,2.109,30,0.01,31,0.496,32,0.656,33,0.838,34,0.812,58,0.132,63,0.186,64,2.978,87,0.007,88,0.008,89,0.007,112,2.179,156,1.165,167,2.615,173,1.538,211,1.11,254,0.935,426,4.457,585,3.251,586,4.865,587,3.006,588,3.925,589,3.967,590,3.251,591,3.006,592,3.925,593,3.391,594,3.967,595,5.169,596,5.704,597,4.598,598,5.106,599,4.282]],["title/components/GridActorComponent.html",[128,0.064,238,0.73]],["body/components/GridActorComponent.html",[3,0.07,4,0.07,5,0.063,8,0.244,9,0.945,12,0.889,13,0.591,14,0.573,15,1.881,24,0.938,27,1.132,29,0.664,30,0.01,31,0.587,32,0.601,33,0.545,34,0.433,35,0.714,50,1.045,53,0.458,54,1.145,55,1.084,56,1.178,58,0.149,59,0.127,60,1.616,63,0.07,67,0.078,75,0.764,87,0.004,88,0.005,89,0.004,112,3.042,128,0.085,131,0.526,132,0.526,133,0.526,134,0.526,135,0.526,136,0.526,137,1.129,150,0.541,151,0.785,152,0.601,153,0.601,156,0.703,158,0.498,160,1.493,161,1.414,162,0.586,164,0.874,166,1.075,167,2.487,173,1.622,178,1.526,180,1.103,182,0.703,183,0.74,184,0.744,190,0.349,191,0.874,192,0.874,193,0.433,194,1.19,195,0.601,196,1.19,197,0.541,198,0.586,199,0.897,200,0.541,201,0.601,202,0.541,203,0.571,204,1.453,205,0.541,206,0.586,207,0.601,208,0.541,209,0.586,210,0.541,211,1.026,212,0.601,213,0.556,214,0.601,215,0.541,216,0.601,217,0.541,218,0.601,219,0.541,220,0.571,221,0.601,222,0.541,223,0.586,224,0.541,225,0.601,226,0.541,227,0.586,228,0.601,229,0.526,230,0.586,231,0.601,232,0.541,233,0.601,234,0.541,235,0.601,236,0.541,237,0.571,238,1.07,239,1.349,240,1.453,241,0.541,242,1.07,243,0.541,244,0.586,245,0.541,246,0.601,247,0.541,248,0.807,249,0.601,250,0.541,251,0.512,252,0.541,253,0.897,254,0.498,255,0.541,256,1.19,257,0.541,258,0.541,259,0.541,260,0.586,261,0.541,262,0.586,263,0.897,264,0.541,265,0.586,266,0.541,267,0.571,268,0.541,269,0.571,270,0.541,271,0.541,272,0.601,273,0.512,274,0.601,275,0.571,276,0.571,277,0.571,278,0.541,279,0.586,280,0.541,281,0.586,282,0.541,283,0.556,284,0.541,285,0.851,286,0.541,287,0.541,288,0.586,289,0.541,290,0.586,291,0.601,292,1.073,293,0.512,294,0.526,295,0.556,296,0.601,297,0.526,298,0.986,299,0.601,300,0.526,301,0.601,302,0.512,303,0.601,304,0.526,305,0.556,306,0.556,307,0.586,308,0.601,316,3.576,324,3.091,340,4.569,345,1.984,356,1.71,578,3.733,690,1.984,776,2.079,799,2.217,801,2.217,841,3.733,854,5.056,859,3.121,860,4.56,888,3.812,896,4.2,903,3.307,1053,3.307,1472,4.683,1498,7.354,1499,1.664,1500,4.76,1501,5.01,1502,4.76,1503,4.76,1504,4.189,1505,5.01,1506,5.01,1507,4.56,1508,5.693,1509,5.693,1510,2.808,1511,2.555,1512,4.189,1513,2.808,1514,2.961,1515,2.808,1516,2.808,1517,2.808,1518,2.555,1519,3.19,1520,4.76,1521,5.453,1522,2.808,1523,5.693,1524,3.19,1525,4.76,1526,3.19,1527,3.812,1528,2.555,1529,2.367,1530,4.76,1531,2.555,1532,2.808,1533,3.19,1534,6.753,1535,4.76,1536,3.19,1537,4.76,1538,3.19,1539,3.812,1540,3.19,1541,2.555,1542,2.217,1543,3.19,1544,3.19,1545,7.082,1546,3.19,1547,2.808,1548,3.19,1549,3.19,1550,3.19,1551,3.19,1552,3.19,1553,2.555,1554,2.808,1555,5.693,1556,3.19,1557,3.19,1558,2.808,1559,3.19,1560,4.76,1561,3.19,1562,3.19,1563,3.19,1564,3.19,1565,3.19,1566,3.19,1567,3.19]],["title/components/GridHelperComponent.html",[128,0.064,241,0.73]],["body/components/GridHelperComponent.html",[3,0.09,4,0.09,5,0.08,8,0.311,10,0.807,12,1.16,13,0.703,14,0.682,23,0.861,24,0.798,29,0.474,30,0.01,31,0.585,32,0.5,33,0.625,34,0.551,35,0.459,53,0.583,56,0.635,58,0.164,59,0.161,63,0.09,67,0.1,75,0.652,87,0.005,88,0.006,89,0.005,128,0.097,131,0.67,132,0.67,133,0.67,134,0.67,135,0.67,136,0.67,137,1.263,150,0.689,151,0.935,152,0.766,153,0.766,156,0.837,157,1.976,158,0.635,160,1.51,161,1.43,162,0.746,164,1.04,165,2.808,166,1.28,169,0.894,170,1.489,171,2.012,173,1.814,178,1.475,179,1.456,180,1.314,181,1.099,182,0.894,183,0.942,184,0.885,185,1.188,186,0.991,190,0.445,191,1.04,192,1.04,193,0.551,194,1.331,195,0.766,196,1.331,197,0.689,198,0.746,199,1.068,200,0.689,201,0.766,202,0.689,203,0.726,204,1.542,205,0.689,206,0.746,207,0.766,208,0.689,209,0.746,210,0.689,211,1.129,212,0.766,213,0.707,214,0.766,215,0.689,216,0.766,217,0.689,218,0.766,219,0.689,220,0.726,221,0.766,222,0.689,223,0.746,224,0.689,225,0.766,226,0.689,227,0.746,228,0.766,229,0.67,230,0.746,231,0.766,232,0.689,233,0.766,234,0.689,235,0.766,236,0.689,237,0.726,238,0.689,239,1.328,240,1.542,241,1.197,242,0.689,243,0.689,244,0.746,245,0.689,246,0.766,247,0.689,248,0.689,249,0.766,250,0.689,251,0.652,252,0.689,253,1.068,254,0.635,255,0.689,256,1.331,257,0.689,258,0.689,259,0.689,260,0.746,261,0.689,262,0.746,263,1.068,264,0.689,265,0.746,266,0.689,267,0.726,268,0.689,269,0.726,270,0.689,271,0.689,272,0.766,273,0.652,274,0.766,275,0.726,276,0.726,277,0.726,278,0.689,279,0.746,280,0.689,281,0.746,282,0.689,283,0.707,284,0.689,285,1.013,286,0.689,287,0.689,288,0.746,289,0.689,290,0.746,291,0.766,292,0.766,293,0.652,294,0.67,295,0.707,296,0.766,297,0.67,298,1.02,299,0.766,300,0.67,301,0.766,302,0.652,303,0.766,304,0.67,305,0.707,306,0.707,307,0.746,308,0.766,575,3.253,577,4.987,578,4.278,579,3.574,582,4.987,1568,6.536,1569,5.666,1570,5.743,1571,5.666,1572,4.062,1573,4.062,1574,4.062,1575,4.062]],["title/components/GridMeshComponent.html",[128,0.064,242,0.73]],["body/components/GridMeshComponent.html",[3,0.082,4,0.082,5,0.073,8,0.286,10,1.062,12,1.125,13,0.663,14,0.643,23,0.812,24,0.847,29,0.436,30,0.01,31,0.564,32,0.286,33,0.597,34,0.507,35,0.423,53,0.537,54,1.154,55,1.093,56,0.584,58,0.165,59,0.149,60,1.586,63,0.082,67,0.092,72,1.286,87,0.004,88,0.006,89,0.004,128,0.093,131,0.617,132,0.617,133,0.617,134,0.617,135,0.617,136,0.617,137,1.217,150,0.634,151,0.882,152,0.705,153,0.705,156,0.79,157,1.749,158,0.584,160,1.505,161,1.425,162,0.687,164,0.982,165,2.706,166,1.208,169,0.824,170,1.449,171,1.94,178,1.627,179,1.373,180,1.239,181,1.012,182,0.824,183,0.867,184,0.835,185,1.564,186,0.913,190,0.409,191,0.982,192,0.982,193,0.507,194,1.283,195,0.705,196,1.283,197,0.634,198,0.687,199,1.008,200,0.634,201,0.705,202,0.634,203,0.669,204,1.513,205,0.634,206,0.687,207,0.705,208,0.634,209,0.687,210,0.634,211,1.094,212,0.705,213,0.651,214,0.705,215,0.634,216,0.705,217,0.634,218,0.705,219,0.634,220,0.669,221,0.705,222,0.634,223,0.687,224,0.634,225,0.705,226,0.634,227,0.687,228,0.705,229,0.617,230,0.687,231,0.705,232,0.634,233,0.705,234,0.634,235,0.705,236,0.634,237,0.669,238,0.634,239,1.339,240,1.513,241,0.634,242,1.154,243,0.634,244,0.687,245,0.634,246,0.705,247,0.634,248,0.634,249,0.705,250,0.634,251,0.601,252,0.634,253,1.008,254,0.584,255,0.634,256,1.283,257,0.634,258,0.634,259,0.634,260,0.687,261,0.634,262,0.687,263,1.008,264,0.634,265,0.687,266,0.634,267,0.669,268,0.634,269,0.669,270,0.634,271,0.634,272,0.705,273,0.601,274,0.705,275,0.669,276,0.669,277,0.669,278,0.634,279,0.687,280,0.634,281,0.687,282,0.634,283,0.651,284,0.634,285,0.956,286,0.634,287,0.634,288,0.687,289,0.634,290,0.687,291,0.705,292,0.705,293,0.601,294,0.617,295,0.651,296,0.705,297,0.617,298,0.975,299,0.705,300,0.617,301,0.705,302,0.601,303,0.705,304,0.617,305,0.651,306,0.651,307,0.687,308,0.705,329,1.218,578,4.09,670,2.639,746,2.031,747,3.697,749,3.254,768,4.282,769,2.326,771,2.775,772,2.326,776,1.634,824,2.775,826,2.775,831,2.902,1505,5.49,1506,5.49,1507,5.452,1512,4.704,1514,3.325,1541,2.995,1547,3.291,1576,6.785,1577,5.345,1578,6.807,1579,2.995,1580,3.74,1581,3.74,1582,6.238,1583,3.291,1584,5.49,1585,3.291,1586,3.74,1587,3.74,1588,3.74,1589,3.74,1590,5.345,1591,3.74,1592,5.345,1593,3.74]],["title/components/HemisphereLightComponent.html",[128,0.064,243,0.73]],["body/components/HemisphereLightComponent.html",[3,0.086,4,0.086,5,0.077,8,0.3,10,0.779,12,1.145,13,0.686,14,0.665,23,0.84,24,0.829,27,1.654,29,0.458,30,0.01,31,0.576,32,0.49,33,0.613,34,0.532,35,0.443,53,0.563,54,1.086,55,1.028,56,0.613,58,0.162,59,0.156,60,0.864,63,0.086,67,0.096,75,0.63,87,0.004,88,0.006,89,0.004,128,0.095,131,0.647,132,0.647,133,0.647,134,0.647,135,0.647,136,0.647,137,1.244,150,0.665,151,0.912,152,0.739,153,0.739,155,2.725,156,0.817,157,1.954,158,0.613,160,1.508,161,1.427,162,0.72,163,5.16,164,1.015,165,2.765,166,1.249,168,4.751,169,0.864,170,1.472,171,1.982,172,2.91,173,1.786,174,3.625,175,2.91,178,1.571,179,1.42,180,1.282,181,1.061,182,0.864,183,0.909,184,0.864,185,1.147,186,0.957,189,2.91,190,0.429,191,1.015,192,1.015,193,0.532,194,1.311,195,0.739,196,1.311,197,0.665,198,0.72,199,1.042,200,0.665,201,0.739,202,0.665,203,0.701,204,1.53,205,0.665,206,0.72,207,0.739,208,0.665,209,0.72,210,0.665,211,1.114,212,0.739,213,0.683,214,0.739,215,0.665,216,0.739,217,0.665,218,0.739,219,0.665,220,0.701,221,0.739,222,0.665,223,0.72,224,0.665,225,0.739,226,0.665,227,0.72,228,0.739,229,0.647,230,0.72,231,0.739,232,0.665,233,0.739,234,0.665,235,0.739,236,0.665,237,0.701,238,0.665,239,1.145,240,1.53,241,0.665,242,0.665,243,1.179,244,1.176,245,0.665,246,0.739,247,0.665,248,0.665,249,0.739,250,0.665,251,0.63,252,0.665,253,1.042,254,0.613,255,0.665,256,1.311,257,0.665,258,0.665,259,0.665,260,0.72,261,0.665,262,0.72,263,1.042,264,0.665,265,0.72,266,0.665,267,0.701,268,0.665,269,0.701,270,0.665,271,0.665,272,0.739,273,0.63,274,0.739,275,0.701,276,0.701,277,0.701,278,0.665,279,0.72,280,0.665,281,0.72,282,0.665,283,0.683,284,0.665,285,0.989,286,0.665,287,0.665,288,0.72,289,0.665,290,0.72,291,0.739,292,0.739,293,0.63,294,0.647,295,0.683,296,0.739,297,0.647,298,1,299,0.739,300,0.647,301,0.739,302,0.63,303,0.739,304,0.647,305,0.683,306,0.683,307,0.72,308,0.739,643,2.013,1594,6.694,1595,5.529,1596,6.404,1597,6.404,1598,4.866,1599,5.529,1600,3.922,1601,3.922,1602,3.922,1603,3.922]],["title/injectables/IconService.html",[0,1.329,511,2.679]],["body/injectables/IconService.html",[0,1.82,1,5.307,2,2.083,3,0.095,4,0.148,5,0.084,8,0.33,9,1.172,10,1.646,11,5.269,12,1.253,13,0.732,14,0.71,15,2.082,16,5.798,17,5.798,18,4.725,19,4.725,20,4.543,21,4.725,22,4.725,24,0.971,26,4.676,27,2.11,29,0.953,30,0.01,31,0.676,32,0.642,33,0.782,34,1.062,35,0.948,36,5.675,37,4.676,38,5.269,40,4.676,41,3.194,43,3.194,45,3.194,47,3.194,49,3.495,50,1.236,51,3.194,53,0.847,54,1,55,0.947,56,0.672,58,0.13,59,0.171,63,0.13,64,1.523,65,3.669,66,5.354,67,0.105,75,0.947,85,3.194,87,0.005,88,0.007,89,0.005,156,0.994,351,2.722,356,2.278,511,3.669,727,3.988,796,4.91,1604,3.448,1605,4.304,1606,6.06,1607,4.304,1608,4.304,1609,3.788,1610,3.788,1611,3.788,1612,3.788,1613,3.788,1614,3.788,1615,3.788,1616,5.191,1617,4.304,1618,3.788,1619,3.788,1620,3.448,1621,7.187,1622,6.542,1623,6.542,1624,3.788,1625,3.788,1626,3.788,1627,3.788,1628,3.788,1629,3.788,1630,3.788,1631,3.788,1632,5.922,1633,3.788,1634,3.788,1635,3.788,1636,3.788,1637,3.788,1638,3.788,1639,3.788,1640,3.788,1641,3.788]],["title/interfaces/IconSource.html",[64,1.524,1606,3.196]],["body/interfaces/IconSource.html",[0,2.145,1,4.324,3,0.122,4,0.122,5,0.109,8,0.423,9,1.381,10,1.098,11,3.841,12,0.864,20,3.131,26,3.841,27,1.654,30,0.01,32,0.583,34,0.75,37,3.841,38,3.841,40,3.841,58,0.153,59,0.22,63,0.153,64,1.955,65,4.731,66,5.651,67,0.135,75,1.116,85,4.101,87,0.006,88,0.008,89,0.006,156,1.124,351,2.818,356,2.471,511,3.438,585,3.001,727,5.154,1604,4.427,1606,6.103,1616,4.864,1620,4.427,1621,7.754,1622,7.058,1623,7.058,1624,4.864,1625,4.864,1626,4.864,1627,4.864,1628,4.864,1629,4.864,1630,4.864,1631,4.864,1632,6.693,1633,4.864,1634,4.864,1635,4.864,1636,4.864,1637,4.864,1638,4.864,1639,4.864,1640,4.864,1641,4.864]],["title/components/LayerActorComponent.html",[128,0.064,245,0.73]],["body/components/LayerActorComponent.html",[3,0.078,4,0.078,5,0.07,8,0.272,9,1.023,13,0.639,14,0.62,15,1.934,24,0.948,27,1.581,29,0.414,30,0.01,31,0.55,32,0.617,33,0.34,34,0.482,35,0.751,50,1.221,53,0.51,54,0.602,55,0.57,56,0.947,58,0.134,59,0.141,63,0.078,67,0.087,75,0.57,87,0.004,88,0.006,89,0.004,112,3.074,128,0.09,131,0.586,132,0.586,133,0.586,134,0.586,135,0.586,136,0.586,137,1.189,150,0.602,151,0.85,152,0.67,153,0.67,156,0.761,158,0.555,160,1.501,161,1.421,162,0.652,164,0.946,166,1.164,167,2.647,173,2.137,178,1.502,182,0.782,183,0.823,184,0.805,190,0.389,191,0.946,192,0.946,193,0.482,194,1.253,195,0.67,196,1.253,197,0.602,198,0.652,199,0.971,200,0.602,201,0.67,202,0.602,203,0.635,204,1.494,205,0.602,206,0.652,207,0.67,208,0.602,209,0.652,210,0.602,211,1.072,212,0.67,213,0.619,214,0.67,215,0.602,216,0.67,217,0.602,218,0.67,219,0.602,220,0.635,221,0.67,222,0.602,223,0.652,224,0.602,225,0.67,226,0.602,227,0.652,228,0.67,229,0.586,230,0.652,231,0.67,232,0.602,233,0.67,234,0.602,235,0.67,236,0.602,237,0.635,238,0.602,239,1.084,240,1.494,241,0.602,242,0.602,243,0.602,244,0.652,245,1.127,246,1.142,247,0.602,248,0.602,249,0.67,250,0.602,251,0.57,252,0.602,253,0.971,254,0.555,255,0.602,256,1.253,257,0.602,258,0.602,259,0.602,260,0.652,261,0.602,262,0.652,263,0.971,264,0.602,265,0.652,266,0.602,267,0.635,268,0.602,269,0.635,270,0.602,271,0.602,272,0.67,273,0.57,274,0.67,275,0.635,276,0.635,277,0.635,278,0.602,279,0.652,280,0.602,281,0.652,282,0.602,283,0.619,284,0.602,285,0.921,286,0.602,287,0.602,288,0.652,289,0.602,290,0.652,291,0.67,292,1.142,293,0.57,294,0.586,295,0.619,296,0.67,297,0.586,298,0.947,299,0.67,300,0.586,301,0.67,302,0.57,303,0.67,304,0.586,305,0.619,306,0.619,307,0.652,308,0.67,324,3.291,329,1.973,340,4.499,590,3.291,670,1.503,752,2.831,754,4.301,841,3.973,853,4.932,854,5.324,855,5.849,859,3.377,860,4.854,861,4.497,862,3.052,888,5.324,896,4.134,899,2.209,913,4.854,914,3.126,1227,2.105,1499,1.853,1501,5.333,1511,2.845,1517,3.126,1518,2.845,1529,2.635,1642,7.432,1643,5.151,1644,6.06,1645,3.552,1646,5.151,1647,3.126,1648,3.552,1649,3.126,1650,3.552,1651,3.552,1652,2.635,1653,3.126,1654,3.552,1655,3.552,1656,3.552,1657,6.06,1658,3.552]],["title/components/LineConnectorComponent.html",[128,0.064,247,0.73]],["body/components/LineConnectorComponent.html",[3,0.067,4,0.067,5,0.06,8,0.233,9,0.914,10,0.914,12,1.326,13,0.571,14,0.554,15,1.616,23,0.699,24,0.964,29,0.537,30,0.01,31,0.548,32,0.583,33,0.591,34,0.413,35,0.787,50,1.133,53,0.438,54,1.336,55,1.266,56,1.035,58,0.174,59,0.121,60,1.013,63,0.101,67,0.075,72,1.906,87,0.003,88,0.005,89,0.003,128,0.082,131,0.503,132,0.503,133,0.503,134,0.503,135,0.503,136,0.503,137,1.103,150,0.517,151,0.759,152,0.575,153,0.575,156,0.68,157,1.585,158,0.476,160,1.49,161,1.41,162,0.56,164,0.845,166,1.039,167,2.695,169,0.671,170,1.347,171,1.758,173,1.585,178,1.72,179,1.182,180,1.066,181,0.825,182,0.671,183,0.707,184,0.719,185,0.892,186,0.744,190,0.334,191,0.845,192,0.845,193,0.413,194,1.163,195,0.575,196,1.163,197,0.517,198,0.56,199,0.867,200,0.517,201,0.575,202,0.517,203,0.545,204,1.435,205,0.517,206,0.56,207,0.575,208,0.517,209,0.56,210,0.517,211,1.006,212,0.575,213,0.531,214,0.575,215,0.517,216,0.575,217,0.517,218,0.575,219,0.517,220,0.545,221,0.575,222,0.517,223,0.56,224,0.517,225,0.575,226,0.517,227,0.56,228,0.575,229,0.503,230,0.56,231,0.575,232,0.517,233,0.575,234,0.517,235,0.575,236,0.517,237,0.545,238,0.517,239,0.991,240,1.435,241,0.517,242,0.517,243,0.517,244,0.56,245,0.517,246,0.575,247,1.046,248,1.18,249,0.575,250,0.517,251,0.489,252,0.517,253,0.867,254,0.476,255,0.517,256,1.163,257,0.517,258,0.517,259,0.517,260,0.56,261,0.517,262,0.56,263,0.867,264,0.517,265,0.56,266,0.517,267,0.545,268,0.517,269,0.545,270,0.517,271,0.517,272,0.575,273,0.489,274,0.575,275,0.545,276,0.545,277,0.545,278,0.517,279,0.56,280,0.517,281,0.56,282,0.517,283,0.531,284,0.517,285,0.823,286,0.517,287,0.517,288,0.56,289,0.517,290,0.56,291,0.575,292,0.575,293,0.489,294,0.503,295,0.965,296,0.575,297,0.503,298,0.865,299,0.575,300,0.503,301,0.575,302,0.489,303,0.575,304,0.503,305,0.531,306,0.531,307,0.56,308,0.575,309,3.77,312,3.838,318,4.875,328,3.632,329,2.156,351,1.755,356,1.853,367,1.59,643,1.674,670,1.946,724,2.588,726,2.149,776,1.332,842,1.382,844,2.42,851,2.42,891,3.283,898,1.727,903,3.196,959,2.781,966,2.399,999,1.59,1033,2.861,1035,1.655,1036,2.118,1227,1.806,1244,2.442,1514,2.861,1553,3.684,1554,2.682,1558,2.682,1659,6.857,1660,2.442,1661,5.539,1662,4.6,1663,5.539,1664,5.539,1665,5.539,1666,5.539,1667,5.539,1668,6.17,1669,5.539,1670,5.539,1671,6.17,1672,6.17,1673,6.127,1674,6.17,1675,3.632,1676,6.17,1677,5.304,1678,4.6,1679,3.048,1680,3.048,1681,3.196,1682,3.048,1683,4.6,1684,3.048,1685,3.048,1686,3.048,1687,3.048,1688,3.048,1689,3.048,1690,3.048,1691,6.622,1692,3.048,1693,3.048,1694,3.048,1695,3.048,1696,3.048,1697,4.6,1698,3.048,1699,3.048,1700,6.17,1701,3.048,1702,3.048,1703,3.048,1704,4.6,1705,3.048,1706,3.048,1707,3.048,1708,3.048,1709,3.048,1710,3.048,1711,3.048,1712,3.048,1713,3.048,1714,3.048,1715,4.6,1716,3.048,1717,3.048,1718,3.048,1719,3.048,1720,3.048,1721,3.048,1722,4.6,1723,3.048,1724,3.048,1725,3.048,1726,3.048]],["title/components/LoaderActorComponent.html",[128,0.064,250,0.73]],["body/components/LoaderActorComponent.html",[3,0.067,4,0.067,5,0.059,8,0.231,9,0.906,12,1.324,13,0.566,14,0.549,15,1.853,20,3.734,23,0.694,24,0.942,27,1.086,29,0.352,30,0.01,31,0.508,32,0.552,33,0.527,34,0.409,35,0.838,50,1.273,53,0.433,54,1.04,55,0.986,56,0.959,58,0.164,59,0.12,60,1.005,63,0.067,67,0.074,68,2.238,72,2.111,75,0.484,87,0.003,88,0.005,89,0.003,128,0.082,131,0.498,132,0.498,133,0.498,134,0.498,135,0.498,136,0.498,137,1.098,150,0.511,151,0.753,152,0.569,153,0.569,156,0.674,157,1.577,158,0.471,160,1.489,161,1.41,162,0.554,164,0.554,165,2.189,166,1.031,169,0.664,170,1.342,171,1.749,173,1.414,178,1.244,179,1.172,180,1.058,182,0.664,183,0.699,184,0.713,186,0.736,190,0.33,191,0.838,192,0.838,193,0.409,194,1.157,195,0.569,196,1.157,197,0.511,198,0.554,199,0.86,200,0.511,201,0.569,202,0.511,203,0.539,204,1.431,205,0.511,206,0.554,207,0.569,208,0.511,209,0.554,210,0.511,211,1.002,212,0.569,213,0.525,214,0.569,215,0.511,216,0.569,217,0.511,218,0.569,219,0.511,220,0.539,221,0.569,222,0.511,223,0.554,224,0.511,225,0.569,226,0.511,227,0.554,228,0.569,229,0.498,230,0.554,231,0.569,232,1.118,233,0.569,234,0.511,235,0.569,236,0.511,237,0.539,238,0.511,239,0.984,240,1.431,241,0.511,242,0.511,243,0.511,244,0.554,245,0.511,246,0.569,247,0.511,248,0.511,249,0.569,250,1.04,251,0.884,252,0.511,253,0.86,254,0.471,255,0.511,256,1.157,257,0.511,258,0.511,259,0.511,260,0.554,261,0.511,262,0.554,263,0.86,264,0.511,265,0.554,266,0.511,267,0.539,268,0.511,269,0.539,270,0.511,271,0.774,272,0.569,273,0.484,274,0.569,275,0.539,276,0.539,277,0.539,278,0.511,279,0.554,280,0.511,281,0.554,282,0.511,283,0.525,284,0.511,285,0.816,286,0.511,287,0.511,288,0.554,289,0.511,290,0.554,291,0.569,292,1.038,293,0.484,294,0.498,295,0.525,296,0.569,297,0.498,298,0.86,299,0.569,300,0.498,301,0.569,302,0.484,303,0.569,304,0.498,305,0.525,306,0.525,307,0.554,308,0.569,309,3.757,312,3.818,315,4.916,328,3.609,329,2.674,332,4.916,333,4.916,351,1.744,356,1.654,365,4.409,580,3.656,643,2.524,776,1.318,783,2.867,784,1.709,785,2.989,796,1.788,797,2.416,798,1.788,827,1.876,831,3.765,842,1.371,844,2.405,851,2.681,891,3.262,898,1.709,929,1.978,958,2.572,959,2.764,965,2.97,1011,2.096,1227,3.262,1237,3.386,1250,2.238,1252,2.096,1254,2.096,1283,2.655,1288,2.238,1318,1.788,1472,4.084,1499,1.574,1511,2.416,1513,2.655,1514,1.876,1515,2.655,1531,2.416,1652,2.238,1675,3.609,1727,7.335,1728,4.564,1729,5.505,1730,5.505,1731,5.505,1732,4.916,1733,4.016,1734,3.017,1735,4.016,1736,3.017,1737,3.017,1738,3.017,1739,3.017,1740,3.017,1741,3.017,1742,3.017,1743,3.017,1744,1.978,1745,2.655,1746,3.017,1747,3.017,1748,2.416,1749,2.238,1750,3.017,1751,3.017,1752,3.017,1753,3.017,1754,3.017,1755,4.564,1756,5.505,1757,3.017,1758,3.017,1759,3.017,1760,3.017,1761,3.017,1762,3.017,1763,3.017,1764,3.017,1765,3.017,1766,3.017,1767,2.655,1768,2.655,1769,2.655,1770,5.401,1771,3.017,1772,3.017,1773,4.016,1774,4.564,1775,3.656,1776,3.017,1777,3.017,1778,3.017,1779,3.017]],["title/components/MapControlsComponent.html",[128,0.064,252,0.73]],["body/components/MapControlsComponent.html",[3,0.067,4,0.067,5,0.06,8,0.234,9,0.916,10,0.607,12,1.19,14,0.555,15,1.354,23,0.701,24,0.955,29,0.538,30,0.01,31,0.549,32,0.473,33,0.442,34,0.415,35,0.699,50,1.218,53,0.797,54,1.37,55,1.298,56,0.478,58,0.16,59,0.121,63,0.067,67,0.075,72,1.586,75,0.491,87,0.003,88,0.005,89,0.003,128,0.082,131,0.504,132,0.504,133,0.504,134,0.504,135,0.504,136,0.504,137,1.105,150,0.518,151,0.761,152,0.576,153,0.576,156,0.681,158,0.478,160,1.49,161,1.411,162,0.561,164,0.847,166,1.042,169,0.673,170,1.349,173,1.184,178,1.845,181,0.827,184,0.478,186,0.746,190,0.335,191,0.847,192,0.847,193,0.415,194,1.165,195,0.576,196,1.165,197,0.518,198,0.561,199,0.869,200,0.518,201,0.576,202,0.518,203,0.547,204,1.437,205,0.518,206,0.561,207,0.576,208,0.518,209,0.561,210,0.518,211,1.008,212,0.576,213,0.532,214,0.576,215,0.518,216,0.576,217,0.518,218,0.576,219,0.518,220,0.547,221,0.576,222,0.518,223,0.561,224,0.518,225,0.576,226,0.518,227,0.561,228,0.576,229,0.504,230,0.561,231,0.576,232,0.518,233,0.576,234,0.518,235,0.576,236,0.518,237,0.547,238,0.518,239,0.992,240,1.437,241,0.518,242,0.518,243,0.518,244,0.561,245,0.518,246,0.576,247,0.518,248,0.518,249,0.576,250,0.518,251,0.491,252,1.048,253,0.869,254,0.478,255,0.518,256,1.165,257,0.518,258,0.518,259,0.518,260,0.847,261,0.518,262,0.561,263,0.869,264,0.518,265,0.561,266,0.518,267,0.547,268,0.518,269,0.547,270,0.518,271,0.518,272,0.576,273,0.491,274,0.576,275,0.547,276,0.547,277,0.547,278,0.518,279,0.561,280,0.518,281,0.561,282,0.518,283,0.532,284,0.518,285,0.824,286,0.518,287,0.518,288,0.561,289,0.518,290,0.561,291,0.576,292,0.576,293,0.491,294,0.504,295,0.532,296,0.576,297,0.504,298,0.867,299,0.576,300,0.504,301,0.576,302,0.491,303,0.576,304,0.504,305,0.532,306,0.532,307,0.561,308,0.576,309,3.884,312,3.452,351,2.209,367,2.405,378,2.315,544,3.738,643,1.113,653,2.612,670,1.95,671,4.294,683,1.595,724,2.887,726,1.428,752,1.428,827,2.867,842,1.385,844,2.424,851,2.699,891,3.289,898,1.732,929,2.004,959,2.786,966,2.405,999,2.405,1031,1.902,1224,1.812,1241,2.69,1252,2.124,1254,2.124,1288,2.268,1318,1.812,1472,3.421,1681,3.203,1780,2.449,1781,7.473,1782,2.449,1783,4.884,1784,4.884,1785,3.693,1786,4.884,1787,5.438,1788,5.549,1789,5.549,1790,5.549,1791,5.549,1792,5.549,1793,5.549,1794,5.549,1795,4.884,1796,5.549,1797,5.549,1798,4.884,1799,5.549,1800,4.884,1801,4.61,1802,3.057,1803,3.057,1804,3.057,1805,3.057,1806,4.61,1807,2.69,1808,3.057,1809,4.61,1810,3.057,1811,3.057,1812,3.057,1813,5.438,1814,3.057,1815,3.057,1816,3.057,1817,3.057,1818,3.057,1819,3.057,1820,3.057,1821,3.057,1822,4.61,1823,2.449,1824,2.69,1825,2.69,1826,4.057,1827,2.69,1828,4.057,1829,4.057,1830,2.69,1831,4.057,1832,4.057,1833,3.057,1834,3.057,1835,2.69,1836,2.69,1837,2.69,1838,3.057,1839,3.057,1840,3.057,1841,4.61,1842,3.057,1843,3.057,1844,3.057,1845,4.61,1846,3.057,1847,3.057,1848,3.057,1849,3.057,1850,3.057,1851,3.057,1852,3.057,1853,3.057,1854,3.057,1855,3.057,1856,3.057,1857,3.057,1858,3.057,1859,3.057,1860,4.61,1861,3.057,1862,3.057,1863,3.057,1864,3.057,1865,2.268,1866,3.421]],["title/components/ModelActorComponent.html",[128,0.064,135,0.711]],["body/components/ModelActorComponent.html",[3,0.087,4,0.087,5,0.078,8,0.303,9,1.106,10,0.786,12,1.006,13,0.691,15,1.571,23,0.846,24,0.832,27,1.864,29,0.649,30,0.01,31,0.609,32,0.535,33,0.669,34,0.537,35,0.448,50,0.727,53,0.569,58,0.162,59,0.157,60,0.872,63,0.087,67,0.097,75,0.636,87,0.004,88,0.006,89,0.004,112,2.778,128,0.096,131,0.653,132,0.653,133,0.653,134,0.653,135,1.152,136,0.653,137,1.316,150,0.671,151,0.919,152,0.746,153,0.746,156,0.823,157,1.794,158,0.619,160,1.508,161,1.428,162,0.727,164,1.022,166,1.258,169,0.872,170,1.477,171,1.99,178,1.258,179,1.43,182,0.872,183,0.918,184,0.87,186,0.966,190,0.434,191,1.022,192,1.022,193,0.537,194,1.316,195,0.746,196,1.316,197,0.671,198,0.727,199,1.049,200,0.671,201,0.746,202,0.671,203,0.708,204,1.533,205,0.671,206,0.727,207,0.746,208,0.671,209,0.727,210,0.671,211,1.118,212,0.746,213,0.69,214,0.746,215,0.671,216,0.746,217,0.671,218,0.746,219,0.671,220,0.708,221,0.746,222,0.671,223,0.727,224,0.671,225,0.746,226,0.671,227,0.727,228,0.746,229,0.653,230,0.727,231,0.746,232,0.671,233,0.746,234,0.671,235,0.746,236,0.671,237,0.708,238,0.671,239,1.151,240,1.533,241,0.671,242,0.671,243,0.671,244,0.727,245,0.671,246,0.746,247,0.671,248,0.671,249,0.746,250,0.671,251,0.636,252,0.671,253,1.049,254,1.271,255,0.671,256,1.316,257,0.671,258,0.671,259,0.671,260,0.727,261,0.671,262,0.727,263,1.049,264,0.671,265,0.727,266,0.671,267,0.708,268,0.671,269,0.708,270,0.671,271,0.944,272,0.746,273,0.636,274,0.746,275,0.708,276,0.708,277,0.708,278,0.671,279,0.727,280,0.671,281,0.727,282,0.671,283,0.69,284,0.671,285,0.995,286,0.671,287,0.671,288,0.727,289,0.671,290,0.727,291,0.746,292,1.316,293,0.636,294,0.653,295,0.69,296,0.746,297,0.653,298,1.006,299,0.746,300,0.653,301,0.746,302,0.636,303,0.746,304,0.653,305,0.69,306,0.69,307,0.727,308,0.746,512,5.139,862,3.299,899,2.463,1499,2.065,1518,4.459,1528,4.459,1529,2.938,1867,6.715,1868,4.22,1869,5.566,1870,6.437,1871,3.96,1872,3.96,1873,3.96,1874,3.485,1875,3.96,1876,3.96,1877,3.485,1878,3.485]],["title/injectables/ModelService.html",[0,1.329,512,2.824]],["body/injectables/ModelService.html",[0,1.923,1,5.376,2,2.261,3,0.103,4,0.155,5,0.092,8,0.358,9,1.238,10,1.674,11,5.42,12,1.28,13,0.773,14,0.75,15,2.109,16,5.997,17,5.997,18,4.994,19,4.994,20,4.64,21,4.994,22,4.994,24,0.983,26,4.876,27,2.126,29,0.971,30,0.01,31,0.689,32,0.652,33,0.797,34,1.088,35,0.962,36,5.783,37,4.876,38,5.42,40,4.876,41,3.466,43,3.466,45,3.466,47,3.466,49,3.695,50,1.288,51,3.466,53,0.896,54,1.057,55,1.001,56,0.73,58,0.137,59,0.186,63,0.103,65,5.176,66,4.6,67,0.114,75,1.001,87,0.005,88,0.007,89,0.005,156,0.921,185,1.824,248,0.792,512,4.087,737,3.063,738,2.769,739,3.246,740,3.246,741,3.246,742,3.466,743,3.466,796,4.994,1609,4.111,1610,4.111,1611,4.111,1612,4.111,1613,4.111,1614,4.111,1615,4.111,1618,4.111,1619,4.111,1620,3.742,1879,4.111,1880,4.672,1881,4.672,1882,4.672,1883,4.672,1884,4.672,1885,4.672,1886,4.672]],["title/interfaces/NearestIntersection.html",[64,1.524,1887,3.196]],["body/interfaces/NearestIntersection.html",[0,1.809,3,0.094,4,0.094,5,0.084,8,0.327,9,1.165,15,1.906,23,0.649,30,0.01,32,0.449,56,0.916,58,0.167,59,0.17,60,1.589,63,0.094,64,1.51,67,0.105,72,2.305,75,1.309,87,0.005,88,0.007,89,0.005,157,1.507,180,1.36,184,1.25,185,1.249,298,1.127,316,2.418,329,2.793,330,3.419,337,3.167,342,3.419,351,2.286,355,5.778,356,1.762,544,2.143,585,2.318,597,2.227,615,4.481,643,2.135,669,2.966,670,2.481,678,2.966,690,4.167,727,2.53,738,2.53,769,4.487,772,3.648,798,4.481,842,1.282,844,2.562,851,1.865,861,3.167,932,3.167,1143,3.167,1240,2.966,1281,3.419,1542,5.92,1681,2.966,1887,5.797,1888,3.419,1889,4.971,1890,4.393,1891,3.167,1892,2.966,1893,3.756,1894,5.161,1895,3.756,1896,5.896,1897,3.756,1898,4.971,1899,3.167,1900,5.896,1901,3.756,1902,3.756,1903,3.756,1904,3.756,1905,3.756,1906,3.756,1907,3.756,1908,3.756,1909,3.756,1910,3.756,1911,3.756,1912,3.167,1913,3.756,1914,5.896,1915,3.756,1916,3.756,1917,3.419,1918,3.756,1919,4.075,1920,3.756,1921,3.756,1922,3.756,1923,4.393,1924,3.756,1925,3.756,1926,5.161,1927,5.896,1928,5.896,1929,5.896,1930,5.161,1931,5.161,1932,6.654,1933,6.654,1934,5.161,1935,3.756,1936,3.756,1937,5.896,1938,3.167,1939,3.756,1940,5.161,1941,5.161,1942,3.756,1943,3.756,1944,3.756,1945,3.756,1946,3.756,1947,3.756,1948,3.756,1949,4.698,1950,3.756,1951,3.756,1952,3.756,1953,3.756,1954,3.756,1955,3.756,1956,5.161,1957,4.351,1958,3.756,1959,6.348,1960,5.161,1961,3.756,1962,3.756,1963,3.756,1964,3.756]],["title/interfaces/Node.html",[64,1.524,591,2.162]],["body/interfaces/Node.html",[3,0.133,4,0.133,5,0.119,8,0.463,9,1.46,27,2.154,30,0.01,31,0.501,32,0.671,33,0.822,34,1.117,58,0.133,63,0.186,64,2.986,87,0.007,88,0.008,89,0.007,112,2.202,156,1.217,167,2.642,173,1.554,211,1.117,254,1.287,426,3.284,585,3.284,586,5.002,587,3.037,588,3.966,589,3.991,590,3.284,591,3.69,592,3.966,593,3.426,594,3.284,595,3.966,596,4.203,597,4.131,598,3.762,599,3.155]],["title/components/ObjLoaderComponent.html",[128,0.064,257,0.73]],["body/components/ObjLoaderComponent.html",[3,0.075,4,0.075,5,0.143,8,0.262,9,0.995,10,0.995,12,1.135,13,0.621,14,0.603,15,0.834,23,0.761,24,0.848,27,1.83,29,0.584,30,0.01,31,0.576,32,0.532,33,0.625,34,0.464,35,0.566,50,0.628,53,0.491,54,0.58,55,0.549,56,0.926,58,0.165,59,0.136,60,1.103,63,0.075,67,0.084,75,0.549,87,0.004,88,0.006,89,0.004,95,3.359,96,3.887,105,4.399,128,0.103,131,0.564,132,0.564,133,0.564,134,0.564,135,0.564,136,0.564,137,1.167,150,0.58,151,0.827,152,0.645,153,0.645,156,0.74,157,1.677,158,0.534,160,1.498,161,1.419,162,0.628,164,0.92,166,1.132,169,0.753,170,1.405,171,1.86,178,1.475,179,1.287,181,0.925,182,0.753,183,0.793,184,0.783,185,1,186,0.834,190,0.374,191,0.92,192,0.92,193,0.464,194,1.231,195,0.645,196,1.231,197,0.58,198,0.628,199,0.944,200,0.58,201,0.645,202,0.58,203,0.611,204,1.48,205,0.58,206,0.628,207,0.645,208,0.58,209,0.628,210,0.58,211,1.056,212,0.645,213,0.595,214,0.645,215,0.58,216,0.645,217,0.58,218,0.645,219,0.58,220,0.611,221,0.645,222,0.58,223,0.628,224,0.58,225,0.645,226,0.58,227,0.628,228,0.645,229,0.564,230,0.628,231,0.645,232,0.58,233,0.645,234,0.58,235,0.645,236,0.58,237,0.611,238,0.58,239,1.06,240,1.48,241,0.58,242,0.58,243,0.58,244,0.628,245,0.58,246,0.645,247,0.58,248,0.58,249,0.645,250,0.58,251,1.048,252,0.58,253,0.944,254,0.926,255,0.58,256,1.231,257,1.107,258,1.371,259,0.58,260,0.628,261,0.58,262,0.628,263,0.944,264,0.58,265,0.628,266,0.58,267,0.611,268,0.58,269,0.611,270,0.58,271,0.58,272,0.645,273,0.549,274,0.645,275,0.611,276,0.611,277,0.611,278,0.58,279,0.628,280,0.58,281,0.628,282,0.58,283,0.595,284,0.58,285,0.896,286,0.58,287,0.58,288,0.628,289,0.58,290,0.628,291,0.645,292,0.645,293,0.549,294,0.564,295,0.595,296,0.645,297,0.564,298,0.926,299,0.645,300,0.564,301,0.645,302,0.549,303,0.645,304,0.564,305,0.595,306,0.595,307,0.628,308,0.645,311,2.241,329,1.93,500,1.716,513,4.28,643,1.244,683,1.783,783,3.05,862,2.969,899,2.127,935,2.537,1271,2.376,1465,3.009,1965,6.771,1966,2.376,1967,5.009,1968,5.009,1969,5.009,1970,3.009,1971,4.399,1972,5.009,1973,6.603,1974,4.536,1975,6.528,1976,6.528,1977,4.749,1978,5.009,1979,3.009,1980,5.566,1981,6.949,1982,6.949,1983,6.116,1984,6.949,1985,7.022,1986,5.009,1987,3.419,1988,3.419,1989,3.419,1990,5.009,1991,3.009,1992,3.419,1993,3.419,1994,3.419,1995,3.419,1996,3.419,1997,2.537,1998,3.419,1999,3.419,2000,5.009,2001,2.738,2002,5.009,2003,2.376,2004,3.481,2005,3.419,2006,3.009,2007,3.009,2008,3.009,2009,3.009,2010,3.419,2011,3.419,2012,3.419,2013,3.419,2014,3.009,2015,3.419,2016,3.419,2017,3.419,2018,3.419,2019,3.419]],["title/injectables/ObjLoaderService.html",[0,1.329,513,2.824]],["body/injectables/ObjLoaderService.html",[0,2.12,2,2.626,3,0.12,4,0.12,5,0.106,8,0.416,9,1.365,10,1.498,12,1.326,14,0.827,15,1.996,24,0.945,27,2.019,29,0.925,30,0.01,31,0.657,32,0.607,33,0.759,35,0.896,49,4.469,50,1.262,53,0.779,54,1.165,55,1.103,56,1.239,58,0.18,59,0.216,63,0.12,67,0.133,75,0.871,87,0.006,88,0.008,89,0.006,90,5.478,93,5.098,94,5.882,95,3.892,96,4.505,98,5.595,100,5.197,101,4.025,156,1.015,180,1.593,251,1.211,254,0.848,329,2.455,500,2.724,513,4.505,796,4.469,1457,4.345,1458,4.345,1459,4.345,1460,4.345,1973,4.774,1977,6.04,1991,4.774,2003,3.77,2004,4.774,2014,4.774,2020,6.976,2021,4.345,2022,6.871,2023,5.425,2024,6.871,2025,7.541,2026,5.425,2027,5.425,2028,5.425,2029,5.425,2030,5.425,2031,4.774,2032,5.425]],["title/components/ObjectLoaderComponent.html",[128,0.064,255,0.73]],["body/components/ObjectLoaderComponent.html",[3,0.087,4,0.087,5,0.078,8,0.303,9,1.105,10,1.105,12,1.149,13,0.69,14,0.669,23,0.845,24,0.727,29,0.462,30,0.01,31,0.578,32,0.303,33,0.616,34,0.536,35,0.447,53,0.568,54,0.671,55,0.635,56,1.005,58,0.168,59,0.157,63,0.087,67,0.097,75,0.635,87,0.004,88,0.006,89,0.004,95,3.645,128,0.096,131,0.653,132,0.653,133,0.653,134,0.653,135,0.653,136,0.653,137,1.248,150,0.671,151,0.918,152,0.746,153,0.746,156,0.822,157,1.793,158,0.618,160,1.508,161,1.428,162,0.726,164,1.021,169,0.871,170,1.476,171,1.989,179,1.429,180,1.29,181,1.07,182,0.871,183,0.917,184,1.091,185,1.157,186,0.965,190,0.433,191,1.021,192,1.021,193,0.536,194,1.316,195,0.746,196,1.316,197,0.671,198,0.726,199,1.049,200,0.671,201,0.746,202,0.671,203,0.707,204,1.533,205,0.671,206,0.726,207,0.746,208,0.671,209,0.726,210,0.671,211,1.118,212,0.746,213,0.689,214,0.746,215,0.671,216,0.746,217,0.671,218,0.746,219,0.671,220,0.707,221,0.746,222,0.671,223,0.726,224,0.671,225,0.746,226,0.671,227,0.726,228,0.746,229,0.653,230,0.726,231,0.746,232,0.671,233,0.746,234,0.671,235,0.746,236,0.671,237,0.707,238,0.671,239,1.151,240,1.533,241,0.671,242,0.671,243,0.671,244,0.726,245,0.671,246,0.746,247,0.671,248,0.671,249,0.746,250,0.671,251,1.258,252,0.671,253,1.049,254,1.091,255,1.183,256,1.316,257,0.671,258,0.671,259,0.671,260,0.726,261,0.671,262,0.726,263,1.049,264,0.671,265,0.726,266,0.671,267,0.707,268,0.671,269,0.707,270,0.671,271,0.671,272,0.746,273,0.635,274,0.746,275,0.707,276,0.707,277,0.707,278,0.671,279,0.726,280,0.671,281,0.726,282,0.671,283,0.689,284,0.671,285,0.995,286,0.671,287,0.671,288,0.726,289,0.671,290,0.726,291,0.746,292,0.746,293,0.635,294,0.653,295,0.689,296,0.746,297,0.653,298,1.005,299,0.746,300,0.653,301,0.746,302,0.635,303,0.746,304,0.653,305,0.689,306,0.689,307,0.726,308,0.746,324,2.148,329,2.095,500,1.986,626,3.481,1966,2.749,1971,4.774,1974,4.85,1979,3.481,1983,3.481,1985,3.481,2003,2.749,2004,3.865,2031,3.481,2033,6.143,2034,5.563,2035,5.563,2036,5.563,2037,3.956,2038,3.481,2039,3.956,2040,3.956,2041,3.956,2042,3.481,2043,3.481,2044,3.956]],["title/components/OrbitControlsComponent.html",[128,0.064,259,0.73]],["body/components/OrbitControlsComponent.html",[3,0.085,4,0.085,5,0.076,8,0.295,10,0.765,12,1.138,14,0.657,23,0.83,24,0.823,29,0.637,30,0.01,31,0.603,32,0.418,33,0.523,34,0.522,35,0.617,50,1.002,53,0.553,54,0.925,55,0.877,56,0.602,58,0.161,59,0.153,63,0.085,67,0.094,75,0.619,87,0.004,88,0.006,89,0.004,128,0.094,131,0.636,132,0.636,133,0.636,134,0.636,135,0.636,136,0.636,137,1.234,150,0.653,151,0.901,152,0.726,153,0.726,156,0.807,158,0.602,160,1.507,161,1.426,162,0.707,164,1.002,166,1.234,169,0.848,170,1.463,178,1.433,181,1.042,184,0.602,186,0.94,190,0.422,191,1.002,192,1.002,193,0.522,194,1.3,195,0.726,196,1.3,197,0.653,198,0.707,199,1.029,200,0.653,201,0.726,202,0.653,203,0.689,204,1.524,205,0.653,206,0.707,207,0.726,208,0.653,209,0.707,210,0.653,211,1.107,212,0.726,213,0.671,214,0.726,215,0.653,216,0.726,217,0.653,218,0.726,219,0.653,220,0.689,221,0.726,222,0.653,223,0.707,224,0.653,225,0.726,226,0.653,227,0.707,228,0.726,229,0.636,230,0.707,231,0.726,232,0.653,233,0.726,234,0.653,235,0.726,236,0.653,237,0.689,238,0.653,239,1.134,240,1.524,241,0.653,242,0.653,243,0.653,244,0.707,245,0.653,246,0.726,247,0.653,248,0.653,249,0.726,250,0.653,251,0.619,252,0.653,253,1.029,254,0.602,255,0.653,256,1.3,257,0.653,258,0.653,259,1.169,260,1.267,261,0.653,262,0.707,263,1.029,264,0.653,265,0.707,266,0.653,267,0.689,268,0.653,269,0.689,270,0.653,271,0.653,272,0.726,273,0.619,274,0.726,275,0.689,276,0.689,277,0.689,278,0.653,279,0.707,280,0.653,281,0.707,282,0.653,283,0.671,284,0.653,285,0.976,286,0.653,287,0.653,288,0.707,289,0.653,290,0.707,291,0.726,292,0.726,293,0.619,294,0.636,295,0.671,296,0.726,297,0.636,298,0.991,299,0.726,300,0.636,301,0.726,302,0.619,303,0.726,304,0.636,305,0.671,306,0.671,307,0.707,308,0.726,544,3.989,643,1.402,653,3.093,724,3.223,726,1.8,752,1.8,842,1.64,959,3.183,966,2.848,999,2.848,1031,2.396,1224,2.283,1318,2.283,1780,3.085,1782,3.085,1783,5.58,1784,5.58,1785,4.373,1786,5.58,1787,6.071,1798,5.58,1800,5.58,1807,3.39,1813,4.804,1823,4.373,1824,3.39,1825,3.39,1826,4.804,1827,3.39,1828,4.804,1829,4.804,1830,3.39,1831,4.804,1832,4.804,1835,3.39,1836,3.39,1837,3.39,1865,2.858,1866,4.051,2045,6.655,2046,5.459,2047,3.852,2048,3.852]],["title/components/OrthographicCameraComponent.html",[128,0.064,261,0.73]],["body/components/OrthographicCameraComponent.html",[3,0.08,4,0.08,5,0.071,8,0.278,10,0.72,12,1.194,13,0.649,14,0.629,15,1.497,23,0.795,24,0.838,29,0.715,30,0.01,31,0.614,32,0.47,33,0.587,34,0.492,35,0.759,50,1.361,53,0.521,54,0.615,55,0.582,56,0.567,58,0.157,59,0.144,60,0.799,63,0.08,67,0.089,72,1.799,75,0.582,87,0.004,88,0.006,89,0.004,128,0.1,131,0.599,132,0.599,133,0.599,134,0.599,135,0.599,136,0.599,137,1.2,150,0.615,151,0.863,152,0.684,153,0.684,156,0.773,158,0.567,160,1.503,161,1.423,162,0.666,164,0.96,166,1.182,169,0.799,170,1.434,173,1.575,178,1.182,180,1.212,181,0.981,182,0.799,183,0.841,184,0.567,186,0.885,190,0.397,191,0.96,192,0.96,193,0.492,194,1.265,195,0.684,196,1.265,197,0.615,198,0.666,199,0.986,200,0.615,201,0.684,202,0.615,203,0.649,204,1.502,205,0.615,206,0.666,207,0.684,208,0.615,209,0.666,210,0.615,211,1.081,212,0.684,213,0.632,214,0.684,215,0.615,216,0.684,217,0.615,218,0.684,219,0.615,220,0.649,221,0.684,222,0.615,223,0.666,224,0.615,225,0.684,226,0.615,227,0.666,228,0.684,229,0.599,230,0.666,231,0.684,232,0.615,233,0.684,234,0.615,235,0.684,236,0.615,237,0.649,238,0.615,239,1.097,240,1.502,241,0.615,242,0.615,243,0.615,244,0.666,245,0.615,246,0.684,247,0.615,248,0.615,249,0.684,250,0.615,251,0.582,252,0.615,253,0.986,254,0.567,255,0.615,256,1.265,257,0.615,258,0.615,259,0.615,260,0.666,261,1.138,262,1.126,263,0.986,264,0.615,265,0.666,266,0.615,267,0.649,268,0.615,269,0.649,270,0.615,271,0.615,272,0.684,273,0.582,274,0.684,275,0.649,276,0.649,277,0.649,278,0.615,279,0.666,280,0.615,281,0.666,282,0.615,283,0.632,284,0.615,285,0.935,286,0.615,287,0.615,288,0.666,289,0.615,290,0.666,291,0.684,292,0.684,293,0.582,294,0.599,295,0.632,296,0.684,297,0.599,298,0.958,299,0.684,300,0.599,301,0.684,302,0.582,303,0.684,304,0.599,305,0.632,306,0.632,307,0.666,308,0.684,351,1.149,356,1.09,367,1.892,377,2.298,615,3.634,669,3.634,670,3.308,671,2.52,678,3.634,683,1.892,724,3.136,726,2.443,842,1.571,959,3.079,966,2.728,999,2.728,1035,1.97,1361,4.189,1401,3.192,1890,4.665,1919,3.634,2049,6.724,2050,2.905,2051,5.23,2052,5.907,2053,4.602,2054,6.712,2055,4.602,2056,3.627,2057,3.627,2058,4.602,2059,3.627,2060,5.376,2061,3.627,2062,3.627,2063,3.627,2064,3.627,2065,5.23,2066,6.133,2067,3.627,2068,3.627,2069,3.627,2070,3.627,2071,7.115,2072,3.627,2073,3.627,2074,3.627,2075,3.627,2076,3.627,2077,3.192,2078,3.627,2079,3.627]],["title/components/PerspectiveCameraComponent.html",[128,0.064,264,0.73]],["body/components/PerspectiveCameraComponent.html",[3,0.086,4,0.086,5,0.076,8,0.298,10,0.772,12,1.082,13,0.682,14,0.661,15,1.555,23,0.835,24,0.858,29,0.641,30,0.01,31,0.605,32,0.56,33,0.526,34,0.527,35,0.621,50,1.17,53,0.559,56,0.607,58,0.161,59,0.155,63,0.086,67,0.095,87,0.004,88,0.006,89,0.004,128,0.095,131,0.642,132,0.642,133,0.642,134,0.642,135,0.642,136,0.642,137,1.239,150,0.659,151,0.907,152,0.733,153,0.733,156,0.812,158,0.607,160,1.507,161,1.427,162,0.714,164,1.009,166,1.242,169,0.856,170,1.468,173,2.081,178,1.565,180,1.274,181,1.052,182,0.856,183,0.901,184,0.607,186,0.949,190,0.426,191,1.009,192,1.009,193,0.527,194,1.306,195,0.733,196,1.306,197,0.659,198,0.714,199,1.036,200,0.659,201,0.733,202,0.659,203,0.695,204,1.527,205,0.659,206,0.714,207,0.733,208,0.659,209,0.714,210,0.659,211,1.111,212,0.733,213,0.677,214,0.733,215,0.659,216,0.733,217,0.659,218,0.733,219,0.659,220,0.695,221,0.733,222,0.659,223,0.714,224,0.659,225,0.733,226,0.659,227,0.714,228,0.733,229,0.642,230,0.714,231,0.733,232,0.659,233,0.733,234,0.659,235,0.733,236,0.659,237,0.695,238,0.659,239,1.14,240,1.527,241,0.659,242,0.659,243,0.659,244,0.714,245,0.659,246,0.733,247,0.659,248,0.659,249,0.733,250,0.659,251,0.624,252,0.659,253,1.036,254,0.607,255,0.659,256,1.306,257,0.659,258,0.659,259,0.659,260,0.714,261,0.659,262,0.714,263,1.036,264,1.174,265,1.17,266,0.659,267,0.695,268,0.659,269,0.695,270,0.659,271,0.659,272,0.733,273,0.624,274,0.733,275,0.695,276,0.695,277,0.695,278,0.659,279,0.714,280,0.659,281,0.714,282,0.659,283,0.677,284,0.659,285,0.983,286,0.659,287,0.659,288,0.714,289,0.659,290,0.714,291,0.733,292,0.733,293,0.624,294,0.642,295,0.677,296,0.733,297,0.642,298,0.996,299,0.733,300,0.642,301,0.733,302,0.624,303,0.733,304,0.642,305,0.677,306,0.677,307,0.714,308,0.733,350,3.115,500,2.759,615,3.777,1426,5.609,1427,5.609,1450,3.422,1451,3.422,1890,4.791,1919,2.702,2050,3.115,2052,6.096,2053,4.836,2055,3.422,2058,4.836,2060,5.105,2077,3.422,2080,6.862,2081,5.496,2082,6.374,2083,5.496,2084,3.888,2085,3.888,2086,3.888,2087,3.888,2088,3.888,2089,3.888,2090,3.888,2091,3.888,2092,3.888,2093,3.888]],["title/components/PlaneMeshComponent.html",[128,0.064,266,0.73]],["body/components/PlaneMeshComponent.html",[3,0.074,4,0.074,5,0.066,8,0.256,10,0.978,12,1.075,13,0.611,14,0.592,15,1.427,23,0.748,24,0.842,29,0.574,30,0.01,31,0.57,32,0.377,33,0.78,34,0.453,35,0.556,50,0.613,53,0.48,54,1.094,55,1.036,56,0.914,58,0.159,59,0.133,60,1.586,63,0.074,67,0.082,75,0.79,87,0.004,88,0.005,89,0.004,128,0.087,131,0.551,132,0.551,133,0.551,134,0.551,135,0.551,136,0.551,137,1.154,150,0.566,151,0.812,152,0.629,153,0.629,156,0.727,157,1.658,158,0.522,160,1.497,161,1.417,162,0.613,164,0.904,165,2.566,166,1.112,169,0.735,170,1.393,171,1.839,173,1.658,178,1.555,179,1.265,180,1.141,181,0.903,182,0.735,183,0.774,184,0.769,185,1.44,186,0.815,190,0.366,191,0.904,192,0.904,193,0.453,194,1.217,195,0.629,196,1.217,197,0.566,198,0.613,199,0.928,200,0.566,201,0.629,202,0.566,203,0.597,204,1.471,205,0.566,206,0.613,207,0.629,208,0.566,209,0.613,210,0.566,211,1.046,212,0.629,213,0.581,214,0.629,215,0.566,216,0.629,217,0.566,218,0.629,219,0.566,220,0.597,221,0.629,222,0.566,223,0.613,224,0.566,225,0.629,226,0.566,227,0.613,228,0.629,229,0.551,230,0.613,231,0.629,232,0.566,233,0.629,234,0.566,235,0.629,236,0.566,237,0.597,238,0.566,239,1.046,240,1.471,241,0.566,242,0.566,243,0.566,244,0.613,245,0.566,246,0.629,247,0.566,248,0.566,249,0.629,250,0.566,251,0.536,252,0.566,253,0.928,254,0.522,255,0.566,256,1.217,257,0.566,258,0.566,259,0.566,260,0.613,261,0.566,262,0.613,263,0.928,264,0.566,265,0.613,266,1.094,267,1.046,268,0.566,269,0.597,270,0.566,271,0.566,272,0.629,273,0.536,274,0.629,275,0.597,276,0.597,277,0.597,278,0.566,279,0.613,280,0.566,281,0.613,282,0.566,283,0.581,284,0.566,285,0.88,286,0.566,287,0.566,288,0.613,289,0.566,290,0.613,291,0.629,292,0.629,293,0.536,294,0.551,295,0.581,296,0.629,297,0.551,298,0.914,299,0.629,300,0.551,301,0.629,302,0.536,303,0.629,304,0.551,305,0.581,306,0.581,307,0.613,308,0.629,351,1.058,356,1.003,367,1.741,599,3.366,643,2.964,653,3.656,724,3.015,726,2.3,746,1.813,747,3.465,749,3.756,752,3.57,753,4.339,754,4.329,755,4.788,757,2.674,758,4.788,759,4.788,761,5.169,762,6.121,763,5.679,764,5.679,765,5.679,766,5.169,767,5.679,768,2.674,769,3.062,771,2.477,772,3.062,773,4.332,776,1.458,778,3.227,780,3.652,781,3.652,783,2.3,784,1.891,785,1.813,786,2.076,831,3.504,842,1.479,919,2.076,955,1.891,959,2.936,966,2.568,999,2.568,1031,2.076,1033,3.637,1035,1.813,1036,2.32,1258,3.943,1474,2.938,1491,4.332,1492,4.332,1493,2.938,1494,2.938,1496,2.938,1497,2.938,2094,6.725,2095,4.922,2096,2.938,2097,4.332,2098,3.338,2099,3.338,2100,4.922]],["title/components/PointLightComponent.html",[128,0.064,268,0.73]],["body/components/PointLightComponent.html",[3,0.084,4,0.084,5,0.075,8,0.291,10,0.756,12,1.132,13,0.671,14,0.651,23,0.822,24,0.852,27,1.287,29,0.444,30,0.01,31,0.568,32,0.415,33,0.603,34,0.516,35,0.43,53,0.547,54,1.163,55,1.102,56,0.595,58,0.16,59,0.151,60,0.838,63,0.084,67,0.093,75,0.611,87,0.004,88,0.006,89,0.004,128,0.094,131,0.628,132,0.628,133,0.628,134,0.628,135,0.628,136,0.628,137,1.227,150,0.645,151,0.893,152,0.717,153,0.717,155,2.644,156,0.8,157,1.935,158,0.595,160,1.506,161,1.426,162,0.699,163,5.091,164,0.994,165,2.728,166,1.223,167,2.752,168,4.674,169,0.838,170,1.458,171,1.955,172,2.824,173,1.39,174,3.548,175,2.824,178,1.638,179,1.39,180,1.255,181,1.029,182,0.838,183,0.882,184,0.846,185,1.113,186,0.929,189,2.824,190,0.417,191,0.994,192,0.994,193,0.516,194,1.293,195,0.717,196,1.293,197,0.645,198,0.699,199,1.02,200,0.645,201,0.717,202,0.645,203,0.681,204,1.519,205,0.645,206,0.699,207,0.717,208,0.645,209,0.699,210,0.645,211,1.102,212,0.717,213,0.663,214,0.717,215,0.645,216,0.717,217,0.645,218,0.717,219,0.645,220,0.681,221,0.717,222,0.645,223,0.699,224,0.645,225,0.717,226,0.645,227,0.699,228,0.717,229,0.628,230,0.699,231,0.717,232,0.645,233,0.717,234,0.645,235,0.717,236,0.645,237,0.681,238,0.645,239,1.126,240,1.519,241,0.645,242,0.645,243,0.645,244,0.699,245,0.645,246,0.717,247,0.645,248,0.645,249,0.717,250,0.645,251,0.611,252,0.645,253,1.02,254,0.595,255,0.645,256,1.293,257,0.645,258,0.645,259,0.645,260,0.699,261,0.645,262,0.699,263,1.02,264,0.645,265,0.699,266,0.645,267,0.681,268,1.163,269,1.126,270,0.645,271,0.645,272,0.717,273,0.611,274,0.717,275,0.681,276,0.681,277,0.681,278,0.645,279,0.699,280,0.645,281,0.699,282,0.645,283,0.663,284,0.645,285,0.968,286,0.645,287,0.645,288,0.699,289,0.645,290,0.699,291,0.717,292,0.717,293,0.611,294,0.628,295,0.663,296,0.717,297,0.628,298,0.984,299,0.717,300,0.628,301,0.717,302,0.611,303,0.717,304,0.628,305,0.663,306,0.663,307,0.699,308,0.717,351,1.715,356,1.143,643,2.293,683,1.985,1305,5.045,1308,4.763,1314,4.335,1315,3.349,1316,3.048,1322,3.349,1323,3.349,1324,5.543,1326,4.763,1327,3.349,1328,3.048,1598,3.349,1681,2.644,1957,4.674,2101,6.82,2102,5.412,2103,3.805,2104,3.805,2105,3.805,2106,3.805,2107,3.805,2108,3.805]],["title/pipes/Rad2DegPipe.html",[535,2.993,1289,2.993]],["body/pipes/Rad2DegPipe.html",[3,0.141,4,0.141,5,0.126,14,0.77,24,0.723,29,0.746,30,0.01,31,0.672,32,0.49,33,0.613,35,0.723,58,0.141,59,0.254,63,0.141,67,0.157,75,1.027,87,0.007,88,0.008,89,0.007,158,0.999,173,2.202,311,4.194,535,5.283,827,3.979,842,1.922,1289,5.283,1290,5.124,1293,5.124,1296,6.69,1297,6.69,1298,7.731,1299,6.69,1300,5.124,1302,5.124,2109,5.63,2110,7.603,2111,7.603,2112,6.397]],["title/directives/RaycasterCameraDirective.html",[193,0.584,297,0.711]],["body/directives/RaycasterCameraDirective.html",[3,0.138,4,0.138,5,0.123,8,0.48,14,0.903,23,1.141,24,0.849,29,0.73,30,0.01,31,0.518,32,0.48,33,0.6,35,0.708,50,1.378,58,0.177,59,0.249,63,0.138,67,0.153,87,0.007,88,0.008,89,0.007,158,0.978,160,1.033,161,1.173,193,0.849,293,1.005,297,1.238,298,1.173,329,2.444,544,4.392,548,4.35,615,4.763,842,2.254,958,3.755,965,4.033,1222,5.015,1224,4.448,1242,4.105,1890,5.464,1891,4.645,2113,5.27,2114,5.51,2115,6.261,2116,6.261,2117,6.261]],["title/interfaces/RaycasterEmitEvent.html",[64,1.524,1521,2.993]],["body/interfaces/RaycasterEmitEvent.html",[3,0.117,4,0.117,5,0.104,8,0.405,9,1.343,23,0.804,30,0.01,32,0.518,33,0.648,50,1.242,56,1.165,58,0.179,59,0.21,60,1.489,63,0.149,64,1.872,67,0.13,87,0.006,88,0.008,89,0.006,128,0.125,151,1.116,157,2.085,161,1.057,180,1.568,184,0.827,185,1.548,193,0.718,258,1.264,298,1.268,302,0.85,316,4.223,320,3.927,329,2.748,340,4.655,544,3.742,548,3.677,585,2.874,842,1.59,844,2.955,851,2.312,896,4.886,933,3.677,958,3.16,965,2.561,1224,3.136,1240,3.677,1242,3.47,1248,5.971,1255,5.417,1521,4.7,1527,4.239,1539,5.417,1542,5.769,1889,5.531,1892,3.677,1898,5.531,1899,3.927,1923,4.434,1938,3.927,2113,3.47,2118,4.239,2119,4.657,2120,4.657,2121,4.657,2122,4.657,2123,4.657,2124,4.657,2125,4.657,2126,4.239,2127,4.239,2128,3.927,2129,6.56,2130,4.657,2131,6.56,2132,4.657,2133,4.657,2134,4.657,2135,4.657,2136,4.657,2137,4.657,2138,4.657,2139,4.657,2140,4.657,2141,4.657,2142,4.657,2143,4.657,2144,4.657,2145,4.657,2146,4.657,2147,4.657,2148,4.657,2149,4.657]],["title/directives/RaycasterEnableDirective.html",[193,0.584,300,0.711]],["body/directives/RaycasterEnableDirective.html",[3,0.14,4,0.14,5,0.125,8,0.488,14,0.912,23,1.152,24,0.857,29,0.743,30,0.01,31,0.527,32,0.488,33,0.61,35,0.72,50,1.392,58,0.167,59,0.253,63,0.14,67,0.156,87,0.007,88,0.008,89,0.007,158,0.995,160,1.051,161,1.184,193,0.864,293,1.023,298,1.184,300,1.251,329,2.073,544,4.361,548,4.424,842,2.277,958,3.782,965,4.056,1242,4.175,1912,5.625,2113,5.308,2150,5.604,2151,6.367,2152,6.367,2153,6.367,2154,6.367]],["title/directives/RaycasterGroupDirective.html",[193,0.584,302,0.692]],["body/directives/RaycasterGroupDirective.html",[3,0.099,4,0.099,5,0.088,8,0.345,14,0.732,23,0.925,24,0.965,29,0.804,30,0.01,31,0.571,32,0.565,33,0.66,35,0.918,50,1.536,56,1.077,58,0.17,59,0.179,60,1.34,63,0.134,64,1.595,67,0.11,87,0.005,88,0.007,89,0.005,128,0.11,151,1.218,157,1.98,158,0.704,160,0.744,161,1.153,180,1.411,184,0.704,185,1.319,193,0.611,258,1.168,293,0.724,298,1.307,302,0.977,311,2.955,316,4.365,320,4.516,329,2.868,340,4.81,544,4.075,548,3.132,842,1.828,844,3.01,851,3.223,853,4.516,859,3.99,896,4.59,933,4.229,958,3.219,965,3.571,1222,3.611,1224,3.607,1240,3.132,1242,2.955,1248,5.52,1255,4.875,1504,5.356,1521,3.132,1527,4.875,1539,4.875,1542,4.788,1889,3.345,1892,3.132,1898,5.113,1899,3.345,1923,4.838,1938,4.516,2113,5.635,2118,3.611,2119,5.356,2120,5.356,2121,5.356,2122,5.356,2123,5.356,2124,5.356,2125,5.356,2126,5.52,2127,5.52,2128,5.113,2129,6.064,2130,3.967,2131,6.064,2132,3.967,2133,3.967,2134,3.967,2135,6.493,2136,3.967,2137,3.967,2138,3.967,2139,6.493,2140,3.967,2141,3.967,2142,3.967,2143,6.493,2144,3.967,2145,3.967,2146,3.967,2147,3.967,2148,3.967,2149,3.967,2155,6.086,2156,4.508,2157,4.508,2158,4.508,2159,4.508,2160,4.508,2161,4.508,2162,4.508,2163,4.508,2164,4.508]],["title/injectables/RaycasterService.html",[0,1.329,544,2.162]],["body/injectables/RaycasterService.html",[0,1.536,2,1.641,3,0.075,4,0.075,5,0.067,8,0.26,9,0.989,14,0.599,15,2.082,23,0.897,24,0.98,29,0.873,30,0.01,31,0.62,32,0.573,33,0.717,35,0.941,50,1.5,54,1.102,55,1.044,56,0.922,58,0.153,59,0.135,60,1.432,63,0.075,64,1.2,67,0.083,72,2.03,75,1.233,87,0.004,88,0.006,89,0.004,157,1.67,180,1.154,184,1.016,185,0.992,298,1.131,316,3.683,329,2.918,330,4.726,337,2.516,342,5.208,351,2.294,355,5.208,356,1.496,544,2.5,597,2.597,615,4.549,643,1.812,669,2.356,670,2.106,678,2.356,690,3.67,727,3.853,738,3.853,769,4.504,772,3.67,798,3.853,842,1.018,844,2.175,851,2.84,853,3.694,861,4.378,862,2.951,932,4.824,1143,2.516,1240,2.356,1281,2.716,1542,5.443,1681,2.356,1887,5.372,1888,2.716,1889,2.516,1890,4.747,1891,2.516,1892,2.356,1893,4.382,1894,5.722,1895,5.193,1896,5.193,1897,2.984,1898,4.378,1899,2.516,1900,5.193,1901,2.984,1902,2.984,1903,2.984,1904,2.984,1905,2.984,1906,2.984,1907,2.984,1908,2.984,1909,2.984,1910,2.984,1911,2.984,1912,4.824,1913,5.722,1914,5.193,1915,5.722,1916,5.193,1917,3.988,1918,2.984,1919,3.46,1920,4.382,1921,2.984,1922,2.984,1923,4.263,1924,2.984,1925,4.382,1926,4.382,1927,5.193,1928,5.193,1929,5.193,1930,4.382,1931,4.382,1932,6.095,1933,6.095,1934,4.382,1935,2.984,1936,2.984,1937,5.193,1938,3.694,1939,2.984,1940,4.382,1941,4.382,1942,4.382,1943,5.193,1944,2.984,1945,2.984,1946,2.984,1947,4.382,1948,4.382,1949,3.988,1950,2.984,1951,2.984,1952,4.382,1953,2.984,1954,2.984,1955,2.984,1956,4.382,1957,3.694,1958,2.984,1959,5.722,1960,4.382,1961,2.984,1962,2.984,1963,2.984,1964,2.984,2165,4.979,2166,4.979,2167,4.979,2168,4.979,2169,4.979,2170,4.382,2171,4.979,2172,3.391,2173,3.391,2174,3.391,2175,3.391,2176,3.391,2177,2.716,2178,3.391,2179,3.391,2180,3.391,2181,3.391,2182,3.391,2183,3.391,2184,3.391,2185,3.391,2186,3.391,2187,3.391,2188,3.391,2189,3.391,2190,3.391,2191,3.391,2192,3.391,2193,3.391]],["title/components/RendererCanvasComponent.html",[128,0.064,270,0.73]],["body/components/RendererCanvasComponent.html",[3,0.076,4,0.076,5,0.068,8,0.265,9,1.003,12,0.932,14,0.608,15,1.232,23,0.767,24,0.873,29,0.403,30,0.01,31,0.543,32,0.387,33,0.331,34,0.469,35,0.675,50,0.927,53,0.496,54,0.586,55,0.555,58,0.111,59,0.137,63,0.076,67,0.085,75,0.811,87,0.004,88,0.006,89,0.004,128,0.089,131,0.57,132,0.57,133,0.57,134,0.57,135,0.57,136,0.57,137,1.173,150,0.586,151,0.833,152,0.652,153,0.652,158,0.54,160,1.499,161,1.419,162,0.635,164,0.635,166,1.141,169,0.761,170,1.411,178,1.141,184,0.54,190,0.378,191,0.927,192,1.205,193,0.469,194,1.237,195,0.652,196,1.237,197,0.586,198,0.635,199,0.952,200,0.586,201,0.652,202,0.586,203,0.618,204,1.484,205,0.586,206,0.635,207,0.652,208,0.586,209,0.635,210,0.586,211,1.061,212,0.652,213,0.602,214,0.652,215,0.586,216,0.652,217,0.586,218,0.652,219,0.586,220,0.618,221,0.652,222,0.586,223,0.635,224,0.586,225,0.652,226,0.586,227,0.635,228,0.652,229,0.57,230,0.635,231,0.652,232,0.586,233,0.652,234,0.586,235,0.652,236,0.586,237,0.618,238,0.586,239,1.067,240,1.484,241,0.586,242,0.586,243,0.586,244,0.635,245,0.586,246,0.652,247,0.586,248,0.856,249,0.652,250,0.586,251,0.555,252,0.586,253,0.952,254,0.54,255,0.586,256,1.237,257,0.586,258,0.586,259,0.586,260,1.096,261,0.586,262,0.635,263,0.952,264,0.586,265,0.635,266,0.586,267,0.618,268,0.586,269,0.618,270,1.112,271,1.356,272,0.652,273,0.555,274,0.652,275,0.618,276,0.618,277,0.618,278,0.586,279,0.635,280,0.586,281,0.635,282,0.586,283,0.602,284,0.586,285,0.903,286,0.586,287,0.586,288,0.635,289,0.586,290,0.635,291,0.652,292,0.652,293,0.555,294,0.57,295,0.602,296,0.652,297,0.57,298,0.932,299,0.652,300,0.57,301,0.652,302,0.555,303,0.652,304,0.57,305,0.602,306,0.602,307,0.635,308,0.652,316,3.717,317,5.256,324,2.742,329,2.272,351,1.6,356,1.517,377,1.892,499,3.042,559,3.042,607,3.311,643,1.838,737,2.266,738,2.048,739,2.402,740,2.402,741,2.402,742,2.564,743,2.564,752,1.615,799,2.402,801,2.402,842,1.517,843,4.779,852,5.256,862,2.992,933,3.509,1053,3.509,1224,2.048,1318,4.136,1400,4.444,1780,2.768,1785,4.045,1865,2.564,1866,4.869,2194,6.927,2195,3.042,2196,6.182,2197,5.966,2198,5.049,2199,5.049,2200,5.966,2201,6.562,2202,5.25,2203,5.049,2204,5.049,2205,5.966,2206,5.049,2207,3.456,2208,3.456,2209,3.456,2210,3.456,2211,3.456,2212,7.528,2213,5.049,2214,3.456,2215,3.456,2216,3.456,2217,6.562,2218,5.049,2219,5.049,2220,5.049,2221,5.049,2222,6.562,2223,5.049,2224,5.049,2225,5.049,2226,5.049,2227,4.444,2228,5.049,2229,5.049,2230,5.049,2231,5.049,2232,5.049,2233,3.456,2234,3.456,2235,3.456,2236,3.456,2237,3.456,2238,3.456,2239,3.456,2240,3.456,2241,3.456,2242,5.049,2243,3.456,2244,3.042,2245,3.456,2246,3.456,2247,3.456,2248,3.456,2249,3.456,2250,3.456,2251,3.456,2252,3.456,2253,3.456,2254,3.456,2255,3.456,2256,3.456,2257,5.049,2258,3.456,2259,3.456,2260,2.564]],["title/injectables/RendererService.html",[0,1.329,170,0.833]],["body/injectables/RendererService.html",[0,1.651,2,1.813,3,0.083,4,0.083,5,0.074,8,0.287,9,1.063,12,0.585,14,0.644,15,2.166,20,3.538,23,0.813,24,0.978,27,1.485,29,0.92,30,0.01,31,0.653,32,0.643,33,0.756,35,0.932,50,1.417,54,0.635,55,0.602,56,0.585,58,0.165,59,0.149,60,1.375,63,0.083,67,0.092,68,3.971,72,2.148,75,1.094,87,0.004,88,0.006,89,0.004,170,1.036,173,1.604,180,1.241,229,1.237,230,0.688,273,1.203,324,3.699,329,2.883,351,2.159,356,2.251,555,2.456,565,4.661,578,4.724,607,4.724,613,5.495,615,4.441,662,5.457,670,1.585,683,3.553,721,5.007,752,3.183,754,2.122,1008,4.71,1246,3.297,1316,3.001,1394,4.71,1398,3.297,1890,4.913,1891,2.78,1917,4.287,1919,5.007,1949,5.772,2060,5.002,2170,4.71,2196,6.002,2202,6.341,2244,7.328,2260,2.78,2261,3.297,2262,5.352,2263,6.812,2264,6.812,2265,6.812,2266,5.352,2267,5.352,2268,5.352,2269,5.352,2270,3.297,2271,5.352,2272,5.352,2273,3.746,2274,3.746,2275,3.746,2276,3.746,2277,5.352,2278,3.746,2279,3.746,2280,5.352,2281,3.746,2282,3.746,2283,5.352,2284,3.746,2285,5.352,2286,3.746,2287,5.352,2288,3.746,2289,3.746,2290,3.746,2291,3.746,2292,3.746,2293,6.244,2294,3.746,2295,3.746,2296,3.746,2297,3.746,2298,5.352,2299,3.746,2300,6.244,2301,3.746,2302,3.746,2303,3.746,2304,5.352,2305,3.746,2306,3.746,2307,5.352,2308,3.746,2309,3.746,2310,3.746,2311,3.746,2312,6.812,2313,3.746,2314,3.746,2315,3.746,2316,3.746,2317,3.746,2318,3.746,2319,3.746,2320,3.746,2321,3.746,2322,5.352,2323,5.352,2324,3.746,2325,3.746,2326,3.746,2327,3.746,2328,3.746,2329,3.746,2330,5.352,2331,3.746,2332,3.746,2333,3.746]],["title/classes/SVGLoader.html",[67,0.106,2334,2.993]],["body/classes/SVGLoader.html",[3,0.03,4,0.03,5,0.026,8,0.103,9,0.623,14,0.283,23,0.358,24,0.664,27,0.32,29,0.627,30,0.01,31,0.419,32,0.288,33,0.582,35,0.637,50,0.247,54,0.797,55,0.504,56,1.261,58,0.03,60,1.915,63,0.03,66,2.468,67,0.033,72,2.867,75,1.13,87,0.001,88,0.003,89,0.001,91,0.999,96,2.057,125,1.079,156,0.348,167,2.346,173,0.806,180,0.312,184,0.49,203,0.561,227,0.432,248,0.228,251,0.604,267,0.241,269,0.905,283,0.41,285,0.673,325,1.185,332,1.079,345,0.838,351,1.193,356,1.284,378,0.505,416,1.886,417,3.756,497,6.105,500,3.143,591,3.853,597,3.561,598,0.838,599,0.703,643,2.926,648,1.886,670,2.718,690,2.924,737,0.883,738,0.798,754,3.194,758,1.747,759,0.999,760,1.185,766,1.079,769,1.952,772,1.952,776,1.029,827,2.341,886,0.936,903,3.267,927,0.883,1053,4.223,1134,4.509,1143,0.999,1154,1.185,1155,2.762,1245,2.073,1293,4.302,1300,4.516,1302,2.514,1328,1.079,1359,2.073,1361,2.514,1482,3.015,1507,1.886,1514,0.838,1541,1.079,1570,1.185,1583,5.348,1584,3.312,1677,1.079,1775,1.079,1795,5.51,1957,1.747,1980,6.326,1997,2.328,2001,1.886,2042,1.185,2177,1.886,2227,1.185,2260,0.999,2334,2.615,2335,5.348,2336,1.185,2337,3.138,2338,3.138,2339,3.764,2340,2.355,2341,3.138,2342,3.138,2343,3.764,2344,3.138,2345,1.347,2346,2.355,2347,3.138,2348,3.138,2349,1.347,2350,3.764,2351,1.347,2352,1.347,2353,1.347,2354,2.762,2355,1.347,2356,5.37,2357,5.37,2358,5.37,2359,1.347,2360,2.355,2361,2.355,2362,2.355,2363,2.355,2364,2.355,2365,1.347,2366,3.764,2367,3.764,2368,4.701,2369,1.347,2370,1.347,2371,1.347,2372,3.763,2373,1.347,2374,1.347,2375,7.898,2376,6.077,2377,1.347,2378,6.937,2379,1.347,2380,5.637,2381,5.637,2382,5.062,2383,1.347,2384,2.355,2385,3.138,2386,2.355,2387,3.764,2388,2.355,2389,1.347,2390,7.725,2391,1.347,2392,3.138,2393,1.347,2394,1.347,2395,1.347,2396,1.347,2397,1.347,2398,1.347,2399,1.347,2400,1.347,2401,1.347,2402,1.347,2403,1.347,2404,1.347,2405,2.355,2406,1.347,2407,1.347,2408,1.347,2409,1.347,2410,1.347,2411,1.347,2412,1.347,2413,1.347,2414,1.347,2415,1.347,2416,1.347,2417,2.355,2418,1.347,2419,1.347,2420,3.138,2421,1.347,2422,2.355,2423,7.132,2424,2.355,2425,5.637,2426,3.764,2427,2.355,2428,1.347,2429,1.347,2430,1.347,2431,1.347,2432,1.347,2433,1.347,2434,1.185,2435,1.347,2436,1.347,2437,1.347,2438,1.347,2439,1.347,2440,3.138,2441,1.347,2442,3.138,2443,1.347,2444,2.355,2445,1.347,2446,1.347,2447,1.347,2448,3.138,2449,3.138,2450,1.347,2451,2.355,2452,3.138,2453,1.347,2454,1.347,2455,1.347,2456,2.355,2457,2.355,2458,2.355,2459,1.347,2460,2.355,2461,2.355,2462,2.355,2463,3.764,2464,1.347,2465,1.347,2466,2.355,2467,1.347,2468,1.347,2469,1.347,2470,1.347,2471,1.347,2472,1.347,2473,1.347,2474,1.347,2475,2.355,2476,1.347,2477,1.347,2478,1.347,2479,2.355,2480,2.355,2481,2.073,2482,1.347,2483,1.347,2484,2.355,2485,2.762,2486,3.764,2487,5.871,2488,5.871,2489,3.138,2490,3.138,2491,3.138,2492,1.347,2493,1.347,2494,2.355,2495,4.275,2496,2.355,2497,1.347,2498,2.355,2499,4.701,2500,3.764,2501,4.701,2502,3.764,2503,2.355,2504,5.637,2505,5.637,2506,2.355,2507,4.275,2508,2.355,2509,1.347,2510,1.347,2511,1.347,2512,1.347,2513,3.138,2514,3.138,2515,2.355,2516,1.347,2517,4.275,2518,4.275,2519,4.275,2520,4.275,2521,2.355,2522,1.347,2523,1.347,2524,1.347,2525,1.347,2526,1.347,2527,1.347,2528,1.347,2529,1.347,2530,1.347,2531,2.355,2532,1.347,2533,1.347,2534,1.347,2535,4.275,2536,2.355,2537,4.275,2538,1.347,2539,2.355,2540,1.347,2541,3.764,2542,1.347,2543,2.355,2544,1.347,2545,1.347,2546,3.138,2547,1.347,2548,1.347,2549,1.347,2550,5.37,2551,1.347,2552,2.355,2553,3.764,2554,2.355,2555,2.355,2556,1.347,2557,1.347,2558,1.347,2559,2.355,2560,1.347,2561,1.347,2562,3.138,2563,3.138,2564,1.347,2565,1.347,2566,3.138,2567,2.355,2568,1.347,2569,1.347,2570,1.185,2571,3.138,2572,1.347,2573,1.347,2574,1.347,2575,1.347,2576,1.347,2577,1.347,2578,1.347,2579,1.347,2580,1.347,2581,1.347,2582,1.347,2583,1.347,2584,1.347,2585,1.347,2586,1.347,2587,1.347,2588,1.347,2589,1.347,2590,1.347,2591,1.347,2592,1.347,2593,3.764,2594,1.347,2595,1.347,2596,1.347,2597,1.347,2598,1.347,2599,1.347,2600,1.347,2601,1.347,2602,2.355,2603,1.347,2604,1.347,2605,1.347,2606,1.347,2607,1.347,2608,1.347,2609,1.347,2610,1.347,2611,1.347,2612,1.347,2613,1.347,2614,3.138,2615,2.355,2616,3.764,2617,2.355,2618,1.347,2619,2.355,2620,1.347,2621,3.138,2622,1.347,2623,1.347,2624,2.355,2625,1.347,2626,1.347,2627,1.347,2628,1.347,2629,1.347,2630,1.347,2631,1.347,2632,1.347,2633,1.347,2634,1.347,2635,1.347,2636,2.355,2637,1.347,2638,4.275,2639,1.347,2640,4.137,2641,1.347,2642,2.355,2643,1.347,2644,1.347,2645,2.355,2646,2.355,2647,2.355,2648,2.355,2649,2.355,2650,1.347,2651,2.355,2652,3.764,2653,3.138,2654,5.062,2655,2.355,2656,2.355,2657,1.347,2658,2.355,2659,1.347,2660,1.347,2661,1.347,2662,2.355,2663,3.138,2664,1.347,2665,1.347,2666,3.138,2667,1.347,2668,1.347,2669,1.347,2670,1.347,2671,1.185,2672,1.347,2673,3.138,2674,3.138,2675,1.347,2676,2.355,2677,1.347,2678,3.764,2679,3.138,2680,2.355,2681,1.347,2682,1.347,2683,1.347,2684,1.347,2685,1.347,2686,1.347,2687,1.347,2688,3.312,2689,3.764,2690,2.355,2691,3.312,2692,3.764,2693,1.347,2694,3.138,2695,2.355,2696,1.347,2697,3.138,2698,1.347,2699,1.347,2700,1.347,2701,2.355,2702,1.347,2703,1.347,2704,2.355,2705,1.347,2706,1.347,2707,2.355,2708,1.347,2709,1.347,2710,1.347,2711,1.347,2712,2.355,2713,1.347,2714,1.347,2715,1.347,2716,1.347,2717,1.347,2718,1.347,2719,3.138,2720,3.138,2721,1.347,2722,2.355,2723,3.138,2724,1.347,2725,3.138,2726,1.347,2727,2.355,2728,1.347,2729,2.073,2730,1.347,2731,2.355,2732,1.347,2733,1.347,2734,1.347,2735,1.347,2736,1.347,2737,1.347,2738,1.347,2739,1.347,2740,1.347,2741,2.355,2742,1.347,2743,1.347,2744,1.347,2745,1.347,2746,1.347,2747,1.347,2748,1.185,2749,1.347,2750,1.347,2751,1.347,2752,1.347,2753,2.355,2754,2.355,2755,1.347,2756,1.347,2757,1.347,2758,1.347,2759,1.347,2760,3.138,2761,1.347,2762,1.347,2763,1.347,2764,4.275,2765,1.347,2766,1.347,2767,1.347,2768,1.347,2769,2.355,2770,1.347,2771,1.347,2772,1.347,2773,1.347,2774,1.347,2775,1.347,2776,1.347,2777,1.347,2778,1.347,2779,1.347,2780,1.347,2781,1.347,2782,1.347,2783,1.347,2784,1.347,2785,1.347,2786,1.347,2787,1.347,2788,1.347,2789,1.347,2790,1.347,2791,1.347,2792,1.347,2793,1.347,2794,1.347,2795,1.347,2796,1.347,2797,2.355,2798,2.355,2799,2.355,2800,1.347]],["title/components/SVGLoaderComponent.html",[128,0.064,282,0.73]],["body/components/SVGLoaderComponent.html",[3,0.07,4,0.07,5,0.062,8,0.243,9,0.943,10,0.943,12,0.984,13,0.589,14,0.571,15,1.386,23,0.721,24,0.937,27,1.917,29,0.663,30,0.01,31,0.586,32,0.577,33,0.646,34,1.022,35,0.642,50,0.871,53,0.457,54,1.199,55,1.21,56,0.984,58,0.162,59,0.126,60,1.727,63,0.07,67,0.078,72,1.093,75,0.912,87,0.004,88,0.005,89,0.004,95,3.218,100,3.111,105,2.358,128,0.084,131,0.524,132,0.524,133,0.524,134,0.524,135,0.524,136,0.524,137,1.127,150,0.539,151,0.783,152,0.599,153,0.599,156,0.701,157,1.619,158,0.496,160,1.493,161,1.413,162,0.584,164,0.871,166,1.072,167,1.388,169,0.7,170,1.369,171,1.795,173,1.619,178,1.772,179,1.219,180,1.1,181,0.86,182,0.7,183,0.737,184,0.741,185,0.93,186,0.776,190,0.348,191,0.871,192,0.871,193,0.431,194,1.188,195,0.599,196,1.188,197,0.539,198,0.584,199,0.895,200,0.539,201,0.599,202,0.539,203,0.568,204,1.452,205,0.539,206,0.584,207,0.599,208,0.539,209,0.584,210,0.539,211,1.024,212,0.599,213,0.553,214,0.599,215,0.539,216,0.599,217,0.539,218,0.599,219,0.539,220,0.568,221,0.599,222,0.539,223,0.584,224,0.539,225,0.599,226,0.539,227,0.584,228,0.599,229,0.524,230,0.584,231,0.599,232,0.539,233,0.599,234,0.539,235,0.599,236,0.539,237,0.568,238,0.539,239,1.016,240,1.452,241,0.539,242,0.539,243,0.539,244,0.584,245,0.539,246,0.599,247,0.539,248,0.539,249,0.599,250,0.539,251,1.012,252,0.539,253,0.895,254,0.741,255,0.539,256,1.188,257,0.539,258,0.539,259,0.539,260,0.584,261,0.539,262,0.584,263,0.895,264,0.539,265,0.584,266,0.539,267,0.568,268,0.539,269,0.568,270,0.539,271,0.539,272,0.599,273,0.51,274,0.599,275,0.568,276,0.568,277,0.568,278,0.539,279,0.584,280,0.539,281,0.584,282,1.068,283,0.989,284,0.539,285,0.849,286,0.539,287,0.539,288,0.584,289,0.539,290,0.584,291,0.599,292,0.599,293,0.51,294,0.524,295,0.553,296,0.599,297,0.524,298,0.887,299,0.599,300,0.524,301,0.599,302,0.51,303,0.599,304,0.524,305,0.553,306,0.553,307,0.584,308,0.599,329,1.849,351,1.996,356,1.892,500,2.852,511,4.558,514,4.13,749,1.658,776,1.388,783,3.15,785,1.726,862,2.812,899,2.952,955,1.8,970,4.55,1028,2.546,1271,2.208,1482,2.546,1483,2.797,1487,2.797,1622,4.55,1623,4.55,1744,2.084,1749,3.521,1874,2.797,1877,2.797,1878,4.999,1923,3.111,1966,2.208,1971,4.214,1974,4.378,1980,2.546,2334,3.947,2372,4.176,2688,4.999,2691,4.999,2801,7.349,2802,4.746,2803,5.68,2804,4.214,2805,6.741,2806,4.746,2807,3.178,2808,3.178,2809,4.746,2810,3.178,2811,3.178,2812,3.178,2813,3.178,2814,3.178,2815,3.178,2816,3.178,2817,3.178,2818,2.797,2819,3.178,2820,3.178,2821,3.178,2822,2.358,2823,2.546,2824,3.178,2825,6.3,2826,3.178,2827,2.797,2828,3.178,2829,3.178,2830,3.178,2831,3.178,2832,3.178,2833,4.746,2834,3.178,2835,3.178,2836,3.178,2837,3.178,2838,3.178,2839,3.178,2840,3.178,2841,3.178,2842,2.546,2843,4.746,2844,3.178,2845,3.178,2846,3.178,2847,4.746,2848,2.797,2849,3.178,2850,2.797]],["title/components/SceneComponent.html",[128,0.064,273,0.692]],["body/components/SceneComponent.html",[3,0.083,4,0.083,5,0.074,8,0.29,10,0.751,12,1.13,13,0.668,14,0.648,15,1.834,23,0.819,24,0.817,27,1.281,29,0.629,30,0.01,31,0.599,32,0.481,33,0.655,34,0.513,35,0.71,50,0.989,53,0.543,54,0.641,55,0.607,56,0.981,58,0.159,59,0.15,60,0.833,63,0.083,67,0.093,75,0.865,87,0.004,88,0.006,89,0.004,128,0.093,131,0.624,132,0.624,133,0.624,134,0.624,135,0.624,136,0.624,137,1.223,150,0.641,151,0.889,152,0.713,153,0.713,156,0.796,157,1.931,158,0.591,160,1.505,161,1.425,162,0.694,164,0.989,165,2.72,166,1.217,169,0.833,170,1.455,171,2.061,173,1.384,174,3.532,178,1.217,179,1.384,180,1.249,181,1.023,182,0.833,183,0.877,184,0.842,185,1.106,186,0.923,190,0.414,191,0.989,192,0.989,193,0.731,194,1.29,195,0.713,196,1.29,197,0.641,198,0.694,199,1.016,200,0.641,201,0.713,202,0.641,203,0.676,204,1.517,205,0.641,206,0.694,207,0.713,208,0.641,209,0.694,210,0.641,211,1.099,212,0.713,213,0.658,214,0.713,215,0.641,216,0.713,217,0.641,218,0.713,219,0.641,220,0.676,221,0.713,222,0.641,223,0.694,224,0.641,225,0.713,226,0.641,227,0.694,228,0.713,229,0.624,230,0.694,231,0.713,232,0.641,233,0.713,234,0.641,235,0.713,236,0.641,237,0.676,238,0.641,239,1.122,240,1.517,241,0.641,242,0.641,243,0.641,244,0.694,245,0.641,246,0.713,247,0.641,248,0.641,249,0.713,250,0.641,251,0.607,252,0.641,253,1.016,254,0.591,255,0.641,256,1.29,257,0.641,258,0.641,259,0.641,260,0.694,261,0.641,262,0.694,263,1.016,264,0.641,265,0.694,266,0.641,267,0.676,268,0.641,269,0.676,270,0.641,271,0.641,272,0.713,273,1.098,274,0.713,275,0.676,276,0.676,277,0.676,278,0.641,279,0.694,280,0.641,281,0.694,282,0.641,283,0.658,284,0.641,285,0.963,286,0.641,287,0.641,288,0.694,289,0.641,290,0.694,291,0.713,292,0.713,293,0.607,294,0.624,295,0.658,296,0.713,297,0.624,298,0.981,299,0.713,300,0.624,301,0.713,302,0.607,303,0.713,304,0.624,305,0.658,306,0.658,307,0.694,308,0.713,351,1.198,356,1.136,367,1.972,607,4.741,614,5.027,683,1.972,724,3.196,726,2.517,842,1.618,955,2.142,959,3.151,966,2.81,999,2.81,1031,2.352,1033,3.904,1035,2.053,2851,3.327,2852,5.387,2853,6.841,2854,6.276,2855,5.387,2856,3.781,2857,3.781,2858,3.781,2859,3.781,2860,3.781,2861,5.387,2862,3.781,2863,3.781,2864,3.781,2865,3.781]],["title/components/ServerBarrelActorComponent.html",[128,0.064,131,0.711]],["body/components/ServerBarrelActorComponent.html",[3,0.098,4,0.098,5,0.087,10,0.882,13,0.747,30,0.01,31,0.566,34,0.602,53,0.638,58,0.151,59,0.176,63,0.098,67,0.109,87,0.005,88,0.007,89,0.005,112,1.616,128,0.102,131,1.21,132,0.733,133,0.733,134,0.733,135,0.733,136,0.733,137,1.446,150,0.753,151,0.994,152,0.837,153,0.837,156,0.89,158,0.694,160,1.515,161,1.435,162,0.815,164,1.106,182,0.978,183,1.029,184,0.694,190,0.486,191,1.106,192,1.106,193,0.602,194,1.382,195,0.837,196,1.382,197,0.753,198,0.815,199,1.136,200,0.753,201,0.837,202,0.753,203,0.794,204,1.572,205,0.753,206,0.815,207,0.837,208,0.753,209,0.815,210,0.753,211,1.165,212,0.837,213,0.773,214,0.837,215,0.753,216,0.837,217,0.753,218,0.837,219,0.753,220,0.794,221,0.837,222,0.753,223,0.815,224,0.753,225,0.837,226,0.753,227,0.815,228,0.837,229,0.733,230,0.815,231,0.837,232,0.753,233,0.837,234,0.753,235,0.837,236,0.753,237,0.794,238,0.753,239,1.223,240,1.572,241,0.753,242,0.753,243,0.753,244,0.815,245,0.753,246,0.837,247,0.753,248,0.753,249,0.837,250,0.753,251,0.713,252,0.753,253,1.136,254,0.694,255,0.753,256,1.382,257,0.753,258,0.753,259,0.753,260,0.815,261,0.753,262,0.815,263,1.136,264,0.753,265,0.815,266,0.753,267,0.794,268,0.753,269,0.794,270,0.753,271,0.753,272,0.837,273,0.713,274,0.837,275,1.311,276,0.794,277,0.794,278,0.753,279,0.815,280,0.753,281,0.815,282,0.753,283,0.773,284,0.753,285,1.077,286,0.753,287,0.753,288,0.815,289,0.753,290,0.815,291,0.837,292,1.382,293,0.713,294,0.733,295,0.773,296,0.837,297,0.733,298,1.068,299,0.837,300,0.733,301,0.837,302,0.713,303,0.837,304,0.733,305,0.773,306,0.773,307,0.815,308,0.837,1499,2.316,1868,4.483,2866,3.085,2867,6.024]],["title/components/ServerCompactActorComponent.html",[128,0.064,132,0.711]],["body/components/ServerCompactActorComponent.html",[3,0.098,4,0.098,5,0.087,10,0.882,13,0.747,30,0.01,31,0.566,34,0.602,53,0.638,58,0.151,59,0.176,63,0.098,67,0.109,87,0.005,88,0.007,89,0.005,112,1.616,128,0.102,131,0.733,132,1.21,133,0.733,134,0.733,135,0.733,136,0.733,137,1.446,150,0.753,151,0.994,152,0.837,153,0.837,156,0.89,158,0.694,160,1.515,161,1.435,162,0.815,164,1.106,182,0.978,183,1.029,184,0.694,190,0.486,191,1.106,192,1.106,193,0.602,194,1.382,195,0.837,196,1.382,197,0.753,198,0.815,199,1.136,200,0.753,201,0.837,202,0.753,203,0.794,204,1.572,205,0.753,206,0.815,207,0.837,208,0.753,209,0.815,210,0.753,211,1.165,212,0.837,213,0.773,214,0.837,215,0.753,216,0.837,217,0.753,218,0.837,219,0.753,220,0.794,221,0.837,222,0.753,223,0.815,224,0.753,225,0.837,226,0.753,227,0.815,228,0.837,229,0.733,230,0.815,231,0.837,232,0.753,233,0.837,234,0.753,235,0.837,236,0.753,237,0.794,238,0.753,239,1.223,240,1.572,241,0.753,242,0.753,243,0.753,244,0.815,245,0.753,246,0.837,247,0.753,248,0.753,249,0.837,250,0.753,251,0.713,252,0.753,253,1.136,254,0.694,255,0.753,256,1.382,257,0.753,258,0.753,259,0.753,260,0.815,261,0.753,262,0.815,263,1.136,264,0.753,265,0.815,266,0.753,267,0.794,268,0.753,269,0.794,270,0.753,271,0.753,272,0.837,273,0.713,274,0.837,275,0.794,276,1.311,277,0.794,278,0.753,279,0.815,280,0.753,281,0.815,282,0.753,283,0.773,284,0.753,285,1.077,286,0.753,287,0.753,288,0.815,289,0.753,290,0.815,291,0.837,292,1.382,293,0.713,294,0.733,295,0.773,296,0.837,297,0.733,298,1.068,299,0.837,300,0.733,301,0.837,302,0.713,303,0.837,304,0.733,305,0.773,306,0.773,307,0.815,308,0.837,1499,2.316,1868,4.483,2866,3.085,2868,6.024]],["title/components/ServerIconActorComponent.html",[128,0.064,133,0.711]],["body/components/ServerIconActorComponent.html",[3,0.099,4,0.099,5,0.088,10,0.887,13,0.751,30,0.01,31,0.568,34,0.997,53,0.642,58,0.151,59,0.178,63,0.099,67,0.109,87,0.005,88,0.007,89,0.005,112,1.626,128,0.102,131,0.737,132,0.737,133,1.213,134,0.737,135,0.737,136,0.737,137,1.448,150,0.758,151,0.998,152,0.842,153,0.842,156,0.894,158,0.698,160,1.516,161,1.435,162,0.82,164,1.111,182,0.984,183,1.036,184,0.698,190,0.489,191,1.111,192,1.111,193,0.606,194,1.386,195,0.842,196,1.386,197,0.758,198,0.82,199,1.141,200,0.758,201,0.842,202,0.758,203,0.799,204,1.574,205,0.758,206,0.82,207,0.842,208,0.758,209,0.82,210,0.758,211,1.168,212,0.842,213,0.778,214,0.842,215,0.758,216,0.842,217,0.758,218,0.842,219,0.758,220,0.799,221,0.842,222,0.758,223,0.82,224,0.758,225,0.842,226,0.758,227,0.82,228,0.842,229,0.737,230,0.82,231,0.842,232,0.758,233,0.842,234,0.758,235,0.842,236,0.758,237,0.799,238,0.758,239,1.227,240,1.574,241,0.758,242,0.758,243,0.758,244,0.82,245,0.758,246,0.842,247,0.758,248,0.758,249,0.842,250,0.758,251,0.718,252,0.758,253,1.141,254,0.698,255,0.758,256,1.386,257,0.758,258,0.758,259,0.758,260,0.82,261,0.758,262,0.82,263,1.141,264,0.758,265,0.82,266,0.758,267,0.799,268,0.758,269,0.799,270,0.758,271,0.758,272,0.842,273,0.718,274,0.842,275,0.799,276,0.799,277,0.799,278,0.758,279,0.82,280,0.758,281,0.82,282,0.758,283,0.778,284,0.758,285,1.082,286,0.758,287,0.758,288,0.82,289,0.758,290,0.82,291,0.842,292,1.386,293,0.718,294,0.737,295,0.778,296,0.842,297,0.737,298,1.072,299,0.842,300,0.737,301,0.842,302,0.718,303,0.842,304,0.737,305,0.778,306,0.778,307,0.82,308,0.842,1499,2.331,1868,4.498,2866,3.105,2869,6.05]],["title/components/ServerStandActorComponent.html",[128,0.064,134,0.711]],["body/components/ServerStandActorComponent.html",[3,0.098,4,0.098,5,0.087,10,0.884,13,0.748,30,0.01,31,0.567,34,0.603,53,0.639,58,0.151,59,0.177,63,0.098,67,0.109,87,0.005,88,0.007,89,0.005,112,1.619,128,0.102,131,0.734,132,0.734,133,0.734,134,1.211,135,0.734,136,0.734,137,1.447,150,0.754,151,0.995,152,0.839,153,0.839,156,0.891,158,0.695,160,1.515,161,1.435,162,0.817,164,1.108,182,0.98,183,1.031,184,0.695,190,0.487,191,1.108,192,1.108,193,0.603,194,1.384,195,0.839,196,1.384,197,0.754,198,0.817,199,1.137,200,0.754,201,0.839,202,0.754,203,0.796,204,1.573,205,0.754,206,0.817,207,0.839,208,0.754,209,0.817,210,0.754,211,1.166,212,0.839,213,0.775,214,0.839,215,0.754,216,0.839,217,0.754,218,0.839,219,0.754,220,0.796,221,0.839,222,0.754,223,0.817,224,0.754,225,0.839,226,0.754,227,0.817,228,0.839,229,0.734,230,0.817,231,0.839,232,0.754,233,0.839,234,0.754,235,0.839,236,0.754,237,0.796,238,0.754,239,1.224,240,1.573,241,0.754,242,0.754,243,0.754,244,0.817,245,0.754,246,0.839,247,0.754,248,0.754,249,0.839,250,0.754,251,0.714,252,0.754,253,1.137,254,0.695,255,0.754,256,1.384,257,0.754,258,0.754,259,0.754,260,0.817,261,0.754,262,0.817,263,1.137,264,0.754,265,0.817,266,0.754,267,0.796,268,0.754,269,0.796,270,0.754,271,0.754,272,0.839,273,0.714,274,0.839,275,0.796,276,0.796,277,1.312,278,0.754,279,0.817,280,0.754,281,0.817,282,0.754,283,0.775,284,0.754,285,1.079,286,0.754,287,0.754,288,0.817,289,0.754,290,0.817,291,0.839,292,1.384,293,0.714,294,0.734,295,0.775,296,0.839,297,0.734,298,1.069,299,0.839,300,0.734,301,0.839,302,0.714,303,0.839,304,0.734,305,0.775,306,0.775,307,0.817,308,0.839,1499,2.321,1868,4.488,2866,3.091,2870,6.033]],["title/components/SphereMeshComponent.html",[128,0.064,278,0.73]],["body/components/SphereMeshComponent.html",[3,0.087,4,0.087,5,0.077,8,0.301,10,1.1,12,1.146,13,0.687,14,0.666,23,0.841,24,0.829,29,0.458,30,0.01,31,0.576,32,0.533,33,0.614,34,0.533,35,0.444,53,0.564,56,0.865,58,0.168,59,0.156,60,1.412,63,0.087,67,0.096,75,0.631,87,0.004,88,0.006,89,0.004,128,0.095,131,0.648,132,0.648,133,0.648,134,0.648,135,0.648,136,0.648,137,1.245,150,0.666,151,0.914,152,0.741,153,0.741,156,0.818,157,1.788,158,0.614,160,1.508,161,1.428,162,0.722,164,1.017,165,2.767,166,1.251,169,0.865,170,1.473,171,1.983,173,1.956,178,1.573,179,1.422,180,1.284,181,1.063,182,0.865,183,0.911,184,0.865,185,1.62,186,0.959,190,0.43,191,1.017,192,1.017,193,0.533,194,1.312,195,0.741,196,1.312,197,0.666,198,0.722,199,1.044,200,0.666,201,0.741,202,0.666,203,0.703,204,1.531,205,0.666,206,0.722,207,0.741,208,0.666,209,0.722,210,0.666,211,1.115,212,0.741,213,0.684,214,0.741,215,0.666,216,0.741,217,0.666,218,0.741,219,0.666,220,0.703,221,0.741,222,0.666,223,0.722,224,0.666,225,0.741,226,0.666,227,0.722,228,0.741,229,0.648,230,0.722,231,0.741,232,0.666,233,0.741,234,0.666,235,0.741,236,0.666,237,0.703,238,0.666,239,1.146,240,1.531,241,0.666,242,0.666,243,0.666,244,0.722,245,0.666,246,0.741,247,0.666,248,0.666,249,0.741,250,0.666,251,0.631,252,0.666,253,1.044,254,0.614,255,0.666,256,1.312,257,0.666,258,0.666,259,0.666,260,0.722,261,0.666,262,0.722,263,1.044,264,0.666,265,0.722,266,0.666,267,0.703,268,0.666,269,0.703,270,0.666,271,0.666,272,0.741,273,0.631,274,0.741,275,0.703,276,0.703,277,0.703,278,1.18,279,1.177,280,0.666,281,0.722,282,0.666,283,0.684,284,0.666,285,0.99,286,0.666,287,0.666,288,0.722,289,0.666,290,0.722,291,0.741,292,0.741,293,0.631,294,0.648,295,0.684,296,0.741,297,0.648,298,1.001,299,0.741,300,0.648,301,0.741,302,0.631,303,0.741,304,0.648,305,0.684,306,0.684,307,0.722,308,0.741,746,2.134,747,3.799,749,3.827,755,4.756,776,1.717,780,2.916,783,2.587,784,2.226,785,2.134,786,2.444,822,3.458,826,2.916,831,3.006,2871,6.699,2872,5.536,2873,6.41,2874,5.641,2875,5.536,2876,3.929,2877,3.929,2878,3.929,2879,3.929]],["title/directives/StatsAutoShowDirective.html",[193,0.584,304,0.711]],["body/directives/StatsAutoShowDirective.html",[3,0.139,4,0.139,5,0.124,8,0.484,14,0.908,23,1.147,24,0.853,29,0.737,30,0.01,31,0.523,32,0.484,33,0.605,35,0.714,50,1.386,58,0.166,59,0.251,63,0.139,67,0.155,87,0.007,88,0.008,89,0.007,158,0.987,160,1.043,161,1.179,193,0.857,293,1.015,304,1.245,305,1.314,306,1.488,307,1.386,329,2.057,565,5.393,567,5.56,842,2.267,958,3.77,965,4.046,1242,4.143,2270,5.56,2880,7.101,2881,5.56,2882,6.318,2883,6.318,2884,6.318]],["title/injectables/StatsService.html",[0,1.329,565,2.679]],["body/injectables/StatsService.html",[0,2.17,2,2.726,3,0.124,4,0.124,5,0.111,8,0.432,9,1.397,14,0.847,15,2.166,23,1.166,24,0.967,30,0.01,32,0.432,35,0.935,50,1.549,58,0.155,59,0.224,63,0.124,67,0.138,87,0.006,88,0.008,89,0.006,305,1.49,316,3.191,329,2.498,565,4.376,690,4.376,842,1.692,844,3.074,851,3.51,922,6.437,927,5.269,935,5.963,2485,4.958,2885,4.958,2886,8.036,2887,7.036,2888,5.633,2889,5.633,2890,5.633,2891,5.633,2892,5.633,2893,5.633,2894,5.633,2895,5.633,2896,5.633,2897,5.633,2898,8.436,2899,5.633,2900,7.036,2901,5.633,2902,5.633,2903,5.633,2904,5.633]],["title/components/StlLoaderComponent.html",[128,0.064,280,0.73]],["body/components/StlLoaderComponent.html",[3,0.084,4,0.084,5,0.075,8,0.291,9,1.074,10,1.074,12,1.132,13,0.671,14,0.651,23,0.822,24,0.851,27,1.631,29,0.444,30,0.01,31,0.568,32,0.482,33,0.603,34,0.516,35,0.43,53,0.546,54,1.067,55,1.011,56,1.071,58,0.171,59,0.151,60,1.191,63,0.084,67,0.093,75,0.611,87,0.004,88,0.006,89,0.004,95,3.566,128,0.094,131,0.627,132,0.627,133,0.627,134,0.627,135,0.627,136,0.627,137,1.226,150,0.645,151,0.893,152,0.717,153,0.717,156,0.799,157,1.762,158,0.594,160,1.506,161,1.426,162,0.698,164,0.993,166,1.222,169,0.837,170,1.457,171,1.954,173,1.39,174,3.546,178,1.55,179,1.39,180,1.254,181,1.029,182,0.837,183,0.881,184,0.845,185,1.112,186,0.928,190,0.416,191,0.993,192,0.993,193,0.516,194,1.293,195,0.717,196,1.293,197,0.645,198,0.698,199,1.02,200,0.645,201,0.717,202,0.645,203,0.68,204,1.519,205,0.645,206,0.698,207,0.717,208,0.645,209,0.698,210,0.645,211,1.101,212,0.717,213,0.662,214,0.717,215,0.645,216,0.717,217,0.645,218,0.717,219,0.645,220,0.68,221,0.717,222,0.645,223,0.698,224,0.645,225,0.717,226,0.645,227,0.698,228,0.717,229,0.627,230,0.698,231,0.717,232,0.645,233,0.717,234,0.645,235,0.717,236,0.645,237,0.68,238,0.645,239,1.126,240,1.519,241,0.645,242,0.645,243,0.645,244,0.698,245,0.645,246,0.717,247,0.645,248,0.645,249,0.717,250,0.645,251,1.244,252,0.645,253,1.02,254,0.845,255,0.645,256,1.293,257,0.645,258,0.645,259,0.645,260,0.698,261,0.645,262,0.698,263,1.02,264,0.645,265,0.698,266,0.645,267,0.68,268,0.645,269,0.68,270,0.645,271,0.645,272,0.717,273,0.611,274,0.717,275,0.68,276,0.68,277,0.68,278,0.645,279,0.698,280,1.163,281,1.156,282,0.645,283,0.662,284,0.645,285,0.967,286,0.645,287,0.645,288,0.698,289,0.645,290,0.698,291,0.717,292,0.717,293,0.611,294,0.627,295,0.662,296,0.717,297,0.627,298,0.984,299,0.717,300,0.627,301,0.717,302,0.611,303,0.717,304,0.627,305,0.662,306,0.662,307,0.698,308,0.717,329,2.05,356,1.625,500,1.909,749,1.983,776,1.661,783,3.385,785,2.064,1271,2.642,1675,4.128,1744,2.493,1748,3.045,1966,2.642,1971,4.671,1974,4.765,2003,2.642,2004,3.758,2038,3.346,2804,4.671,2818,3.346,2842,3.045,2905,6.818,2906,5.409,2907,5.409,2908,3.802,2909,3.802,2910,6.296,2911,3.802,2912,3.802,2913,3.802,2914,3.802]],["title/injectables/SvgLoaderService.html",[0,1.329,514,2.824]],["body/injectables/SvgLoaderService.html",[0,2.193,2,2.772,3,0.126,4,0.126,5,0.112,8,0.439,9,1.412,10,1.535,12,1.342,14,0.855,15,1.735,24,0.914,27,2.043,29,0.902,30,0.01,31,0.64,32,0.592,33,0.74,35,0.874,49,4.581,53,0.823,54,0.971,55,0.92,56,1.208,58,0.178,59,0.228,60,1.261,63,0.126,67,0.14,75,0.92,87,0.006,88,0.008,89,0.006,90,5.553,93,5.275,94,5.998,95,4.027,96,4.661,98,5.736,100,5.3,101,4.25,156,1.05,180,1.328,251,0.92,416,4.588,500,2.876,514,4.661,796,4.581,1457,4.588,1458,4.588,1459,4.588,1460,4.588,1464,5.041,2003,3.98,2004,4.94,2021,4.588,2334,4.94,2354,5.041,2915,6.256,2916,5.728,2917,5.728,2918,5.728,2919,5.728,2920,5.728]],["title/components/TextActorComponent.html",[128,0.064,284,0.73]],["body/components/TextActorComponent.html",[3,0.065,4,0.065,5,0.058,8,0.227,9,0.894,12,1.223,13,0.558,14,0.541,15,2.014,20,1.677,23,0.684,24,0.96,27,1.637,29,0.635,30,0.01,31,0.57,32,0.6,33,0.626,34,0.401,35,0.834,50,1.264,53,0.425,54,1.25,55,1.184,58,0.158,59,0.118,63,0.065,67,0.073,72,2.598,87,0.003,88,0.005,89,0.003,128,0.081,131,0.488,132,0.488,133,0.488,134,0.488,135,0.488,136,0.488,137,1.087,150,0.502,151,0.742,152,0.558,153,0.558,156,0.665,157,1.562,158,0.462,160,1.487,161,1.408,162,0.544,164,0.826,165,2.164,166,1.017,169,0.652,170,1.332,171,1.732,173,2.039,178,1.556,179,1.156,182,0.652,183,0.686,184,0.703,186,0.722,190,0.324,191,0.826,192,0.826,193,0.401,194,1.146,195,0.558,196,1.146,197,0.502,198,0.544,199,0.848,200,0.502,201,0.558,202,0.502,203,0.529,204,1.424,205,0.502,206,0.544,207,0.558,208,0.502,209,0.544,210,0.502,211,0.993,212,0.558,213,0.515,214,0.558,215,0.502,216,0.558,217,0.502,218,0.558,219,0.502,220,0.529,221,0.558,222,0.502,223,0.544,224,0.502,225,0.558,226,0.502,227,0.544,228,0.558,229,0.488,230,0.544,231,0.558,232,1.108,233,0.558,234,0.502,235,0.558,236,0.502,237,0.529,238,0.502,239,0.973,240,1.424,241,0.502,242,0.502,243,0.502,244,0.544,245,0.502,246,0.558,247,0.502,248,0.502,249,0.558,250,0.502,251,0.475,252,0.502,253,0.848,254,0.462,255,0.502,256,1.146,257,0.502,258,0.502,259,0.502,260,0.544,261,0.502,262,0.544,263,0.848,264,0.502,265,0.544,266,0.502,267,0.529,268,0.502,269,0.529,270,0.502,271,0.763,272,0.558,273,0.475,274,0.558,275,0.529,276,0.529,277,0.529,278,0.502,279,0.544,280,0.502,281,0.544,282,0.502,283,0.515,284,1.03,285,1.28,286,0.502,287,0.502,288,0.544,289,0.502,290,0.544,291,0.558,292,1.026,293,0.475,294,0.488,295,0.515,296,0.558,297,0.488,298,0.85,299,0.558,300,0.488,301,0.558,302,0.475,303,0.558,304,0.488,305,0.515,306,0.515,307,0.544,308,0.558,309,3.732,312,3.781,315,4.869,328,3.568,329,2.641,351,1.926,356,1.635,365,4.359,367,1.544,724,2.542,726,2.542,796,1.754,797,2.371,798,1.754,842,1.351,844,2.377,851,2.655,891,3.225,898,1.677,929,1.941,958,2.542,959,2.732,965,2.942,966,2.347,999,1.544,1011,2.057,1033,3.385,1035,2.443,1036,2.057,1227,2.666,1250,3.338,1252,2.057,1254,2.057,1499,1.544,1510,2.605,1514,2.798,1516,2.605,1522,2.605,1528,2.371,1529,2.196,1531,2.371,1532,2.605,1647,2.605,1649,2.605,1652,2.196,1653,3.959,1675,3.568,1733,2.605,1735,3.959,1745,2.605,1767,2.605,1768,2.605,1769,2.605,1770,4.789,1773,3.959,2001,2.371,2921,7.473,2922,4.499,2923,5.442,2924,5.442,2925,5.442,2926,5.442,2927,5.442,2928,4.499,2929,6.078,2930,5.442,2931,5.442,2932,2.96,2933,2.96,2934,2.96,2935,2.96,2936,2.96,2937,3.959,2938,2.96,2939,2.96,2940,2.96,2941,2.96,2942,2.96,2943,5.442,2944,4.499,2945,5.349,2946,4.499,2947,2.96,2948,5.442,2949,2.96,2950,5.442,2951,4.499,2952,2.96,2953,2.96,2954,2.96,2955,4.499,2956,4.499,2957,2.96]],["title/components/TextMeshComponent.html",[128,0.064,286,0.73]],["body/components/TextMeshComponent.html",[3,0.062,4,0.062,5,0.055,8,0.214,9,0.854,10,0.854,12,1.223,13,0.533,14,0.517,15,1.28,23,0.653,24,0.974,27,1.721,29,0.688,30,0.01,31,0.58,32,0.537,33,0.644,34,0.378,35,0.72,50,0.789,53,0.401,54,1.384,55,1.311,56,0.819,58,0.16,59,0.111,60,1.298,63,0.062,67,0.068,72,1.479,75,1.08,87,0.003,88,0.005,89,0.003,95,2.971,100,2.818,105,2.07,128,0.078,131,0.46,132,0.46,133,0.46,134,0.46,135,0.46,136,0.46,137,1.054,150,0.473,151,0.709,152,0.526,153,0.526,156,0.635,157,1.514,158,0.436,160,1.482,161,1.403,162,0.512,164,0.789,166,0.971,169,0.614,170,1.301,171,1.679,173,1.347,178,1.859,179,1.104,180,0.997,181,0.755,182,0.614,183,0.647,184,0.819,185,1.258,186,0.681,190,0.305,191,0.789,192,0.789,193,0.378,194,1.111,195,0.526,196,1.111,197,0.473,198,0.512,199,0.81,200,0.473,201,0.526,202,0.473,203,0.499,204,1.399,205,0.473,206,0.512,207,0.526,208,0.473,209,0.512,210,0.473,211,0.967,212,0.526,213,0.486,214,0.526,215,0.473,216,0.526,217,0.473,218,0.526,219,0.473,220,0.499,221,0.526,222,0.473,223,0.512,224,0.473,225,0.526,226,0.473,227,0.512,228,0.526,229,0.46,230,0.512,231,0.526,232,0.473,233,0.526,234,0.473,235,0.526,236,0.473,237,0.499,238,0.473,239,0.938,240,1.399,241,0.473,242,0.473,243,0.473,244,0.512,245,0.473,246,0.526,247,0.473,248,0.473,249,0.526,250,0.473,251,0.448,252,0.473,253,0.81,254,0.436,255,0.473,256,1.111,257,0.473,258,0.473,259,0.473,260,0.512,261,0.473,262,0.512,263,0.81,264,0.473,265,0.512,266,0.473,267,0.499,268,0.473,269,0.499,270,0.473,271,0.473,272,0.526,273,0.448,274,0.526,275,0.499,276,0.499,277,0.499,278,0.473,279,0.512,280,0.473,281,0.512,282,0.473,283,0.486,284,0.473,285,1.448,286,0.999,287,0.473,288,0.512,289,0.473,290,0.512,291,0.526,292,0.526,293,0.448,294,0.46,295,0.486,296,0.526,297,0.46,298,0.819,299,0.526,300,0.46,301,0.526,302,0.448,303,0.526,304,0.46,305,0.486,306,0.486,307,0.512,308,0.526,329,2.189,351,1.362,356,2.173,417,2.07,510,3.864,578,3.864,643,1.565,670,1.818,671,4.095,746,1.515,749,3.074,752,2.753,776,1.218,778,1.829,783,2.974,784,1.58,785,1.515,819,2.07,820,2.455,824,3.189,825,2.234,831,2.848,862,2.547,899,2.674,919,3.666,955,2.435,970,4.201,1028,2.234,1227,2.547,1237,3.189,1271,1.938,1305,4.201,1314,2.234,1475,2.455,1579,3.443,1585,2.455,1675,4.866,1732,4.72,1744,1.829,1748,2.234,1749,3.189,1974,4.095,2804,3.891,2822,2.07,2827,3.783,2842,2.234,2945,3.783,2958,7.603,2959,5.245,2960,4.299,2961,5.245,2962,5.245,2963,5.245,2964,4.299,2965,5.893,2966,5.893,2967,5.893,2968,5.893,2969,5.893,2970,5.893,2971,5.245,2972,5.245,2973,7.422,2974,4.299,2975,2.455,2976,2.455,2977,2.789,2978,2.789,2979,2.789,2980,2.789,2981,2.789,2982,2.789,2983,4.299,2984,2.789,2985,4.299,2986,2.789,2987,2.789,2988,2.789,2989,2.789,2990,4.299,2991,6.365,2992,2.789,2993,2.789,2994,4.299,2995,2.789,2996,2.789,2997,2.789,2998,2.789,2999,2.455,3000,2.789,3001,2.789,3002,2.789,3003,2.789,3004,2.789,3005,4.299,3006,4.299,3007,2.789,3008,4.299,3009,4.299,3010,2.789,3011,2.789,3012,2.789,3013,2.789,3014,2.789,3015,2.789,3016,2.789,3017,2.789,3018,4.299,3019,2.789,3020,2.789,3021,2.789,3022,2.789]],["title/components/TorusMeshComponent.html",[128,0.064,287,0.73]],["body/components/TorusMeshComponent.html",[3,0.081,4,0.081,5,0.072,8,0.282,10,1.049,12,1.118,13,0.655,14,0.636,23,0.803,24,0.867,29,0.429,30,0.01,31,0.56,32,0.474,33,0.592,34,0.499,35,0.416,53,0.529,54,1.145,55,1.085,56,0.825,58,0.164,59,0.146,60,1.361,63,0.081,67,0.09,75,0.591,87,0.004,88,0.006,89,0.004,128,0.092,131,0.607,132,0.607,133,0.607,134,0.607,135,0.607,136,0.607,137,1.208,150,0.624,151,0.872,152,0.694,153,0.694,156,0.781,157,1.736,158,0.575,160,1.504,161,1.424,162,0.676,164,0.97,165,2.686,166,1.194,169,0.81,170,1.441,171,1.925,173,1.736,178,1.683,179,1.357,180,1.225,181,0.995,182,0.81,183,0.853,184,0.825,185,1.546,186,0.898,190,0.403,191,0.97,192,0.97,193,0.499,194,1.274,195,0.694,196,1.274,197,0.624,198,0.676,199,0.996,200,0.624,201,0.694,202,0.624,203,0.658,204,1.507,205,0.624,206,0.676,207,0.694,208,0.624,209,0.676,210,0.624,211,1.087,212,0.694,213,0.641,214,0.694,215,0.624,216,0.694,217,0.624,218,0.694,219,0.624,220,0.658,221,0.694,222,0.624,223,0.676,224,0.624,225,0.694,226,0.624,227,0.676,228,0.694,229,0.607,230,0.676,231,0.694,232,0.624,233,0.694,234,0.624,235,0.694,236,0.624,237,0.658,238,0.624,239,1.106,240,1.507,241,0.624,242,0.624,243,0.624,244,0.676,245,0.624,246,0.694,247,0.624,248,0.624,249,0.694,250,0.624,251,0.591,252,0.624,253,0.996,254,0.575,255,0.624,256,1.274,257,0.624,258,0.624,259,0.624,260,0.676,261,0.624,262,0.676,263,0.996,264,0.624,265,0.676,266,0.624,267,0.658,268,0.624,269,0.658,270,0.624,271,0.624,272,0.694,273,0.591,274,0.694,275,0.658,276,0.658,277,0.658,278,0.624,279,0.676,280,0.624,281,0.676,282,0.624,283,0.641,284,0.624,285,0.945,286,0.624,287,1.145,288,1.409,289,0.624,290,0.676,291,0.694,292,0.694,293,0.591,294,0.607,295,0.641,296,0.694,297,0.607,298,0.966,299,0.694,300,0.607,301,0.694,302,0.591,303,0.694,304,0.607,305,0.641,306,0.641,307,0.676,308,0.694,417,5.013,643,2.459,670,2.235,746,1.998,747,3.663,749,3.732,776,1.607,783,2.468,784,2.084,785,1.998,786,2.289,814,5.44,819,2.73,821,3.238,823,3.92,825,2.947,827,3.286,831,2.869,836,4.65,2570,4.65,2748,5.44,2874,6.752,3023,6.909,3024,5.283,3025,7.673,3026,6.182,3027,4.65,3028,3.238,3029,5.283,3030,3.238,3031,3.679,3032,5.283,3033,5.283,3034,3.679]],["title/modules/UxActorModule.html",[368,1.024,3035,3.196]],["body/modules/UxActorModule.html",[3,0.134,4,0.134,5,0.119,13,0.754,30,0.01,58,0.186,59,0.241,63,0.134,67,0.149,87,0.007,88,0.008,89,0.007,190,0.665,250,1.519,251,0.976,284,1.519,368,1.445,370,2.276,371,2.276,372,3.155,373,2.416,374,3.155,377,2.762,378,2.276,379,2.344,382,3.022,390,3.22,391,2.57,393,3.022,414,5.344,418,5.346,421,5.346,422,5.346,3035,6.65,3036,5.346,3037,5.346,3038,6.075,3039,5.346,3040,6.075,3041,6.075]],["title/components/VideoMeshComponent.html",[128,0.064,289,0.73]],["body/components/VideoMeshComponent.html",[3,0.065,4,0.099,5,0.058,8,0.225,9,0.888,10,0.888,12,1.364,13,0.555,14,0.538,23,0.68,24,0.95,29,0.343,30,0.01,31,0.501,32,0.547,33,0.683,34,0.398,35,0.737,50,1.112,53,0.642,54,1.324,55,1.255,56,0.946,58,0.162,59,0.117,60,1.511,63,0.065,67,0.072,75,0.718,87,0.003,88,0.005,89,0.003,128,0.08,131,0.485,132,0.485,133,0.485,134,0.485,135,0.485,136,0.485,137,1.083,150,0.498,151,0.738,152,0.554,153,0.554,156,0.661,157,1.555,158,0.459,160,1.487,161,1.407,162,0.539,164,0.821,165,2.407,166,1.01,169,0.647,170,1.328,171,1.725,173,1.149,178,1.662,179,1.149,180,1.037,181,0.795,182,0.647,183,0.681,184,0.699,185,1.308,186,0.717,190,0.322,191,0.821,192,0.821,193,0.398,194,1.141,195,0.554,196,1.141,197,0.498,198,0.539,199,0.843,200,0.498,201,0.554,202,0.498,203,0.525,204,1.42,205,0.498,206,0.539,207,0.554,208,0.498,209,0.539,210,0.498,211,0.99,212,0.554,213,0.511,214,0.554,215,0.498,216,0.554,217,0.498,218,0.554,219,0.498,220,0.525,221,0.554,222,0.498,223,0.539,224,0.498,225,0.554,226,0.498,227,0.539,228,0.554,229,0.485,230,0.539,231,0.554,232,0.498,233,0.554,234,0.498,235,0.554,236,0.498,237,0.525,238,0.498,239,0.968,240,1.42,241,0.498,242,0.498,243,0.498,244,0.539,245,0.498,246,0.554,247,0.498,248,0.758,249,0.554,250,0.498,251,0.472,252,0.498,253,0.843,254,0.459,255,0.498,256,1.141,257,0.498,258,0.498,259,0.498,260,0.539,261,0.498,262,0.539,263,0.843,264,0.498,265,0.539,266,0.498,267,0.525,268,0.498,269,0.525,270,0.498,271,0.498,272,0.554,273,0.472,274,0.554,275,0.525,276,0.525,277,0.525,278,0.498,279,0.539,280,0.498,281,0.539,282,0.498,283,0.511,284,0.498,285,0.8,286,0.498,287,0.498,288,0.539,289,1.026,290,1.31,291,0.554,292,0.554,293,0.472,294,0.485,295,0.511,296,0.554,297,0.485,298,0.846,299,0.554,300,0.485,301,0.554,302,0.472,303,0.554,304,0.485,305,0.511,306,0.511,307,0.539,308,0.554,309,3.836,312,3.766,324,1.595,328,4.271,337,4.018,351,2.064,356,2.209,599,3.158,625,2.585,643,2.677,653,3.429,737,1.926,738,1.74,739,2.041,740,2.041,741,2.041,746,1.595,747,3.209,749,3.398,752,3.044,753,4.018,754,3.691,755,4.018,756,3.935,758,4.492,759,4.492,761,4.849,762,4.849,769,2.782,772,2.782,776,1.283,778,1.926,780,2.179,781,2.179,783,2.828,784,1.664,785,1.595,786,1.827,819,2.179,831,2.428,842,1.343,844,2.366,851,2.645,891,3.209,898,1.664,927,1.926,958,2.53,965,2.93,1009,2.352,1011,2.041,1134,2.179,1250,2.179,1251,2.585,1252,2.041,1253,2.585,1254,2.041,1288,2.179,1553,2.352,1579,2.352,1732,4.849,2043,3.935,2096,2.585,2097,2.585,2975,2.585,2976,2.585,2999,2.585,3027,2.585,3028,2.585,3030,2.585,3042,7.43,3043,4.472,3044,5.415,3045,5.415,3046,5.415,3047,5.415,3048,4.766,3049,2.937,3050,4.472,3051,2.937,3052,2.937,3053,2.937,3054,2.937,3055,2.937,3056,4.472,3057,2.937,3058,2.937,3059,2.937,3060,2.937,3061,2.937,3062,2.937,3063,2.937,3064,2.937,3065,2.937,3066,2.937,3067,2.937,3068,2.937,3069,2.937,3070,2.937,3071,2.937,3072,2.937,3073,2.937,3074,2.937,3075,2.937,3076,2.937,3077,2.937,3078,2.937,3079,2.937,3080,2.937,3081,4.472,3082,2.937,3083,2.937,3084,2.937,3085,2.937,3086,2.937]],["title/components/WorkstationActorComponent.html",[128,0.064,136,0.711]],["body/components/WorkstationActorComponent.html",[3,0.097,4,0.097,5,0.086,8,0.335,10,0.87,13,0.74,24,0.495,30,0.01,31,0.562,34,0.594,53,0.629,54,0.742,55,0.703,58,0.15,59,0.174,63,0.097,67,0.107,87,0.005,88,0.007,89,0.005,112,2.172,128,0.101,131,0.722,132,0.722,133,0.722,134,0.722,135,0.722,136,1.203,137,1.364,150,0.742,151,0.985,152,0.825,153,0.825,156,0.882,158,0.684,160,1.514,161,1.434,162,0.804,164,1.339,166,1.348,178,1.348,182,0.964,183,1.015,184,0.684,190,0.479,191,1.096,192,1.096,193,0.594,194,1.374,195,0.825,196,1.374,197,0.742,198,0.804,199,1.125,200,0.742,201,0.825,202,0.742,203,0.783,204,1.567,205,0.742,206,0.804,207,0.825,208,0.742,209,0.804,210,0.742,211,1.159,212,0.825,213,0.762,214,0.825,215,0.742,216,0.825,217,0.742,218,0.825,219,0.742,220,0.783,221,0.825,222,0.742,223,0.804,224,0.742,225,0.825,226,0.742,227,0.804,228,0.825,229,0.722,230,0.804,231,0.825,232,0.742,233,0.825,234,0.742,235,0.825,236,0.742,237,0.783,238,0.742,239,1.214,240,1.567,241,0.742,242,0.742,243,0.742,244,0.804,245,0.742,246,0.825,247,0.742,248,0.742,249,0.825,250,0.742,251,0.703,252,0.742,253,1.125,254,0.684,255,0.742,256,1.374,257,0.742,258,0.742,259,0.742,260,0.804,261,0.742,262,0.804,263,1.125,264,0.742,265,0.804,266,0.742,267,0.783,268,0.742,269,0.783,270,0.742,271,0.742,272,0.825,273,0.703,274,0.825,275,0.783,276,0.783,277,0.783,278,0.742,279,0.804,280,0.742,281,0.804,282,0.742,283,0.762,284,0.742,285,1.067,286,0.742,287,0.742,288,0.804,289,0.742,290,0.804,291,1.28,292,1.374,293,0.703,294,0.722,295,0.762,296,0.825,297,0.722,298,1.061,299,0.825,300,0.722,301,0.825,302,0.703,303,0.825,304,0.722,305,0.762,306,0.762,307,0.804,308,0.825,1499,2.284,1652,3.248,1868,4.451,3048,5.974,3087,5.251,3088,5.967,3089,5.967,3090,5.967]],["title/coverage.html",[3091,5.193]],["body/coverage.html",[0,2.508,1,2.063,5,0.065,6,4.769,7,4.773,30,0.01,32,0.254,34,0.45,56,0.518,61,2.461,62,2.461,64,2.756,65,2.063,67,0.143,72,3.153,87,0.004,88,0.005,89,0.004,90,2.174,92,2.919,111,2.174,112,3.125,113,2.919,114,2.919,128,0.134,131,0.547,132,0.547,133,0.547,134,0.547,135,0.547,136,0.547,150,0.562,154,2.919,155,4.47,170,0.642,182,0.73,193,0.931,197,0.562,200,0.562,202,0.562,205,0.562,208,0.562,210,0.562,213,0.578,215,0.562,217,0.562,219,0.562,220,0.593,222,0.562,224,0.562,226,0.562,229,0.547,232,0.562,234,0.562,236,0.562,238,0.562,241,0.562,242,0.562,243,0.562,245,0.562,247,0.562,250,0.562,252,0.562,255,0.562,257,0.562,259,0.562,261,0.562,264,0.562,266,0.562,268,0.562,270,0.562,273,0.533,275,0.593,276,0.593,277,0.593,278,0.562,280,0.562,282,0.562,284,0.562,286,0.562,287,0.562,289,0.562,294,0.547,297,0.547,300,0.547,302,0.533,304,0.547,306,0.578,309,1.73,310,2.919,510,2.174,511,2.063,512,2.174,513,2.174,514,2.174,534,2.305,535,2.305,544,1.665,555,2.174,565,2.063,574,2.919,575,3.924,580,2.657,586,1.965,587,4.034,588,4.5,589,1.801,591,1.665,593,1.879,594,1.801,600,5.153,641,2.657,644,2.657,654,2.657,716,2.919,745,2.919,746,4.229,787,2.919,788,2.919,811,2.919,823,2.461,840,2.919,957,2.919,1006,2.461,1037,2.919,1061,2.919,1103,2.919,1134,5.514,1213,2.919,1214,2.919,1227,1.965,1289,3.404,1291,2.919,1303,2.919,1318,1.965,1329,2.919,1356,2.919,1357,2.919,1367,2.919,1368,2.919,1418,2.919,1422,2.919,1455,2.919,1466,2.919,1498,2.919,1499,4.132,1521,2.305,1568,2.919,1576,2.919,1594,2.919,1604,3.924,1606,2.461,1642,2.919,1659,2.657,1660,2.657,1727,2.919,1744,2.174,1781,2.919,1782,3.924,1867,2.919,1879,2.919,1887,2.461,1888,3.924,1965,2.919,1966,4.47,2020,2.919,2021,3.924,2033,2.919,2045,2.919,2049,2.919,2050,3.924,2080,2.919,2094,2.919,2101,2.919,2109,2.919,2113,4.218,2114,2.919,2118,3.924,2150,2.919,2194,2.919,2195,2.919,2261,2.919,2334,2.305,2335,2.919,2336,2.919,2640,2.919,2801,2.919,2822,2.461,2823,2.657,2851,2.919,2866,4.47,2871,2.919,2880,2.919,2881,2.919,2885,2.919,2905,2.919,2915,2.919,2921,2.919,2958,2.919,3023,2.919,3042,2.919,3087,2.919,3091,2.919,3092,2.657,3093,3.317,3094,3.317,3095,5.825,3096,4.899,3097,2.919,3098,3.317,3099,3.317,3100,7.628,3101,5.825,3102,7.628,3103,3.317,3104,3.317,3105,5.825,3106,8.505,3107,6.863,3108,3.317,3109,5.825,3110,3.317,3111,3.317,3112,7.789,3113,3.317,3114,4.899,3115,3.317,3116,6.433,3117,7.183,3118,3.317,3119,3.317,3120,7.183,3121,3.317,3122,3.317,3123,4.899,3124,3.317,3125,3.317,3126,3.317,3127,3.317,3128,3.317,3129,3.317,3130,2.919,3131,2.919,3132,3.317,3133,2.919,3134,2.919,3135,2.919,3136,2.919,3137,2.919,3138,3.924,3139,3.924,3140,3.924,3141,3.924,3142,2.919,3143,2.919,3144,2.919,3145,2.919,3146,2.919,3147,2.919,3148,2.919,3149,2.919,3150,3.317,3151,3.317]],["title/dependencies.html",[371,1.943,2009,3.155]],["body/dependencies.html",[30,0.01,59,0.259,87,0.007,88,0.009,89,0.007,180,1.514,211,0.992,220,1.168,371,2.446,391,2.762,898,3.699,3152,6.53,3153,8.885,3154,6.53,3155,6.53,3156,7.695,3157,6.164,3158,6.53,3159,6.53,3160,6.53,3161,6.53,3162,6.53,3163,6.53,3164,6.53,3165,6.53,3166,6.53,3167,6.53,3168,6.53,3169,6.53,3170,6.53,3171,6.53,3172,6.53]],["title/miscellaneous/enumerations.html",[3173,2.351,3174,4.564]],["body/miscellaneous/enumerations.html",[8,0.484,30,0.01,55,1.446,87,0.007,88,0.008,89,0.007,112,2.3,248,1.279,295,1.1,587,3.172,1244,5.061,1659,5.061,1660,6.045,1673,6.641,1677,6.045,1892,5.244,2113,4.143,2126,6.045,2127,6.045,2128,5.6,2260,5.6,2434,6.641,3097,7.101,3173,4.143,3174,5.56,3175,7.547,3176,7.547,3177,7.547,3178,6.318,3179,6.318,3180,7.547,3181,7.547,3182,7.547,3183,7.547,3184,7.547]],["title/miscellaneous/functions.html",[3173,2.351,3185,4.564]],["body/miscellaneous/functions.html",[8,0.45,27,1.397,29,0.994,30,0.01,31,0.706,32,0.553,33,0.816,35,0.922,50,1.326,87,0.007,88,0.008,89,0.007,128,0.087,167,2.567,182,1.59,192,1.326,311,3.852,590,3.19,597,3.065,727,4.28,750,5.17,783,3.374,1237,4.359,1675,3.852,1744,4.735,1912,4.359,1923,5.126,2177,6.263,2804,5.358,2822,5.358,2823,5.784,2848,5.17,2850,5.17,2937,6.355,3130,5.17,3131,6.355,3133,5.17,3134,6.355,3135,6.355,3136,5.17,3137,6.355,3138,4.706,3139,5.784,3140,5.784,3141,5.784,3142,6.88,3144,5.17,3145,6.355,3146,5.17,3147,6.355,3148,5.17,3149,6.355,3173,3.852,3185,5.17,3186,5.875,3187,5.875,3188,5.875,3189,5.17,3190,5.875,3191,5.875,3192,5.875,3193,5.875,3194,7.221,3195,5.875,3196,5.875,3197,5.875,3198,5.875,3199,5.875,3200,7.221,3201,5.875]],["title/index.html",[8,0.275,3202,3.155,3203,3.155]],["body/index.html",[30,0.01,58,0.149,72,1.825,87,0.006,88,0.008,89,0.006,151,1.341,161,1.336,164,1.244,180,1.23,185,1.552,191,0.974,211,0.806,271,0.899,273,0.852,317,4.25,368,1.262,393,2.175,414,4.214,607,4.442,615,3.144,744,4.25,752,3.165,808,4.669,899,3.3,927,3.479,1224,3.144,1318,4.015,1358,4.669,1749,3.937,1823,4.25,1865,3.937,1866,3.937,1977,4.25,1997,3.937,2007,6.919,2008,7.149,2128,3.937,2196,4.25,2481,4.669,2671,5.962,2729,4.669,3092,5.978,3157,4.25,3204,8.124,3205,5.306,3206,5.306,3207,5.306,3208,5.306,3209,8.308,3210,5.306,3211,4.669,3212,6.774,3213,5.306,3214,7.863,3215,5.306,3216,5.306,3217,5.306,3218,5.306,3219,8.308,3220,5.306,3221,6.774,3222,5.306,3223,5.306,3224,5.306,3225,5.306,3226,5.306,3227,5.306,3228,5.306,3229,6.774,3230,6.774,3231,7.463,3232,6.774,3233,5.306,3234,5.306,3235,5.306,3236,5.306,3237,5.306,3238,5.306,3239,5.306,3240,5.306,3241,5.306,3242,5.306,3243,5.306,3244,5.306,3245,5.306,3246,5.306,3247,5.306,3248,5.306,3249,5.306,3250,5.306,3251,5.306,3252,5.306,3253,5.306,3254,8.124,3255,5.306,3256,5.306,3257,5.306,3258,5.306,3259,5.306,3260,5.306,3261,5.306,3262,5.306,3263,5.306,3264,5.306,3265,6.774,3266,5.306,3267,5.306,3268,6.774,3269,7.463,3270,5.306,3271,5.306,3272,5.306,3273,5.306,3274,6.774,3275,5.306,3276,5.306,3277,5.306,3278,5.306,3279,5.306,3280,5.306,3281,5.306,3282,5.306,3283,5.306,3284,5.306,3285,4.669,3286,5.306,3287,5.306,3288,5.306,3289,5.306]],["title/license.html",[3202,3.155,3203,3.155,3290,3.155]],["body/license.html",[30,0.008,87,0.007,88,0.008,89,0.007,316,3.478,379,2.369,1970,5.402,1997,5.503,2006,5.402,3092,4.917,3211,5.402,3285,5.402,3290,5.402,3291,6.139,3292,7.97,3293,6.139,3294,6.139,3295,6.139,3296,6.139,3297,7.417,3298,6.139,3299,6.139,3300,6.139,3301,6.139,3302,6.139,3303,7.417,3304,8.85,3305,6.139,3306,6.139,3307,7.97,3308,6.139,3309,7.417,3310,6.139,3311,6.139,3312,6.139,3313,6.139,3314,6.139,3315,6.139,3316,6.139,3317,6.139,3318,6.139,3319,7.417,3320,6.139,3321,6.139,3322,6.139,3323,6.139,3324,6.139,3325,6.139,3326,6.139,3327,7.417,3328,7.417,3329,6.139,3330,6.139,3331,6.139,3332,6.139,3333,6.139,3334,6.139,3335,6.139,3336,6.139,3337,6.139,3338,6.139,3339,6.139,3340,6.139,3341,6.139,3342,6.139,3343,6.139,3344,6.139,3345,6.139,3346,6.139,3347,6.139,3348,6.139,3349,6.139,3350,6.139,3351,6.139,3352,6.139,3353,6.139,3354,6.139,3355,6.139]],["title/modules.html",[370,2.211]],["body/modules.html",[30,0.008,87,0.007,88,0.008,89,0.007,283,1.585,369,4.278,370,2.307,384,4.278,394,4.278,401,4.278,408,4.569,414,3.83,427,4.278,441,4.278,449,4.278,457,4.278,464,4.278,474,4.278,475,4.278,476,4.278,477,4.278,485,4.278,509,4.278,3035,4.569,3157,7.292,3356,9.104,3357,9.104]],["title/overview.html",[3358,5.193]],["body/overview.html",[2,1.263,13,0.324,30,0.01,87,0.003,88,0.005,89,0.003,91,1.937,111,3.297,131,1.128,132,1.128,133,1.128,134,1.128,135,1.128,136,1.128,150,1.233,151,0.431,159,4.028,170,0.973,190,0.286,197,1.159,200,1.159,202,1.159,205,0.852,208,1.159,210,1.159,213,1.191,215,1.159,217,1.159,219,1.159,222,1.159,224,1.159,226,1.159,229,1.128,232,1.159,234,1.159,236,1.159,238,1.159,241,1.159,242,1.159,243,1.159,245,1.159,247,1.159,250,1.159,252,1.159,255,1.159,257,1.159,259,1.159,261,1.159,264,1.159,266,1.159,268,1.159,270,1.159,273,1.098,278,1.159,280,1.159,282,1.159,284,1.159,286,1.159,287,1.159,289,1.159,293,0.419,294,1.128,297,1.128,300,1.128,302,1.098,304,1.128,309,2.623,368,0.621,369,5.055,370,0.978,371,0.978,372,1.038,373,1.038,374,1.038,375,2.297,376,2.297,377,1.53,378,0.978,379,1.007,384,5.428,385,2.297,386,2.297,387,2.297,394,5.17,395,2.297,396,2.297,397,2.297,401,5.428,402,2.297,403,2.297,404,2.297,408,6.572,409,2.297,410,2.297,411,2.297,412,2.297,413,2.297,414,5.334,427,5.898,428,2.297,429,2.297,430,2.297,441,5.603,442,2.297,443,2.297,444,2.297,449,5.729,450,2.297,451,2.297,452,2.297,453,2.297,457,5.729,458,2.297,459,2.297,460,2.297,464,6.007,465,2.297,466,2.297,467,2.297,471,2.297,472,2.297,473,2.297,474,6.113,475,5.691,476,5.493,477,5.354,485,4.918,504,2.297,505,2.297,506,2.297,507,2.297,508,2.297,509,5.17,510,3.297,511,3.128,512,3.297,513,3.297,514,3.297,531,2.297,532,2.297,533,2.297,534,4.752,535,4.752,540,2.297,541,2.297,542,2.297,543,2.297,544,2.524,551,2.297,552,2.297,553,2.297,554,2.297,555,3.297,561,2.297,562,2.297,563,2.297,564,2.297,565,3.128,569,2.297,570,2.297,571,2.297,585,1.417,670,1.104,903,1.814,1090,2.297,1290,2.091,1514,1.624,1775,2.091,3035,5.521,3036,2.297,3037,2.297,3039,2.297,3358,2.297,3359,2.61,3360,2.61]],["title/miscellaneous/variables.html",[3173,2.351,3361,4.564]],["body/miscellaneous/variables.html",[6,4.124,7,5.827,8,0.455,27,1.728,30,0.01,32,0.602,50,1.334,54,1.448,55,1.372,61,5.391,62,5.391,72,2.042,87,0.007,88,0.008,89,0.007,173,1.525,345,3.692,364,5.82,600,4.754,641,5.82,644,5.82,645,6.394,646,6.394,647,7.389,648,4.754,649,5.223,650,5.223,651,5.223,652,6.394,653,4.116,654,5.82,655,6.394,656,6.394,657,6.394,658,6.394,659,5.223,660,6.394,3138,4.754,3139,5.82,3140,5.82,3141,5.82,3143,6.394,3173,3.891,3189,5.223,3361,5.223,3362,7.853,3363,7.266,3364,5.935]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0,0",{"_index":1588,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":1310,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":828,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["0.001",{"_index":1328,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{}}}],["0.01",{"_index":1338,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1335,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":671,"title":{},"body":{"injectables/BloomService.html":{},"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.11.4",{"_index":3172,"title":{},"body":{"dependencies.html":{}}}],["0.128.0",{"_index":3167,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2985,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":3029,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":1681,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":176,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":3163,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3106,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3116,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3114,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3095,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":3105,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3115,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3094,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3108,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3129,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3101,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":3113,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3109,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":3099,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":3096,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3117,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3100,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":3098,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3102,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3107,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3112,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3123,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2734,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0000aa",{"_index":1429,"title":{},"body":{"components/FogComponent.html":{}}}],["0xffffff",{"_index":1553,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1",{"_index":643,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["1.0",{"_index":653,"title":{},"body":{"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["1.05",{"_index":1512,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["1.10.2",{"_index":3170,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1813,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.667.0",{"_index":3166,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":1753,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["1/1",{"_index":3132,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":3128,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3104,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1227,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{}}}],["100",{"_index":1318,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":2072,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":2064,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2258,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":1326,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["11.2.13",{"_index":3153,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1775,"title":{},"body":{"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["15",{"_index":985,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["16",{"_index":3103,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1090,"title":{},"body":{"classes/DagreUtils.html":{},"overview.html":{}}}],["180",{"_index":1302,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["2",{"_index":670,"title":{},"body":{"injectables/BloomService.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":1478,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/20",{"_index":3127,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":3126,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1472,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":1806,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":3294,"title":{},"body":{"license.html":{}}}],["25",{"_index":3125,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":903,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["3.11.1",{"_index":3162,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":3119,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1578,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["373",{"_index":1927,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["3d",{"_index":185,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["4",{"_index":1361,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"classes/SVGLoader.html":{}}}],["4/7",{"_index":3111,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3124,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":3118,"title":{},"body":{"coverage.html":{}}}],["444444",{"_index":1599,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["48",{"_index":3359,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1514,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{},"components/TextActorComponent.html":{},"overview.html":{}}}],["50",{"_index":580,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["500",{"_index":1324,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["57",{"_index":3110,"title":{},"body":{"coverage.html":{}}}],["5dade2",{"_index":1735,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["6",{"_index":2570,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["6.6.7",{"_index":3164,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":3122,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1760,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["64",{"_index":1752,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["66",{"_index":3121,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1756,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["8",{"_index":823,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["8.3.2",{"_index":3169,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3360,"title":{},"body":{"overview.html":{}}}],["90",{"_index":2348,"title":{},"body":{"classes/SVGLoader.html":{}}}],["95",{"_index":2040,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_fillrule",{"_index":2654,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_height",{"_index":846,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["_materialcolor",{"_index":2961,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":2803,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":2962,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":1644,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["a0",{"_index":2600,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a0a0a0",{"_index":888,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["a1",{"_index":2601,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a4a4a4",{"_index":914,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["above",{"_index":3326,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:13",{"_index":1619,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":1618,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:20",{"_index":1613,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":1614,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":1615,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":1611,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":1612,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:55",{"_index":1610,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:57",{"_index":1609,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":90,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:18",{"_index":1457,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1459,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1458,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcamera",{"_index":1890,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractcomposeeffect",{"_index":717,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":1661,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["abstractemptydirective",{"_index":841,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["abstractlazyobject3d",{"_index":2959,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":747,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractmodelloader",{"_index":1971,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["abstractobject3d",{"_index":157,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["abstractorbitcontrols",{"_index":1783,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":1868,"title":{},"body":{"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accepted",{"_index":2398,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accepts",{"_index":2765,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accessors",{"_index":862,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":3349,"title":{},"body":{"license.html":{}}}],["actor",{"_index":292,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor'},{'name",{"_index":240,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":421,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":1499,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:105",{"_index":2933,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:114",{"_index":2938,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:119",{"_index":2934,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:18",{"_index":1734,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:19",{"_index":1645,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:20",{"_index":2932,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:21",{"_index":1736,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:22",{"_index":1646,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:23",{"_index":1531,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:24",{"_index":1743,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:25",{"_index":1515,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:26",{"_index":1510,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:27",{"_index":1511,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:28",{"_index":1513,"title":{},"body":{"components/GridActorComponent.html":{},"components/LoaderActorComponent.html":{}}}],["actor.component.ts:29",{"_index":1733,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:30",{"_index":1519,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:31",{"_index":1518,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{}}}],["actor.component.ts:32",{"_index":1516,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:33",{"_index":1517,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["actor.component.ts:34",{"_index":2941,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:35",{"_index":1648,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:36",{"_index":1529,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:37",{"_index":1647,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:38",{"_index":1532,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:39",{"_index":1652,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:40",{"_index":1528,"title":{},"body":{"components/GridActorComponent.html":{},"components/ModelActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:41",{"_index":1653,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:43",{"_index":1651,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:46",{"_index":1737,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:47",{"_index":1650,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:48",{"_index":1526,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:50",{"_index":1738,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:51",{"_index":1649,"title":{},"body":{"components/LayerActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:57",{"_index":1522,"title":{},"body":{"components/GridActorComponent.html":{},"components/TextActorComponent.html":{}}}],["actor.component.ts:70",{"_index":1740,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:80",{"_index":2935,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:81",{"_index":1739,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:84",{"_index":1524,"title":{},"body":{"components/GridActorComponent.html":{}}}],["actor.component.ts:86",{"_index":2940,"title":{},"body":{"components/TextActorComponent.html":{}}}],["actor.component.ts:87",{"_index":1742,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.component.ts:99",{"_index":1741,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["actor.module.ts",{"_index":418,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actorrepository",{"_index":1114,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["actorrepositoryservice",{"_index":111,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actual_component",{"_index":308,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":1833,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["addchild",{"_index":792,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addchild(object",{"_index":794,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["addgroup",{"_index":2165,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1920,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addnode",{"_index":850,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["addpass",{"_index":1369,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1378,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["advanced",{"_index":1861,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["aftercontentinit",{"_index":960,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["afterviewinit",{"_index":958,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["akimenko",{"_index":3296,"title":{},"body":{"license.html":{}}}],["align",{"_index":969,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["allintersections",{"_index":2619,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.push",{"_index":2639,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.sort",{"_index":2644,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allowcoloroverride",{"_index":1621,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allpaths",{"_index":2651,"title":{},"body":{"classes/SVGLoader.html":{}}}],["along",{"_index":766,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["alpha",{"_index":2309,"title":{},"body":{"injectables/RendererService.html":{}}}],["alternating",{"_index":2683,"title":{},"body":{"classes/SVGLoader.html":{}}}],["always",{"_index":2223,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["ambient",{"_index":162,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ambientlightcomponent",{"_index":150,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amiahole",{"_index":2706,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amiahole.ishole",{"_index":2708,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amount",{"_index":2682,"title":{},"body":{"classes/SVGLoader.html":{}}}],["and/or",{"_index":3317,"title":{},"body":{"license.html":{}}}],["ang",{"_index":2522,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angle",{"_index":2553,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angular",{"_index":3204,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":3152,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":391,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3154,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3155,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":3156,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":3159,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":328,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animate'].some(propname",{"_index":2957,"title":{},"body":{"components/TextActorComponent.html":{}}}],["animated",{"_index":318,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{}}}],["animation",{"_index":312,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["animation.module",{"_index":491,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":381,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":383,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1241,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":490,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":339,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":309,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":331,"title":{},"body":{"injectables/AnimationService.html":{}}}],["anonymous",{"_index":3067,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["another",{"_index":2630,"title":{},"body":{"classes/SVGLoader.html":{}}}],["antialias",{"_index":2308,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":2012,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["aperture",{"_index":1331,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1348,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":3265,"title":{},"body":{"index.html":{}}}],["app",{"_index":3206,"title":{},"body":{"index.html":{}}}],["appear",{"_index":2530,"title":{},"body":{"classes/SVGLoader.html":{}}}],["appliedmaterial",{"_index":1744,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(color",{"_index":2841,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["appliedmaterial(materialcolor",{"_index":3193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1748,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["applychanges",{"_index":719,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":723,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applymatrix3",{"_index":2577,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arc",{"_index":2748,"title":{},"body":{"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["arcdivisions",{"_index":2376,"title":{},"body":{"classes/SVGLoader.html":{}}}],["area",{"_index":2229,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":2207,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":3353,"title":{},"body":{"license.html":{}}}],["around",{"_index":2554,"title":{},"body":{"classes/SVGLoader.html":{}}}],["array",{"_index":597,"title":{},"body":{"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["array.length",{"_index":2550,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrays",{"_index":2763,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrow",{"_index":3184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":2060,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":2088,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":1620,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":2983,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["assets/svg/?.svg",{"_index":1629,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":3305,"title":{},"body":{"license.html":{}}}],["association",{"_index":3182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":161,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["atft.module",{"_index":422,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":369,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":384,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":394,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":401,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":408,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":427,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":441,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":449,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":457,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":464,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":414,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":474,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":485,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":475,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":476,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":477,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":509,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":809,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["authors",{"_index":3342,"title":{},"body":{"license.html":{}}}],["auto",{"_index":306,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":3276,"title":{},"body":{"index.html":{}}}],["autoplay",{"_index":3046,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["autorotate",{"_index":1788,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1789,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":347,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["ax",{"_index":2605,"title":{},"body":{"classes/SVGLoader.html":{}}}],["axes",{"_index":198,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":197,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":761,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["b0",{"_index":2596,"title":{},"body":{"classes/SVGLoader.html":{}}}],["b1",{"_index":2597,"title":{},"body":{"classes/SVGLoader.html":{}}}],["background",{"_index":2854,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2864,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":275,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":3248,"title":{},"body":{"index.html":{}}}],["baseinfo",{"_index":586,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1087,"title":{},"body":{"classes/DagreUtils.html":{}}}],["baseintersections",{"_index":2662,"title":{},"body":{"classes/SVGLoader.html":{}}}],["baseintersections.push",{"_index":2667,"title":{},"body":{"classes/SVGLoader.html":{}}}],["basetexture",{"_index":657,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":1749,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["beginning",{"_index":2471,"title":{},"body":{"classes/SVGLoader.html":{}}}],["behaviour",{"_index":2252,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":3213,"title":{},"body":{"index.html":{}}}],["bevel",{"_index":2724,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bevelenabled",{"_index":2965,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":2966,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":2967,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":2968,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":2969,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bignumber",{"_index":2689,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bindings",{"_index":3220,"title":{},"body":{"index.html":{}}}],["black",{"_index":626,"title":{},"body":{"injectables/BloomService.html":{},"components/ObjectLoaderComponent.html":{}}}],["bloom",{"_index":2297,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":560,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["bloom_scene_layer",{"_index":642,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":601,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2324,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":602,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":666,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":672,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":555,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":658,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":718,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":201,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["blurcomponent",{"_index":200,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":3243,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1341,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1354,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":727,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":592,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["bounding",{"_index":2621,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox",{"_index":2617,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox.getcenter",{"_index":2618,"title":{},"body":{"classes/SVGLoader.html":{}}}],["box",{"_index":203,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["box2",{"_index":2384,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boxmeshcomponent",{"_index":202,"title":{"components/BoxMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":2423,"title":{},"body":{"classes/SVGLoader.html":{}}}],["browse",{"_index":3357,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3157,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":987,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["buffergeometry",{"_index":2385,"title":{},"body":{"classes/SVGLoader.html":{}}}],["buffers",{"_index":2764,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bug",{"_index":2039,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":2671,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["bump",{"_index":3278,"title":{},"body":{"index.html":{}}}],["butt",{"_index":2727,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bx",{"_index":2606,"title":{},"body":{"classes/SVGLoader.html":{}}}],["c",{"_index":3293,"title":{},"body":{"license.html":{}}}],["cache",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1460,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:18",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":1586,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":2262,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":2272,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":3135,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":3197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":325,"title":{},"body":{"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["camera",{"_index":615,"title":{},"body":{"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["camera'},{'name",{"_index":263,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":392,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":2050,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":2055,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":2084,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":2083,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:22",{"_index":2056,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:24",{"_index":2085,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:35",{"_index":2086,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:36",{"_index":2057,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":2061,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.component.ts:56",{"_index":2059,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":549,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":2114,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":2116,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":2115,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":480,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":389,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1891,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":479,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":299,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["can't",{"_index":2626,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cant",{"_index":1280,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":2196,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":272,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":2312,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2330,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":558,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":2199,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":2197,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":2195,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":2214,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":2206,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":2210,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":2216,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":2234,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:48",{"_index":2209,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:52",{"_index":2211,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2329,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2328,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2327,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2321,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":2200,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":497,"title":{},"body":{"modules/AtftModule.html":{},"classes/SVGLoader.html":{}}}],["cast",{"_index":2010,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":1305,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["catch",{"_index":1154,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["cdref",{"_index":864,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["center",{"_index":417,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["center.ts",{"_index":3137,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":415,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":1498,"title":{},"body":{"components/GridActorComponent.html":{},"coverage.html":{}}}],["center/layer/layer",{"_index":1642,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/layout/dagre",{"_index":587,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["center/server/model",{"_index":1867,"title":{},"body":{"components/ModelActorComponent.html":{},"coverage.html":{}}}],["center/server/server",{"_index":2866,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":3087,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["center/service/actor",{"_index":113,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centerboundingbox",{"_index":2656,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centerboundingbox.y",{"_index":2658,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centered",{"_index":970,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":344,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changedetectorref",{"_index":865,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["changelog",{"_index":3269,"title":{},"body":{"index.html":{}}}],["changes",{"_index":726,"title":{},"body":{"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["changes['rotatespeed",{"_index":1827,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1830,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":3300,"title":{},"body":{"license.html":{}}}],["check",{"_index":2593,"title":{},"body":{"classes/SVGLoader.html":{}}}],["child",{"_index":807,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1259,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["children",{"_index":920,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["childs",{"_index":2121,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2434,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["claim",{"_index":3345,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["classifyresult.loc",{"_index":2603,"title":{},"body":{"classes/SVGLoader.html":{}}}],["click",{"_index":2128,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clock",{"_index":1664,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["clone",{"_index":3251,"title":{},"body":{"index.html":{}}}],["closed",{"_index":2739,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closeparpos",{"_index":2548,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closer",{"_index":2751,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cloud",{"_index":1635,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":375,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":376,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":385,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":386,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":387,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":395,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":396,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":397,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":402,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":403,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":404,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":409,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":410,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":412,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":411,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":413,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":428,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":429,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":430,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":442,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":443,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":444,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":450,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":452,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":451,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":453,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":458,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":459,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":460,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":465,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":466,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":467,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":471,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":473,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":472,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":504,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":505,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":507,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":506,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":508,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":531,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":532,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":533,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":540,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":541,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":542,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":543,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":551,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":552,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":553,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":554,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":561,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":562,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":563,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":564,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":569,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":570,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":571,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":3036,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":3037,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":3039,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":3038,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2401,"title":{},"body":{"classes/SVGLoader.html":{}}}],["colinear",{"_index":2592,"title":{},"body":{"classes/SVGLoader.html":{}}}],["color",{"_index":167,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"interfaces/Node.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":3280,"title":{},"body":{"index.html":{}}}],["command",{"_index":2474,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands",{"_index":2464,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands.length",{"_index":2470,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commits",{"_index":3272,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":390,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":147,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":276,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["component",{"_index":128,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["componentfactory",{"_index":126,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":120,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":733,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["compose/blur.component",{"_index":440,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":435,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":436,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":438,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":721,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":231,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composer.component",{"_index":439,"title":{},"body":{"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1368,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1376,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1377,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1375,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1383,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1384,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1382,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:55",{"_index":1380,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:61",{"_index":1386,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:75",{"_index":1387,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:81",{"_index":1381,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":2125,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":589,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":212,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["composition.border",{"_index":1211,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component",{"_index":1131,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.component.ts",{"_index":840,"title":{},"body":{"components/DagreCompositionComponent.html":{},"coverage.html":{}}}],["composition.component.ts:119",{"_index":876,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:125",{"_index":881,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:143",{"_index":885,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:161",{"_index":882,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:34",{"_index":870,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:36",{"_index":867,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:38",{"_index":887,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:40",{"_index":869,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:48",{"_index":894,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:52",{"_index":871,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:53",{"_index":873,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:54",{"_index":874,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:55",{"_index":872,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:57",{"_index":868,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:59",{"_index":889,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:60",{"_index":892,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:61",{"_index":890,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:62",{"_index":866,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:81",{"_index":880,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:85",{"_index":879,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:89",{"_index":878,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:93",{"_index":877,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.component.ts:99",{"_index":875,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["composition.composition",{"_index":1209,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.label",{"_index":1207,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["composition.name",{"_index":1205,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref",{"_index":1203,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.border",{"_index":1210,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.composition",{"_index":1208,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.label",{"_index":1206,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositionref.instance.name",{"_index":1204,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["compositions",{"_index":596,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1079,"title":{},"body":{"classes/DagreUtils.html":{}}}],["compute",{"_index":2503,"title":{},"body":{"classes/SVGLoader.html":{}}}],["conditions",{"_index":3325,"title":{},"body":{"license.html":{}}}],["config",{"_index":3258,"title":{},"body":{"index.html":{}}}],["connection",{"_index":3354,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1663,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector'},{'name",{"_index":249,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":400,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":1660,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.component.ts:107",{"_index":1694,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:114",{"_index":1689,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:127",{"_index":1693,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:25",{"_index":1686,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:26",{"_index":1688,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:27",{"_index":1685,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:28",{"_index":1680,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:29",{"_index":1682,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:30",{"_index":1687,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":1684,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:33",{"_index":1679,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:34",{"_index":1696,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:35",{"_index":1701,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":1702,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:37",{"_index":1698,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:39",{"_index":1699,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":1678,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:50",{"_index":1690,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:85",{"_index":1695,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:92",{"_index":1692,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.module",{"_index":518,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":399,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":517,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":2122,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console",{"_index":3139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":2415,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.error('contentprojectioncomponent",{"_index":805,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.log",{"_index":2448,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":2098,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":144,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":1918,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":357,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":354,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":583,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":661,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":775,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1345,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('changed",{"_index":1723,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":832,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":833,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dagrecompositioncomponent.addnode",{"_index":918,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.layout",{"_index":945,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.removenode",{"_index":931,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.syncgraphnodes",{"_index":940,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrecompositioncomponent.update",{"_index":954,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.log('dagrelayoutcomponent.layout",{"_index":1013,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('dagrelayoutcomponent.ngonchanges",{"_index":1032,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrelayoutcomponent.syncgraphcontainer",{"_index":1027,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["console.log('dagrenodecomponent.addnode",{"_index":1057,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.removenode",{"_index":1058,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraph",{"_index":1060,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagrenodecomponent.syncgraphnodes",{"_index":1059,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1085,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('dagreyamlparsercomponent",{"_index":1197,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createcomposition",{"_index":1201,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createedge",{"_index":1182,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.createnode",{"_index":1161,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.destroyall",{"_index":1195,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.ngonchanges",{"_index":1139,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('dagreyamlparsercomponent.parseandcreate",{"_index":1141,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.log('darkennonbloomed",{"_index":711,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1247,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1273,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('deselected",{"_index":1567,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('disablefog",{"_index":1452,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1389,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1408,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1396,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1390,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1392,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1410,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1447,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('finding",{"_index":1540,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('fogcomponent",{"_index":1444,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1438,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1461,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('framemeshcomponent.ngonchanges",{"_index":1489,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["console.log('gridactorcomponent.onmouseclick",{"_index":1537,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1573,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1638,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1276,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('lineposition",{"_index":1566,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('loaderactorcomponent.animate",{"_index":1766,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.done",{"_index":1779,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.init",{"_index":1750,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngafterviewinit",{"_index":1746,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.ngondestroy",{"_index":1771,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updateanimation",{"_index":1772,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('loaderactorcomponent.updatetext",{"_index":1765,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["console.log('looking",{"_index":1557,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('ngafterviewinit",{"_index":1439,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('node",{"_index":942,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":2037,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":2029,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":2147,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":2062,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":2070,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":2087,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":2092,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":2145,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1921,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2302,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2248,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2236,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2306,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2239,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('selected",{"_index":1533,"title":{},"body":{"components/GridActorComponent.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":2877,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('stlloadercomponent.loadlazyobject",{"_index":2913,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["console.log('svgloadercomponent.icon",{"_index":2829,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloadercomponent.loadlazyobject",{"_index":2837,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2919,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('textactorcomponent.animate",{"_index":2947,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngafterviewinit",{"_index":2942,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.ngondestroy",{"_index":2954,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updateanimation",{"_index":2956,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textactorcomponent.updatetext",{"_index":2944,"title":{},"body":{"components/TextActorComponent.html":{}}}],["console.log('textmeshcomponent.gettextmesh",{"_index":3012,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":3009,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('textmeshcomponent.set",{"_index":3006,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1908,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('videomeshcomponent.initvideo",{"_index":3059,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["console.log(event",{"_index":1944,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1282,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn",{"_index":2444,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.warn('bloomservice.init",{"_index":702,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('dagrecompositioncomponent.constructor",{"_index":908,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["console.warn('dagrenodecomponent.constructor",{"_index":1056,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["console.warn('dagreyamlparsercomponent.parseandcreate",{"_index":1156,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(host",{"_index":1222,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(manager",{"_index":2345,"title":{},"body":{"classes/SVGLoader.html":{}}}],["constructor(raycasterservice",{"_index":2151,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":169,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["constructor(resolver",{"_index":119,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2270,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["container",{"_index":1039,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["content",{"_index":206,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["contentprojection",{"_index":791,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":205,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["continue",{"_index":2545,"title":{},"body":{"classes/SVGLoader.html":{}}}],["contract",{"_index":3350,"title":{},"body":{"license.html":{}}}],["control",{"_index":2227,"title":{},"body":{"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["control.module",{"_index":484,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":406,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":483,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":1784,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":253,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":407,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1786,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1782,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:101",{"_index":1820,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":2047,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":2046,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:17",{"_index":1815,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1817,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1802,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1803,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1805,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1804,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1816,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1811,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1807,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1808,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1814,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1812,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1810,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:31",{"_index":1801,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":2048,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":1818,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:56",{"_index":1821,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:96",{"_index":1819,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["conventional",{"_index":3271,"title":{},"body":{"index.html":{}}}],["converts",{"_index":1296,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":1541,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["copies",{"_index":3319,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3303,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3292,"title":{},"body":{"license.html":{}}}],["core",{"_index":3160,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":2772,"title":{},"body":{"classes/SVGLoader.html":{}}}],["counting",{"_index":2681,"title":{},"body":{"classes/SVGLoader.html":{}}}],["coverage",{"_index":3091,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":2484,"title":{},"body":{"classes/SVGLoader.html":{}}}],["create",{"_index":922,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":2052,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["createcomposition",{"_index":1107,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createcomposition(composition",{"_index":1118,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge",{"_index":1108,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createedge(edge",{"_index":1120,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createlinemesh",{"_index":1668,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["createnode",{"_index":1109,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["createnode(node",{"_index":1122,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["creates",{"_index":3195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createshapes",{"_index":2340,"title":{},"body":{"classes/SVGLoader.html":{}}}],["createshapes(shapepath",{"_index":2352,"title":{},"body":{"classes/SVGLoader.html":{}}}],["creation",{"_index":343,"title":{},"body":{"injectables/AnimationService.html":{}}}],["cross",{"_index":2685,"title":{},"body":{"classes/SVGLoader.html":{}}}],["css",{"_index":2253,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["current",{"_index":2628,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentdelay",{"_index":2923,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currentgeometry",{"_index":1493,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currentgeometry.attributes",{"_index":1496,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["currently",{"_index":2219,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentpointl",{"_index":2788,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpointr",{"_index":2789,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpos",{"_index":2924,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttext",{"_index":2925,"title":{},"body":{"components/TextActorComponent.html":{}}}],["currenttransform",{"_index":2452,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.copy",{"_index":2456,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.identity",{"_index":2459,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.multiplymatrices",{"_index":2560,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.scale",{"_index":2564,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.set",{"_index":2566,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.translate",{"_index":2551,"title":{},"body":{"classes/SVGLoader.html":{}}}],["curvesegments",{"_index":2970,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cx",{"_index":2504,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cxp",{"_index":2499,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cy",{"_index":2505,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cylinder",{"_index":209,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":208,"title":{"components/CylinderMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cyp",{"_index":2501,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d",{"_index":1584,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["d.match",{"_index":2465,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dadada",{"_index":2994,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["dagre",{"_index":211,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dagre.graphlabel",{"_index":595,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":884,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1086,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":210,"title":{"components/DagreCompositionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":213,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayout",{"_index":847,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["dagrelayoutcomponent",{"_index":215,"title":{"components/DagreLayoutComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":217,"title":{"components/DagreNodeComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1006,"title":{"classes/DagreUtils.html":{}},"body":{"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreutils.modeltograph(this.graphmodel",{"_index":1024,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["dagreyamlparsercomponent",{"_index":219,"title":{"components/DagreYamlParserComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":3346,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1790,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":608,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":610,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":603,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1244,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1217,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":295,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":294,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1218,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashoffset",{"_index":1720,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["dashsize",{"_index":1671,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["data",{"_index":416,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["deal",{"_index":3306,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3355,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":799,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["def",{"_index":1713,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultdpi",{"_index":2337,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defaultid",{"_index":115,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaults",{"_index":762,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["defaultunit",{"_index":2338,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["defines",{"_index":692,"title":{},"body":{"injectables/BloomService.html":{}}}],["defs",{"_index":2339,"title":{},"body":{"classes/SVGLoader.html":{}}}],["deg2rad",{"_index":1292,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":538,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":534,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1301,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1297,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":715,"title":{},"body":{"injectables/BloomService.html":{}}}],["delta",{"_index":2515,"title":{},"body":{"classes/SVGLoader.html":{}}}],["demo",{"_index":3215,"title":{},"body":{"index.html":{}}}],["denom",{"_index":2591,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":3233,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":1996,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":750,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":751,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthwrite",{"_index":2804,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":311,"title":{},"body":{"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":860,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["destroy",{"_index":1198,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["destroyall",{"_index":1110,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["details",{"_index":3267,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1445,"title":{},"body":{"components/FogComponent.html":{}}}],["develop",{"_index":3228,"title":{},"body":{"index.html":{}}}],["development",{"_index":3249,"title":{},"body":{"index.html":{}}}],["df",{"_index":2466,"title":{},"body":{"classes/SVGLoader.html":{}}}],["directional",{"_index":223,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":222,"title":{"components/DirectionalLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":193,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1242,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":293,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["disable",{"_index":738,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["disablefog",{"_index":1424,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1865,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1957,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["distribute",{"_index":3315,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1570,"title":{},"body":{"components/GridHelperComponent.html":{},"classes/SVGLoader.html":{}}}],["dl",{"_index":979,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2894,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2902,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('source",{"_index":3060,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":3056,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["documentation",{"_index":3092,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dof",{"_index":1330,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":225,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dofcomponent",{"_index":224,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":152,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["don't",{"_index":2588,"title":{},"body":{"classes/SVGLoader.html":{}}}],["done",{"_index":2927,"title":{},"body":{"components/TextActorComponent.html":{}}}],["dosetfirstpoint",{"_index":2462,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dot",{"_index":227,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dots",{"_index":2394,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dotscreencomponent",{"_index":226,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1364,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["dq",{"_index":2491,"title":{},"body":{"classes/SVGLoader.html":{}}}],["draw",{"_index":1215,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":433,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1214,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":1226,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":1228,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1230,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1231,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1229,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:16",{"_index":1236,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1238,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1239,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1223,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:27",{"_index":1233,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:36",{"_index":1235,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:67",{"_index":1232,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:92",{"_index":1234,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":296,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["duplicated",{"_index":2795,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dynamic",{"_index":3158,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1155,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["e.g",{"_index":3226,"title":{},"body":{"index.html":{}}}],["edge",{"_index":593,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":214,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["edge.color",{"_index":1192,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component",{"_index":1132,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.component.ts",{"_index":3097,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.from",{"_index":1188,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge.name",{"_index":1097,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1096,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["edge.type",{"_index":1190,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edge1",{"_index":2599,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edge2",{"_index":2595,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edgeref",{"_index":1185,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.from",{"_index":1187,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.materialcolor",{"_index":1193,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.to",{"_index":1189,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edgeref.instance.type",{"_index":1191,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["edges",{"_index":599,"title":{},"body":{"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["edgesep",{"_index":971,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["edgesgeom",{"_index":1261,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":3175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":230,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["effect.module",{"_index":496,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":432,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect/atft",{"_index":495,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":621,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":681,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1397,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":229,"title":{"components/EffectComposerComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":2212,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["elements/vertex",{"_index":2769,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ellipse",{"_index":2436,"title":{},"body":{"classes/SVGLoader.html":{}}}],["embedded",{"_index":806,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":2120,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["emits",{"_index":314,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":363,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":366,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":1967,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":1009,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/EmptyComponent.html":{},"components/VideoMeshComponent.html":{}}}],["empty'},{'name",{"_index":233,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":448,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":232,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:21",{"_index":797,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["enable",{"_index":1912,"title":{},"body":{"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":550,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":2150,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":2153,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":2152,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":301,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enabled",{"_index":330,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1791,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":1425,"title":{},"body":{"components/FogComponent.html":{}}}],["end",{"_index":1246,"title":{},"body":{"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["end.x",{"_index":2510,"title":{},"body":{"classes/SVGLoader.html":{}}}],["end.y",{"_index":2512,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endcaps",{"_index":2750,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endpoints",{"_index":2594,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ensure",{"_index":2794,"title":{},"body":{"classes/SVGLoader.html":{}}}],["entire",{"_index":3239,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":641,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":419,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["enum",{"_index":1707,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["enumerations",{"_index":3174,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop",{"_index":2627,"title":{},"body":{"classes/SVGLoader.html":{}}}],["enveloping",{"_index":2633,"title":{},"body":{"classes/SVGLoader.html":{}}}],["envelops",{"_index":2629,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equally",{"_index":2483,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equals",{"_index":2740,"title":{},"body":{"classes/SVGLoader.html":{}}}],["error",{"_index":498,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["error.ts",{"_index":3141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":737,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["eslint/no",{"_index":741,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["etc",{"_index":346,"title":{},"body":{"injectables/AnimationService.html":{}}}],["evenodd",{"_index":2677,"title":{},"body":{"classes/SVGLoader.html":{}}}],["event",{"_index":316,"title":{},"body":{"injectables/AnimationService.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"license.html":{}}}],["event.altkey",{"_index":2895,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1539,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.face.a",{"_index":1560,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.b",{"_index":1562,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.face.c",{"_index":1564,"title":{},"body":{"components/GridActorComponent.html":{}}}],["event.key",{"_index":2896,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1931,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1929,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1946,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":3180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":340,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["events",{"_index":933,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":2225,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["examples",{"_index":3225,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":2733,"title":{},"body":{"classes/SVGLoader.html":{}}}],["executes",{"_index":3076,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["execution",{"_index":348,"title":{},"body":{"injectables/AnimationService.html":{}}}],["existent",{"_index":2447,"title":{},"body":{"classes/SVGLoader.html":{}}}],["existing",{"_index":2762,"title":{},"body":{"classes/SVGLoader.html":{}}}],["explore",{"_index":3210,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":501,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":374,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["express",{"_index":3333,"title":{},"body":{"license.html":{}}}],["extends",{"_index":156,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["face",{"_index":1542,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["faces",{"_index":765,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["factory",{"_index":1183,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["fail",{"_index":3140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":1157,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["false",{"_index":351,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreLayoutComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["far",{"_index":1426,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1454,"title":{},"body":{"components/FogComponent.html":{}}}],["feel",{"_index":3284,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":1225,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ffffff",{"_index":174,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["fileloader",{"_index":2386,"title":{},"body":{"classes/SVGLoader.html":{}}}],["files",{"_index":1970,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":1994,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":2017,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["finalcomposer",{"_index":604,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":687,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":693,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1281,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["findmesh",{"_index":1257,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1279,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1272,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["first",{"_index":2741,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstpoint",{"_index":2460,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstxofpath",{"_index":2669,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fit",{"_index":3238,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":3149,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":3338,"title":{},"body":{"license.html":{}}}],["fix",{"_index":502,"title":{},"body":{"modules/AtftModule.html":{}}}],["fixcenter",{"_index":2822,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2850,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":3022,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["flex",{"_index":1866,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32array(4",{"_index":1550,"title":{},"body":{"components/GridActorComponent.html":{}}}],["float32bufferattribute",{"_index":2387,"title":{},"body":{"classes/SVGLoader.html":{}}}],["floating",{"_index":2525,"title":{},"body":{"classes/SVGLoader.html":{}}}],["focus",{"_index":1332,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1344,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1423,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":235,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fog.component",{"_index":434,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":234,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":3270,"title":{},"body":{"index.html":{}}}],["following",{"_index":3324,"title":{},"body":{"license.html":{}}}],["font",{"_index":2973,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontcache",{"_index":2963,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fontservice",{"_index":510,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fonturl",{"_index":2971,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fork/svgloader",{"_index":2918,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2336,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["fork/svgloader.ts:1676",{"_index":2353,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2113",{"_index":2359,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2138",{"_index":2377,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2167",{"_index":2383,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:24",{"_index":2349,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:25",{"_index":2351,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:26",{"_index":2346,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:40",{"_index":2369,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:74",{"_index":2371,"title":{},"body":{"classes/SVGLoader.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["fov",{"_index":2082,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":654,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":237,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["framemeshcomponent",{"_index":236,"title":{"components/FrameMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":3285,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":2071,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":1134,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["functions",{"_index":3185,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":3322,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":673,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":677,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":679,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":639,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":886,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}}}],["g.graph().height",{"_index":1030,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.graph().width",{"_index":1029,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["g.node(name",{"_index":944,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.nodes().foreach((name",{"_index":941,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1083,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1095,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph",{"_index":1081,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1088,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1092,"title":{},"body":{"classes/DagreUtils.html":{}}}],["gapsize",{"_index":1672,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["general",{"_index":1587,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["generate",{"_index":3277,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2754,"title":{},"body":{"classes/SVGLoader.html":{}}}],["generates",{"_index":2735,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geo",{"_index":1543,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geo.attributes.position",{"_index":1546,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry",{"_index":776,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["geometry.setattribute",{"_index":2760,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geometry.setattribute('position",{"_index":1548,"title":{},"body":{"components/GridActorComponent.html":{}}}],["geometry.setpositions(positions",{"_index":1709,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getcamera",{"_index":2263,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":2233,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getcomponentfactory",{"_index":117,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":123,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1370,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":2166,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1952,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getgeometry",{"_index":1468,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["getgraph",{"_index":962,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getgraphmodel",{"_index":963,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["getheight",{"_index":893,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["geticon",{"_index":2819,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["getintersections",{"_index":2635,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getisenabled",{"_index":2192,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1064,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1069,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlineposition",{"_index":1502,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getlineposition(event",{"_index":1520,"title":{},"body":{"components/GridActorComponent.html":{}}}],["getmaterial",{"_index":1732,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["getmaterialcolor",{"_index":2996,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmodel",{"_index":1871,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["getnodecomponent",{"_index":1111,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodecomponent(id",{"_index":1125,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["getnodetransform",{"_index":2419,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getpositions",{"_index":1669,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["getrenderpane",{"_index":2215,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscanlineintersections",{"_index":2615,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getscene",{"_index":2264,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getstrokestyle",{"_index":2341,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getstrokestyle(width",{"_index":2355,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gettext",{"_index":2998,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh",{"_index":2964,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["gettextmesh(font",{"_index":2990,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":3202,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2265,"title":{},"body":{"injectables/RendererService.html":{}}}],["getwidth",{"_index":1654,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":3250,"title":{},"body":{"index.html":{}}}],["given",{"_index":2737,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gl_fragcolor",{"_index":659,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":649,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["goals",{"_index":3217,"title":{},"body":{"index.html":{}}}],["granted",{"_index":3299,"title":{},"body":{"license.html":{}}}],["graph",{"_index":923,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["graphmodel",{"_index":594,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["graphupdated",{"_index":848,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["grid",{"_index":239,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridactorcomponent",{"_index":238,"title":{"components/GridActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridclick",{"_index":1508,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridenter",{"_index":1509,"title":{},"body":{"components/GridActorComponent.html":{}}}],["gridhelpercomponent",{"_index":241,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":242,"title":{"components/GridMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1596,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1923,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["group.add(mesh",{"_index":2845,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["group.directive",{"_index":547,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":2118,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":2156,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":2157,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":2155,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":2158,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":2163,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":2164,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":2162,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":2161,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":2160,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":2159,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1922,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":303,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1894,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["guidelines",{"_index":3275,"title":{},"body":{"index.html":{}}}],["h",{"_index":2712,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.for",{"_index":2714,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.identifier",{"_index":2716,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.ishole",{"_index":2713,"title":{},"body":{"classes/SVGLoader.html":{}}}],["halfx",{"_index":1476,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":1479,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["height",{"_index":752,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["height(height",{"_index":900,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["heightsegments",{"_index":753,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["heightsegments'].some(propname",{"_index":2099,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":577,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":199,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":447,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":575,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":579,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1571,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":581,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:24",{"_index":1572,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":520,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":446,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":519,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":802,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":3223,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":244,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":243,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":3298,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1243,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1219,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hierarchy",{"_index":2672,"title":{},"body":{"classes/SVGLoader.html":{}}}],["hightsegments",{"_index":2873,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":3343,"title":{},"body":{"license.html":{}}}],["hole",{"_index":2680,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes",{"_index":2710,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes.foreach",{"_index":2715,"title":{},"body":{"classes/SVGLoader.html":{}}}],["horizontalblurshader",{"_index":731,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":3240,"title":{},"body":{"index.html":{}}}],["host",{"_index":1224,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2235,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":2246,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":2203,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2244,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":1995,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1063,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":3252,"title":{},"body":{"index.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":1885,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/angular",{"_index":3089,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1637,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1631,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1634,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1625,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["i.destroy",{"_index":1199,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["i.e",{"_index":2228,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1937,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.identifier",{"_index":2665,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.name",{"_index":939,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["i.object",{"_index":1933,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1940,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.t",{"_index":2607,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.trim",{"_index":2479,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1",{"_index":2645,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1.point.x",{"_index":2647,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2",{"_index":2646,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2.point.x",{"_index":2648,"title":{},"body":{"classes/SVGLoader.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["icon(icon",{"_index":2828,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["iconprovider",{"_index":1874,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["iconprovider.allowcoloroverride",{"_index":2835,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.isccw",{"_index":2832,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.noholes",{"_index":2834,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["iconprovider.url",{"_index":1877,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["icons/?.svg",{"_index":1632,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1627,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1626,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":511,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1606,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":125,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{},"classes/SVGLoader.html":{}}}],["ideas",{"_index":3287,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2640,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["ignorepaused",{"_index":1948,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":744,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":2221,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":842,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["implied",{"_index":3334,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":393,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2396,"title":{},"body":{"classes/SVGLoader.html":{}}}],["included",{"_index":2006,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":3309,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":503,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1809,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":3264,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":796,"title":{},"body":{"components/ContentProjectionComponent.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LoaderActorComponent.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{},"components/TextActorComponent.html":{}}}],["init(renderer",{"_index":612,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1371,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initialize",{"_index":1008,"title":{},"body":{"components/DagreLayoutComponent.html":{},"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2277,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":605,"title":{},"body":{"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1220,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":720,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["injector",{"_index":863,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["innerpoint",{"_index":2792,"title":{},"body":{"classes/SVGLoader.html":{}}}],["input",{"_index":178,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["inputs",{"_index":166,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["inside",{"_index":2632,"title":{},"body":{"classes/SVGLoader.html":{}}}],["install",{"_index":3232,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1258,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["instances",{"_index":1106,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["instead",{"_index":2044,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrated",{"_index":3224,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":168,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":585,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersect",{"_index":2589,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection",{"_index":2610,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.t",{"_index":2608,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.x",{"_index":2612,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.y",{"_index":2613,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection[0",{"_index":1963,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1962,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersectionlocationtype.right",{"_index":2604,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections",{"_index":2614,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.foreach",{"_index":2637,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.push",{"_index":2611,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersectionsraw.push",{"_index":2609,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole",{"_index":2701,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole.filter",{"_index":2711,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isccw",{"_index":1622,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["iscw",{"_index":2642,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isenabled",{"_index":1916,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isfirstpoint",{"_index":2461,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ishole",{"_index":2678,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholefor",{"_index":2679,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholeto",{"_index":2649,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isolation",{"_index":3212,"title":{},"body":{"index.html":{}}}],["isready",{"_index":2167,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1947,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isrotated",{"_index":2581,"title":{},"body":{"classes/SVGLoader.html":{}}}],["istransformrotated",{"_index":2582,"title":{},"body":{"classes/SVGLoader.html":{}}}],["it's",{"_index":349,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":1505,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":1506,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["j",{"_index":2480,"title":{},"body":{"classes/SVGLoader.html":{}}}],["jetbrains",{"_index":3283,"title":{},"body":{"index.html":{}}}],["join",{"_index":2729,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["joins",{"_index":2749,"title":{},"body":{"classes/SVGLoader.html":{}}}],["js",{"_index":3161,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(g.node(name",{"_index":943,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["k",{"_index":1960,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["kind",{"_index":3332,"title":{},"body":{"license.html":{}}}],["l",{"_index":2469,"title":{},"body":{"classes/SVGLoader.html":{}}}],["label",{"_index":590,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/LayerActorComponent.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["large_arc_flag",{"_index":2497,"title":{},"body":{"classes/SVGLoader.html":{}}}],["last",{"_index":2042,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"classes/SVGLoader.html":{}}}],["lastcwvalue",{"_index":2686,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointl",{"_index":2784,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointr",{"_index":2785,"title":{},"body":{"classes/SVGLoader.html":{}}}],["later",{"_index":2089,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":246,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/grid",{"_index":425,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":420,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":245,"title":{"components/LayerActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":426,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":216,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layout.component",{"_index":897,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["layout.component.ts",{"_index":957,"title":{},"body":{"components/DagreLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:100",{"_index":1000,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:120",{"_index":1001,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:126",{"_index":995,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:130",{"_index":1002,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:136",{"_index":994,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:30",{"_index":980,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:31",{"_index":988,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:32",{"_index":986,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:33",{"_index":982,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:34",{"_index":992,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:35",{"_index":983,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:36",{"_index":984,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:37",{"_index":991,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:39",{"_index":981,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:41",{"_index":993,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:43",{"_index":1005,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:44",{"_index":978,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:60",{"_index":998,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:65",{"_index":997,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:70",{"_index":996,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["layout.component.ts:90",{"_index":1004,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["lazy",{"_index":3002,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["left",{"_index":2757,"title":{},"body":{"classes/SVGLoader.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["len",{"_index":2521,"title":{},"body":{"classes/SVGLoader.html":{}}}],["length",{"_index":758,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["leverage",{"_index":3205,"title":{},"body":{"index.html":{}}}],["liability",{"_index":3347,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3344,"title":{},"body":{"license.html":{}}}],["library",{"_index":3219,"title":{},"body":{"index.html":{}}}],["license",{"_index":3290,"title":{"license.html":{}},"body":{"license.html":{}}}],["lies",{"_index":2598,"title":{},"body":{"classes/SVGLoader.html":{}}}],["light",{"_index":163,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light'},{'name",{"_index":196,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":1315,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":456,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":155,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":175,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":172,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":1598,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":1308,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":1307,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:24",{"_index":177,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.component.ts:25",{"_index":1600,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["light.component.ts:26",{"_index":2103,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.component.ts:27",{"_index":1309,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.intensity",{"_index":188,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":522,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":455,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":1327,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":1319,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":1323,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":1320,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":1322,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":1321,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":1317,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":2107,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":1325,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":2106,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":2108,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":1312,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":521,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":3222,"title":{},"body":{"index.html":{}}}],["limit",{"_index":2624,"title":{},"body":{"classes/SVGLoader.html":{}}}],["limitation",{"_index":3310,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3335,"title":{},"body":{"license.html":{}}}],["line",{"_index":248,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["line.geometry.attributes.position",{"_index":1556,"title":{},"body":{"components/GridActorComponent.html":{}}}],["line2",{"_index":1691,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linecap",{"_index":2357,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lineconnectorcomponent",{"_index":247,"title":{"components/LineConnectorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1270,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":3177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linegeometry",{"_index":1704,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linejoin",{"_index":2356,"title":{},"body":{"classes/SVGLoader.html":{}}}],["linematerial",{"_index":1700,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["lineposition",{"_index":1555,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(0",{"_index":1559,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(1",{"_index":1561,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(2",{"_index":1563,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lineposition.copyat(3",{"_index":1565,"title":{},"body":{"components/GridActorComponent.html":{}}}],["lines",{"_index":1245,"title":{},"body":{"directives/DashedDrawDirective.html":{},"classes/SVGLoader.html":{}}}],["linetype",{"_index":1673,"title":{},"body":{"components/LineConnectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linetype.dashed",{"_index":1683,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["linewidth",{"_index":1674,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["list",{"_index":116,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listened",{"_index":2230,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(url",{"_index":2365,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loaded",{"_index":1985,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":251,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader'},{'name",{"_index":256,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":463,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":1966,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:15",{"_index":2035,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:16",{"_index":2911,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:18",{"_index":2814,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":2908,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:21",{"_index":1988,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":2818,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1979,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:25",{"_index":2907,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:30",{"_index":2809,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:31",{"_index":1986,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:34",{"_index":2909,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["loader.component.ts:39",{"_index":1978,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:41",{"_index":2820,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":2816,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:48",{"_index":2811,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:49",{"_index":1987,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:51",{"_index":2808,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:54",{"_index":2812,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:57",{"_index":2813,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:60",{"_index":2807,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":2810,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:66",{"_index":2806,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:77",{"_index":2815,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load",{"_index":2413,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.load(key",{"_index":1464,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":524,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":462,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service",{"_index":1993,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.service.ts",{"_index":2021,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":2916,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["loader.service.ts:11",{"_index":2027,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:13",{"_index":2023,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:22",{"_index":2026,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.setpath",{"_index":2407,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setrequestheader",{"_index":2409,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setwithcredentials",{"_index":2411,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader/atft",{"_index":523,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader/services/font.service",{"_index":3003,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loaderactorcomponent",{"_index":250,"title":{"components/LoaderActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadlazyobject",{"_index":1974,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":3257,"title":{},"body":{"index.html":{}}}],["logic",{"_index":319,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":337,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/VideoMeshComponent.html":{}}}],["m",{"_index":2571,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ma",{"_index":2392,"title":{},"body":{"classes/SVGLoader.html":{}}}],["main",{"_index":364,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":3281,"title":{},"body":{"index.html":{}}}],["manager",{"_index":2347,"title":{},"body":{"classes/SVGLoader.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":1822,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":252,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":3244,"title":{},"body":{"index.html":{}}}],["marginx",{"_index":972,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marginy",{"_index":973,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["marked",{"_index":2119,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":783,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":3131,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":1675,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":3004,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":2014,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["materialcreator.preload",{"_index":2015,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":3194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":606,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.acos",{"_index":2523,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.cos",{"_index":2506,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.max",{"_index":2496,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.min",{"_index":2524,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.pi",{"_index":827,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{},"components/TorusMeshComponent.html":{}}}],["math.sin",{"_index":2508,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.sin(this.i",{"_index":1774,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["math.sqrt",{"_index":2486,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.tan",{"_index":2567,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matline",{"_index":1665,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["matrix",{"_index":2569,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix3",{"_index":2388,"title":{},"body":{"classes/SVGLoader.html":{}}}],["max",{"_index":2937,"title":{},"body":{"components/TextActorComponent.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1333,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1351,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdelay",{"_index":2930,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxdistance",{"_index":1792,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maximum",{"_index":2728,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxpolarangle",{"_index":1793,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpos",{"_index":2926,"title":{},"body":{"components/TextActorComponent.html":{}}}],["maxx",{"_index":2691,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":2688,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["maxzoom",{"_index":1794,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1616,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["merchantability",{"_index":3337,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3313,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2752,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mesh",{"_index":749,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh'},{'name",{"_index":204,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":3019,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":470,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":746,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:102",{"_index":2993,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:110",{"_index":2992,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:111",{"_index":3054,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":2876,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":826,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":2875,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":825,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":771,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":820,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":3051,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":824,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":821,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":768,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":822,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":3028,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:28",{"_index":829,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":819,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":757,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":3027,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:34",{"_index":2995,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":1579,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":773,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":3049,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:40",{"_index":830,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":3030,"title":{},"body":{"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":770,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:44",{"_index":2999,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":3058,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":2096,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:47",{"_index":3055,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:48",{"_index":3057,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":756,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:50",{"_index":2988,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:53",{"_index":2986,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:55",{"_index":1474,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:56",{"_index":2981,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":774,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:59",{"_index":2975,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:62",{"_index":2978,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:65",{"_index":1475,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:68",{"_index":2976,"title":{},"body":{"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:71",{"_index":2977,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:74",{"_index":2984,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:77",{"_index":2979,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:80",{"_index":2987,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:83",{"_index":2982,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:86",{"_index":2980,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:87",{"_index":3052,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":2974,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:91",{"_index":3053,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["mesh.component.ts:98",{"_index":2989,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.geometry",{"_index":1492,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.module",{"_index":526,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":469,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":3020,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":525,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["meshposition",{"_index":1545,"title":{},"body":{"components/GridActorComponent.html":{}}}],["message",{"_index":3183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":158,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["method",{"_index":2623,"title":{},"body":{"classes/SVGLoader.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["middle",{"_index":1589,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":3295,"title":{},"body":{"license.html":{}}}],["min",{"_index":2939,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindelay",{"_index":2931,"title":{},"body":{"components/TextActorComponent.html":{}}}],["mindistance",{"_index":1795,"title":{},"body":{"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["minimum",{"_index":2743,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minx",{"_index":2692,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miny",{"_index":2690,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minzoom",{"_index":1796,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":3173,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3291,"title":{},"body":{"license.html":{}}}],["miter",{"_index":2725,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miterlimit",{"_index":2358,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mm",{"_index":2400,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mode",{"_index":3266,"title":{},"body":{"index.html":{}}}],["model",{"_index":254,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["model(model",{"_index":1873,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["model.compositions",{"_index":1099,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.compositions?.foreach(i",{"_index":1147,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.edges",{"_index":1093,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1094,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges?.foreach(i",{"_index":1151,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.layout",{"_index":1102,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1100,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["model.nodes.length",{"_index":1146,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.nodes?.foreach(i",{"_index":1149,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["model.ts",{"_index":588,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":135,"title":{"components/ModelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modelpath",{"_index":1870,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["models/?.obj",{"_index":1886,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":512,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1065,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1071,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":651,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":1033,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DofComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["modify",{"_index":3312,"title":{},"body":{"license.html":{}}}],["module",{"_index":368,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":3263,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":2231,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["mouseenter",{"_index":2126,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":2127,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1953,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1400,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mtlloader",{"_index":1973,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":2025,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1080,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiples",{"_index":2730,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mustrerender",{"_index":2066,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["muted",{"_index":3047,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["n",{"_index":2585,"title":{},"body":{"classes/SVGLoader.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["near",{"_index":1427,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1956,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1959,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1887,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1961,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1964,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["network",{"_index":989,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["newgeometry",{"_index":1494,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newgeometry.attributes",{"_index":1497,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["newobject3dinstance",{"_index":165,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextActorComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["newpoints",{"_index":2800,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newpoints.push",{"_index":2799,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newtexturepath",{"_index":1990,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["next",{"_index":739,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["nextpointl",{"_index":2790,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nextpointr",{"_index":2791,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ng",{"_index":808,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":964,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ngafterviewinit",{"_index":965,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LoaderActorComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngmodule",{"_index":382,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":966,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngonchanges(changes",{"_index":999,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["ngondestroy",{"_index":851,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["ngoninit",{"_index":852,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["node",{"_index":591,"title":{"interfaces/Node.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":218,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["node.childnodes",{"_index":2455,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.component",{"_index":1133,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.component.ts",{"_index":1037,"title":{},"body":{"components/DagreNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:102",{"_index":1048,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:16",{"_index":1042,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:18",{"_index":1043,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:20",{"_index":1054,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:22",{"_index":1055,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:23",{"_index":1041,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:41",{"_index":1046,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:46",{"_index":1044,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:65",{"_index":1045,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:70",{"_index":1047,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.component.ts:88",{"_index":1049,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["node.composition",{"_index":1091,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.getattribute",{"_index":2463,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.hasattribute",{"_index":2426,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.height",{"_index":953,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.href.baseval.substring",{"_index":2441,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.icon",{"_index":1178,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.label",{"_index":1089,"title":{},"body":{"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{}}}],["node.model",{"_index":1180,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.name",{"_index":1167,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.nodename",{"_index":2422,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.nodetype",{"_index":2418,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet",{"_index":2476,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules",{"_index":2477,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules.length",{"_index":2478,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.type",{"_index":1172,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["node.viewportelement.getelementbyid",{"_index":2443,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.width",{"_index":952,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["node.x",{"_index":947,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["node.y",{"_index":949,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["nodefactory",{"_index":1162,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef",{"_index":1164,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.composition",{"_index":1168,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.container.createcomponent(serverfactory",{"_index":1174,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["noderef.instance.name",{"_index":1166,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["nodes",{"_index":598,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreLayoutComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["nodesep",{"_index":974,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["noholes",{"_index":1623,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/SVGLoaderComponent.html":{}}}],["nom1",{"_index":2590,"title":{},"body":{"classes/SVGLoader.html":{}}}],["non",{"_index":2446,"title":{},"body":{"classes/SVGLoader.html":{}}}],["none",{"_index":2260,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":3341,"title":{},"body":{"license.html":{}}}],["nonzero",{"_index":2655,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normal",{"_index":2761,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normals",{"_index":2380,"title":{},"body":{"classes/SVGLoader.html":{}}}],["note",{"_index":320,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":3327,"title":{},"body":{"license.html":{}}}],["npm",{"_index":2008,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["null",{"_index":690,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":173,"title":{},"body":{"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/variables.html":{}}}],["number.epsilon",{"_index":2602,"title":{},"body":{"classes/SVGLoader.html":{}}}],["numpoints",{"_index":2797,"title":{},"body":{"classes/SVGLoader.html":{}}}],["obj",{"_index":258,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":2138,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":2136,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":2137,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.clone",{"_index":2019,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["obj.ismesh",{"_index":709,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":713,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":2142,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":2140,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":2141,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":184,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["object.module",{"_index":482,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":516,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1256,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1240,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":481,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":1745,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["object/scene.component",{"_index":2295,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":3227,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":255,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloader",{"_index":1977,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":257,"title":{"components/ObjLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloaderservice",{"_index":513,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":358,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":3302,"title":{},"body":{"license.html":{}}}],["official",{"_index":3261,"title":{},"body":{"index.html":{}}}],["offset",{"_index":1507,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["once",{"_index":326,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":959,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["onclick",{"_index":853,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1938,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":854,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["ondestroy",{"_index":844,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["one",{"_index":2722,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onerror",{"_index":2368,"title":{},"body":{"classes/SVGLoader.html":{}}}],["oninit",{"_index":843,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["onload",{"_index":2366,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onlyunique(value",{"_index":1135,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["onmouseclick",{"_index":1503,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseclick(event",{"_index":1525,"title":{},"body":{"components/GridActorComponent.html":{}}}],["onmouseenter",{"_index":1504,"title":{},"body":{"components/GridActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1527,"title":{},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":2143,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":2168,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1925,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onprogress",{"_index":2367,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onresize(event",{"_index":2247,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":855,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{}}}],["ontouchstart",{"_index":2169,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1942,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["opacity",{"_index":1676,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["open",{"_index":2738,"title":{},"body":{"classes/SVGLoader.html":{}}}],["openended",{"_index":813,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["openparpos",{"_index":2546,"title":{},"body":{"classes/SVGLoader.html":{}}}],["optimization",{"_index":322,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":3236,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":260,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":1823,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":259,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["orgconsoleerror",{"_index":3143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1274,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":262,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orthographiccameracomponent",{"_index":261,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oter",{"_index":2631,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections",{"_index":2663,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections.push",{"_index":2668,"title":{},"body":{"classes/SVGLoader.html":{}}}],["others",{"_index":1834,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":3352,"title":{},"body":{"license.html":{}}}],["out",{"_index":379,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outerpoint",{"_index":2793,"title":{},"body":{"classes/SVGLoader.html":{}}}],["outline",{"_index":2259,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":896,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":859,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["over",{"_index":2528,"title":{},"body":{"classes/SVGLoader.html":{}}}],["overridematerialcolor",{"_index":2805,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":2826,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":3358,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":2638,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.getpoints",{"_index":2687,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.identifier",{"_index":2707,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.points",{"_index":2709,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.x",{"_index":2695,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.y",{"_index":2694,"title":{},"body":{"classes/SVGLoader.html":{}}}],["package",{"_index":2009,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pairs",{"_index":2771,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pane",{"_index":2217,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1797,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":759,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["param",{"_index":1300,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["parameter",{"_index":2731,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2747,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parent",{"_index":171,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["parent.ts",{"_index":3145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentscene",{"_index":810,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":3200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":2342,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parse(text",{"_index":2370,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseandcreate",{"_index":1112,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parsecirclenode",{"_index":2435,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecssstylesheet",{"_index":2424,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsedefs(node",{"_index":2439,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseellipsenode",{"_index":2437,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloats",{"_index":2475,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloatwithunits",{"_index":2536,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseint(number(this.materialcolor).tostring",{"_index":1714,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["parselinenode",{"_index":2438,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenode",{"_index":2417,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenodetransform",{"_index":2533,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepathnode",{"_index":2427,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolygonnode",{"_index":2431,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolylinenode",{"_index":2433,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parser",{"_index":1105,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser'},{'name",{"_index":221,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["parser.component.ts",{"_index":1103,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"coverage.html":{}}}],["parser.component.ts:102",{"_index":1123,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:121",{"_index":1121,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:138",{"_index":1124,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:148",{"_index":1119,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:40",{"_index":1116,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:42",{"_index":1117,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:44",{"_index":1130,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:46",{"_index":1115,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:57",{"_index":1127,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:62",{"_index":1128,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:75",{"_index":1129,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parser.component.ts:98",{"_index":1126,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["parserectnode",{"_index":2429,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsestyle",{"_index":2425,"title":{},"body":{"classes/SVGLoader.html":{}}}],["particular",{"_index":3339,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1379,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1412,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1414,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1416,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1415,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["patchconsoletofailonerror",{"_index":3142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":1980,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["path.boundingbox.containspoint",{"_index":2634,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.color",{"_index":2840,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.color.setstyle",{"_index":2450,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.absellipse",{"_index":2516,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.currentpoint.copy",{"_index":2473,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.identifier",{"_index":2641,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.iscw",{"_index":2643,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.points",{"_index":2636,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.subpaths",{"_index":2584,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.toshapes(this.isccw",{"_index":2844,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["path.userdata",{"_index":2454,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata.style",{"_index":2746,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths",{"_index":2372,"title":{},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["paths.foreach",{"_index":2620,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.push",{"_index":2453,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pause",{"_index":1913,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1895,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2403,"title":{},"body":{"classes/SVGLoader.html":{}}}],["per",{"_index":2395,"title":{},"body":{"classes/SVGLoader.html":{}}}],["performance",{"_index":321,"title":{},"body":{"injectables/AnimationService.html":{}}}],["permission",{"_index":3297,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3320,"title":{},"body":{"license.html":{}}}],["person",{"_index":3301,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3321,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":265,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":264,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":1289,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":487,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":537,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":486,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1290,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1299,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":675,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2256,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":267,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["planemeshcomponent",{"_index":266,"title":{"components/PlaneMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playbackerror",{"_index":3044,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["plus",{"_index":2767,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point",{"_index":269,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["point.copy",{"_index":2472,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point.x",{"_index":2670,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0l",{"_index":2786,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0r",{"_index":2787,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointlightcomponent",{"_index":268,"title":{"components/PointLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["points",{"_index":2378,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.foreach(p",{"_index":2693,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.length",{"_index":2798,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke",{"_index":2343,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke(points",{"_index":2374,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers",{"_index":2344,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers(points",{"_index":2379,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polygon",{"_index":2430,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polyline",{"_index":2432,"title":{},"body":{"classes/SVGLoader.html":{}}}],["portions",{"_index":3330,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1534,"title":{},"body":{"components/GridActorComponent.html":{}}}],["position",{"_index":345,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/GridActorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":1558,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["pq",{"_index":2494,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preallocate",{"_index":2776,"title":{},"body":{"classes/SVGLoader.html":{}}}],["precision",{"_index":2526,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preloading",{"_index":2000,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":2002,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preservedrawingbuffer",{"_index":2202,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["private",{"_index":329,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["project",{"_index":3231,"title":{},"body":{"index.html":{}}}],["projection",{"_index":790,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":207,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["projection.component",{"_index":530,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":788,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:14",{"_index":793,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection.component.ts:23",{"_index":795,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":650,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":3363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":3186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":3362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":3187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":3176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../fix",{"_index":3188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":3178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../patch",{"_index":3189,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../provide",{"_index":3190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":3179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":3191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":3192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":112,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/Node.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":1727,"title":{},"body":{"components/LoaderActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2921,"title":{},"body":{"components/TextActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":3040,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":310,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":341,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":334,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":336,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":338,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":335,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":380,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":478,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":388,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":2049,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":2080,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":405,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1781,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":2045,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":431,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":716,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":722,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:22",{"_index":728,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:30",{"_index":725,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1329,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1337,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1336,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1334,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:24",{"_index":1339,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:50",{"_index":1340,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1356,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1367,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1213,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1422,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:12",{"_index":1430,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1432,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1431,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:16",{"_index":1428,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:27",{"_index":1435,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:36",{"_index":1434,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:42",{"_index":1433,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:48",{"_index":1437,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:53",{"_index":1436,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":515,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":398,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":1659,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":787,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":445,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":574,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1418,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1420,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:21",{"_index":1421,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1568,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":154,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":454,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":1303,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1594,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2101,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":461,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":1965,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2033,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1455,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts:8",{"_index":1456,"title":{},"body":{"injectables/FontService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1604,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:14",{"_index":1617,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:16",{"_index":1608,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:49",{"_index":1605,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts:58",{"_index":1607,"title":{},"body":{"injectables/IconService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":1879,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:10",{"_index":1882,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:16",{"_index":1880,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:23",{"_index":1881,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts:8",{"_index":1883,"title":{},"body":{"injectables/ModelService.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":2020,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2915,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/stl",{"_index":2905,"title":{},"body":{"components/StlLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2801,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":468,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":745,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":811,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":1466,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":1576,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2094,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2871,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":3023,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":3042,"title":{},"body":{"components/VideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2851,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":2855,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:25",{"_index":2856,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:31",{"_index":2858,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:35",{"_index":2857,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":572,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2958,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":536,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1291,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1295,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":2109,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":2112,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":545,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":2113,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1888,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:109",{"_index":2181,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:121",{"_index":2176,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:130",{"_index":2175,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":2190,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":2191,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":2188,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":2187,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":2189,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":2171,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":2178,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":2185,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":2186,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":2174,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":2173,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":2182,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":2183,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":2193,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":2184,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":2172,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":2180,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:98",{"_index":2179,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":556,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":600,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:109",{"_index":611,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:118",{"_index":620,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:33",{"_index":630,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":627,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":624,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":628,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":622,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":629,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":631,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:41",{"_index":617,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:93",{"_index":618,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":2194,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2261,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:102",{"_index":2273,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:110",{"_index":2288,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:117",{"_index":2275,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":2291,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:121",{"_index":2274,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:125",{"_index":2276,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:129",{"_index":2284,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2292,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2290,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2294,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2289,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":2271,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:27",{"_index":2286,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:31",{"_index":2282,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:36",{"_index":2279,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:53",{"_index":2278,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:89",{"_index":2281,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2880,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":566,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2885,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2892,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2891,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2888,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2890,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":2889,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2887,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2335,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":3130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":3133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":3136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/patch",{"_index":3138,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":3144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":3146,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":3148,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":2003,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1462,"title":{},"body":{"injectables/FontService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["property",{"_index":2222,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":1035,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["props",{"_index":1316,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["provided",{"_index":3211,"title":{},"body":{"index.html":{},"license.html":{}}}],["provideparent",{"_index":182,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":159,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":576,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(boxmeshcomponent",{"_index":748,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["provideparent(component",{"_index":3199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":789,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(cylindermeshcomponent",{"_index":812,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["provideparent(dagrecompositioncomponent",{"_index":845,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["provideparent(dagrelayoutcomponent",{"_index":961,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["provideparent(dagrenodecomponent",{"_index":1038,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["provideparent(dagreyamlparsercomponent",{"_index":1104,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["provideparent(directionallightcomponent",{"_index":1304,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1419,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(framemeshcomponent",{"_index":1467,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["provideparent(gridactorcomponent",{"_index":1500,"title":{},"body":{"components/GridActorComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1569,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(gridmeshcomponent",{"_index":1577,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1595,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(layeractorcomponent",{"_index":1643,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["provideparent(lineconnectorcomponent",{"_index":1662,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["provideparent(loaderactorcomponent",{"_index":1728,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["provideparent(modelactorcomponent",{"_index":1869,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["provideparent(objectloadercomponent",{"_index":2034,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["provideparent(objloadercomponent",{"_index":1972,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":2051,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":2081,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(planemeshcomponent",{"_index":2095,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["provideparent(pointlightcomponent",{"_index":2102,"title":{},"body":{"components/PointLightComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2852,"title":{},"body":{"components/SceneComponent.html":{}}}],["provideparent(serverbarrelactorcomponent",{"_index":2867,"title":{},"body":{"components/ServerBarrelActorComponent.html":{}}}],["provideparent(servercompactactorcomponent",{"_index":2868,"title":{},"body":{"components/ServerCompactActorComponent.html":{}}}],["provideparent(servericonactorcomponent",{"_index":2869,"title":{},"body":{"components/ServerIconActorComponent.html":{}}}],["provideparent(serverstandactorcomponent",{"_index":2870,"title":{},"body":{"components/ServerStandActorComponent.html":{}}}],["provideparent(spheremeshcomponent",{"_index":2872,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["provideparent(stlloadercomponent",{"_index":2906,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["provideparent(svgloadercomponent",{"_index":2802,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["provideparent(textactorcomponent",{"_index":2922,"title":{},"body":{"components/TextActorComponent.html":{}}}],["provideparent(textmeshcomponent",{"_index":2960,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["provideparent(torusmeshcomponent",{"_index":3024,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["provideparent(videomeshcomponent",{"_index":3043,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["provideparent(workstationactorcomponent",{"_index":3088,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":1639,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1640,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1641,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["pruning",{"_index":2622,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pt",{"_index":2402,"title":{},"body":{"classes/SVGLoader.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["publish",{"_index":3314,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3288,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3340,"title":{},"body":{"license.html":{}}}],["px",{"_index":2350,"title":{},"body":{"classes/SVGLoader.html":{}}}],["q",{"_index":2495,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rad2deg",{"_index":2110,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":539,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":535,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":814,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":1298,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":2874,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":815,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":816,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["randomint",{"_index":2928,"title":{},"body":{"components/TextActorComponent.html":{}}}],["randomint(min",{"_index":2936,"title":{},"body":{"components/TextActorComponent.html":{}}}],["rankdir",{"_index":975,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker",{"_index":976,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranker'].some(propname",{"_index":1034,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["ranksep",{"_index":977,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["raycaster",{"_index":298,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["raycaster.module",{"_index":493,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":546,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":548,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":492,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":1825,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":297,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1521,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"components/GridActorComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":300,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1892,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1941,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1936,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1935,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":302,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":544,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{},"overview.html":{}}}],["read",{"_index":1051,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["readonly",{"_index":327,"title":{},"body":{"injectables/AnimationService.html":{}}}],["receiveshadow",{"_index":2972,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rect",{"_index":2428,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rectangular",{"_index":764,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["references",{"_index":2445,"title":{},"body":{"classes/SVGLoader.html":{}}}],["refreshlayout",{"_index":967,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["register",{"_index":118,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["register(id",{"_index":127,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":2004,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["relative",{"_index":1981,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["release",{"_index":3268,"title":{},"body":{"index.html":{}}}],["releasecontributors",{"_index":3279,"title":{},"body":{"index.html":{}}}],["remove",{"_index":935,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["removed",{"_index":1928,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["removeduplicatedpoints",{"_index":2796,"title":{},"body":{"classes/SVGLoader.html":{}}}],["removefromarray",{"_index":3147,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":3201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removenode",{"_index":856,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["removepass",{"_index":1372,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1385,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":324,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreCompositionComponent.html":{},"components/EffectComposerComponent.html":{},"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/VideoMeshComponent.html":{}}}],["rendered",{"_index":2218,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":271,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":676,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":489,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":557,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":559,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":488,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":181,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":270,"title":{"components/RendererCanvasComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice",{"_index":170,"title":{"injectables/RendererService.html":{}},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2859,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":2232,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpane",{"_index":2205,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":632,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":665,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1402,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":664,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1373,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":3218,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":114,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":130,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":121,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:28",{"_index":129,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:36",{"_index":124,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requestanimationframe",{"_index":323,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":361,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":3289,"title":{},"body":{"index.html":{}}}],["required",{"_index":3077,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["reset",{"_index":378,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":2201,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2255,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2266,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2280,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2251,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1465,"title":{},"body":{"injectables/FontService.html":{},"components/ObjLoaderComponent.html":{}}}],["resolve(data.paths",{"_index":2920,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(mesh",{"_index":2914,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["resolve(model",{"_index":2031,"title":{},"body":{"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{}}}],["resolver",{"_index":122,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/DagreYamlParserComponent.html":{}}}],["resourcepath",{"_index":1975,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resources",{"_index":1982,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["restorematerial",{"_index":609,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":619,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":2226,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":3308,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1915,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["returned",{"_index":2720,"title":{},"body":{"classes/SVGLoader.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2758,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rights",{"_index":3311,"title":{},"body":{"license.html":{}}}],["ring1",{"_index":1729,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring2",{"_index":1730,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["ring3",{"_index":1731,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["rotate",{"_index":2552,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rotatespeed",{"_index":1798,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotations",{"_index":2684,"title":{},"body":{"classes/SVGLoader.html":{}}}],["round",{"_index":2723,"title":{},"body":{"classes/SVGLoader.html":{}}}],["run",{"_index":3254,"title":{},"body":{"index.html":{}}}],["rx",{"_index":2487,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rx,ry",{"_index":2482,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rxjs",{"_index":898,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{}}}],["rxs",{"_index":2489,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ry",{"_index":2488,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rys",{"_index":2490,"title":{},"body":{"classes/SVGLoader.html":{}}}],["s",{"_index":2485,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["same",{"_index":2766,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sample",{"_index":3246,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":656,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":3234,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1359,"title":{},"body":{"components/DotScreenComponent.html":{},"classes/SVGLoader.html":{}}}],["scaletofit",{"_index":2823,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2848,"title":{},"body":{"components/SVGLoaderComponent.html":{},"miscellaneous/functions.html":{}}}],["scalex",{"_index":2562,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scaley",{"_index":2563,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanline",{"_index":2616,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections",{"_index":2659,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.foreach",{"_index":2664,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.sort",{"_index":2661,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlinemaxx",{"_index":2653,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineminx",{"_index":2652,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scene",{"_index":607,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["scene'},{'name",{"_index":274,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.background",{"_index":2860,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":529,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1374,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":273,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scope",{"_index":2405,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager",{"_index":2406,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager.itemerror",{"_index":2416,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.parse",{"_index":2414,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.path",{"_index":2408,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.requestheader",{"_index":2410,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.withcredentials",{"_index":2412,"title":{},"body":{"classes/SVGLoader.html":{}}}],["screen",{"_index":1358,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":228,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["screen.component",{"_index":437,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1357,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1360,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:23",{"_index":1363,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screen.component.ts:28",{"_index":1362,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1799,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["search",{"_index":2625,"title":{},"body":{"classes/SVGLoader.html":{}}}],["see",{"_index":3214,"title":{},"body":{"index.html":{}}}],["seems",{"_index":2041,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":763,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":861,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":160,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["self",{"_index":1136,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["self.indexof(value",{"_index":1137,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["sell",{"_index":3318,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1401,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":3181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":137,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["server/server",{"_index":423,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":424,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":131,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":132,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverfactory",{"_index":1170,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["servericonactorcomponent",{"_index":133,"title":{"components/ServerIconActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverref",{"_index":1173,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.icon",{"_index":1177,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.label",{"_index":1176,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.model",{"_index":1179,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverref.instance.name",{"_index":1175,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["serverstandactorcomponent",{"_index":134,"title":{"components/ServerStandActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":313,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{},"components/DagreYamlParserComponent.html":{}}}],["services",{"_index":2824,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["services/obj",{"_index":1992,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["set",{"_index":899,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/LayerActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":2170,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1917,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2267,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2283,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setheight(height",{"_index":895,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["seticon(icon",{"_index":2821,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setmaterialcolor(materialcolor",{"_index":2997,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setmaterials",{"_index":2022,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":2024,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(model",{"_index":1872,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":2817,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":2268,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2285,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":3000,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":1989,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["settled",{"_index":703,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":1787,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":1655,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shaderpass",{"_index":637,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1366,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":674,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":736,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":735,"title":{},"body":{"components/BlurComponent.html":{}}}],["shall",{"_index":3328,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1482,"title":{},"body":{"components/FrameMeshComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{}}}],["shape.holes.push",{"_index":2717,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shape.lineto",{"_index":1485,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":1486,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":1484,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shapepath",{"_index":2354,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["shapepath.userdata.style.fillrule",{"_index":2703,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapes",{"_index":2843,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["shapestoreturn",{"_index":2704,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn.push",{"_index":2718,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils",{"_index":2389,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils.isclockwise",{"_index":2696,"title":{},"body":{"classes/SVGLoader.html":{}}}],["show",{"_index":307,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":568,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2881,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2883,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2882,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["sides",{"_index":767,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":3208,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":724,"title":{},"body":{"components/BlurComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["simplepath",{"_index":2650,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox",{"_index":2660,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox.getcenter",{"_index":2657,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.identifier",{"_index":2666,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths",{"_index":2697,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.filter",{"_index":2698,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.foreach",{"_index":2705,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.map",{"_index":2702,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplex",{"_index":990,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["single",{"_index":2250,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":578,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":3134,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":1469,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":1470,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skewx",{"_index":2565,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skewy",{"_index":2568,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skip",{"_index":2862,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":179,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["skycolor",{"_index":1597,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["slightly",{"_index":2527,"title":{},"body":{"classes/SVGLoader.html":{}}}],["smaapass",{"_index":694,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":695,"title":{},"body":{"injectables/BloomService.html":{}}}],["snyk",{"_index":3165,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":3304,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1677,"title":{},"body":{"components/LineConnectorComponent.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":3061,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["source.type",{"_index":3063,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["sp",{"_index":2699,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sp.points.length",{"_index":2700,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sphere",{"_index":279,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":278,"title":{"components/SphereMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["split",{"_index":2540,"title":{},"body":{"classes/SVGLoader.html":{}}}],["square",{"_index":2726,"title":{},"body":{"classes/SVGLoader.html":{}}}],["src/app.component.html",{"_index":3235,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":3245,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":3260,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":3242,"title":{},"body":{"index.html":{}}}],["stack",{"_index":2673,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.length",{"_index":2674,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.pop",{"_index":2675,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.push",{"_index":2676,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stand",{"_index":277,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["standard",{"_index":3273,"title":{},"body":{"index.html":{}}}],["start",{"_index":332,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"classes/SVGLoader.html":{}}}],["start.x",{"_index":2509,"title":{},"body":{"classes/SVGLoader.html":{}}}],["start.y",{"_index":2511,"title":{},"body":{"classes/SVGLoader.html":{}}}],["started",{"_index":3203,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":3093,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1053,"title":{},"body":{"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["stats",{"_index":305,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":567,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":494,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2296,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":304,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":565,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["status",{"_index":1113,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["step",{"_index":2001,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"components/TextActorComponent.html":{}}}],["still",{"_index":2773,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stl",{"_index":281,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stlloader",{"_index":2910,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["stlloadercomponent",{"_index":280,"title":{"components/StlLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stop",{"_index":333,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["stories",{"_index":3259,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":3209,"title":{},"body":{"index.html":{}}}],["storybook.js",{"_index":3262,"title":{},"body":{"index.html":{}}}],["strange",{"_index":2249,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2719,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokecolor",{"_index":2360,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinecap",{"_index":2363,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinejoin",{"_index":2362,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokemiterlimit",{"_index":2364,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokewidth",{"_index":2361,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style",{"_index":2375,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill",{"_index":2449,"title":{},"body":{"classes/SVGLoader.html":{}}}],["styles",{"_index":1780,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1785,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":3323,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":3316,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3286,"title":{},"body":{"index.html":{}}}],["subpaths",{"_index":2583,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subpaths.length",{"_index":2586,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subscribe",{"_index":342,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":365,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["subscribeevents",{"_index":2135,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscribers",{"_index":3075,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["subscription",{"_index":891,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["substantial",{"_index":3329,"title":{},"body":{"license.html":{}}}],["super",{"_index":2393,"title":{},"body":{"classes/SVGLoader.html":{}}}],["super(rendererservice",{"_index":186,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":1011,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":1031,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":929,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{}}}],["super.ngoninit",{"_index":915,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["super.updateparent",{"_index":2863,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":3356,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":3282,"title":{},"body":{"index.html":{}}}],["svg",{"_index":283,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgangle",{"_index":2514,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader",{"_index":2334,"title":{"classes/SVGLoader.html":{}},"body":{"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["svgloader.getstrokestyle",{"_index":2744,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.parse",{"_index":2745,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.pointstostrokewithbuffers",{"_index":2759,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloadercomponent",{"_index":282,"title":{"components/SVGLoaderComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":514,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/SVGLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["sweep_flag",{"_index":2498,"title":{},"body":{"classes/SVGLoader.html":{}}}],["switch",{"_index":2421,"title":{},"body":{"classes/SVGLoader.html":{}}}],["syncgraph",{"_index":857,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphcontainer",{"_index":968,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphcontainer(g",{"_index":1003,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["syncgraphnodes",{"_index":858,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["syncgraphnodes(g",{"_index":883,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/FrameMeshComponent.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["t2",{"_index":2587,"title":{},"body":{"classes/SVGLoader.html":{}}}],["table",{"_index":3151,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3150,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1306,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["targetopacity",{"_index":1221,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["template",{"_index":164,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":2198,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["temptransform0",{"_index":2534,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1",{"_index":2559,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1.identity().translate",{"_index":2555,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2",{"_index":2558,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2.identity().rotate",{"_index":2556,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3",{"_index":2561,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3.multiplymatrices",{"_index":2557,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_1",{"_index":2777,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_2",{"_index":2778,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_3",{"_index":2779,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_4",{"_index":2780,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_5",{"_index":2781,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_6",{"_index":2782,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_7",{"_index":2783,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.set",{"_index":2574,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.x",{"_index":2579,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.y",{"_index":2580,"title":{},"body":{"classes/SVGLoader.html":{}}}],["test",{"_index":3229,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3255,"title":{},"body":{"index.html":{}}}],["text",{"_index":285,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":3007,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":528,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":573,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":527,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":3041,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":284,"title":{"components/TextActorComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"modules/UxActorModule.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":286,"title":{"components/TextMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":2043,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/VideoMeshComponent.html":{}}}],["texture2d",{"_index":660,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["texturepath",{"_index":1976,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["texturepath(newtexturepath",{"_index":1998,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":1983,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["theta",{"_index":2513,"title":{},"body":{"classes/SVGLoader.html":{}}}],["thetalength",{"_index":817,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":818,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":1471,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["thickness'].some(propname",{"_index":1490,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._height",{"_index":901,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this._materialcolor",{"_index":3005,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":2825,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":3008,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":1657,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.actorrepository.getcomponentfactory(id",{"_index":1160,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.addnode",{"_index":916,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.addpass(renderpass",{"_index":1403,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.align",{"_index":1015,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.animate",{"_index":1250,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.bind(this",{"_index":1251,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animate.emit",{"_index":362,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":360,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":359,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1252,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1288,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1862,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1253,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationservice.animate.subscribe(this.updateanimation",{"_index":1769,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.animationservice.start",{"_index":1254,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/TextActorComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.animationstep",{"_index":352,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":353,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1349,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applyshadowprops(mesh",{"_index":786,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.applytranslation",{"_index":950,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.aspect",{"_index":2332,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autoplay",{"_index":3078,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.autorotate",{"_index":1841,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1843,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":3015,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":3018,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":3017,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":3016,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2326,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2325,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2301,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":680,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":685,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":686,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":684,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":706,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":691,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":682,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2299,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":663,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":710,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.calculateaspectratio(canvas",{"_index":2333,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1919,"title":{},"body":{"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":2093,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":2076,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1949,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.left",{"_index":2073,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":2078,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.right",{"_index":2074,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":2075,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2298,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":2077,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":2068,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2243,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2245,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":1314,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.cdref.detectchanges",{"_index":905,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.cdref['destroyed",{"_index":904,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.centered",{"_index":1028,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.changed.emit",{"_index":1036,"title":{},"body":{"components/DagreLayoutComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextActorComponent.html":{}}}],["this.childcameras.first.camera",{"_index":1835,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.click.emit",{"_index":2148,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":913,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DirectionalLightComponent.html":{},"components/LayerActorComponent.html":{}}}],["this.composer",{"_index":1394,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":1409,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes",{"_index":1413,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1411,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.render",{"_index":2303,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1417,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1398,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1406,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composition",{"_index":926,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.container.createcomponent(factory",{"_index":1186,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.container.createcomponent(nodefactory",{"_index":1165,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.contentprojection",{"_index":803,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":804,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":1826,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":1863,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":1840,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1842,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1846,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":1844,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1852,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1854,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1858,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1850,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1856,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1838,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1864,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1828,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1848,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1860,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1831,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2901,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcomposition(i",{"_index":1148,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createedge(i",{"_index":1152,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.createnode(i",{"_index":1150,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.currentdelay",{"_index":2951,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currentpos",{"_index":2948,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.currenttext",{"_index":2950,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.curvesegments",{"_index":3014,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dagrelayout",{"_index":906,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getchildren().push(this",{"_index":921,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel",{"_index":917,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes",{"_index":937,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.filter(i",{"_index":938,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.getgraphmodel().nodes.push",{"_index":924,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.refreshlayout",{"_index":928,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.removechildbyname(this.name",{"_index":936,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dagrelayout.updated.subscribe(this.syncgraph",{"_index":912,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.dampingfactor",{"_index":1847,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":705,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":714,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashcolor",{"_index":1265,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashincrement",{"_index":1284,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashsize",{"_index":1719,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.defaultdpi",{"_index":2397,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.defaultid",{"_index":145,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":2404,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.depth",{"_index":779,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":782,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthwrite",{"_index":2842,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.destroyall",{"_index":1144,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.disable",{"_index":1903,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1453,"title":{},"body":{"components/FogComponent.html":{}}}],["this.distance",{"_index":2105,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":1575,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.done",{"_index":2955,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.edges",{"_index":1260,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1266,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1269,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1267,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1268,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1286,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edgesep",{"_index":1018,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.enabled",{"_index":355,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1845,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1446,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1451,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":696,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":698,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":699,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":697,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":700,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":708,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1346,"title":{},"body":{"components/DofComponent.html":{}}}],["this.font.load(this.fonturl",{"_index":3010,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.fov",{"_index":2091,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.gapsize",{"_index":1721,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1930,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1945,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getgeometry",{"_index":1495,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.getlayout(model",{"_index":1082,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.getlineposition(event",{"_index":1535,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.getmaterial",{"_index":784,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.getnodecomponent((node.model",{"_index":1171,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.getobject",{"_index":1491,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.getobject().background",{"_index":2865,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getpositions",{"_index":1708,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.gettextmesh(font",{"_index":3011,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.graph",{"_index":1023,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel",{"_index":1010,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphmodel.layout",{"_index":1014,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.graphupdated",{"_index":911,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.graphupdated?.unsubscribe",{"_index":934,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.grid.getobject().geometry",{"_index":1544,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridclick.emit(pos",{"_index":1538,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.gridenter.emit(pos",{"_index":1536,"title":{},"body":{"components/GridActorComponent.html":{}}}],["this.groundcolor",{"_index":1603,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.groups",{"_index":1950,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1951,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1924,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.height",{"_index":778,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.heightsegments",{"_index":781,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.hidedash",{"_index":1285,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.hightsegments",{"_index":2879,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":1248,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1255,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.i",{"_index":1773,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.iconservice.getsource(icon",{"_index":2830,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"components/LoaderActorComponent.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1391,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":701,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1275,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.injector.get(dagrelayoutcomponent",{"_index":907,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.instances",{"_index":1200,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.foreach(i",{"_index":1196,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(compositionref",{"_index":1212,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(edgeref",{"_index":1194,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(noderef",{"_index":1169,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.instances.push(serverref",{"_index":1181,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.intensity",{"_index":189,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isccw",{"_index":2831,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.isready",{"_index":1926,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1939,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":1581,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":1591,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":1593,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.label",{"_index":925,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.layout",{"_index":1012,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.line.material.color",{"_index":1724,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.material.needsupdate",{"_index":1726,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.linewidth",{"_index":1716,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.list.get(id",{"_index":148,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":146,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":1836,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1837,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":2030,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.load(this.model",{"_index":2038,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/StlLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":2032,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loop",{"_index":3070,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.marginx",{"_index":1020,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.marginy",{"_index":1021,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.material",{"_index":1271,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.material.opacity",{"_index":1278,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1277,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materialcolor",{"_index":1715,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.materials[obj.uuid",{"_index":712,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.matline",{"_index":1710,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.maxblur",{"_index":1353,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdelay",{"_index":2953,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxdistance",{"_index":1853,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1855,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpos",{"_index":2949,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.maxx",{"_index":2846,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxy",{"_index":2847,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.maxzoom",{"_index":1859,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1851,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1857,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.model",{"_index":1878,"title":{},"body":{"components/ModelActorComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.modelpath",{"_index":1876,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.modelservice.getsource(model",{"_index":1875,"title":{},"body":{"components/ModelActorComponent.html":{}}}],["this.mouseenter.emit",{"_index":2146,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":2144,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":2011,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":2013,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.muted",{"_index":3072,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.name",{"_index":919,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.near",{"_index":1450,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.nodesep",{"_index":1017,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.noholes",{"_index":2833,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.object",{"_index":955,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.object.add(this.ring1",{"_index":1757,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring2",{"_index":1761,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.object.add(this.ring3",{"_index":1764,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.objloader.load(this.model",{"_index":2018,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.objloader.setmaterials(materialcreator",{"_index":2016,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.offset",{"_index":1582,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onclick",{"_index":1898,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1899,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":2129,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":2130,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":2131,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":2132,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1896,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1897,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2237,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2238,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1900,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1901,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":1722,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.openended",{"_index":837,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.overridematerialcolor",{"_index":2836,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.panspeed",{"_index":1839,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":1441,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject",{"_index":1442,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1443,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parentscene",{"_index":1440,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parseandcreate",{"_index":1138,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.pass.push(new",{"_index":734,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1343,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1350,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1347,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1352,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1914,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.playbackerror",{"_index":3084,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.preservedrawingbuffer",{"_index":2241,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.radialsegments",{"_index":836,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":3031,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":835,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.randomint(this.mindelay",{"_index":2952,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.rankdir",{"_index":1016,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranker",{"_index":1022,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.ranksep",{"_index":1019,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1955,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":2133,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":2154,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":2117,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":3021,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.register('barrel",{"_index":140,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":139,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":141,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":143,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":138,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":142,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":1884,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":1628,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1636,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1630,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1633,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1624,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2900,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.removenode",{"_index":930,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.render",{"_index":2323,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1355,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.getwebglrenderer",{"_index":1395,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2240,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":367,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SceneComponent.html":{},"components/TextActorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2257,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcomposer(null",{"_index":1393,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1407,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2314,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1399,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2242,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":149,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.resolver.resolvecomponentfactory(dagrecompositioncomponent",{"_index":1202,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagreedgecomponent",{"_index":1184,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resolver.resolvecomponentfactory(dagrenodecomponent",{"_index":1163,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.resourcepath",{"_index":1999,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.restorematerial(i",{"_index":707,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.ring1",{"_index":1754,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.rotatez(math.sin(this.i",{"_index":1776,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring1.scale.set(70",{"_index":1755,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2",{"_index":1758,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.rotatez(math.cos(this.i",{"_index":1777,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring2.scale.set(60",{"_index":1759,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3",{"_index":1762,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.rotatez(math.sin(this.i",{"_index":1778,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.ring3.scale.set(50",{"_index":1763,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.rotatespeed",{"_index":1829,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":662,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2313,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1448,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2300,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":704,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1404,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1405,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1849,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1932,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1934,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.size",{"_index":1585,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":1477,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":1480,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.skycolor",{"_index":1602,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.solid",{"_index":1718,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.start",{"_index":1747,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["this.startloading",{"_index":2827,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":2898,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2904,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2903,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2899,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2884,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2305,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.status.emit(false",{"_index":1158,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.status.emit(true",{"_index":1153,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.stop",{"_index":1283,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{}}}],["this.subscribe",{"_index":1902,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribed",{"_index":1770,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.subscribeevents",{"_index":2134,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.svgloader.load(this.model",{"_index":2838,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this.syncgraph",{"_index":909,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraph.bind(this",{"_index":910,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.syncgraphcontainer(this.graph",{"_index":1025,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.syncgraphnodes(this.dagrelayout.getgraph",{"_index":956,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.target",{"_index":1313,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.targetopacity",{"_index":1287,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.text",{"_index":2945,"title":{},"body":{"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.text.length",{"_index":2946,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.thetalength",{"_index":839,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":838,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":1481,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":2897,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":1658,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.translatelabely",{"_index":902,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.translatex",{"_index":946,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.translatey",{"_index":948,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{}}}],["this.trytofindgeometry",{"_index":1249,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.tube",{"_index":3032,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":3033,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.type",{"_index":3064,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1904,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":2149,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateanimation",{"_index":1767,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updateanimation.bind(this",{"_index":1768,"title":{},"body":{"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["this.updatebaseinfo(g",{"_index":1098,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2322,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updated.emit",{"_index":1026,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["this.updateedges(g",{"_index":1101,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1084,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatetext",{"_index":2943,"title":{},"body":{"components/TextActorComponent.html":{}}}],["this.updatezoom",{"_index":2065,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.video",{"_index":3081,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.addeventlistener('canplay",{"_index":3080,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":3065,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":3068,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.crossorigin",{"_index":3066,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.load",{"_index":3079,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.loop",{"_index":3069,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.muted",{"_index":3071,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.pause",{"_index":3085,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.play().then",{"_index":3082,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.video.remove",{"_index":3086,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videoplaybackstarted",{"_index":3083,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.videosrc",{"_index":3062,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":2307,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2320,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2304,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2319,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2310,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2311,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2331,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2316,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2315,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2317,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.width",{"_index":951,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["this.widthsegments",{"_index":780,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["this.yaml",{"_index":1142,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["this.zoom",{"_index":2069,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1832,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":180,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(this.color",{"_index":187,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":582,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":584,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":777,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.bufferattribute",{"_index":1523,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.bufferattribute(new",{"_index":1549,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.buffergeometry",{"_index":1547,"title":{},"body":{"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{}}}],["three.camera",{"_index":616,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.clock",{"_index":1697,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color(this.background",{"_index":2861,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color(this.materialcolor",{"_index":1725,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.color.getstyle",{"_index":2721,"title":{},"body":{"classes/SVGLoader.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":834,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":1311,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1262,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":1889,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(this.color",{"_index":1449,"title":{},"body":{"components/FogComponent.html":{}}}],["three.font",{"_index":2991,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.fontloader",{"_index":1463,"title":{},"body":{"injectables/FontService.html":{}}}],["three.gridhelper(this.size",{"_index":1574,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":2839,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":1601,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1958,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":2007,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["three.layers",{"_index":623,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.line(geometry",{"_index":1551,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linebasicmaterial({color",{"_index":1552,"title":{},"body":{"components/GridActorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":1264,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1263,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":1237,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LoaderActorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":831,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":785,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/LoaderActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.mesh(this.getgeometry",{"_index":1488,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":625,"title":{},"body":{"injectables/BloomService.html":{},"components/VideoMeshComponent.html":{}}}],["three.object3d",{"_index":798,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/TextActorComponent.html":{}}}],["three.objectloader",{"_index":2036,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":1968,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.orthographiccamera",{"_index":2063,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2318,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":2090,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry",{"_index":2100,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":2097,"title":{},"body":{"components/PlaneMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["three.pointlight(this.color",{"_index":2104,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1893,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.ringgeometry(0.85",{"_index":1751,"title":{},"body":{"components/LoaderActorComponent.html":{}}}],["three.scene",{"_index":614,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":688,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.shape",{"_index":1483,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.shapebuffergeometry",{"_index":1473,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":1487,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":2878,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":3013,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":3034,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector2(window.innerwidth",{"_index":668,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector3",{"_index":3198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":2079,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.vector3(this.maxx",{"_index":2849,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three.vector3(x",{"_index":1954,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.videotexture(this.video",{"_index":3073,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["three.webglrenderer",{"_index":2293,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":1824,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2893,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/lines/line2",{"_index":1703,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linegeometry",{"_index":1705,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/lines/linematerial",{"_index":1706,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1991,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":2028,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/stlloader",{"_index":2912,"title":{},"body":{"components/StlLoaderComponent.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1342,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":636,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":1388,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":633,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":638,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":635,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1365,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":640,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":732,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":730,"title":{},"body":{"components/BlurComponent.html":{}}}],["three@types",{"_index":1712,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["threejs",{"_index":2917,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":3253,"title":{},"body":{"index.html":{}}}],["threejs/videos/ui/retro_futuristic_ui_360p.mp4",{"_index":3090,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["throw",{"_index":1159,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["time",{"_index":1666,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["timescale",{"_index":1667,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["tindex",{"_index":2541,"title":{},"body":{"classes/SVGLoader.html":{}}}],["todo",{"_index":683,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2886,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":3351,"title":{},"body":{"license.html":{}}}],["torus",{"_index":288,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":287,"title":{"components/TorusMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1943,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1293,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["transform(degrees",{"_index":1294,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":2111,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["transform.premultiply",{"_index":2531,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transform.translate",{"_index":2538,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformpath",{"_index":2451,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack",{"_index":2457,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.length",{"_index":2458,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.push",{"_index":2532,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts",{"_index":2539,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts.length",{"_index":2542,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext",{"_index":2543,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.indexof",{"_index":2547,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.length",{"_index":2549,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transfvec2",{"_index":2572,"title":{},"body":{"classes/SVGLoader.html":{}}}],["translate",{"_index":1580,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":1501,"title":{},"body":{"components/GridActorComponent.html":{},"components/LayerActorComponent.html":{}}}],["translatelabely",{"_index":849,"title":{},"body":{"components/DagreCompositionComponent.html":{}}}],["translatez",{"_index":1040,"title":{},"body":{"components/DagreNodeComponent.html":{}}}],["transparent",{"_index":1554,"title":{},"body":{"components/GridActorComponent.html":{},"components/LineConnectorComponent.html":{}}}],["traversechildnodes",{"_index":2420,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tree",{"_index":153,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["triangles",{"_index":2753,"title":{},"body":{"classes/SVGLoader.html":{}}}],["trigger",{"_index":3074,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["trim",{"_index":2544,"title":{},"body":{"classes/SVGLoader.html":{}}}],["true",{"_index":356,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["truncated",{"_index":2732,"title":{},"body":{"classes/SVGLoader.html":{}}}],["try",{"_index":1143,"title":{},"body":{"components/DagreYamlParserComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["trytofindgeometry",{"_index":1216,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["tube",{"_index":3025,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":3026,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tx",{"_index":2535,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ty",{"_index":2537,"title":{},"body":{"classes/SVGLoader.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"interfaces/GraphModel.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":740,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"components/VideoMeshComponent.html":{}}}],["typings",{"_index":2005,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["u",{"_index":2755,"title":{},"body":{"classes/SVGLoader.html":{}}}],["undefined",{"_index":500,"title":{},"body":{"modules/AtftModule.html":{},"components/DagreLayoutComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":2224,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":499,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":655,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":689,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":2399,"title":{},"body":{"classes/SVGLoader.html":{}}}],["unrealbloompass",{"_index":634,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":667,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":932,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":2139,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["unused",{"_index":742,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["up",{"_index":2481,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["update",{"_index":927,"title":{},"body":{"components/DagreCompositionComponent.html":{},"components/DagreNodeComponent.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"components/VideoMeshComponent.html":{},"index.html":{}}}],["updateanimation",{"_index":315,"title":{},"body":{"injectables/AnimationService.html":{},"components/LoaderActorComponent.html":{},"components/TextActorComponent.html":{}}}],["updateaspectratio",{"_index":2053,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":2058,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updatebaseinfo",{"_index":1066,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1073,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2269,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2287,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":350,"title":{},"body":{"injectables/AnimationService.html":{},"components/DagreLayoutComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateedges",{"_index":1067,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1075,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1068,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1077,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":1670,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["updateparent",{"_index":2853,"title":{},"body":{"components/SceneComponent.html":{}}}],["updatetext",{"_index":2929,"title":{},"body":{"components/TextActorComponent.html":{}}}],["updatezoom",{"_index":2054,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"classes/SVGLoader.html":{}}}],["usage",{"_index":3221,"title":{},"body":{"index.html":{}}}],["use",{"_index":1997,"title":{},"body":{"components/ObjLoaderComponent.html":{},"classes/SVGLoader.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":317,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["usednode",{"_index":2442,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usednodeid",{"_index":2440,"title":{},"body":{"classes/SVGLoader.html":{}}}],["useful",{"_index":2775,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usefull",{"_index":2124,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":3207,"title":{},"body":{"index.html":{}}}],["util",{"_index":183,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["util/fix",{"_index":3001,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["utils",{"_index":1007,"title":{},"body":{"components/DagreLayoutComponent.html":{}}}],["utils.ts",{"_index":1061,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1072,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:32",{"_index":1074,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:43",{"_index":1076,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:51",{"_index":1078,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:57",{"_index":1070,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":3168,"title":{},"body":{"dependencies.html":{}}}],["uv",{"_index":648,"title":{},"body":{"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["uvs",{"_index":2381,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ux",{"_index":2517,"title":{},"body":{"classes/SVGLoader.html":{}}}],["uxactormodule",{"_index":3035,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["uy",{"_index":2518,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v",{"_index":2756,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2",{"_index":2573,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.set",{"_index":2578,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.x",{"_index":2575,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.y",{"_index":2576,"title":{},"body":{"classes/SVGLoader.html":{}}}],["valid",{"_index":2774,"title":{},"body":{"classes/SVGLoader.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/StlLoaderComponent.html":{},"injectables/SvgLoaderService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":2529,"title":{},"body":{"classes/SVGLoader.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["variable",{"_index":3120,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3361,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":743,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["varying",{"_index":645,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":646,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":652,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":3247,"title":{},"body":{"index.html":{}}}],["vector2",{"_index":2390,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector2d",{"_index":2742,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector3",{"_index":2391,"title":{},"body":{"classes/SVGLoader.html":{}}}],["version",{"_index":3274,"title":{},"body":{"index.html":{}}}],["vertexcolors",{"_index":1717,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["vertexoffset",{"_index":2382,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vertexshader",{"_index":644,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":729,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":3241,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":1583,"title":{},"body":{"components/GridMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["very",{"_index":2123,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":3230,"title":{},"body":{"index.html":{}}}],["video",{"_index":290,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["video/mp4",{"_index":3050,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videomeshcomponent",{"_index":289,"title":{"components/VideoMeshComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videoplaybackstarted",{"_index":3045,"title":{},"body":{"components/VideoMeshComponent.html":{}}}],["videosrc",{"_index":3048,"title":{},"body":{"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":801,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/GridActorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":2213,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('container",{"_index":1050,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["viewchild('contentprojection",{"_index":800,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["viewchild('grid",{"_index":1530,"title":{},"body":{"components/GridActorComponent.html":{}}}],["viewcontainerref",{"_index":1052,"title":{},"body":{"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"classes/DagreUtils.html":{},"components/DagreYamlParserComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"injectables/IconService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"injectables/ModelService.html":{},"components/ObjLoaderComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/VideoMeshComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":647,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vx",{"_index":2519,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vy",{"_index":2520,"title":{},"body":{"classes/SVGLoader.html":{}}}],["want",{"_index":3237,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":3336,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3331,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3256,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":1969,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":3216,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":2220,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":613,"title":{},"body":{"injectables/BloomService.html":{},"injectables/RendererService.html":{}}}],["whether",{"_index":3348,"title":{},"body":{"license.html":{}}}],["width",{"_index":754,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["width(width",{"_index":1656,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":755,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/VideoMeshComponent.html":{}}}],["wiki",{"_index":1062,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window.addeventlistener('click",{"_index":1906,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1905,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1907,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.console.error",{"_index":3364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.innerheight",{"_index":669,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":678,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1910,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1909,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1911,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":2204,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":2208,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["witdh",{"_index":2736,"title":{},"body":{"classes/SVGLoader.html":{}}}],["within",{"_index":1984,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":3307,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2254,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":291,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":136,"title":{"components/WorkstationActorComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":3196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writing",{"_index":2768,"title":{},"body":{"classes/SVGLoader.html":{}}}],["written",{"_index":2770,"title":{},"body":{"classes/SVGLoader.html":{}}}],["wrong",{"_index":1711,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["x",{"_index":772,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["x0",{"_index":1590,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["x1p",{"_index":2502,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x1ps",{"_index":2493,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x_axis_rotation",{"_index":2507,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xml",{"_index":2373,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y",{"_index":769,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"interfaces/NearestIntersection.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/VideoMeshComponent.html":{}}}],["y0",{"_index":1592,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y1p",{"_index":2500,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y1ps",{"_index":2492,"title":{},"body":{"classes/SVGLoader.html":{}}}],["yaml",{"_index":220,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/BoxMeshComponent.html":{},"components/ContentProjectionComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DagreCompositionComponent.html":{},"components/DagreLayoutComponent.html":{},"components/DagreNodeComponent.html":{},"components/DagreYamlParserComponent.html":{},"components/DirectionalLightComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridActorComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/LoaderActorComponent.html":{},"components/MapControlsComponent.html":{},"components/ModelActorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/StlLoaderComponent.html":{},"components/TextActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/VideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["yaml'].some(propname",{"_index":1140,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yaml.parse(this.yaml",{"_index":1145,"title":{},"body":{"components/DagreYamlParserComponent.html":{}}}],["yes",{"_index":2177,"title":{},"body":{"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":760,"title":{},"body":{"components/BoxMeshComponent.html":{},"classes/SVGLoader.html":{}}}],["z]*/ig",{"_index":2468,"title":{},"body":{"classes/SVGLoader.html":{}}}],["z][^a",{"_index":2467,"title":{},"body":{"classes/SVGLoader.html":{}}}],["zone.js",{"_index":3171,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":377,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":2067,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1800,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (await cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      return cacheHit;\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComponentFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentFactory(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentFactory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(id: string, component: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            defaultId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId: string;\n\n  constructor(\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string): ComponentFactory {\n    const comp = this.list.get(id ?? this.defaultId);\n    const result = this.resolver.resolveComponentFactory(comp);\n    return result;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(this.color);\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animationService loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  entryComponents: [\n    ServerStandActorComponent,\n    ServerBarrelActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    ModelActorComponent,\n    DagreNodeComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\nimport {StlLoaderComponent} from './stl-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init();\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        composition\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            darkenNonBloomed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    darkenNonBloomed(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renderer\n                                    \n                                            WebGLRenderer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scene\n                                    \n                                            THREE.Scene\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    camera\n                                    \n                                            THREE.Camera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            restoreMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    restoreMaterial(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bloomComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bloomLayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Layers()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            darkMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            finalComposer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            materials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer: EffectComposer;\n  private bloomComposer: EffectComposer;\n  public initialized = false;\n  protected scene: THREE.Scene;\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      // const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/blur.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(BoxMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:49\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:43\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [provideParent(BoxMeshComponent)],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        border\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChild\n                        \n                        \n                    \n                \n            \n            \n                \naddChild(object: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/content-projection.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentProjection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractObject3D\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('contentProjection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection: AbstractObject3D;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(CylinderMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {provideParent} from '../../util';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [provideParent(CylinderMeshComponent)],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor', parentScene);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreCompositionComponent.html":{"url":"components/DagreCompositionComponent.html","title":"component - DagreCompositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreCompositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreCompositionComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-composition\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n\n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                            \n                                    Public\n                                translateLabelY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                composition\n                            \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n                \n                    \n                        Default value : 'plane'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateLabelY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:48\n                                \n                            \n\n                \n                    \n                        setheight(height: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            height\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {ChangeDetectorRef, Component, EventEmitter, Injector, Input, OnDestroy, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-composition',\n  providers: [provideParent(DagreCompositionComponent)],\n  template: `\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n  `\n})\nexport class DagreCompositionComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() label: string;\n\n  @Input() border = 'plane';\n\n  private _height: number;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this.translateLabelY = this._height / 2 - 3;\n    if (!this.cdRef['destroyed']) {\n      this.cdRef.detectChanges();\n    }\n  }\n\n  get height(): number {\n    return this._height;\n  }\n\n  @Input() width: number;\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  @Input() composition: string;\n\n  public color: string | number = '#A0A0A0';\n  public translateLabelY: number;\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreCompositionComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n  public ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.label,\n        composition: this.composition\n      });\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreCompositionComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreCompositionComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n\n        // console.log('DagreCompositionComponent.layout: Update position node', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n\n        this.width = node.width;\n        this.height = node.height;\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreCompositionComponent.update');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreCompositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreLayoutComponent.html":{"url":"components/DagreLayoutComponent.html","title":"component - DagreLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreLayoutComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-layout\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                graph\n                            \n                            \n                                    Protected\n                                graphModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGraph\n                            \n                            \n                                    Public\n                                getGraphModel\n                            \n                            \n                                    Public\n                                layout\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                refreshLayout\n                            \n                            \n                                    Protected\n                                syncGraphContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                centered\n                            \n                            \n                                edgesep\n                            \n                            \n                                marginx\n                            \n                            \n                                marginy\n                            \n                            \n                                nodesep\n                            \n                            \n                                rankdir\n                            \n                            \n                                ranker\n                            \n                            \n                                ranksep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edgesep\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginx\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        marginy\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodesep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rankdir\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranker\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ranksep\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGraphModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGraphModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refreshLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshLayout()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphContainer(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     dagre.graphlib.Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphModel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreUtils} from './dagre-utils';\nimport {GraphModel} from './dagre-model';\n\n\n@Component({\n  selector: 'atft-dagre-layout',\n  providers: [provideParent(DagreLayoutComponent)],\n  template: `\n    `\n})\nexport class DagreLayoutComponent extends AbstractEmptyDirective implements AfterViewInit, OnChanges, OnDestroy, AfterContentInit {\n\n  @Input() align = 'DL';\n  @Input() rankdir = 'BT';\n  @Input() nodesep = 15;\n  @Input() edgesep = 1;\n  @Input() ranksep = 15;\n  @Input() marginx = 0;\n  @Input() marginy = 0;\n  @Input() ranker = 'network-simplex';\n\n  @Input() centered = true;\n\n  @Output() updated = new EventEmitter();\n\n  protected graphModel: GraphModel;\n  protected graph: dagre.graphlib.Graph;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n\n    // Initialize empty model:\n    this.graphModel = {\n      layout: {},\n      nodes: [],\n      edges: []\n    };\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n  }\n\n  ngAfterContentInit() {\n    this.layout();\n  }\n\n\n  public layout() {\n    // console.log('DagreLayoutComponent.layout');\n    this.graphModel.layout = {\n      align: this.align,\n      rankdir: this.rankdir,\n      nodesep: this.nodesep,\n      edgesep: this.edgesep,\n      ranksep: this.ranksep,\n      marginx: this.marginx,\n      marginy: this.marginy,\n      ranker: this.ranker\n    };\n    this.graph = DagreUtils.modelToGraph(this.graphModel);\n    // console.log('DagreLayoutComponent.layout: graph', this.graph);\n    this.syncGraphContainer(this.graph);\n    this.updated.emit();\n    this.rendererService.render();\n  }\n\n\n  protected syncGraphContainer(g: dagre.graphlib.Graph) {\n    // console.log('DagreLayoutComponent.syncGraphContainer');\n    if (this.object && this.centered) {\n      this.translateX = -(g.graph().width / 2);\n      this.translateY = -(g.graph().height / 2);\n      this.applyTranslation();\n    }\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreLayoutComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    let modified = false;\n\n    if (['align', 'rankdir', 'ranksep', 'nodesep', 'edgesep', 'marginx', 'marginy', 'ranker'].some(propName => propName in changes)) {\n      this.layout();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      // this.rendererService.render();\n    }\n\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.graph = undefined;\n    this.graphModel = undefined;\n  }\n\n  public getGraphModel() {\n    return this.graphModel;\n  }\n\n  public refreshLayout() {\n    if (this.graph) {\n      this.layout();\n    }\n  }\n\n  public getGraph() {\n    return this.graph;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreNodeComponent.html":{"url":"components/DagreNodeComponent.html","title":"component - DagreNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreNodeComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-node\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Protected\n                                dagreLayout\n                            \n                            \n                                    Protected\n                                graphUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addNode\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                removeNode\n                            \n                            \n                                    Protected\n                                syncGraph\n                            \n                            \n                                    Protected\n                                syncGraphNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                composition\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        composition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            removeNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            syncGraphNodes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    syncGraphNodes(g: dagre.graphlib.Graph)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dagreLayout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DagreLayoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Injector, Input, OnDestroy, OnInit, Optional, SkipSelf, ViewChild, ViewContainerRef} from '@angular/core';\nimport * as dagre from 'dagre';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreLayoutComponent} from './dagre-layout.component';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-dagre-node',\n  providers: [provideParent(DagreNodeComponent)],\n  template: ''\n})\nexport class DagreNodeComponent extends AbstractEmptyDirective implements OnInit, OnDestroy {\n\n  @Input() composition: string;\n\n  @Input() translateZ = 0;\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) container;\n\n  protected dagreLayout: DagreLayoutComponent;\n  protected graphUpdated: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected injector: Injector\n  ) {\n    super(rendererService, parent);\n\n    this.dagreLayout = this.injector.get(DagreLayoutComponent);\n    if (!this.dagreLayout) {\n      console.warn('DagreNodeComponent.constructor: atft-dagre-layout not found!');\n    }\n\n    this.syncGraph = this.syncGraph.bind(this);\n    this.graphUpdated = this.dagreLayout.updated.subscribe(this.syncGraph);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.addNode();\n  }\n\n  protected addNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.addNode', this.name);\n\n      // Register as layout children\n      this.dagreLayout.getChildren().push(this);\n\n      // Create Graph Node\n      this.dagreLayout.getGraphModel().nodes.push({\n        name: this.name,\n        label: this.name,\n        composition: this.composition\n      });\n\n       // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.removeNode();\n  }\n\n  protected removeNode() {\n    if (this.dagreLayout && this.dagreLayout.getGraphModel()) {\n      // console.log('DagreNodeComponent.removeNode', this.name);\n\n      // Unsubscribe from graph update events\n      this.graphUpdated?.unsubscribe();\n\n      // Remove from layout\n      this.dagreLayout.removeChildByName(this.name);\n\n      // Remove from model\n      this.dagreLayout.getGraphModel().nodes = this.dagreLayout.getGraphModel().nodes.filter(i => i.name !== this.name);\n\n      // Update Graph Layout\n      this.dagreLayout.refreshLayout();\n    }\n  }\n\n  protected syncGraphNodes(g: dagre.graphlib.Graph) {\n    // console.log('DagreNodeComponent.syncGraphNodes');\n    g.nodes().forEach((name) => {\n      // console.log('Node ' + name + ': ' + JSON.stringify(g.node(name)));\n      if (name === this.name) {\n        const node = g.node(name);\n        // console.log('DagreLayoutComponent.layout: Update position', node);\n        this.translateX = node.x;\n        this.translateY = node.y;\n        this.applyTranslation();\n      }\n    });\n  }\n\n  protected syncGraph() {\n    // console.log('DagreNodeComponent.syncGraph');\n    if (this.object) {\n      this.syncGraphNodes(this.dagreLayout.getGraph());\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLayout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLayout(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.GraphLabel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            modelToGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     dagre.graphlib.Graph\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateBaseInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    baseInfo\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateEdges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateGraph\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    g\n                                    \n                                            dagre.graphlib.Graph\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                GraphModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(\n      this.getLayout(model)\n    );\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout', g);\n    dagre.layout(g);\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n    this.updateBaseInfo(g, model.compositions);\n    this.updateBaseInfo(g, model.nodes);\n    this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): dagre.GraphLabel {\n    const layout: dagre.GraphLabel = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DagreYamlParserComponent.html":{"url":"components/DagreYamlParserComponent.html","title":"component - DagreYamlParserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DagreYamlParserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DagreYamlParserComponent)\n                \n            \n\n\n            \n                selector\n                atft-dagre-yaml-parser\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                instances\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createComposition\n                            \n                            \n                                    Protected\n                                createEdge\n                            \n                            \n                                    Protected\n                                createNode\n                            \n                            \n                                    Protected\n                                destroyAll\n                            \n                            \n                                    Protected\n                                getNodeComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                parseAndCreate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                yaml\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, resolver: ComponentFactoryResolver, actorRepository: ActorRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actorRepository\n                                                  \n                                                        \n                                                                        ActorRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        yaml\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createComposition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createComposition(composition: Composition)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composition\n                                    \n                                                Composition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createEdge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEdge(edge: Edge)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    edge\n                                    \n                                                Edge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(node: Node)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            destroyAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseAndCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseAndCreate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instances\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport * as yaml from 'yaml';\nimport {AbstractEmptyDirective, AbstractObject3D} from '../../../object';\nimport {RendererService} from '../../../renderer';\nimport {provideParent} from '../../../util';\nimport {DagreCompositionComponent} from './dagre-composition.component';\nimport {DagreEdgeComponent} from './dagre-edge.component';\nimport {Composition, Edge, GraphModel, Node} from './dagre-model';\nimport {DagreNodeComponent} from './dagre-node.component';\nimport {ActorRepositoryService} from '../service';\n\n\n/*\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n*/\n\n@Component({\n  selector: 'atft-dagre-yaml-parser',\n  providers: [provideParent(DagreYamlParserComponent)],\n  template: `\n    `\n})\nexport class DagreYamlParserComponent extends AbstractEmptyDirective implements OnChanges, AfterViewInit {\n\n  @Input() yaml;\n\n  @Output() status = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef}) container;\n\n  private instances = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected resolver: ComponentFactoryResolver,\n    protected actorRepository: ActorRepositoryService\n  ) {\n    super(rendererService, parent);\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.parseAndCreate();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    // console.log('DagreYamlParserComponent.ngOnChanges', this.name);\n\n    if (!this.object) {\n      return;\n    }\n\n    if (['yaml'].some(propName => propName in changes)) {\n      this.parseAndCreate();\n    }\n  }\n\n  public parseAndCreate() {\n    // console.log('DagreYamlParserComponent.parseAndCreate');\n    if (this.yaml) {\n      try {\n        this.destroyAll();\n        const model: GraphModel = yaml.parse(this.yaml);\n\n        // console.log('DagreYamlParserComponent.parseAndCreate yaml', model);\n        if (model && model.nodes && model.nodes.length > 0) {\n\n          model.compositions?.forEach(i => this.createComposition(i));\n          model.nodes?.forEach(i => this.createNode(i));\n          model.edges?.forEach(i => this.createEdge(i));\n        }\n        this.status.emit(true);\n      } catch (e) {\n        console.warn('DagreYamlParserComponent.parseAndCreate failed', e);\n        this.status.emit(false);\n        throw e;\n      }\n    }\n  }\n\n  protected getNodeComponent(id: string) {\n    return this.actorRepository.getComponentFactory(id);\n  }\n\n  protected createNode(node: Node) {\n    // console.log('DagreYamlParserComponent.createNode', node);\n    const nodeFactory = this.resolver.resolveComponentFactory(DagreNodeComponent);\n    const nodeRef = this.container.createComponent(nodeFactory);\n    nodeRef.instance.name = node.name;\n    nodeRef.instance.composition = node.composition;\n    this.instances.push(nodeRef);\n\n    const serverFactory = this.getNodeComponent((node.model ? 'model' : node.type));\n    const serverRef = nodeRef.instance.container.createComponent(serverFactory);\n    serverRef.instance.name = node.name;\n    serverRef.instance.label = (node.label ? node.label : node.name);\n    serverRef.instance.icon = node.icon;\n    serverRef.instance.model = node.model;\n\n    this.instances.push(serverRef);\n  }\n\n\n  protected createEdge(edge: Edge) {\n    // console.log('DagreYamlParserComponent.createEdge', edge);\n    const factory = this.resolver.resolveComponentFactory(DagreEdgeComponent);\n    const edgeRef = this.container.createComponent(factory);\n    edgeRef.instance.from = edge.from;\n    edgeRef.instance.to = edge.to;\n    if (edge.type) {\n      edgeRef.instance.type = edge.type;\n    }\n    if (edge.color) {\n      edgeRef.instance.materialColor = edge.color;\n    }\n\n    this.instances.push(edgeRef);\n  }\n\n\n  protected destroyAll() {\n    // console.log('DagreYamlParserComponent.destroyAll');\n    this.instances.forEach(i => {\n      // console.log('DagreYamlParserComponent destroy', i);\n      i.destroy();\n    });\n    this.instances = [];\n  }\n\n\n  private createComposition(composition: Composition) {\n    // console.log('DagreYamlParserComponent.createComposition', node);\n    const factory = this.resolver.resolveComponentFactory(DagreCompositionComponent);\n    const compositionRef = this.container.createComponent(factory);\n    compositionRef.instance.name = composition.name;\n    compositionRef.instance.label = (composition.label ? composition.label : composition.name);\n    compositionRef.instance.composition = composition.composition;\n    compositionRef.instance.border = composition.border;\n\n    this.instances.push(compositionRef);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DagreYamlParserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FF0000'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            tryToFindGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    tryToFindGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            material\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Material\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stop\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor: string | number = '#FF0000';\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity;\n  @Input() targetOpacity;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material: THREE.Material;\n  private stop = false;\n  protected animation: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: this.dashColor}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        // console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(DirectionalLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [provideParent(DirectionalLightComponent)],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      this.color,\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyChanges\n                        \n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initPasses\n                        \n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addPass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initComposer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removePass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePass(pass: Pass)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                            Pass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EffectComposer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget: SceneComponent;\n\n  protected composer: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(null);\n    this.composer = null;\n    this.rendererService.render();\n  }\n\n  public initComposer() {\n    if (!this.composer && this.rendererService.getWebGlRenderer()) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#0000AA'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            disableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            enableFog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableFog()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/fog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Scene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color: string | number = '#0000AA';\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(this.color, this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = undefined;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/font.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(FrameMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getGeometry\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getGeometry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.ShapeBufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [provideParent(FrameMeshComponent)],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh implements OnChanges {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected getGeometry(): THREE.ShapeBufferGeometry {\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    return geometry;\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(this.getGeometry(), material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('FrameMeshComponent.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['sizeX', 'sizeY', 'thickness'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.ShapeBufferGeometry) {\n          const currentGeometry: THREE.ShapeBufferGeometry = mesh.geometry;\n          const newGeometry = this.getGeometry();\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n        modified = true;\n      }\n\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        compositions\n                                \n                                \n                                            Optional\n                                        edges\n                                \n                                \n                                            Optional\n                                        layout\n                                \n                                \n                                            Optional\n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridActorComponent.html":{"url":"components/GridActorComponent.html","title":"component - GridActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-actor\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                grid\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getLinePosition\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onMouseClick\n                            \n                            \n                                    Public\n                                onMouseEnter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                gridClick\n                            \n                            \n                                gridEnter\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gridEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getLinePosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLinePosition(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.BufferAttribute\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseClick(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event: RaycasterEmitEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RaycasterEmitEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridMeshComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('grid', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport { AbstractEmptyDirective, GridMeshComponent } from '../../../object';\nimport * as THREE from 'three';\nimport {RaycasterEmitEvent} from '../../../raycaster';\n\n\n@Component({\n  selector: 'atft-grid-actor',\n  providers: [provideParent(GridActorComponent)],\n  template: `\n    \n  `\n})\nexport class GridActorComponent extends AbstractEmptyDirective {\n\n  @ViewChild('grid', {static: true}) grid: GridMeshComponent;\n\n  @Input() size = 5;\n  @Input() iterationsX = 20;\n  @Input() iterationsY = 20;\n  @Input() offset = 1.05;\n\n  @Output() render = new EventEmitter();\n  @Output() gridEnter = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n  @Output() gridClick = new EventEmitter();\n\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onMouseEnter(event: RaycasterEmitEvent) {\n    // console.log('selected', event);\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      this.gridEnter.emit(pos);\n    }\n  }\n\n  public onMouseClick(event: RaycasterEmitEvent) {\n    // console.log('GridActorComponent.onMouseClick');\n    const pos = this.getLinePosition(event);\n    if (pos) {\n      // console.log('GridActorComponent.onMouseClick position', pos);\n      this.gridClick.emit(pos);\n    }\n  }\n\n  protected getLinePosition(event: RaycasterEmitEvent): THREE.BufferAttribute {\n    if (event.face) {\n      // console.log('Finding coordinates for face', event.face);\n\n      const geo: any = this.grid.getObject().geometry;\n      const meshPosition: THREE.BufferAttribute = geo.attributes.position;\n\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(4 * 3), 3));\n      const line = new THREE.Line(geometry, new THREE.LineBasicMaterial({color: 0xffffff, transparent: true}));\n\n      const linePosition: any = line.geometry.attributes.position;\n\n      // console.log('Looking geometry positions', meshPosition);\n      linePosition.copyAt(0, meshPosition, event.face.a);\n      linePosition.copyAt(1, meshPosition, event.face.b);\n      linePosition.copyAt(2, meshPosition, event.face.c);\n      linePosition.copyAt(3, meshPosition, event.face.a);\n\n      // console.log('linePosition', linePosition);\n      return linePosition;\n    } else {\n      return null;\n    }\n  }\n\n  public onDeselected() {\n    // console.log('deselected');\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [provideParent(GridMeshComponent)],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = y0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#444444'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor: string | number = '#ffffff';\n  @Input() groundColor: string | number = '#444444';\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      this.skyColor,\n      this.groundColor,\n      this.intensity\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                IconSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IconSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'md'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/icon.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        allowColorOverride\n                                \n                                \n                                        isCCW\n                                \n                                \n                                        noHoles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractEmptyDirective\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LayerActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                label\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#A0A0A0'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractEmptyDirective } from '../../../object';\nimport { provideParent } from '../../../util';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [provideParent(LayerActorComponent)],\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class LayerActorComponent extends AbstractEmptyDirective {\n  @Input() label: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color: string | number = '#A0A0A0';\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = '#A4A4A4';\n  }\n\n  public onDeselected() {\n    this.color = '#A0A0A0';\n  }\n\n  public onClick() {\n    this.color = '#A0A0A0';\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LineConnectorComponent)\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                clock\n                            \n                            \n                                    Protected\n                                line\n                            \n                            \n                                    Private\n                                matLine\n                            \n                            \n                                    Protected\n                                time\n                            \n                            \n                                    Protected\n                                timeScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                    Public\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                getPositions\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                dashSize\n                            \n                            \n                                gapSize\n                            \n                            \n                                lineType\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                solid\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashSize\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gapSize\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineType\n                    \n                \n                \n                    \n                        Type :         LineType\n\n                    \n                \n                \n                    \n                        Default value : LineType.dashed\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xFFFFFF\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solid\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createLineMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLineMesh()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Line2\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getPositions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPositions()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clock\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Clock()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Line2\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            matLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timeScale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport * as THREE from 'three';\nimport {AnimationService} from '../../animation';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {Line2} from 'three/examples/jsm/lines/Line2';\nimport {LineGeometry} from 'three/examples/jsm/lines/LineGeometry';\nimport {LineMaterial} from 'three/examples/jsm/lines/LineMaterial';\n\nexport enum LineType {\n  dashed = 'dash',\n  solid = 'solid'\n}\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [provideParent(LineConnectorComponent)],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector implements OnDestroy, OnChanges {\n\n  @Input() materialColor = 0xFFFFFF;\n  @Input() solid = false;\n  @Input() lineWidth = 2;\n  @Input() dashSize = 3;\n  @Input() gapSize = 0.5;\n  @Input() opacity = 1;\n  @Input() lineType: LineType = LineType.dashed;\n\n  @Input() animated = true;\n  protected animation: Subscription;\n  protected time = 0;\n  protected timeScale = 5;\n  protected clock = new THREE.Clock();\n\n  protected line: Line2;\n  private matLine: LineMaterial;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService,\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createLineMesh(): Line2 {\n    const positions = this.getPositions();\n    const geometry = new LineGeometry();\n    geometry.setPositions(positions);\n\n    this.matLine = new LineMaterial({\n      // wrong type in three@types def color?: number;\n      // color: parseInt(Number(this.materialColor).toString(), 10),\n      color: this.materialColor,\n      linewidth: this.lineWidth,\n      vertexColors: false,\n      dashed: !this.solid,\n      dashSize: this.dashSize,\n      dashOffset: 0,\n      gapSize: this.gapSize,\n      opacity: this.opacity,\n      transparent: this.opacity  propName in changes)) {\n      console.log('Changed color to', this.materialColor);\n      this.line.material.color = new THREE.Color(this.materialColor);\n      this.line.material.needsUpdate = true;\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderActorComponent.html":{"url":"components/LoaderActorComponent.html","title":"component - LoaderActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(LoaderActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-loader-actor\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                ring1\n                            \n                            \n                                    Private\n                                ring2\n                            \n                            \n                                    Private\n                                ring3\n                            \n                            \n                                    Private\n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                            \n                                    Protected\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ring3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Mesh\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { appliedMaterial, provideParent } from '../../../util';\nimport { EmptyComponent } from '../../../object/helper';\nimport { AnimationService } from '../../../animation';\nimport { RendererService } from '../../../renderer';\nimport { AbstractObject3D } from '../../../object';\nimport * as THREE from 'three';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'atft-loader-actor',\n  providers: [provideParent(LoaderActorComponent)],\n  template: ``\n})\nexport class LoaderActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  animate = true;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  private ring1: THREE.Mesh;\n  private ring2: THREE.Mesh;\n  private ring3: THREE.Mesh;\n\n  private subscribed = false;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('LoaderActorComponent.ngAfterViewInit');\n    this.init();\n    this.start();\n  }\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, 'basic');\n  }\n\n  protected init() {\n    // console.log('LoaderActorComponent.init');\n    const geometry = new THREE.RingGeometry(0.85, 1, 64, 1, 0, Math.PI * 1.8);\n    const material = this.getMaterial();\n\n    this.ring1 = new THREE.Mesh(geometry, material);\n    this.ring1.scale.set(70, 70, 1);\n    this.object.add(this.ring1);\n\n    this.ring2 = new THREE.Mesh(geometry, material);\n    this.ring2.scale.set(60, 60, 1);\n    this.object.add(this.ring2);\n\n    this.ring3 = new THREE.Mesh(geometry, material);\n    this.ring3.scale.set(50, 50, 1);\n    this.object.add(this.ring3);\n\n\n  }\n\n  protected start() {\n    // console.log('LoaderActorComponent.updateText');\n    if (this.animate) {\n      // console.log('LoaderActorComponent.animate init');\n      this.updateAnimation = this.updateAnimation.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n      this.subscribed = true;\n      this.animationService.start();\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('LoaderActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.stop();\n  }\n\n  protected updateAnimation() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.updateAnimation');\n      this.i++;\n      this.ring1.scale.set(70 + (Math.sin(this.i / 20) * 10) + 12, 70 + (Math.sin(this.i / 20) * 10) + 12, 1);\n\n      this.ring1.rotateZ(Math.sin(this.i / 100) / 5);\n      this.ring2.rotateZ(Math.cos(this.i / 70) / 10);\n      this.ring3.rotateZ(Math.sin(this.i / 50) / 20);\n    }\n  }\n\n  public stop() {\n    if (this.subscribed) {\n      // console.log('LoaderActorComponent.done');\n      this.subscribed = false;\n      this.i = 0;\n      this.animation?.unsubscribe();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelActorComponent.html":{"url":"components/ModelActorComponent.html","title":"component - ModelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ModelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-model-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelPath\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, modelService: ModelService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelService\n                                                  \n                                                        \n                                                                        ModelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:36\n                                \n                            \n\n                \n                    \n                        setmodel(model: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/server/model-actor.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            model\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\nimport {AbstractObject3D, ModelService} from '../../../object';\nimport {RendererService} from '../../../renderer';\n\n@Component({\n  selector: 'atft-model-actor',\n  providers: [provideParent(ModelActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ModelActorComponent extends AbstractServerActor {\n\n  @Input()\n  set model(model: string) {\n    const iconProvider = this.modelService.getSource(model);\n    this.modelPath = iconProvider.url;\n  }\n\n  get model(): string {\n    return this.model;\n  }\n\n  public modelPath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected modelService: ModelService\n  ) {\n    super(rendererService, parent);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                BaseAssetSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BaseAssetSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            defaultIfNotFound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:57\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getFinalResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    finalUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSource(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSourceByNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDefaultProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultProvider(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractAssetService\n\n                \n            \n            \n                \n                        Defined in         AbstractAssetService:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '3d'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/model.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            defaultProvider\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractAssetService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractAssetService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        face\n                                \n                                \n                                        object\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, objLoader: ObjLoaderService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        objLoader\n                                                  \n                                                        \n                                                                        ObjLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:39\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:31\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:31\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {ObjLoaderService} from './services/obj-loader.service';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [provideParent(ObjLoaderComponent)],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected objLoader: ObjLoaderService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    if (this.material) {\n      const preloadingStep = new Promise((resolve, reject) => {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.objLoader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      });\n      // Await preloading and load final model\n      await preloadingStep;\n    }\n\n    const obj = await this.objLoader.load(this.model);\n    return obj.clone();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setMaterials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    materialCreator\n                                    \n                                            MTLLoader.MaterialCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ObjectLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Optional, SkipSelf } from '@angular/core';\n\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [provideParent(ObjectLoaderComponent)],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateZoom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateZoom()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PlaneMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:25\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:37\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:19\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:31\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [provideParent(PlaneMeshComponent)],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh implements OnChanges {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    let modified = false;\n\n    if (['width', 'height', 'widthSegments', 'heightSegments'].some(propName => propName in changes)) {\n      if (this.getObject() instanceof THREE.Mesh) {\n        const mesh: THREE.Mesh = this.getObject();\n\n        if (mesh.geometry instanceof THREE.PlaneBufferGeometry) {\n          const currentGeometry: THREE.PlaneBufferGeometry = mesh.geometry;\n          const newGeometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n          currentGeometry.attributes = newGeometry.attributes;\n        }\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PointLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [provideParent(PointLightComponent)],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(this.color, this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                            Optional\n                                        face\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NearestIntersection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.object) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): NearestIntersection {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return {\n        object: null,\n        face: null\n      };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            resetCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetCanvas()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWebGlRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWebGlRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    preserveDrawingBuffer\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setComposer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComposer(composer: EffectComposerComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    composer\n                                    \n                                                EffectComposerComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            composer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EffectComposerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n\n@Injectable()\nexport class RendererService {\n\n  private init = false;\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private webGlRenderer: THREE.WebGLRenderer;\n  private aspect: number;\n\n  private composer: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGLoader.html":{"url":"classes/SVGLoader.html","title":"class - SVGLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/threejs-fork/SVGLoader.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Loader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDPI\n                            \n                            \n                                defaultUnit\n                            \n                            \n                                defs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createShapes\n                            \n                            \n                                    Static\n                                getStrokeStyle\n                            \n                            \n                                load\n                            \n                            \n                                parse\n                            \n                            \n                                    Static\n                                pointsToStroke\n                            \n                            \n                                    Static\n                                pointsToStrokeWithBuffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager?)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDPI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 90\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'px'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createShapes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createShapes(shapePath)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:1676\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shapePath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getStrokeStyle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStrokeStyle(width, color, lineJoin, lineCap, miterLimit)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineJoin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lineCap\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    miterLimit\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { strokeColor: any; strokeWidth: any; strokeLineJoin: any; strokeLineCap: any; strokeMiterLimit: ...\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(url, onLoad, onProgress, onError)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onLoad\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onProgress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    onError\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(text)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { paths: {}; xml: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            pointsToStroke\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStroke(points, style, arcDivisions, minDistance)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            pointsToStrokeWithBuffers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset?)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arcDivisions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minDistance\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertices\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    normals\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    uvs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vertexOffset\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Box2,\n  BufferGeometry,\n  FileLoader,\n  Float32BufferAttribute,\n  Loader,\n  Matrix3,\n  Path,\n  Shape,\n  ShapePath,\n  ShapeUtils,\n  Vector2,\n  Vector3\n} from 'three';\n\n/* eslint-disable */\nclass SVGLoader extends Loader {\n\n  defaultDPI = 90; // MA:\n  defaultUnit = 'px'; // MA:\n  defs = []; // MA:\n\n  constructor( manager? ) {\n\n    super( manager );\n\n    // Default dots per inch\n    this.defaultDPI = 90;\n\n    // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n    this.defaultUnit = 'px';\n\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    const scope = this;\n\n    const loader = new FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.setRequestHeader( scope.requestHeader );\n    loader.setWithCredentials( scope.withCredentials );\n    loader.load( url, function ( text ) {\n\n      try {\n\n        onLoad( scope.parse( text ) );\n\n      } catch ( e ) {\n\n        if ( onError ) {\n\n          onError( e );\n\n        } else {\n\n          console.error( e );\n\n        }\n\n        scope.manager.itemError( url );\n\n      }\n\n    }, onProgress, onError );\n\n  }\n\n  parse( text ) {\n\n    const scope = this;\n\n    function parseNode( node, style ) {\n\n      if ( node.nodeType !== 1 ) return;\n\n      const transform = getNodeTransform( node );\n\n      let traverseChildNodes = true;\n\n      let path = null;\n\n      switch ( node.nodeName ) {\n\n        case 'svg':\n          break;\n\n        case 'style':\n          parseCSSStylesheet( node );\n          break;\n\n        case 'g':\n          style = parseStyle( node, style );\n          break;\n\n        case 'path':\n          style = parseStyle( node, style );\n          if ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n          break;\n\n        case 'rect':\n          style = parseStyle( node, style );\n          path = parseRectNode( node );\n          break;\n\n        case 'polygon':\n          style = parseStyle( node, style );\n          path = parsePolygonNode( node );\n          break;\n\n        case 'polyline':\n          style = parseStyle( node, style );\n          path = parsePolylineNode( node );\n          break;\n\n        case 'circle':\n          style = parseStyle( node, style );\n          path = parseCircleNode( node );\n          break;\n\n        case 'ellipse':\n          style = parseStyle( node, style );\n          path = parseEllipseNode( node );\n          break;\n\n        case 'line':\n          style = parseStyle( node, style );\n          path = parseLineNode( node );\n          break;\n\n        case 'defs':\n          traverseChildNodes = false;\n          parseDefs(node);\n          break;\n\n        case 'use':\n          style = parseStyle( node, style );\n          const usedNodeId = node.href.baseVal.substring( 1 );\n          const usedNode = node.viewportElement.getElementById( usedNodeId );\n          if ( usedNode ) {\n\n            parseNode( usedNode, style );\n\n          } else {\n\n            console.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n          }\n\n          break;\n\n        default:\n        // console.log( node );\n\n      }\n\n      if ( path ) {\n\n        if ( style.fill !== undefined && style.fill !== 'none' ) {\n\n          path.color.setStyle( style.fill );\n\n        }\n\n        transformPath( path, currentTransform );\n\n        paths.push( path );\n\n        path.userData = { node: node, style: style };\n\n      }\n\n      if ( traverseChildNodes ) {\n\n        const nodes = node.childNodes;\n\n        for ( let i = 0; i  0 ) {\n\n          currentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n        } else {\n\n          currentTransform.identity();\n\n        }\n\n      }\n\n    }\n\n    function parsePathNode( node ) {\n\n      const path = new ShapePath();\n\n      const point = new Vector2();\n      const control = new Vector2();\n\n      const firstPoint = new Vector2();\n      let isFirstPoint = true;\n      let doSetFirstPoint = false;\n\n      const d = node.getAttribute( 'd' );\n\n      // console.log( d );\n\n      const commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n      for ( let i = 0, l = commands.length; i  0 ) {\n\n              // Reset point to beginning of Path\n              point.copy( firstPoint );\n              path.currentPath.currentPoint.copy( point );\n              isFirstPoint = true;\n\n            }\n\n            break;\n\n          default:\n            console.warn( command );\n\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false;\n\n      }\n\n      return path;\n\n    }\n\n    function parseCSSStylesheet( node ) {\n\n      if ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n      for ( let i = 0; i  i.trim() );\n\n        for ( let j = 0; j  1 ) {\n\n        // scale up rx,ry equally so cr == 1\n        const s = Math.sqrt( cr );\n        rx = s * rx;\n        ry = s * ry;\n        rxs = rx * rx;\n        rys = ry * ry;\n\n      }\n\n      const dq = ( rxs * y1ps + rys * x1ps );\n      const pq = ( rxs * rys - dq ) / dq;\n      let q = Math.sqrt( Math.max( 0, pq ) );\n      if ( large_arc_flag === sweep_flag ) q = - q;\n      const cxp = q * rx * y1p / ry;\n      const cyp = - q * ry * x1p / rx;\n\n      // Step 3: Compute (cx, cy) from (cx', cy')\n      const cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n      const cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n      // Step 4: Compute θ1 and Δθ\n      const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n      const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n      path.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n    }\n\n    function svgAngle( ux, uy, vx, vy ) {\n\n      const dot = ux * vx + uy * vy;\n      const len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n      let ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n      if ( ( ux * vy - uy * vx )  i.trim() );\n\n        for ( let i = 0; i  0 ) {\n\n        transform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n      }\n\n      currentTransform.copy( transform );\n      transformStack.push( transform );\n\n      return transform;\n\n    }\n\n    function parseNodeTransform( node ) {\n\n      const transform = new Matrix3();\n      const currentTransform = tempTransform0;\n\n      if ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n        const tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n        const ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n        transform.translate( tx, ty );\n\n      }\n\n      if ( node.hasAttribute( 'transform' ) ) {\n\n        const transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n        for ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n          const transformText = transformsTexts[ tIndex ].trim();\n\n          if ( transformText === '' ) continue;\n\n          const openParPos = transformText.indexOf( '(' );\n          const closeParPos = transformText.length;\n\n          if ( openParPos > 0 && openParPos = 1 ) {\n\n                  const tx = array[ 0 ];\n                  let ty = tx;\n\n                  if ( array.length >= 2 ) {\n\n                    ty = array[ 1 ];\n\n                  }\n\n                  currentTransform.translate( tx, ty );\n\n                }\n\n                break;\n\n              case 'rotate':\n\n                if ( array.length >= 1 ) {\n\n                  let angle = 0;\n                  let cx = 0;\n                  let cy = 0;\n\n                  // Angle\n                  angle = - array[ 0 ] * Math.PI / 180;\n\n                  if ( array.length >= 3 ) {\n\n                    // Center x, y\n                    cx = array[ 1 ];\n                    cy = array[ 2 ];\n\n                  }\n\n                  // Rotate around center (cx, cy)\n                  tempTransform1.identity().translate( - cx, - cy );\n                  tempTransform2.identity().rotate( angle );\n                  tempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n                  tempTransform1.identity().translate( cx, cy );\n                  currentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n                }\n\n                break;\n\n              case 'scale':\n\n                if ( array.length >= 1 ) {\n\n                  const scaleX = array[ 0 ];\n                  let scaleY = scaleX;\n\n                  if ( array.length >= 2 ) {\n\n                    scaleY = array[ 1 ];\n\n                  }\n\n                  currentTransform.scale( scaleX, scaleY );\n\n                }\n\n                break;\n\n              case 'skewX':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n                    0, 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'skewY':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, 0, 0,\n                    Math.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'matrix':\n\n                if ( array.length === 6 ) {\n\n                  currentTransform.set(\n                    array[ 0 ], array[ 2 ], array[ 4 ],\n                    array[ 1 ], array[ 3 ], array[ 5 ],\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n            }\n\n          }\n\n          transform.premultiply( currentTransform );\n\n        }\n\n      }\n\n      return transform;\n\n    }\n\n    function transformPath( path, m ) {\n\n      function transfVec2( v2 ) {\n\n        tempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n        v2.set( tempV3.x, tempV3.y );\n\n      }\n\n      const isRotated = isTransformRotated( m );\n\n      const subPaths = path.subPaths;\n\n      for ( let i = 0, n = subPaths.length; i = 1 ) || ( t2  1 ) ) {\n\n        //1. lines are parallel or edges don't intersect\n\n        return null;\n\n      } else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n        //2. lines are colinear\n\n        //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n        for ( let i = 0; i  Number.EPSILON ) {\n\n        classifyResult.loc = IntersectionLocationType.RIGHT;\n        return;\n\n\n      }\n\n      if ( ( ( ax * bx )  i.t = intersection.t - Number.EPSILON ) === undefined ) {\n\n            intersectionsRaw.push( intersection );\n            intersections.push( new Vector2( intersection.x, intersection.y ) );\n\n          }\n\n        }\n\n      }\n\n      return intersections;\n\n    }\n\n    function getScanlineIntersections( scanline, boundingBox, paths ) {\n\n      const center = new Vector2();\n      boundingBox.getCenter( center );\n\n      const allIntersections = [];\n\n      paths.forEach( path => {\n\n        // check if the center of the bounding box is in the bounding box of the paths.\n        // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n        // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n        if ( path.boundingBox.containsPoint( center ) ) {\n\n          const intersections = getIntersections( scanline, path.points );\n\n          intersections.forEach( p => {\n\n            allIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n          } );\n\n        }\n\n      } );\n\n      allIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      return allIntersections;\n\n    }\n\n    function isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n      if ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n        _fillRule = 'nonzero';\n\n      }\n\n      const centerBoundingBox = new Vector2();\n      simplePath.boundingBox.getCenter( centerBoundingBox );\n\n      const scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n      const scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n      scanlineIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      const baseIntersections = [];\n      const otherIntersections = [];\n\n      scanlineIntersections.forEach( i => {\n\n        if ( i.identifier === simplePath.identifier ) {\n\n          baseIntersections.push( i );\n\n        } else {\n\n          otherIntersections.push( i );\n\n        }\n\n      } );\n\n      const firstXOfPath = baseIntersections[ 0 ].point.x;\n\n      // build up the path hierarchy\n      const stack = [];\n      let i = 0;\n\n      while ( i  0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n          stack.pop();\n\n        } else {\n\n          stack.push( otherIntersections[ i ].identifier );\n\n        }\n\n        i ++;\n\n      }\n\n      stack.push( simplePath.identifier );\n\n      if ( _fillRule === 'evenodd' ) {\n\n        const isHole = stack.length % 2 === 0 ? true : false;\n        const isHoleFor = stack[ stack.length - 2 ];\n\n        return { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n      } else if ( _fillRule === 'nonzero' ) {\n\n        // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n        let isHole = true;\n        let isHoleFor = null;\n        let lastCWValue = null;\n\n        for ( let i = 0; i  {\n\n      const points = p.getPoints();\n      let maxY = - BIGNUMBER;\n      let minY = BIGNUMBER;\n      let maxX = - BIGNUMBER;\n      let minX = BIGNUMBER;\n\n      //points.forEach(p => p.y *= -1);\n\n      for ( let i = 0; i  maxY ) {\n\n          maxY = p.y;\n\n        }\n\n        if ( p.y  maxX ) {\n\n          maxX = p.x;\n\n        }\n\n        if ( p.x = minX ) {\n\n        scanlineMinX = minX - 1;\n\n      }\n\n      return { points: points, isCW: ShapeUtils.isClockWise( points ), identifier: identifier ++, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n    } );\n\n    simplePaths = simplePaths.filter( sp => sp.points.length > 0 );\n\n    // check if path is solid or a hole\n    const isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule ) );\n\n\n    const shapesToReturn = [];\n    simplePaths.forEach( p => {\n\n      const amIAHole = isAHole[ p.identifier ];\n\n      if ( ! amIAHole.isHole ) {\n\n        const shape = new Shape( p.points );\n        const holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n        holes.forEach( h => {\n\n          const path = simplePaths[ h.identifier ];\n          shape.holes.push( new Path( path.points ) );\n\n        } );\n        shapesToReturn.push( shape );\n\n      }\n\n    } );\n\n    return shapesToReturn;\n\n  }\n\n  static getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n    // Param width: Stroke width\n    // Param color: As returned by THREE.Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n      strokeColor: color,\n      strokeWidth: width,\n      strokeLineJoin: lineJoin,\n      strokeLineCap: lineCap,\n      strokeMiterLimit: miterLimit\n    };\n\n  }\n\n  static pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    if ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n      return null;\n\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n    return geometry;\n\n  }\n\n  static pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset? ) {\n\n    // This function can be called to update existing arrays or buffers.\n    // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n    // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n    // Returns number of written vertices / normals / uvs pairs\n    // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n    // 'normals' and 'uvs' buffers are optional\n\n    const tempV2_1 = new Vector2();\n    const tempV2_2 = new Vector2();\n    const tempV2_3 = new Vector2();\n    const tempV2_4 = new Vector2();\n    const tempV2_5 = new Vector2();\n    const tempV2_6 = new Vector2();\n    const tempV2_7 = new Vector2();\n    const lastPointL = new Vector2();\n    const lastPointR = new Vector2();\n    const point0L = new Vector2();\n    const point0R = new Vector2();\n    const currentPointL = new Vector2();\n    const currentPointR = new Vector2();\n    const nextPointL = new Vector2();\n    const nextPointR = new Vector2();\n    const innerPoint = new Vector2();\n    const outerPoint = new Vector2();\n\n    arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n    minDistance = minDistance !== undefined ? minDistance : 0.001;\n    vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n    // First ensure there are no duplicated points\n    points = removeDuplicatedPoints( points );\n\n    const numPoints = points.length;\n\n    if ( numPoints = minDistance ) {\n\n          newPoints.push( points[ i ] );\n\n        }\n\n      }\n\n      newPoints.push( points[ points.length - 1 ] );\n\n      return newPoints;\n\n    }\n\n  }\n\n\n}\n\nexport { SVGLoader };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SVGLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                icon\n                            \n                            \n                                isCCW\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                noHoles\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, svgLoader: SvgLoaderService, iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        svgLoader\n                                                  \n                                                        \n                                                                        SvgLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                        IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isCCW\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noHoles\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:41\n                                \n                            \n\n                \n                    \n                        seticon(icon: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            icon\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, fixCenter, provideParent, scaleToFit} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {IconService, SvgLoaderService} from './services';\nimport * as THREE from 'three';\n\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [provideParent(SVGLoaderComponent)],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): string {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: string) {\n    this._overrideMaterialColor = value;\n    if (this.object) {\n      this.startLoading();\n    }\n  }\n\n  @Input()\n  set icon(icon: string) {\n    // console.log('SVGLoaderComponent.icon', icon);\n    const iconProvider = this.iconService.getSource(icon);\n    this.model = iconProvider.url;\n    this.isCCW = iconProvider.isCCW;\n    this.noHoles = iconProvider.noHoles;\n    if (!iconProvider.allowColorOverride) {\n      this.overrideMaterialColor = undefined;\n    }\n  }\n\n  get icon(): string {\n    return this.model;\n  }\n  private _overrideMaterialColor: string = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  @Input()\n  isCCW = false;\n\n  @Input()\n  noHoles = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected svgLoader: SvgLoaderService,\n    protected iconService: IconService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public async loadLazyObject(): Promise {\n    // console.log('SVGLoaderComponent.loadLazyObject', this.model);\n\n    const paths = await this.svgLoader.load(this.model);\n    const group = new THREE.Group();\n\n    for (const path of paths) {\n      const color = (this._overrideMaterialColor ? this._overrideMaterialColor : path.color);\n      const material = appliedMaterial(color, this.material, this.depthWrite);\n      const shapes: THREE.Shape[] = path.toShapes(this.isCCW, this.noHoles);\n\n      for (const shape of shapes) {\n        const geometry = new THREE.ShapeBufferGeometry(shape);\n        const mesh = new THREE.Mesh(geometry, material);\n        group.add(mesh);\n      }\n    }\n\n\n    if (this.maxX || this.maxY) {\n      scaleToFit(group, new THREE.Vector3(this.maxX, this.maxY, 0));\n    }\n    if (this.centered) {\n      fixCenter(group);\n    }\n\n    return group;\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background: number | string = '#ffffff';\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(this.background);\n    return scene;\n  }\n\n  public updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(this.background);\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerBarrelActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n\n    \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [provideParent(ServerBarrelActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n\n        \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerCompactActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [provideParent(ServerCompactActorComponent)],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerIconActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n  \n    \n    \n  \n\n  \n  \n  \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [provideParent(ServerIconActorComponent)],\n  template: `\n    \n\n      \n        \n        \n      \n\n      \n      \n      \n      \n\n    \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ServerStandActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n      \n      \n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport { provideParent } from '../../../util';\nimport { AbstractServerActor } from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [provideParent(ServerStandActorComponent)],\n  template: `\n    \n\n      \n      \n        \n          \n          \n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SphereMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [provideParent(SphereMeshComponent)],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StlLoaderComponent.html":{"url":"components/StlLoaderComponent.html","title":"component - StlLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StlLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/stl-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(StlLoaderComponent)\n                \n            \n\n\n            \n                selector\n                atft-stl-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new STLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/stl-loader.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\n\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader';\n\n@Component({\n  selector: 'atft-stl-loader',\n  providers: [provideParent(StlLoaderComponent)],\n  template: ''\n})\nexport class StlLoaderComponent extends AbstractModelLoader {\n  private loader = new STLLoader();\n\n  @Input()\n  material: string;\n\n  @Input()\n  materialColor: string | number = '#FFFFFF';\n\n  @Input()\n  depthWrite = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('StlLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, geometry => {\n          const material = appliedMaterial(this.materialColor, this.material, this.depthWrite);\n          const mesh = new THREE.Mesh(geometry, material);\n          resolve(mesh);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'StlLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/services/svg-loader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractCacheService\n\n                \n            \n            \n                \n                        Defined in         AbstractCacheService:5\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCacheService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCacheService:3\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextActorComponent.html":{"url":"components/TextActorComponent.html","title":"component - TextActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-actor\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                currentDelay\n                            \n                            \n                                    Private\n                                currentPos\n                            \n                            \n                                    Public\n                                currentText\n                            \n                            \n                                    Private\n                                i\n                            \n                            \n                                    Private\n                                maxPos\n                            \n                            \n                                subscribed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                done\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                randomInt\n                            \n                            \n                                    Public\n                                updateAnimation\n                            \n                            \n                                    Protected\n                                updateText\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                materialColor\n                            \n                            \n                                maxDelay\n                            \n                            \n                                minDelay\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDelay\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDelay\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            done\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    done()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            randomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomInt(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAnimation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAnimation()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateText()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            i\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxPos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/ux/text/text-actor.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {EmptyComponent} from '../../../object/helper';\nimport {AnimationService} from '../../../animation';\nimport {RendererService} from '../../../renderer';\nimport {AbstractObject3D} from '../../../object';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-text-actor',\n  providers: [provideParent(TextActorComponent)],\n  template: `\n    \n    \n  `\n})\nexport class TextActorComponent extends EmptyComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @Input()\n  text: string;\n\n  @Input()\n  animate = false;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  @Input()\n  minDelay = 5;\n\n  @Input()\n  maxDelay = 10;\n\n  subscribed = false;\n\n  private currentDelay: number;\n  public currentText: string;\n  private currentPos = 0;\n  private maxPos = 0;\n  private i = 0;\n  protected animation: Subscription;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // console.log('TextActorComponent.ngAfterViewInit');\n    this.updateText();\n  }\n\n  protected updateText() {\n    // console.log('TextActorComponent.updateText');\n    if (this.text && this.text.length > 0) {\n      // console.log('TextActorComponent.updateText', this.text);\n      if (this.animate) {\n        // console.log('TextActorComponent.animate init');\n        if (!this.subscribed) {\n          this.updateAnimation = this.updateAnimation.bind(this);\n          this.animation = this.animationService.animate.subscribe(this.updateAnimation);\n          this.subscribed = true;\n          this.animationService.start();\n        }\n\n        this.currentPos = 0;\n        this.maxPos = this.text.length;\n        this.currentText = '';\n        this.currentDelay = this.randomInt(this.minDelay, this.maxDelay);\n      } else {\n        this.currentText = this.text;\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    // console.log('TextActorComponent.ngOnDestroy');\n    super.ngOnDestroy();\n    this.done();\n  }\n\n  public updateAnimation() {\n    if (this.subscribed) {\n      // console.log('TextActorComponent.updateAnimation');\n      this.i++;\n      if (this.i % this.currentDelay === 0) {\n        // console.log('TextActorComponent.updateAnimation: step');\n        this.currentPos++;\n        if (this.currentPos  propName in changes)) {\n      this.updateText();\n      modified = true;\n    }\n\n    if (['animate'].some(propName => propName in changes)) {\n      if (this.animate) {\n        this.updateText();\n      } else {\n        this.done();\n        this.currentText = this.text;\n      }\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TextMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                            \n                                    Protected\n                                fontCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                getTextMesh\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, font: FontService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        font\n                                                  \n                                                        \n                                                                        FontService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTextMesh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTextMesh(font: THREE.Font)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    font\n                                    \n                                            THREE.Font\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Mesh\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                    \n                        \n                            Default value : '#DADADA'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fontCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Font\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:30\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:44\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {appliedMaterial, provideParent} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {FontService} from '../loader/services/font.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [provideParent(TextMeshComponent)],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n  private _materialColor: string | number = '#DADADA';\n  @Input()\n  set materialColor(materialColor: string | number) {\n    this._materialColor = materialColor;\n    if (this.object) {\n      // console.log('TextMeshComponent.set materialColor', materialColor + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    if (this.object) {\n      // console.log('TextMeshComponent.set text', text + ' / ' + this.name);\n      this.startLoading();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  protected fontCache: THREE.Font;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected font: FontService\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject', this.name);\n\n    const font = await this.font.load(this.fontUrl);\n    // console.log('TextMeshComponent.loadLazyObject font', font);\n    return this.getTextMesh(font);\n  }\n\n  protected getTextMesh(font: THREE.Font): THREE.Mesh {\n    // console.log('TextMeshComponent.getTextMesh', this.text + ' / ' + this.name);\n    if (this.text) {\n      const geometry = new THREE.TextGeometry(this.text, {\n        font: font,\n        size: this.size,\n        height: this.height,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelOffset\n      });\n\n      const material = this.getMaterial();\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.castShadow = this.castShadow;\n      mesh.receiveShadow = this.receiveShadow;\n\n      if (this.centered) {\n        fixCenter(mesh);\n      }\n      return mesh;\n    } else {\n      return new THREE.Mesh();\n    }\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(TorusMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractMesh } from './abstract-mesh-3d';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [provideParent(TorusMeshComponent)],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoMeshComponent.html":{"url":"components/VideoMeshComponent.html","title":"component - VideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(VideoMeshComponent)\n                \n            \n\n\n            \n                selector\n                atft-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Protected\n                                heightSegments\n                            \n                            \n                                    Protected\n                                playbackError\n                            \n                            \n                                    Protected\n                                video\n                            \n                            \n                                    Protected\n                                videoPlaybackStarted\n                            \n                            \n                                    Protected\n                                widthSegments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animate\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoplay\n                            \n                            \n                                height\n                            \n                            \n                                loop\n                            \n                            \n                                muted\n                            \n                            \n                                type\n                            \n                            \n                                videoSrc\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoplay\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:27\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loop\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        muted\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Default value : 'video/mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:21\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            animation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            heightSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            playbackError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            videoPlaybackStarted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            widthSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/video-mesh.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {provideParent} from '../../util';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AnimationService} from '../../animation';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'atft-video-mesh',\n  providers: [provideParent(VideoMeshComponent)],\n  template: ''\n})\nexport class VideoMeshComponent extends AbstractMesh implements AfterViewInit, OnDestroy {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  @Input()\n  videoSrc;\n\n  @Input()\n  type = 'video/mp4';\n\n  @Input()\n  autoplay = true;\n\n  @Input()\n  loop = true;\n\n  @Input()\n  muted = true;\n\n  protected video = document.createElement('video');\n  protected widthSegments = 1;\n  protected heightSegments = 1;\n  protected animation: Subscription;\n  protected videoPlaybackStarted = false;\n  protected playbackError = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n\n    return mesh;\n  }\n\n  protected getMaterial() {\n    // console.log('VideoMeshComponent.initVideo');\n\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = this.type;\n    this.video.appendChild(source);\n\n    this.video.crossOrigin = 'anonymous';\n    this.video.autoplay = false;\n    this.video.loop = this.loop;\n    this.video.muted = this.muted;\n    const texture = new THREE.VideoTexture(this.video);\n    const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\n\n    return material;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected animate() {\n    // AnimationService will trigger animate() on all subscribers, then executes render() which is required for Video update.\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.autoplay) {\n      this.animationService.start();\n      this.animate = this.animate.bind(this);\n      this.animation = this.animationService.animate.subscribe(this.animate);\n\n      this.video.load();\n      this.video.addEventListener('canplay', () => {\n        if (this.video) {\n          this.video.play().then(() => {\n            this.videoPlaybackStarted = true;\n          }, () => {\n            this.playbackError = true;\n          });\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.video) {\n      this.animation?.unsubscribe();\n      this.video.pause();\n      this.video.remove();\n    }\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'VideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(WorkstationActorComponent)\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n  \n  \n    \n    \n    \n\n      \n      \n      \n      \n\n    \n  \n\n  \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {provideParent} from '../../../util';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [provideParent(WorkstationActorComponent)],\n  template: `\n    \n\n      \n      \n        \n        \n        \n\n          \n          \n          \n          \n\n        \n      \n\n      \n      \n      \n      \n    \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc = 'https://raw.githubusercontent.com/makimenko/files/master/angular-template-for-threejs/videos/ui/retro_futuristic_ui_360p.mp4';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/stl-loader.component.ts\n            \n            component\n            StlLoaderComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            class\n            SVGLoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n            \n            function\n            patchConsoleToFailOnError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n            \n            variable\n            orgConsoleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.13\n        \n            @angular/common : ^11.2.13\n        \n            @angular/compiler : ^11.2.13\n        \n            @angular/core : ^11.2.13\n        \n            @angular/forms : ^11.2.13\n        \n            @angular/platform-browser : ^11.2.13\n        \n            @angular/platform-browser-dynamic : ^11.2.13\n        \n            @angular/router : ^11.2.13\n        \n            core-js : ^3.11.1\n        \n            dagre : ^0.8.5\n        \n            rxjs : ^6.6.7\n        \n            snyk : ^1.667.0\n        \n            three : ^0.128.0\n        \n            uuid : ^8.3.2\n        \n            yaml : ^1.10.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            patchConsoleToFailOnError   (projects/.../patch-console-to-fail-on-error.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            patchConsoleToFailOnError\n                        \n                        \n                    \n                \n            \n            \n                \npatchConsoleToFailOnError()\n                \n            \n\n\n\n\n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideParent\n                        \n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentType\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            removeFromArray\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array, element)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three dagre atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nRelease and Changelog\n\nFollow Conventional Commits.\nSee standard-version guidelines for release and changelog update.\n\nTo automatically generate changelog and bump atft version: \nnpm run releaseContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            orgConsoleError   (projects/.../patch-console-to-fail-on-error.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTIRE_SCENE_LAYER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fragmentShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vertexShader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/util/patch-console-to-fail-on-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            orgConsoleError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : window.console.error\n                        \n                    \n\n\n            \n        \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REPLACE_SYMBOL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '?'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ':'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
