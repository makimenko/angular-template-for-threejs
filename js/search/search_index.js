var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AbstractAssetService.html",[0,1.148,1,2.508]],["body/injectables/AbstractAssetService.html",[0,1.608,1,3.513,2,1.979,3,0.148,4,0.253,5,0.121,6,5.552,7,3.138,8,0.395,9,0.71,10,1.961,11,4.48,12,1.446,13,1.61,14,0.821,15,1.51,16,4.6,17,4.6,18,4.6,19,4.6,20,3.853,21,4.6,22,4.6,23,1.422,24,1.142,25,5.809,26,3.955,27,1.911,28,4.298,29,1.072,30,0.012,31,0.893,32,0.694,33,0.826,34,2.08,35,1.058,36,2.232,37,3.955,38,5.372,39,4.298,40,3.955,41,4.241,42,4.298,43,4.241,44,4.298,45,4.241,46,4.298,47,1.031,48,4.241,49,4.298,50,3.777,51,4.241,52,4.298,53,2.013,54,0.793,55,0.744,56,1.143,57,4.298,58,0.148,59,0.249,60,2.466,61,3.138,62,3.138,63,0.2,64,1.394,65,2.599,66,3.717,67,0.162,68,3.403,69,3.758,70,3.758,71,3.758,72,1.118,73,3.758,74,3.758,75,1.403,76,3.758,77,3.758,78,3.758,79,5.08,80,5.08,81,3.758,82,3.758,83,3.138,84,3.758,85,3.138,86,3.758,87,0.008,88,0.008]],["title/classes/AbstractCacheService.html",[67,0.156,89,2.653]],["body/classes/AbstractCacheService.html",[3,0.192,4,0.192,5,0.156,6,5.297,8,0.513,9,0.84,10,1.845,12,1.551,14,0.971,15,1.332,24,1.053,27,1.814,29,0.971,30,0.012,31,0.809,32,0.605,33,0.748,35,0.938,50,4.465,53,1.964,54,1.029,55,1.189,56,1.352,60,2.302,63,0.192,67,0.21,75,1.42,87,0.01,88,0.01,89,4.399,90,4.072,91,4.877,92,5.68,93,5.02,94,4.769,95,4.681,96,5.577,97,5.02,98,5.577,99,4.978,100,5.02,101,5.577,102,7.779,103,5.577,104,5.577,105,5.577,106,5.577,107,5.577,108,7.452,109,5.577,110,5.577]],["title/directives/AbstractCamera.html",[111,0.586,112,1.261]],["body/directives/AbstractCamera.html",[3,0.15,4,0.15,5,0.123,8,0.402,9,0.718,10,1.847,12,1.545,14,0.83,15,1.362,23,1.269,24,1.171,29,0.937,30,0.012,31,0.781,32,0.706,33,0.722,35,1.04,36,1.576,47,1.186,54,0.806,55,0.756,58,0.228,59,0.253,63,0.15,67,0.164,72,1.846,87,0.008,88,0.008,111,0.937,112,1.786,113,1.036,114,7.287,115,3.819,116,1.731,117,5.253,118,3.463,119,3.463,120,5.617,121,5.617,122,5.617,123,1.786,124,2.717,125,4.287,126,1.731,127,2.018,128,5.617,129,5.617,130,5.253,131,5.253,132,1.463,133,2.177,134,5.871,135,1.823,136,4.367,137,4.367,138,4.367,139,1.616,140,2.083,141,4.367,142,4.367,143,4.367,144,4.367,145,1.786,146,2.158,147,4.367,148,1.731,149,4.367,150,4.65,151,4.367,152,2.973,153,4.367,154,2.553,155,1.576,156,1.511,157,4.367,158,4.367,159,4.367,160,3.819,161,4.367,162,4.367,163,4.367,164,5.871,165,2.182,166,4.367,167,5.253,168,4.367,169,2.641,170,1.371,171,2.093,172,3.757,173,4.367,174,4.367,175,4.367,176,4.367,177,4.367,178,1.795,179,4.367,180,3.188,181,4.367,182,1.562,183,3.458,184,3.819,185,4.367,186,4.367,187,3.819,188,4.367,189,1.328]],["title/directives/AbstractComposeEffect.html",[111,0.586,190,1.484]],["body/directives/AbstractComposeEffect.html",[3,0.161,4,0.161,5,0.131,8,0.429,9,0.75,10,1.878,12,1.576,14,0.867,15,1.388,23,1.326,24,1.148,29,0.969,30,0.012,31,0.807,32,0.641,33,0.823,35,1.08,36,1.647,47,1.176,54,0.861,55,0.808,58,0.251,59,0.27,63,0.161,67,0.176,75,0.889,87,0.009,88,0.009,111,0.867,113,1.107,116,1.809,118,3.58,123,1.867,132,1.563,133,2.219,139,2.271,145,1.867,146,2.409,148,1.809,156,1.615,171,3.286,190,2.196,191,7.175,192,5.586,193,4.081,194,3.286,195,3.036,196,4.96,197,4.481,198,3.64,199,4.181,200,5.318,201,1.955,202,1.955,203,4.387,204,2.362,205,6.137,206,4.481,207,4.667,208,4.667,209,4.667,210,4.667,211,4.667,212,4.667,213,4.667,214,2.718,215,1.727,216,3.178,217,4.081,218,4.667,219,2.986,220,4.86,221,4.667,222,4.081,223,4.667,224,6.137,225,4.667,226,4.667,227,4.667,228,4.667,229,3.696,230,4.667,231,4.667]],["title/directives/AbstractConnector.html",[111,0.586,232,1.484]],["body/directives/AbstractConnector.html",[3,0.108,4,0.236,5,0.088,8,0.29,9,0.569,10,1.726,12,1.54,14,0.658,15,1.505,24,1.207,27,1.581,29,0.968,30,0.012,31,0.914,32,0.732,33,0.746,35,1.119,36,1.645,47,1.167,54,1.265,55,1.185,58,0.211,59,0.182,60,1.054,63,0.108,67,0.118,72,0.819,75,0.6,87,0.007,88,0.007,111,0.658,113,0.747,116,1.373,123,1.417,124,2.124,126,1.373,127,1.417,135,1.686,145,0.958,146,1.417,148,0.928,154,1.858,155,1.251,165,2.328,178,1.294,182,1.126,189,1.687,195,2.456,201,1.489,202,1.645,232,1.667,233,6.366,234,2.753,235,1.14,236,2.169,237,5.546,238,5.546,239,2.063,240,1.681,241,6.13,242,2.715,243,6.13,244,1.984,245,6.13,246,2.063,247,2.456,248,2.456,249,2.456,250,2.456,251,2.063,252,2.456,253,2.456,254,2.063,255,2.063,256,2.063,257,2.456,258,6.543,259,2.063,260,2.063,261,2.063,262,1.987,263,1.987,264,2.063,265,2.063,266,2.063,267,2.063,268,1.987,269,2.922,270,3.148,271,3.148,272,2.572,273,1.449,274,1.394,275,1.449,276,1.449,277,1.394,278,1.394,279,1.394,280,1.294,281,1.394,282,1.249,283,1.249,284,1.449,285,1.449,286,2.145,287,1.449,288,1.449,289,1.449,290,1.394,291,1.294,292,1.394,293,1.394,294,2.365,295,1.394,296,1.394,297,1.343,298,1.249,299,1.449,300,1.449,301,1.249,302,1.449,303,3.148,304,4.075,305,2.286,306,3.69,307,3.148,308,2.433,309,3.148,310,3.69,311,4.659,312,3.69,313,4.659,314,4.659,315,4.659,316,4.659,317,3.148,318,1.394,319,1.509,320,1.573,321,1.449,322,1.449,323,1.449,324,1.394,325,1.449,326,1.449,327,1.417,328,1.449,329,1.449,330,1.573,331,1.449,332,1.394,333,1.449,334,1.394,335,1.394,336,1.449,337,1.394,338,1.449,339,1.509,340,5.182,341,3.148,342,3.148,343,1.449,344,1.449,345,2.299,346,3.148,347,3.148,348,3.148,349,3.148,350,3.148,351,3.148,352,4.659,353,3.148,354,3.148,355,1.249,356,2.753,357,3.148,358,3.148]],["title/directives/AbstractEmptyDirective.html",[111,0.586,359,1.435]],["body/directives/AbstractEmptyDirective.html",[3,0.126,4,0.126,5,0.103,8,0.338,9,0.637,10,1.236,12,1.51,14,0.736,15,1.523,24,1.21,27,1.657,29,1.021,30,0.012,31,0.941,32,0.735,33,0.786,35,1.127,36,1.399,47,1.17,54,1.334,55,1.25,56,0.723,58,0.208,59,0.213,63,0.126,67,0.138,72,0.956,75,0.7,87,0.007,88,0.007,111,0.736,113,0.872,123,1.585,124,2.319,126,1.536,127,1.585,135,1.746,145,1.118,146,1.585,148,1.083,155,1.399,178,1.511,182,1.315,189,1.842,201,1.625,202,1.625,235,1.275,236,2.182,239,2.308,240,1.65,242,2.918,246,2.308,247,2.682,248,2.682,249,2.682,250,2.682,251,2.308,252,2.682,253,2.682,254,2.308,255,2.308,256,2.308,257,2.682,259,2.308,260,2.308,261,2.308,262,2.222,263,2.222,264,2.308,265,2.308,266,2.308,267,2.308,268,2.222,269,2.222,272,2.604,273,1.692,274,1.627,275,1.692,276,1.692,277,1.627,278,1.627,279,1.627,280,1.511,281,1.627,282,1.458,283,1.458,284,1.692,285,1.692,286,1.692,287,1.692,288,1.692,289,1.692,290,1.627,291,1.511,292,1.627,293,1.627,294,1.567,295,1.627,296,1.627,297,1.567,298,1.458,299,1.692,300,1.692,301,1.458,302,1.692,308,3.162,318,1.627,319,1.761,320,1.836,321,1.692,322,1.692,323,1.692,324,1.627,325,1.692,326,1.692,327,1.585,328,1.692,329,1.692,330,1.836,331,1.692,332,1.627,333,1.692,334,1.627,335,1.627,336,1.692,337,1.627,338,1.692,339,1.761,343,1.692,344,1.692,359,1.804,360,2.683,361,2.502,362,3.214,363,3.214,364,1.919]],["title/directives/AbstractLazyObject3D.html",[111,0.586,365,1.435]],["body/directives/AbstractLazyObject3D.html",[3,0.103,4,0.103,5,0.084,8,0.275,9,0.73,10,1.653,12,1.559,14,0.844,15,1.487,20,2.45,24,1.197,27,1.554,29,0.95,30,0.012,31,0.904,32,0.72,33,0.731,35,1.106,36,1.203,47,1.147,54,1.286,55,1.206,56,0.588,58,0.185,59,0.173,63,0.103,67,0.225,72,0.777,75,0.569,87,0.006,88,0.006,94,2.867,99,2.867,111,0.633,113,0.709,116,1.321,123,1.363,124,2.059,126,1.321,127,1.363,135,1.665,140,1.407,145,0.909,146,1.363,148,0.881,155,1.203,170,0.938,171,2.148,178,1.228,182,1.069,189,1.636,195,2.381,198,1.493,201,1.443,202,1.603,219,3.44,235,1.096,236,2.164,239,1.984,240,1.842,242,2.645,244,1.924,246,1.984,247,2.645,248,2.381,249,2.381,250,2.381,251,1.984,252,2.381,253,2.381,254,1.984,255,1.984,256,1.984,257,2.381,259,1.984,260,1.984,261,1.984,262,1.911,263,1.911,264,1.984,265,1.984,266,1.984,267,1.984,268,1.911,269,1.911,272,2.56,273,1.375,274,1.323,275,1.375,276,1.375,277,1.323,278,1.323,279,1.323,280,1.228,281,1.323,282,1.185,283,1.185,284,1.375,285,1.375,286,1.375,287,1.375,288,1.375,289,1.375,290,1.323,291,1.228,292,1.323,293,1.323,294,1.274,295,1.323,296,1.323,297,1.274,298,1.185,299,1.375,300,2.063,301,1.185,302,1.375,305,0.938,308,3.341,318,1.323,319,1.432,321,1.375,322,1.375,323,1.375,324,1.323,325,1.375,326,1.375,327,1.363,328,1.375,329,1.375,330,1.493,331,1.375,332,1.323,333,1.375,334,1.323,335,1.323,336,1.375,337,1.323,338,1.375,339,1.432,343,1.375,344,1.375,355,1.777,360,4.673,361,2.034,365,1.551,366,6.003,367,2.181,368,4.702,369,4.702,370,5.224,371,5.224,372,2.613,373,5.322,374,3.919,375,2.613,376,2.613,377,2.987,378,1.911,379,2.366,380,3.919,381,4.702,382,3.919,383,2.613,384,3.919,385,3.919,386,3.548,387,3.919,388,4.362,389,3.919,390,1.034,391,3.919,392,3.919,393,3.919,394,3.919,395,3.919,396,1.807,397,1.912,398,2.181,399,2.987,400,2.987,401,5.974,402,2.987,403,2.987,404,2.987,405,4.481,406,2.987,407,2.987,408,2.613,409,2.987,410,0.853,411,2.987,412,2.987,413,2.613,414,2.987,415,2.987,416,2.366,417,2.613,418,2.987,419,5.376,420,4.481,421,2.613,422,1.715,423,1.001,424,2.987,425,2.987,426,2.181,427,2.987,428,2.987,429,2.987]],["title/directives/AbstractMesh.html",[111,0.586,430,1.484]],["body/directives/AbstractMesh.html",[3,0.107,4,0.107,5,0.087,8,0.286,9,0.564,10,1.445,12,1.528,14,0.652,15,1.512,24,1.208,27,1.706,29,0.998,30,0.012,31,0.921,32,0.735,33,0.768,35,1.117,36,1.478,47,1.155,54,1.392,55,1.305,58,0.21,59,0.18,63,0.107,67,0.117,72,0.809,75,0.88,87,0.006,88,0.006,111,0.652,113,0.738,116,1.361,118,2.875,123,1.404,124,2.109,126,1.361,127,1.404,135,1.727,139,2.038,140,0.977,145,1.404,146,1.854,148,1.361,154,2.284,155,1.239,167,4.36,169,1.881,170,2.217,171,1.49,178,1.278,182,1.113,189,1.675,201,1.478,202,1.478,235,1.129,236,2.159,239,2.044,240,1.544,242,2.438,246,2.044,247,2.438,248,2.438,249,2.438,250,2.438,251,2.044,252,2.438,253,2.438,254,2.044,255,2.044,256,2.044,257,2.438,259,2.044,260,2.044,261,2.044,262,1.969,263,1.969,264,2.044,265,2.044,266,2.044,267,2.044,268,1.969,269,1.969,272,2.569,273,1.432,274,1.377,275,1.432,276,1.432,277,1.377,278,1.377,279,1.377,280,1.278,281,1.377,282,1.233,283,1.233,284,1.432,285,1.432,286,1.432,287,1.432,288,1.432,289,1.432,290,1.377,291,1.278,292,1.377,293,1.377,294,1.326,295,1.377,296,1.377,297,1.326,298,1.233,299,1.432,300,2.125,301,1.233,302,1.432,306,5.971,318,1.377,319,1.49,320,1.554,321,1.432,322,1.432,323,1.432,324,1.377,325,1.432,326,1.432,327,1.404,328,1.432,329,1.432,331,1.432,332,1.377,333,1.432,334,1.377,335,1.377,336,1.432,337,1.377,338,1.432,339,1.49,343,1.432,344,1.432,355,1.233,364,1.624,367,2.271,379,2.463,383,2.72,430,1.652,431,6.48,432,6.093,433,4.617,434,6.093,435,5.506,436,4.815,437,4.825,438,5.329,439,5.506,440,3.11,441,3.11,442,3.11,443,4.617,444,3.11,445,3.11,446,4.617,447,4.815,448,3.11,449,3.656,450,3.11,451,2.463,452,1.624,453,3.11,454,2.72,455,3.11,456,3.11,457,3.11,458,3.11,459,3.11,460,2.271,461,3.11,462,3.11,463,3.11,464,3.11,465,3.11]],["title/directives/AbstractModelLoader.html",[111,0.586,390,1.435]],["body/directives/AbstractModelLoader.html",[3,0.101,4,0.251,5,0.083,8,0.271,9,0.652,10,1.51,12,1.542,14,0.754,15,1.493,20,1.613,24,1.203,27,1.727,29,0.981,30,0.012,31,0.911,32,0.727,33,0.755,35,1.109,36,1.191,47,1.144,54,1.281,55,1.201,56,1.316,58,0.153,59,0.171,63,0.101,67,0.223,72,0.768,75,0.562,87,0.006,88,0.006,94,1.888,99,1.888,111,0.627,113,0.7,123,1.35,124,2.044,126,1.308,127,1.35,135,1.659,140,0.926,145,0.898,146,1.35,148,0.87,154,1.487,178,1.213,182,1.056,189,1.623,201,1.432,202,1.432,219,3.415,235,1.086,236,2.151,239,1.966,240,1.51,242,2.363,244,1.588,246,1.966,247,2.363,248,2.363,249,2.363,250,2.363,251,1.966,252,2.363,253,2.363,254,1.966,255,1.966,256,1.966,257,2.363,259,1.966,260,1.966,261,1.966,262,1.893,263,1.893,264,1.966,265,1.966,266,1.966,267,1.966,268,1.893,269,1.893,272,2.575,273,1.358,274,1.307,275,1.358,276,1.358,277,1.307,278,1.307,279,1.307,280,1.213,281,1.307,282,1.17,283,1.17,284,1.358,285,1.358,286,1.358,287,1.358,288,1.358,289,1.358,290,1.307,291,1.213,292,1.307,293,1.307,294,2.532,295,1.307,296,1.307,297,1.258,298,1.17,299,1.358,300,2.044,301,1.17,302,1.358,308,2.318,318,1.307,319,1.414,321,1.358,322,1.358,323,1.358,324,1.307,325,1.358,326,1.358,327,1.35,328,1.358,329,1.358,330,1.475,331,1.358,332,1.307,333,1.358,334,1.307,335,1.307,336,1.358,337,1.307,338,1.358,339,1.414,343,1.358,344,1.358,365,2.402,366,4.226,368,3.882,369,3.882,370,4.667,371,4.667,373,4.226,374,5.192,375,2.58,376,2.58,378,1.258,380,2.58,381,2.58,382,2.58,384,2.58,385,2.58,386,2.336,387,2.58,388,3.241,389,2.58,390,1.847,391,2.58,392,2.58,393,2.58,394,5.192,395,2.58,410,2.351,417,4.667,422,3.063,466,5.567,467,2.58,468,1.888,469,3.515,470,1.394,471,3.515,472,1.536,473,5.336,474,3.515,475,4.439,476,5.214,477,6.366,478,6.366,479,5.336,480,4.667,481,5.336,482,5.336,483,4.667,484,5.336,485,5.336,486,5.336,487,4.226,488,2.95,489,2.95,490,2.95,491,2.95,492,2.95,493,2.95,494,2.95,495,3.882,496,2.95,497,5.336,498,2.336,499,2.95,500,2.95,501,4.439,502,2.336,503,2.95]],["title/directives/AbstractObject3D.html",[111,0.586,236,1.046]],["body/directives/AbstractObject3D.html",[3,0.089,4,0.089,5,0.073,8,0.453,9,0.491,10,1.424,12,1.492,14,0.568,15,1.513,23,0.869,24,1.176,27,1.603,29,0.937,30,0.012,31,0.939,32,0.706,33,0.766,35,1.067,36,1.706,47,1.167,54,1.173,55,1.1,56,0.51,58,0.191,59,0.15,60,1.346,63,0.089,67,0.151,72,1.935,75,1.211,87,0.006,88,0.006,111,0.568,113,0.614,116,1.185,117,3.899,118,2.571,123,1.223,124,2.125,126,1.185,127,1.498,132,0.868,133,1.815,135,1.731,140,0.814,145,1.223,146,1.688,148,1.635,154,2.49,155,1.322,156,0.897,160,2.266,169,2.978,170,1.546,171,2.659,178,1.652,189,2.085,194,2.36,195,2.181,198,1.295,201,1.489,202,1.489,214,1.78,222,3.515,236,1.923,239,2.181,240,2.002,242,2.457,246,2.181,247,2.457,248,2.457,249,2.457,250,2.457,251,1.78,252,2.457,253,2.457,254,1.78,255,1.78,256,1.78,257,2.457,259,2.457,260,2.457,261,2.181,262,2.366,263,2.366,264,2.181,265,2.457,266,2.457,267,2.181,268,1.714,269,2.1,274,2.181,277,1.78,278,1.78,279,1.78,280,1.652,281,1.78,282,1.594,283,1.594,290,1.78,291,1.652,292,1.78,293,1.78,294,1.714,295,1.78,296,1.78,297,1.714,298,1.594,301,1.953,305,0.814,318,1.78,324,1.78,327,1.498,332,1.78,334,1.78,335,1.78,337,1.78,360,6.088,361,1.764,367,1.892,372,2.266,379,2.052,396,1.567,397,1.658,408,5.558,416,3.183,502,5.25,504,2.692,505,4.019,506,2.591,507,2.591,508,2.591,509,2.591,510,2.591,511,2.591,512,2.591,513,2.591,514,2.591,515,2.591,516,2.591,517,2.591,518,2.591,519,2.591,520,2.591,521,2.591,522,2.591,523,2.591,524,2.591,525,2.591,526,2.591,527,2.591,528,2.591,529,2.591,530,2.591,531,2.591,532,2.591,533,2.591,534,2.935,535,2.591,536,2.266,537,2.052,538,0.897,539,2.266,540,2.591,541,2.591,542,4.756,543,2.591,544,4.019,545,2.591,546,4.019,547,2.591,548,4.019,549,2.591,550,2.591,551,2.591,552,2.591,553,2.591,554,2.591,555,2.591,556,2.591,557,2.591,558,2.266,559,2.591,560,2.591,561,2.591,562,2.591,563,2.591,564,2.591,565,2.591,566,2.591,567,2.591,568,2.591,569,2.591,570,2.591,571,2.591,572,2.591,573,2.591,574,2.591,575,2.591,576,2.591,577,1.764,578,1.764,579,2.052,580,2.591,581,2.591,582,2.591,583,2.591,584,2.591,585,2.591,586,2.591,587,2.591,588,4.019,589,2.591,590,4.924,591,2.591,592,2.052,593,2.591,594,2.591,595,2.591,596,2.571,597,2.591,598,2.591,599,4.019,600,2.591,601,2.591]],["title/directives/AbstractOrbitControls.html",[111,0.586,602,1.484]],["body/directives/AbstractOrbitControls.html",[3,0.138,4,0.138,5,0.112,8,0.369,9,0.776,10,1.623,12,1.479,14,0.783,15,0.716,23,1.197,24,1.127,29,0.783,30,0.012,31,0.652,32,0.654,33,0.603,35,0.98,36,1.486,47,1.114,56,1.248,58,0.262,59,0.232,63,0.138,67,0.151,75,0.764,83,4.044,87,0.008,88,0.008,111,0.783,112,1.219,113,0.951,116,1.632,118,3.313,119,2.092,123,1.685,126,1.632,132,1.342,133,2.122,140,1.739,145,1.685,146,2.082,148,1.181,154,2.125,155,1.486,156,1.387,170,1.739,171,2.654,180,2.926,183,3.174,194,3.041,195,2.81,201,1.837,202,1.837,240,1.505,244,2.27,269,1.709,297,1.709,378,2.362,483,3.505,498,3.174,602,1.981,603,7.043,604,2.927,605,3.505,606,5.025,607,5.025,608,4.321,609,5.42,610,5.42,611,5.025,612,3.506,613,5.538,614,4.633,615,4.008,616,2.658,617,4.385,618,4.385,619,3.771,620,5.025,621,4.044,622,4.38,623,3.349,624,4.385,625,4.044,626,4.044,627,4.385,628,4.385,629,4.385,630,4.385,631,4.633,632,4.385,633,4.008,634,4.008,635,4.008,636,4.008,637,4.008,638,5.025,639,3.771,640,4.385,641,4.385,642,4.008,643,2.125,644,4.385,645,3.544,646,4.008,647,4.008,648,4.008,649,4.998,650,3.174,651,2.729,652,3.174,653,4.008,654,3.505,655,4.008,656,5.538,657,3.505,658,4.008,659,4.008,660,3.505,661,3.505,662,4.385,663,4.008,664,1.535,665,3.505,666,4.008,667,4.008,668,4.008,669,5.538,670,5.538,671,3.505,672,3.505,673,4.008,674,4.008,675,4.008,676,4.008,677,4.008,678,4.008,679,4.008,680,4.008,681,4.008,682,4.008,683,5.538,684,4.008,685,3.505,686,4.008,687,3.174,688,4.008,689,4.008]],["title/directives/AbstractServerActor.html",[111,0.586,690,1.484]],["body/directives/AbstractServerActor.html",[3,0.108,4,0.108,5,0.088,8,0.289,9,0.568,10,0.744,12,1.44,14,0.656,15,1.525,24,1.212,27,1.748,29,0.967,30,0.012,31,0.913,32,0.739,33,0.744,34,1.44,35,1.118,36,1.247,47,1.166,54,1.342,55,1.258,56,1.203,58,0.16,59,0.182,63,0.108,67,0.118,72,0.816,87,0.006,88,0.006,111,0.656,113,0.744,123,1.413,124,2.119,126,1.369,127,1.413,135,1.73,139,1.16,145,0.954,146,1.413,148,0.924,154,2.049,170,1.459,178,1.289,189,1.683,201,1.485,202,1.485,235,1.136,236,2.152,239,2.057,240,1.549,242,2.45,246,2.057,247,2.45,248,2.45,249,2.45,250,2.45,251,2.057,252,2.45,253,2.45,254,2.057,255,2.057,256,2.057,257,2.45,259,2.057,260,2.057,261,2.057,262,1.981,263,1.981,264,2.057,265,2.057,266,2.057,267,2.057,268,1.981,269,1.981,272,2.571,273,1.443,274,1.388,275,1.443,276,1.443,277,1.388,278,1.388,279,1.388,280,1.289,281,1.388,282,1.244,283,1.244,284,1.443,285,1.443,286,1.443,287,1.443,288,1.443,289,1.443,290,1.388,291,1.289,292,1.388,293,1.388,294,1.337,295,1.388,296,1.388,297,1.337,298,1.244,299,1.443,300,1.443,301,2.997,302,1.443,308,1.637,318,1.388,319,1.503,320,1.567,321,1.443,322,1.443,323,1.443,324,1.388,325,1.443,326,1.443,327,1.413,328,1.443,329,1.443,330,1.567,331,1.443,332,1.388,333,1.443,334,1.388,335,1.388,336,1.443,337,1.388,338,1.443,339,1.503,343,1.443,344,1.443,359,1.915,363,2.742,364,1.637,534,4.77,690,1.662,691,3.718,692,6.784,693,2.685,694,2.742,695,2.889,696,4.845,697,6.118,698,6.118,699,3.176,700,5.533,701,5.533,702,5.533,703,3.54,704,4.382,705,3.135,706,3.135,707,3.135,708,3.135,709,3.135,710,3.135,711,3.135,712,3.135,713,3.135,714,3.135,715,4.04,716,3.135,717,3.135,718,5.533,719,3.135,720,3.135,721,3.135,722,3.135,723,3.135]],["title/injectables/ActorRepositoryService.html",[0,1.148,724,2.823]],["body/injectables/ActorRepositoryService.html",[0,1.747,2,2.242,3,0.167,4,0.167,5,0.137,8,0.448,9,0.771,12,1.524,14,0.892,15,1.405,23,1.364,24,1.084,27,1.827,29,0.989,30,0.012,31,0.824,32,0.713,33,0.762,35,0.861,47,0.923,53,1.802,54,0.899,55,0.843,56,1.241,58,0.217,59,0.282,60,2.344,63,0.167,67,0.183,75,1.203,87,0.009,88,0.009,165,2.434,378,3.411,398,3.556,592,6.074,691,3.767,693,1.685,724,4.296,725,6.873,726,4.259,727,6.999,728,6.999,729,6.31,730,6.31,731,4.87,732,7.67,733,6.31,734,6.31,735,6.31,736,4.87,737,6.873,738,7.404,739,6.31,740,1.457,741,4.87,742,4.87,743,2.184,744,2.184,745,2.184,746,2.184,747,2.184,748,2.184,749,4.87,750,4.87,751,4.87,752,4.87,753,4.87,754,4.87,755,4.87,756,4.87,757,4.87,758,6.999,759,4.87,760,6.999,761,6.999,762,6.31,763,4.87,764,4.87]],["title/components/AmbientLightComponent.html",[740,0.816,765,1.435]],["body/components/AmbientLightComponent.html",[3,0.09,4,0.09,5,0.073,8,0.24,9,0.493,10,0.618,12,1.438,13,0.987,14,0.57,15,1.473,23,0.872,24,1.181,27,1.571,29,0.939,30,0.012,31,0.964,32,0.713,33,0.767,34,0.678,35,1.068,36,1.083,47,1.089,53,0.744,54,1.267,55,1.188,56,0.512,58,0.207,59,0.151,60,0.872,63,0.09,67,0.098,72,0.678,75,0.496,87,0.006,88,0.006,111,0.368,112,0.792,113,0.618,123,1.228,124,1.892,126,1.19,127,1.503,132,0.872,133,1.819,135,1.682,145,0.792,146,1.228,148,0.768,154,1.655,155,1.083,156,0.902,178,1.071,182,0.932,189,1.503,190,0.932,201,1.326,202,1.326,204,0.845,214,1.787,215,0.964,232,0.932,235,0.987,236,2.141,239,1.787,240,1.511,242,2.464,246,1.787,247,2.188,248,2.188,249,2.188,250,2.188,251,1.787,252,2.188,253,2.188,254,1.787,255,1.787,256,1.787,257,2.188,259,1.787,260,1.787,261,1.787,262,1.721,263,1.721,264,1.787,265,1.787,266,1.787,267,1.787,268,1.721,269,1.721,272,2.526,273,1.199,274,1.154,275,1.199,276,1.858,277,1.154,278,1.154,279,1.154,280,1.071,281,1.154,282,1.033,283,1.033,284,1.199,285,1.199,286,1.199,287,1.199,288,1.199,289,1.199,290,1.154,291,1.071,292,1.154,293,1.154,294,1.111,295,1.154,296,1.154,297,1.111,298,1.033,299,1.199,300,1.199,301,1.033,302,1.199,305,0.818,318,1.154,319,1.248,320,1.302,321,1.199,322,1.199,323,1.199,324,1.154,325,1.199,326,1.199,327,1.228,328,1.199,329,1.199,330,1.302,331,1.199,332,1.154,333,1.199,334,1.154,335,1.154,336,1.199,337,1.154,338,1.199,339,1.248,343,1.199,344,1.199,355,1.601,359,0.902,364,1.36,365,0.902,390,0.902,410,0.744,423,0.872,430,0.932,452,1.36,470,0.818,472,0.902,504,3.042,538,0.902,602,0.932,604,0.932,616,1.494,643,0.872,664,0.998,690,0.932,693,1.926,695,2.58,715,2.947,740,0.972,743,0.902,744,0.902,745,0.902,746,0.902,747,0.902,748,0.902,765,1.926,766,1.352,767,1.033,768,4.867,769,2.063,770,0.818,771,3.196,772,2.892,773,2.694,774,1.892,775,4.407,776,1.546,777,3.913,778,3.53,779,2.278,780,4.036,781,1.302,782,1.154,783,2.605,784,2.605,785,2.278,786,0.563,787,1.546,788,2.207,789,1.033,790,2.207,791,0.902,792,0.998,793,1.601,794,0.902,795,1.033,796,0.932,797,0.964,798,2.796,799,0.902,800,0.998,801,1.033,802,0.932,803,0.998,804,0.932,805,1.832,806,1.033,807,0.932,808,1.033,809,0.932,810,1.033,811,0.932,812,1.033,813,0.932,814,0.932,815,1.033,816,0.932,817,0.998,818,0.902,819,1.033,820,0.902,821,0.998,822,1.033,823,1.033,824,0.902,825,1.033,826,0.902,827,1.033,828,0.932,829,0.964,830,0.932,831,1.829,832,2.796,833,0.902,834,0.932,835,0.902,836,0.998,837,0.932,838,0.932,839,1.033,840,0.932,841,0.902,842,1.601,843,0.932,844,2.207,845,0.902,846,0.902,847,0.998,848,1.601,849,0.902,850,0.998,851,0.932,852,0.964,853,0.932,854,0.964,855,0.902,856,1.033,857,0.845,858,1.033,859,0.964,860,0.964,861,0.964,862,0.932,863,0.998,864,0.932,865,0.998,866,0.932,867,0.932,868,0.932,869,1.494,870,0.932,871,0.932,872,0.998,873,0.932,874,0.998,875,1.033,876,1.033,877,0.872,878,0.932,879,1.033,880,0.872,881,1.552,882,1.033,883,0.872,884,1.033,885,0.845,886,1.033,887,0.872,888,0.932,889,0.998,890,1.033]],["title/injectables/AnimationService.html",[0,1.148,891,2.508]],["body/injectables/AnimationService.html",[0,1.684,2,2.12,3,0.158,4,0.158,5,0.129,8,0.424,9,0.743,14,0.859,15,1.449,23,1.315,24,1.093,29,0.651,30,0.012,31,0.542,32,0.405,33,0.501,35,0.929,47,0.997,54,1.123,55,1.053,56,1.197,58,0.209,59,0.267,63,0.158,67,0.173,72,1.198,87,0.009,88,0.009,132,1.542,133,2.211,140,2.139,156,1.594,170,1.446,171,2.207,183,4.817,244,2.592,298,2.413,301,2.702,312,5.394,388,5.291,468,2.946,623,3.678,665,6.337,703,4.821,766,2.523,829,2.681,855,1.594,891,4.989,892,4.027,893,4.817,894,6.337,895,6.083,896,6.083,897,4.159,898,4.817,899,6.083,900,6.083,901,6.083,902,6.083,903,6.083,904,6.811,905,5.957,906,5.738,907,7.245,908,6.768,909,6.768,910,6.083,911,4.605,912,4.605,913,4.605,914,6.083,915,4.605,916,4.817,917,6.083,918,4.441,919,6.083,920,6.083,921,6.083,922,6.083,923,6.083,924,4.605,925,4.605,926,6.128,927,4.605,928,4.605,929,6.083,930,4.605,931,4.605,932,4.605,933,4.605,934,3.646,935,4.605,936,4.605]],["title/modules/AtftAnimationModule.html",[937,0.842,938,2.823]],["body/modules/AtftAnimationModule.html",[3,0.216,4,0.216,5,0.176,13,1.92,30,0.012,58,0.254,59,0.364,63,0.216,67,0.237,87,0.01,88,0.01,786,1.359,891,5.059,937,1.276,938,5.696,939,2.176,940,2.106,941,2.327,942,2.327,943,2.327,944,5.498,945,5.498,946,2.557,947,2.176,948,2.249,949,6.287,950,6.287,951,2.83,952,6.287]],["title/modules/AtftCameraModule.html",[937,0.842,953,2.823]],["body/modules/AtftCameraModule.html",[3,0.203,4,0.203,5,0.165,13,1.44,30,0.012,58,0.273,59,0.341,63,0.203,67,0.222,87,0.01,88,0.01,786,1.273,846,2.971,847,2.255,849,2.971,850,2.255,937,1.195,939,2.038,940,1.972,941,2.824,942,2.179,943,2.824,946,2.459,947,2.038,948,2.107,951,2.721,953,5.797,954,5.149,955,5.149,956,5.149,957,5.888,958,5.888,959,2.921,960,2.335,961,7.106,962,2.255]],["title/modules/AtftConnectorModule.html",[937,0.842,963,2.823]],["body/modules/AtftConnectorModule.html",[3,0.209,4,0.209,5,0.17,13,1.486,30,0.012,58,0.266,59,0.352,63,0.209,67,0.229,87,0.01,88,0.01,305,1.908,786,1.313,838,3.083,937,1.234,939,2.103,940,2.035,941,2.863,942,2.249,943,2.863,946,2.506,947,2.103,948,2.174,951,2.773,959,2.977,960,2.41,962,2.327,963,5.713,964,5.314,965,5.314,966,5.314,967,6.076,968,6.076,969,6.076]],["title/modules/AtftControlModule.html",[937,0.842,970,2.823]],["body/modules/AtftControlModule.html",[3,0.203,4,0.203,5,0.165,13,1.44,30,0.012,53,1.682,58,0.273,59,0.341,63,0.203,67,0.222,87,0.01,88,0.01,604,2.107,786,1.273,841,2.971,845,2.971,937,1.195,939,2.038,940,1.972,941,2.824,942,2.179,943,2.824,946,2.459,947,2.038,948,2.107,951,2.721,959,2.921,960,2.335,962,2.255,970,5.797,971,5.149,972,5.149,973,5.149,974,5.888,975,5.888,976,7.106]],["title/modules/AtftDataCenterActorModule.html",[937,0.842,977,3.028]],["body/modules/AtftDataCenterActorModule.html",[3,0.147,4,0.147,5,0.12,13,1.607,30,0.012,34,1.115,58,0.284,59,0.248,63,0.147,67,0.161,87,0.008,88,0.008,476,3.127,691,2.053,693,1.482,724,5.161,743,2.842,744,2.842,745,2.842,746,2.842,747,2.842,748,2.842,786,0.926,804,2.938,807,2.938,809,2.938,811,2.938,813,2.938,830,2.938,837,2.938,859,1.585,860,1.585,861,1.585,894,3.746,937,0.87,939,1.482,940,1.435,941,2.431,942,1.585,943,2.431,946,2.006,947,1.482,948,1.532,951,2.22,959,2.382,960,1.699,962,2.22,977,6.393,978,3.746,979,3.746,980,3.746,981,3.746,982,3.746,983,4.583,984,4.283,985,3.746,986,3.746,987,4.283,988,6.777,989,3.746,990,7.038,991,4.283,992,4.283,993,2.59]],["title/modules/AtftEffectModule.html",[937,0.842,994,2.823]],["body/modules/AtftEffectModule.html",[3,0.181,4,0.181,5,0.148,13,1.287,30,0.012,58,0.283,59,0.305,63,0.181,67,0.198,87,0.009,88,0.009,204,2.744,216,3.582,786,1.137,794,2.929,818,2.929,820,2.929,826,2.929,877,2.834,878,1.882,937,1.068,939,1.821,940,1.762,941,2.686,942,1.947,943,2.686,946,2.294,947,1.821,948,1.882,951,2.539,959,2.725,960,2.087,962,2.015,994,5.911,995,4.601,996,4.601,997,4.601,998,5.261,999,5.261,1000,5.261,1001,5.261,1002,5.261,1003,5.261,1004,5.261,1005,5.261,1006,5.261]],["title/modules/AtftHelperModule.html",[937,0.842,1007,2.823]],["body/modules/AtftHelperModule.html",[3,0.197,4,0.197,5,0.16,13,1.399,30,0.012,58,0.277,59,0.332,63,0.197,67,0.215,87,0.01,88,0.01,786,1.236,791,2.961,792,2.191,824,2.961,831,2.117,833,2.961,937,1.161,939,1.98,940,1.916,941,2.789,942,2.117,943,2.789,946,2.416,947,1.98,948,2.046,951,2.674,959,2.87,960,2.269,962,2.191,1007,5.845,1008,5.002,1009,5.002,1010,5.002,1011,5.72,1012,5.72,1013,6.982,1014,5.72]],["title/modules/AtftLightModule.html",[937,0.842,1015,2.823]],["body/modules/AtftLightModule.html",[3,0.189,4,0.189,5,0.154,13,1.343,30,0.012,58,0.279,59,0.318,63,0.189,67,0.207,87,0.01,88,0.01,765,2.966,771,5.859,774,2.102,786,1.186,816,3.045,817,2.102,835,2.945,836,2.102,853,3.045,854,2.031,937,1.114,939,1.9,940,1.838,941,2.738,942,2.031,943,2.738,946,2.356,947,1.9,948,1.964,951,2.607,959,2.798,960,2.177,962,2.102,1015,5.868,1016,4.8,1017,4.8,1018,4.8,1019,4.8,1020,5.488,1021,5.488,1022,7.736]],["title/modules/AtftLoaderModule.html",[937,0.842,1023,2.823]],["body/modules/AtftLoaderModule.html",[3,0.191,4,0.191,5,0.156,13,1.356,30,0.012,58,0.279,59,0.321,63,0.191,67,0.209,87,0.01,88,0.01,240,1.315,423,1.857,472,2.949,786,1.198,843,3.049,864,3.049,865,2.124,866,3.049,867,1.984,937,1.126,939,1.919,940,1.857,941,2.751,942,2.052,943,2.751,946,2.371,947,1.919,948,1.984,951,2.623,959,2.816,960,2.199,962,2.124,1023,5.874,1024,4.849,1025,4.849,1026,4.849,1027,5.544,1028,5.544,1029,7.763]],["title/modules/AtftMeshModule.html",[937,0.842,1030,2.823]],["body/modules/AtftMeshModule.html",[3,0.171,4,0.171,5,0.139,13,1.215,30,0.012,58,0.285,59,0.288,63,0.171,67,0.187,87,0.009,88,0.009,786,1.073,796,3.004,797,1.838,802,3.004,803,1.902,828,3.004,829,1.838,831,1.838,834,3.004,851,3.004,852,1.838,862,3.004,863,1.902,871,3.004,872,1.902,873,3.004,874,1.902,937,1.008,939,1.719,940,1.663,941,2.614,942,1.838,943,2.614,946,2.211,947,1.719,948,1.777,951,2.447,959,2.627,960,1.97,962,1.902,1030,5.929,1031,4.342,1032,4.342,1033,4.342,1034,4.965,1035,4.965,1036,7.119]],["title/modules/AtftModule.html",[937,0.842,983,2.508]],["body/modules/AtftModule.html",[3,0.168,4,0.168,5,0.137,13,1.197,30,0.012,55,0.847,58,0.286,59,0.284,63,0.168,67,0.184,87,0.009,88,0.009,378,2.088,623,2.96,786,1.058,937,1.285,938,5.705,939,1.694,940,1.64,941,1.812,942,1.812,943,2.597,946,2.191,947,1.694,948,1.751,951,2.425,953,5.705,962,2.687,970,5.705,983,5.267,994,5.705,1037,4.281,1038,4.281,1039,4.281,1040,5.705,1041,5.705,1042,5.705,1043,5.705,1044,4.895,1045,4.895,1046,4.895,1047,4.895,1048,4.895,1049,4.895,1050,4.895,1051,4.778,1052,4.895,1053,4.895,1054,4.895,1055,4.895,1056,4.895,1057,4.895,1058,4.895,1059,4.895,1060,4.895,1061,4.895,1062,4.895,1063,4.281,1064,4.281,1065,4.281,1066,4.895,1067,4.895,1068,4.895]],["title/modules/AtftObjectModule.html",[937,0.842,1040,2.823]],["body/modules/AtftObjectModule.html",[3,0.161,4,0.161,5,0.132,13,1.681,30,0.012,58,0.285,59,0.272,63,0.161,67,0.176,87,0.009,88,0.009,470,1.473,786,1.014,799,2.692,800,1.796,857,2.7,937,0.952,939,1.623,940,1.571,941,2.544,942,1.736,943,2.544,946,2.131,947,1.623,948,1.678,951,2.358,959,2.531,960,1.86,962,2.358,963,5.67,1007,5.67,1015,5.67,1023,5.67,1030,5.67,1040,5.953,1069,4.101,1070,4.101,1071,4.101,1072,4.101,1073,4.101,1074,5.67,1075,5.296,1076,4.977,1077,5.296,1078,5.296,1079,5.296,1080,4.69,1081,4.69,1082,4.69,1083,4.69,1084,4.69,1085,4.69,1086,4.69,1087,4.69,1088,4.69,1089,4.69,1090,4.69,1091,4.69,1092,4.69,1093,4.69,1094,4.69,1095,4.69]],["title/modules/AtftPipeModule.html",[937,0.842,1051,2.823]],["body/modules/AtftPipeModule.html",[3,0.203,4,0.203,5,0.166,13,1.445,30,0.012,58,0.273,59,0.342,63,0.203,67,0.222,87,0.01,88,0.01,786,1.276,937,1.199,939,2.044,940,1.978,941,2.828,942,2.186,943,2.828,946,2.464,947,2.044,948,2.113,951,2.727,959,2.927,960,2.343,962,2.262,1051,5.8,1096,5.165,1097,5.165,1098,5.165,1099,5.848,1100,5.848,1101,5.906,1102,5.906,1103,5.906,1104,5.906]],["title/modules/AtftRaycasterModule.html",[937,0.842,1041,2.823]],["body/modules/AtftRaycasterModule.html",[3,0.192,4,0.192,5,0.156,13,1.823,30,0.012,58,0.28,59,0.323,63,0.192,67,0.21,87,0.01,88,0.01,612,3.746,786,1.205,880,2.856,881,2.34,883,2.856,885,2.765,937,1.132,939,1.93,940,1.868,941,2.758,942,2.064,943,2.758,946,2.379,947,1.93,948,1.995,951,2.633,959,2.826,960,2.212,962,2.136,1041,5.863,1105,4.877,1106,4.877,1107,4.877,1108,4.877,1109,5.577,1110,5.577,1111,5.577,1112,3.797,1113,5.577,1114,5.577]],["title/modules/AtftRendererModule.html",[937,0.842,1042,2.823]],["body/modules/AtftRendererModule.html",[3,0.2,4,0.2,5,0.163,13,1.858,30,0.012,58,0.278,59,0.338,63,0.2,67,0.219,87,0.01,88,0.01,133,2.348,643,2.872,654,5.094,786,1.259,855,2.016,937,1.183,939,2.016,940,1.951,941,2.811,942,2.156,943,2.811,946,2.443,947,2.016,948,2.084,951,2.704,959,2.902,960,2.31,962,2.231,1042,5.815,1115,5.094,1116,5.094,1117,5.094,1118,5.094,1119,5.261,1120,5.825,1121,5.825,1122,5.094,1123,5.825]],["title/modules/AtftStatsModule.html",[937,0.842,1043,2.823]],["body/modules/AtftStatsModule.html",[3,0.204,4,0.204,5,0.166,13,1.872,30,0.012,58,0.273,59,0.343,63,0.204,67,0.223,87,0.01,88,0.01,538,2.051,786,1.28,887,2.878,888,2.12,937,1.203,939,2.051,940,1.984,941,2.832,942,2.193,943,2.832,946,2.468,947,2.051,948,2.12,951,2.732,959,2.932,960,2.35,962,2.269,1043,5.771,1124,5.181,1125,5.181,1126,5.181,1127,5.181,1128,4.991,1129,5.925,1130,5.181,1131,5.925]],["title/modules/AtftTextModule.html",[937,0.842,1074,2.823]],["body/modules/AtftTextModule.html",[3,0.209,4,0.209,5,0.17,13,1.486,30,0.012,58,0.266,59,0.352,63,0.209,67,0.229,87,0.01,88,0.01,786,1.313,869,2.249,870,3.083,937,1.234,939,2.103,940,2.035,941,2.863,942,2.249,943,2.863,946,2.506,947,2.103,948,2.174,951,2.773,959,2.977,960,2.41,962,2.327,1036,5.314,1074,5.713,1132,5.314,1133,5.314,1134,5.314,1135,6.076,1136,6.076]],["title/components/AxesHelperComponent.html",[740,0.816,791,1.435]],["body/components/AxesHelperComponent.html",[3,0.091,4,0.091,5,0.074,8,0.244,9,0.5,10,0.628,12,1.443,13,1,14,0.578,15,1.476,23,0.884,24,1.181,27,1.49,29,0.944,30,0.012,31,0.966,32,0.711,33,0.771,34,0.689,35,1.072,36,1.097,47,1.094,53,0.757,54,1.234,55,1.156,56,0.521,58,0.209,59,0.154,63,0.091,67,0.1,72,0.689,75,0.505,87,0.006,88,0.006,111,0.374,112,0.806,113,0.628,123,1.244,124,1.912,126,1.205,127,1.519,132,0.887,133,1.832,135,1.642,145,0.806,146,1.244,148,0.781,154,1.369,155,1.097,156,0.917,178,1.089,182,0.948,189,1.519,190,0.948,201,1.34,202,1.34,204,0.859,214,1.81,215,0.98,232,0.948,235,1,236,2.144,239,1.81,240,1.521,242,2.486,246,1.81,247,2.211,248,2.211,249,2.211,250,2.211,251,1.81,252,2.211,253,2.211,254,1.81,255,1.81,256,1.81,257,2.211,259,1.81,260,1.81,261,1.81,262,1.743,263,1.743,264,1.81,265,1.81,266,1.81,267,1.81,268,1.743,269,1.743,272,2.531,273,1.219,274,1.173,275,1.219,276,1.219,277,1.173,278,1.173,279,1.173,280,1.089,281,1.173,282,1.05,283,1.05,284,1.219,285,1.219,286,1.219,287,1.219,288,1.219,289,1.219,290,1.173,291,1.089,292,1.173,293,1.173,294,1.129,295,1.173,296,1.173,297,1.129,298,1.05,299,1.219,300,1.219,301,1.05,302,1.219,305,0.832,318,1.173,319,1.269,320,1.324,321,1.219,322,1.219,323,1.219,324,1.173,325,1.219,326,1.219,327,1.244,328,1.219,329,1.219,330,1.324,331,1.219,332,1.173,333,1.219,334,1.173,335,1.173,336,1.219,337,1.173,338,1.219,339,1.269,343,1.219,344,1.219,355,1.622,359,0.917,364,1.383,365,0.917,390,0.917,410,0.757,423,0.887,430,0.948,452,1.383,469,3.237,470,0.832,472,0.917,504,3.069,538,0.917,602,0.948,604,0.948,616,1.513,643,0.887,664,1.014,690,0.948,693,1.943,740,0.982,743,0.917,744,0.917,745,0.917,746,0.917,747,0.917,748,0.917,765,0.917,766,1.369,767,1.05,770,0.832,772,2.894,773,2.696,774,1.014,776,1.566,781,1.324,782,1.173,786,0.572,787,1.566,788,2.227,789,1.05,790,2.227,791,1.943,792,1.912,793,1.622,794,0.917,795,1.05,796,0.948,797,0.98,798,2.81,799,0.917,800,1.014,801,1.05,802,0.948,803,1.014,804,0.948,805,1.846,806,1.05,807,0.948,808,1.05,809,0.948,810,1.05,811,0.948,812,1.05,813,0.948,814,0.948,815,1.05,816,0.948,817,1.014,818,0.917,819,1.05,820,0.917,821,1.014,822,1.05,823,1.05,824,0.917,825,1.05,826,0.917,827,1.05,828,0.948,829,0.98,830,0.948,831,1.848,832,2.81,833,0.917,834,0.948,835,0.917,836,1.014,837,0.948,838,0.948,839,1.05,840,0.948,841,0.917,842,1.622,843,0.948,844,2.227,845,0.917,846,0.917,847,1.014,848,1.622,849,0.917,850,1.014,851,0.948,852,0.98,853,0.948,854,0.98,855,0.917,856,1.05,857,0.859,858,1.05,859,0.98,860,0.98,861,0.98,862,0.948,863,1.014,864,0.948,865,1.014,866,0.948,867,0.948,868,0.948,869,1.513,870,0.948,871,0.948,872,1.014,873,0.948,874,1.014,875,1.05,876,1.05,877,0.887,878,0.948,879,1.05,880,0.887,881,1.568,882,1.05,883,0.887,884,1.05,885,0.859,886,1.05,887,0.887,888,0.948,889,1.014,890,1.05,1137,4.367,1138,2.097,1139,4.088,1140,3.954,1141,3.575,1142,4.088,1143,2.316,1144,4.088,1145,2.648,1146,2.648]],["title/interfaces/BaseAssetSource.html",[64,1.345,65,2.508]],["body/interfaces/BaseAssetSource.html",[0,1.845,1,3.208,3,0.182,4,0.251,5,0.149,6,3.612,7,3.873,8,0.488,9,0.814,10,1.868,11,3.612,12,1.27,13,1.298,15,1.436,20,2.9,23,1.146,26,3.612,27,1.879,30,0.012,32,0.467,34,2.049,36,2.157,37,3.612,38,5.472,40,3.612,41,3.873,43,3.873,45,3.873,47,0.776,48,3.873,50,3.045,51,3.873,53,1.903,56,1.044,58,0.182,59,0.307,60,2.637,61,3.873,62,3.873,63,0.229,64,1.72,65,4.03,66,5.038,67,0.2,68,4.201,69,4.639,70,4.639,71,4.639,72,1.38,73,4.639,74,4.639,75,1.501,76,4.639,77,4.639,78,4.639,79,5.828,80,5.828,81,4.639,82,4.639,83,3.873,84,4.639,85,3.873,86,4.639,87,0.009,88,0.009,1147,2.77]],["title/interfaces/BaseInfo.html",[64,1.345,1148,2.38]],["body/interfaces/BaseInfo.html",[3,0.199,4,0.199,5,0.162,8,0.533,9,0.86,27,1.931,30,0.012,31,0.927,32,0.71,33,0.857,34,1.507,58,0.199,63,0.278,64,2.618,87,0.01,88,0.01,135,1.291,235,1.853,327,2.305,410,1.654,596,3.023,691,2.775,695,3.023,699,4.523,805,2.14,993,3.501,1147,3.023,1148,4.635,1149,3.165,1150,3.704,1151,4.883,1152,3.942,1153,3.323,1154,3.323,1155,3.704,1156,3.942,1157,3.704,1158,3.501]],["title/injectables/BloomService.html",[0,1.148,1119,2.653]],["body/injectables/BloomService.html",[0,1.449,2,1.702,3,0.127,4,0.127,5,0.104,8,0.34,9,0.64,12,1.582,14,0.739,15,1.383,20,2.861,24,1.121,29,0.934,30,0.012,31,0.715,32,0.655,33,0.661,35,0.901,47,1.113,54,1.22,55,1.253,56,1.575,58,0.262,59,0.214,60,2.591,63,0.18,67,0.139,72,0.962,87,0.007,88,0.007,119,3.641,140,2.19,155,1.631,165,1.847,170,1.908,189,1.848,244,2.591,327,1.592,413,5.313,422,4.365,423,1.753,608,4.499,703,4.227,855,1.811,918,2.699,934,4.144,1119,3.349,1159,2.927,1160,6.075,1161,6.075,1162,6.075,1163,6.075,1164,6.075,1165,5.233,1166,5.233,1167,5.233,1168,3.696,1169,5.233,1170,5.522,1171,6.075,1172,3.696,1173,3.696,1174,5.233,1175,3.696,1176,6.098,1177,3.696,1178,5.233,1179,3.696,1180,5.233,1181,5.233,1182,3.696,1183,3.696,1184,3.696,1185,3.696,1186,3.696,1187,3.232,1188,3.232,1189,3.696,1190,3.696,1191,3.232,1192,4.144,1193,2.927,1194,3.696,1195,3.696,1196,2.927,1197,3.696,1198,4.811,1199,4.576,1200,4.576,1201,6.098,1202,2.927,1203,3.232,1204,3.232,1205,3.232,1206,4.576,1207,3.563,1208,4.811,1209,4.576,1210,4.576,1211,5.778,1212,5.313,1213,3.232,1214,4.576,1215,3.696,1216,2.927,1217,3.696,1218,3.696,1219,3.696,1220,3.696,1221,3.696,1222,3.696,1223,4.137,1224,2.021,1225,4.144,1226,3.696,1227,3.696,1228,3.696,1229,6.075,1230,3.696,1231,3.696,1232,2.517,1233,3.696,1234,3.696,1235,5.233,1236,3.696,1237,3.696,1238,3.696,1239,3.696,1240,3.696,1241,3.696,1242,3.696,1243,2.927,1244,3.696,1245,3.696,1246,3.696,1247,3.696,1248,3.696,1249,3.696,1250,3.696,1251,3.696,1252,3.696,1253,3.696,1254,6.607,1255,3.696,1256,3.696,1257,5.233,1258,3.696,1259,3.696,1260,3.696,1261,3.696,1262,5.233,1263,3.696,1264,3.696,1265,2.235,1266,2.365,1267,6.607,1268,6.075,1269,3.696,1270,3.696]],["title/components/BlurComponent.html",[740,0.816,794,1.435]],["body/components/BlurComponent.html",[3,0.118,4,0.118,5,0.096,8,0.316,9,0.606,10,0.813,12,1.421,14,0.701,15,1.141,23,1.072,24,1.074,29,0.823,30,0.012,31,0.958,32,0.562,33,0.737,34,0.892,35,0.993,36,0.92,47,1.033,53,0.98,54,0.633,55,0.593,58,0.25,59,0.199,63,0.118,67,0.129,75,0.654,87,0.007,88,0.007,111,0.485,112,1.043,113,0.813,123,1.509,127,1.043,132,1.149,133,2.017,139,1.269,140,1.077,145,1.043,146,2.148,148,1.717,156,1.187,165,1.714,190,2.826,192,2.335,196,3.377,197,3.622,198,3.191,199,3.345,200,4.662,201,1.564,202,1.564,203,4.086,204,2.197,206,3.622,214,2.196,215,2.156,216,2.335,232,1.227,235,1.213,236,0.865,240,0.813,272,2.268,305,1.558,355,1.967,359,1.187,365,1.187,390,1.187,396,2.074,397,2.194,410,0.98,423,1.149,430,1.227,470,1.077,472,1.187,538,1.187,577,2.335,578,2.335,602,1.227,604,1.227,616,1.836,643,1.149,664,1.313,690,1.227,693,2.21,740,1.146,743,1.187,744,1.187,745,1.187,746,1.187,747,1.187,748,1.187,765,1.187,766,1.661,767,1.36,770,1.077,772,2.928,773,2.733,774,1.313,776,1.313,782,1.519,786,0.741,787,1.9,788,2.533,789,1.36,790,2.533,791,1.187,792,1.313,793,1.967,794,2.21,795,1.36,796,1.227,797,1.269,798,3.013,799,1.187,800,1.313,801,1.36,802,1.227,803,1.313,804,1.227,805,2.061,806,1.36,807,1.227,808,1.36,809,1.227,810,1.36,811,1.227,812,1.36,813,1.227,814,1.227,815,1.36,816,1.227,817,1.313,818,1.187,819,1.36,820,1.187,821,1.313,822,1.36,823,1.36,824,1.187,825,1.36,826,1.187,827,1.36,828,1.227,829,1.269,830,1.227,831,2.156,832,3.013,833,1.187,834,1.227,835,1.187,836,1.313,837,1.227,838,1.227,839,1.36,840,1.227,841,1.187,842,1.967,843,1.227,844,2.533,845,1.187,846,1.187,847,1.313,848,1.967,849,1.187,850,1.313,851,1.227,852,1.269,853,1.227,854,1.269,855,1.187,856,1.36,857,1.112,858,1.36,859,1.269,860,1.269,861,1.269,862,1.227,863,1.313,864,1.227,865,1.313,866,1.227,867,1.227,868,1.227,869,1.836,870,1.227,871,1.227,872,1.313,873,1.227,874,1.313,875,1.36,876,1.36,877,1.149,878,1.227,879,1.36,880,1.149,881,1.83,882,1.36,883,1.149,884,1.36,885,1.112,886,1.36,887,1.149,888,1.227,889,1.313,890,1.36,1192,2.716,1193,2.716,1271,2.999,1272,4.96,1273,3.429,1274,3.429,1275,3.429,1276,2.716,1277,2.716,1278,2.716,1279,2.716,1280,2.716,1281,2.716,1282,3.429,1283,3.429,1284,3.429,1285,3.429,1286,5.056,1287,4.96,1288,4.96,1289,2.504,1290,2.504,1291,2.716]],["title/interfaces/Composition.html",[64,1.345,1151,2.508]],["body/interfaces/Composition.html",[3,0.203,4,0.203,5,0.166,8,0.544,9,0.871,27,1.915,30,0.012,31,0.696,32,0.673,33,0.775,34,1.539,58,0.203,63,0.279,64,2.634,87,0.01,88,0.01,135,1.319,235,1.942,327,2.326,410,1.69,596,3.088,691,2.835,695,3.088,699,3.395,805,2.168,993,3.577,1147,3.088,1148,4.662,1149,3.234,1150,3.785,1151,4.624,1152,5.405,1153,3.395,1154,3.395,1155,3.785,1156,4.028,1157,3.785,1158,3.577]],["title/components/ContentProjectionComponent.html",[740,0.816,799,1.435]],["body/components/ContentProjectionComponent.html",[3,0.091,4,0.091,5,0.074,8,0.244,9,0.499,10,0.628,12,1.424,13,1,14,0.577,15,1.467,23,0.883,24,1.18,27,1.49,29,0.944,30,0.012,31,0.969,32,0.711,33,0.771,34,0.689,35,1.071,36,1.097,47,1.093,53,0.756,54,1.183,55,1.109,58,0.209,59,0.153,63,0.091,67,0.1,72,0.689,83,1.932,87,0.006,88,0.006,111,0.374,112,0.805,113,0.628,123,1.243,124,1.911,126,1.204,127,1.518,132,0.886,133,1.831,135,1.613,145,0.805,146,1.243,148,0.78,156,0.916,178,1.088,182,0.947,189,1.518,190,0.947,201,1.34,202,1.34,204,0.858,214,1.809,215,0.979,219,1.693,232,0.947,235,1,236,2.146,239,1.809,240,1.637,242,2.21,246,1.809,247,2.21,248,2.21,249,2.21,250,2.21,251,1.809,252,2.21,253,2.21,254,1.809,255,1.809,256,1.809,257,2.21,259,1.809,260,1.809,261,1.809,262,1.742,263,1.742,264,1.809,265,1.809,266,1.809,267,1.809,268,1.742,269,1.742,272,2.53,273,1.218,274,1.172,275,1.218,276,1.218,277,1.172,278,1.172,279,1.172,280,1.088,281,1.172,282,1.05,283,1.05,284,1.218,285,1.218,286,1.218,287,1.218,288,1.218,289,1.218,290,1.172,291,1.088,292,1.172,293,1.172,294,1.129,295,1.172,296,1.172,297,1.129,298,1.05,299,1.218,300,1.218,301,1.05,302,1.218,305,0.831,308,1.382,318,1.809,320,1.323,321,1.218,322,1.218,323,1.218,324,1.172,325,1.218,326,1.218,327,1.243,328,1.218,329,1.218,330,1.323,331,1.218,332,1.172,333,1.218,334,1.172,335,1.172,336,1.218,337,1.172,338,1.218,339,1.268,343,1.218,344,1.218,355,1.98,359,0.916,364,1.382,365,0.916,390,0.916,410,0.756,423,0.886,430,0.947,452,1.382,470,0.831,472,0.916,504,3.068,538,0.916,602,0.947,604,0.947,616,1.512,639,1.802,643,0.886,664,1.014,690,0.947,693,1.942,740,0.982,743,0.916,744,0.916,745,0.916,746,0.916,747,0.916,748,0.916,765,0.916,766,1.369,767,1.05,770,0.831,772,2.894,773,2.696,774,1.014,776,1.565,781,1.323,782,1.172,786,0.572,787,1.565,788,2.226,789,1.05,790,2.226,791,0.916,792,1.014,793,1.621,794,0.916,795,1.05,796,0.947,797,0.979,798,2.809,799,1.942,800,2.149,801,1.05,802,0.947,803,1.014,804,0.947,805,1.845,806,1.05,807,0.947,808,1.05,809,0.947,810,1.05,811,0.947,812,1.05,813,0.947,814,0.947,815,1.05,816,0.947,817,1.014,818,0.916,819,1.05,820,0.916,821,1.014,822,1.05,823,1.05,824,1.942,825,1.05,826,0.916,827,1.05,828,0.947,829,0.979,830,0.947,831,1.847,832,2.809,833,0.916,834,0.947,835,0.916,836,1.014,837,0.947,838,0.947,839,1.05,840,0.947,841,0.916,842,1.621,843,0.947,844,2.226,845,0.916,846,0.916,847,1.014,848,1.621,849,0.916,850,1.014,851,0.947,852,0.979,853,0.947,854,0.979,855,0.916,856,1.05,857,0.858,858,1.05,859,0.979,860,0.979,861,0.979,862,0.947,863,1.014,864,0.947,865,1.014,866,0.947,867,0.947,868,0.947,869,1.512,870,0.947,871,0.947,872,1.014,873,0.947,874,1.014,875,1.05,876,1.05,877,0.886,878,0.947,879,1.05,880,0.886,881,1.567,882,1.05,883,0.886,884,1.05,885,0.858,886,1.05,887,0.886,888,0.947,889,1.014,890,1.05,1064,2.314,1143,2.314,1292,4.365,1293,2.314,1294,4.086,1295,4.086,1296,5.612,1297,4.086,1298,2.314,1299,4.086,1300,2.314,1301,2.647,1302,2.647,1303,2.647,1304,2.647,1305,2.647,1306,2.314,1307,2.314,1308,2.647]],["title/classes/DagreUtils.html",[67,0.156,1309,3.284]],["body/classes/DagreUtils.html",[3,0.158,4,0.158,5,0.129,8,0.422,14,0.857,15,1.344,24,1.063,29,1.063,30,0.012,31,0.909,32,0.662,33,0.818,35,1.026,47,0.994,56,0.901,58,0.209,60,2.031,63,0.158,67,0.172,75,1.295,87,0.008,88,0.008,90,3.346,170,1.904,327,2.067,378,3.084,410,2.384,468,2.932,592,3.629,596,3.166,645,5.389,691,3.704,699,2.63,805,2.067,993,3.667,1148,4.317,1149,4.225,1153,3.48,1154,4.79,1155,2.932,1309,4.802,1310,4.007,1311,6.063,1312,6.063,1313,6.063,1314,6.063,1315,6.063,1316,6.063,1317,6.063,1318,6.063,1319,4.582,1320,6.063,1321,4.582,1322,8.298,1323,6.063,1324,4.582,1325,6.894,1326,6.063,1327,4.582,1328,6.063,1329,4.582,1330,4.582,1331,4.582,1332,4.582,1333,4.582,1334,4.582,1335,6.795,1336,4.582,1337,6.063,1338,4.582,1339,4.582,1340,4.582,1341,3.629,1342,4.802,1343,2.932,1344,6.063,1345,4.582,1346,4.582,1347,4.582,1348,4.582,1349,4.582,1350,4.582,1351,6.063,1352,4.582,1353,4.582,1354,4.582,1355,4.582]],["title/directives/DashedDrawDirective.html",[111,0.586,877,1.389]],["body/directives/DashedDrawDirective.html",[3,0.133,4,0.133,5,0.109,8,0.357,9,0.661,12,1.188,14,0.765,23,1.17,24,1.157,27,1.207,29,0.548,30,0.012,31,0.456,32,0.688,33,0.422,35,0.92,47,1.038,54,1.246,55,1.168,56,1.226,58,0.244,59,0.225,60,2.088,63,0.133,67,0.146,72,1.009,87,0.008,88,0.008,111,0.548,113,0.92,116,1.595,126,1.595,135,1.682,139,1.435,140,2.229,154,2.462,155,1.453,170,2.119,182,1.387,189,1.646,194,2.988,195,2.761,201,1.811,202,1.811,236,1.702,240,1.284,244,2.976,291,1.594,308,2.024,310,3.07,340,4.937,345,2.831,426,3.952,437,5.343,447,4.733,449,4.937,454,4.733,770,1.217,772,1.299,773,1.699,877,1.813,878,2.231,891,4.563,893,5.343,905,5.901,909,5.452,1158,3.77,1306,5.452,1356,7.205,1357,3.391,1358,6.234,1359,6.747,1360,6.234,1361,6.234,1362,6.234,1363,6.234,1364,6.234,1365,3.07,1366,5.412,1367,3.106,1368,5.412,1369,3.877,1370,3.877,1371,3.877,1372,3.877,1373,3.877,1374,3.877,1375,3.877,1376,3.877,1377,3.877,1378,3.877,1379,3.877,1380,3.877,1381,2.64,1382,3.391,1383,2.481,1384,3.877,1385,3.391,1386,3.391,1387,6.234,1388,3.07,1389,5.412,1390,3.877,1391,3.877,1392,3.391,1393,3.877,1394,3.391,1395,3.07,1396,3.877,1397,6.747,1398,5.412,1399,3.877,1400,6.234,1401,3.877,1402,3.877,1403,3.391,1404,3.877,1405,3.877,1406,3.877,1407,3.877,1408,6.234,1409,5.412,1410,3.877,1411,3.877,1412,3.877,1413,3.877,1414,3.877,1415,6.234,1416,5.412,1417,3.877,1418,6.234,1419,3.877,1420,3.877,1421,5.412,1422,3.877,1423,3.877,1424,3.07,1425,3.877,1426,5.412,1427,3.877,1428,3.877,1429,3.877,1430,6.234,1431,3.391]],["title/pipes/Deg2RadPipe.html",[1099,2.823,1432,2.823]],["body/pipes/Deg2RadPipe.html",[3,0.21,4,0.21,5,0.172,14,0.864,24,0.864,29,0.864,30,0.012,31,0.913,32,0.538,33,0.665,35,0.834,58,0.21,59,0.354,63,0.21,67,0.23,75,1.165,87,0.01,88,0.01,116,1.802,135,1.827,280,2.988,770,1.92,1099,4.949,1432,4.949,1433,4.843,1434,5.348,1435,7.269,1436,4.843,1437,7.269,1438,6.115,1439,6.357,1440,7.168,1441,6.357,1442,4.843,1443,6.115,1444,4.843,1445,4.465]],["title/components/DofComponent.html",[740,0.816,818,1.435]],["body/components/DofComponent.html",[3,0.108,4,0.108,5,0.088,8,0.289,9,0.569,10,0.746,12,1.387,14,0.658,15,1.095,23,1.006,24,1.097,29,0.783,30,0.012,31,0.945,32,0.624,33,0.712,34,0.819,35,0.967,36,0.844,47,1.002,53,0.899,54,1.131,55,1.06,58,0.225,59,0.182,63,0.108,67,0.118,75,0.6,87,0.007,88,0.007,111,0.444,112,0.957,113,0.746,123,1.416,126,1.372,127,0.957,132,1.054,133,1.956,135,1.236,139,1.164,140,0.988,145,0.957,146,2.083,148,1.928,152,2.142,154,2.052,156,1.089,169,3.352,170,1.741,190,2.778,192,2.142,196,3.171,197,3.4,198,2.771,199,3.182,200,4.474,201,1.488,202,1.488,203,3.921,204,2.121,206,3.4,214,2.062,215,2.052,216,2.142,232,1.126,235,1.139,236,0.794,240,0.746,272,2.214,305,0.988,355,1.847,359,1.089,365,1.089,390,1.089,410,0.899,423,1.054,430,1.126,470,0.988,472,1.089,538,1.089,542,5.18,602,1.126,604,1.126,616,1.723,643,1.054,664,1.205,690,1.126,693,2.121,740,1.091,743,1.089,744,1.089,745,1.089,746,1.089,747,1.089,748,1.089,765,1.089,766,1.56,767,1.248,770,0.988,772,2.917,773,2.722,774,1.205,776,1.205,782,1.393,786,0.68,787,1.783,788,2.431,789,1.248,790,2.431,791,1.089,792,1.205,793,1.847,794,1.089,795,1.248,796,1.126,797,1.164,798,2.948,799,1.089,800,1.205,801,1.248,802,1.126,803,1.205,804,1.126,805,1.99,806,1.248,807,1.126,808,1.248,809,1.126,810,1.248,811,1.126,812,1.248,813,1.126,814,1.126,815,1.248,816,1.126,817,1.205,818,2.121,819,1.248,820,1.089,821,1.205,822,1.248,823,1.248,824,1.089,825,1.248,826,1.089,827,1.248,828,1.126,829,1.164,830,1.126,831,2.052,832,2.948,833,1.089,834,1.126,835,1.089,836,1.205,837,1.126,838,1.126,839,1.248,840,1.126,841,1.089,842,1.847,843,1.126,844,2.431,845,1.089,846,1.089,847,1.205,848,1.847,849,1.089,850,1.205,851,1.126,852,1.164,853,1.126,854,1.164,855,1.089,856,1.248,857,1.02,858,1.248,859,1.164,860,1.164,861,1.164,862,1.126,863,1.205,864,1.126,865,1.205,866,1.126,867,1.126,868,1.126,869,1.723,870,1.126,871,1.126,872,1.205,873,1.126,874,1.205,875,1.248,876,1.248,877,1.054,878,1.126,879,1.248,880,1.054,881,1.741,882,1.248,883,1.054,884,1.248,885,1.02,886,1.248,887,1.054,888,1.126,889,1.205,890,1.248,1207,3.171,1223,2.142,1232,2.142,1265,3.352,1266,3.547,1276,2.491,1277,2.491,1278,2.491,1279,2.491,1280,2.491,1281,2.491,1286,2.491,1446,2.751,1447,4.656,1448,6.541,1449,6.541,1450,6.541,1451,4.656,1452,4.656,1453,3.146,1454,3.146,1455,4.656,1456,3.146,1457,3.146,1458,3.146,1459,3.146,1460,3.146,1461,3.146,1462,5.544,1463,5.544,1464,3.146,1465,3.146,1466,5.544,1467,3.146,1468,3.146,1469,3.146,1470,4.656,1471,3.146,1472,2.751]],["title/components/DotScreenComponent.html",[740,0.816,820,1.435]],["body/components/DotScreenComponent.html",[3,0.116,4,0.116,5,0.095,8,0.312,9,0.601,10,0.803,12,1.416,14,0.695,15,1.135,23,1.062,24,1.087,29,0.817,30,0.012,31,0.956,32,0.593,33,0.733,34,0.881,35,0.989,36,0.909,47,1.029,53,0.967,54,0.907,55,0.85,58,0.242,59,0.196,63,0.116,67,0.127,75,0.645,87,0.007,88,0.007,111,0.479,112,1.03,113,0.803,123,1.495,126,1.449,127,1.03,132,1.134,133,2.008,135,0.755,139,1.819,140,1.063,145,1.03,146,2.139,148,1.449,154,1.646,156,1.172,165,1.693,190,2.819,192,2.306,196,3.347,197,3.589,198,3.172,199,3.321,200,4.635,201,1.553,202,1.553,203,4.062,204,2.186,206,3.589,214,2.177,215,2.141,216,2.306,232,1.212,235,1.202,236,0.854,240,0.803,272,2.26,305,1.543,355,1.95,359,1.172,365,1.172,390,1.172,396,2.048,397,2.167,410,0.967,423,1.134,430,1.212,470,1.063,472,1.172,538,1.172,577,2.306,578,2.306,602,1.212,604,1.212,616,1.819,643,1.134,664,1.297,690,1.212,693,2.197,740,1.138,743,1.172,744,1.172,745,1.172,746,1.172,747,1.172,748,1.172,765,1.172,766,1.646,767,1.343,770,1.063,772,2.926,773,2.731,774,1.297,776,1.297,782,1.5,786,0.732,787,1.883,788,2.518,789,1.343,790,2.518,791,1.172,792,1.297,793,1.95,794,1.172,795,1.343,796,1.212,797,1.253,798,3.004,799,1.172,800,1.297,801,1.343,802,1.212,803,1.297,804,1.212,805,2.05,806,1.343,807,1.212,808,1.343,809,1.212,810,1.343,811,1.212,812,1.343,813,1.212,814,1.212,815,1.343,816,1.212,817,1.297,818,1.172,819,1.343,820,2.197,821,2.216,822,1.343,823,1.343,824,1.172,825,1.343,826,1.172,827,1.343,828,1.212,829,1.253,830,1.212,831,2.141,832,3.004,833,1.172,834,1.212,835,1.172,836,1.297,837,1.212,838,1.212,839,1.343,840,1.212,841,1.172,842,1.95,843,1.212,844,2.518,845,1.172,846,1.172,847,1.297,848,1.95,849,1.172,850,1.297,851,1.212,852,1.253,853,1.212,854,1.253,855,1.172,856,1.343,857,1.098,858,1.343,859,1.253,860,1.253,861,1.253,862,1.212,863,1.297,864,1.212,865,1.297,866,1.212,867,1.212,868,1.212,869,1.819,870,1.212,871,1.212,872,1.297,873,1.212,874,1.297,875,1.343,876,1.343,877,1.134,878,1.212,879,1.343,880,1.134,881,1.817,882,1.343,883,1.134,884,1.343,885,1.098,886,1.343,887,1.134,888,1.212,889,1.297,890,1.343,1192,2.682,1193,2.682,1276,2.682,1277,2.682,1278,2.682,1279,2.682,1280,2.682,1281,2.682,1286,2.682,1289,2.473,1290,2.473,1291,2.682,1473,5.06,1474,2.962,1475,4.298,1476,5.06,1477,4.915,1478,3.589,1479,3.387,1480,3.387,1481,3.387,1482,3.387,1483,3.387]],["title/interfaces/Edge.html",[64,1.345,1153,2.38]],["body/interfaces/Edge.html",[3,0.198,4,0.198,5,0.162,8,0.53,9,0.857,27,1.93,30,0.012,31,0.678,32,0.743,33,0.856,34,1.5,58,0.198,63,0.277,64,2.615,87,0.01,88,0.01,135,1.686,235,1.925,327,2.3,410,1.646,596,3.009,691,2.762,695,4.108,699,3.308,805,2.134,993,3.485,1147,3.009,1148,4.629,1149,3.151,1150,3.688,1151,4.242,1152,3.924,1153,4.026,1154,3.308,1155,3.688,1156,3.924,1157,3.688,1158,3.485]],["title/components/EffectComposerComponent.html",[204,1.345,740,0.816]],["body/components/EffectComposerComponent.html",[3,0.107,4,0.107,5,0.087,8,0.506,9,0.564,12,1.24,14,0.652,15,1.449,23,0.997,24,1.081,29,0.777,30,0.012,31,0.943,32,0.6,33,0.768,34,0.808,35,0.963,47,1.033,53,0.887,54,0.573,55,0.537,56,0.907,58,0.234,59,0.18,60,1.842,63,0.107,67,0.117,72,0.808,75,0.592,87,0.006,88,0.006,111,0.439,112,0.944,113,0.736,116,1.359,126,1.359,127,0.944,132,1.04,133,1.947,139,1.149,154,1.842,156,1.074,165,1.552,170,1.448,171,1.488,189,1.852,190,1.111,194,2.637,195,2.436,196,5.207,201,1.634,202,1.634,203,4.163,204,1.974,214,2.042,215,2.036,217,2.715,219,3.896,220,5.589,232,1.111,236,0.783,240,1.094,305,0.975,359,1.074,365,1.074,378,1.966,390,1.074,410,0.887,423,1.04,430,1.111,470,0.975,472,1.074,538,1.074,602,1.111,604,1.111,616,1.706,643,1.04,664,1.189,690,1.111,693,2.107,703,3.896,740,1.198,743,1.074,744,1.074,745,1.074,746,1.074,747,1.074,748,1.074,765,1.074,766,1.544,767,1.231,770,0.975,772,2.916,773,2.72,774,1.189,776,1.189,786,0.671,787,1.766,788,2.415,789,1.231,790,2.415,791,1.074,792,1.189,793,1.829,794,1.074,795,1.231,796,1.111,797,1.149,798,2.938,799,1.074,800,1.189,801,1.231,802,1.111,803,1.189,804,1.111,805,1.979,806,1.231,807,1.111,808,1.231,809,1.111,810,1.231,811,1.111,812,1.231,813,1.111,814,1.111,815,1.231,816,1.111,817,1.189,818,1.074,819,1.231,820,1.074,821,1.189,822,1.231,823,1.231,824,1.074,825,1.231,826,1.074,827,1.231,828,1.111,829,1.149,830,1.111,831,2.036,832,2.938,833,1.074,834,1.111,835,1.074,836,1.189,837,1.111,838,1.111,839,1.231,840,1.111,841,1.074,842,1.829,843,1.111,844,2.415,845,1.074,846,1.074,847,1.189,848,1.829,849,1.074,850,1.189,851,1.111,852,1.149,853,1.111,854,1.149,855,1.074,856,1.231,857,2.288,858,1.231,859,1.149,860,1.149,861,1.149,862,1.111,863,1.189,864,1.111,865,1.189,866,1.111,867,1.111,868,1.111,869,1.706,870,1.111,871,1.111,872,1.189,873,1.111,874,1.189,875,1.231,876,1.231,877,1.04,878,1.111,879,1.231,880,1.04,881,1.727,882,1.231,883,1.04,884,1.231,885,1.007,886,1.231,887,1.04,888,1.111,889,1.189,890,1.231,1176,5.325,1187,4.811,1188,2.715,1191,2.715,1472,2.715,1484,6.771,1485,2.715,1486,4.611,1487,6.088,1488,6.088,1489,4.611,1490,5.501,1491,5.501,1492,4.611,1493,3.105,1494,3.105,1495,4.611,1496,3.105,1497,3.105,1498,3.105,1499,3.105,1500,3.105,1501,4.611,1502,3.105,1503,3.105,1504,3.105,1505,3.105,1506,4.611,1507,3.105,1508,3.105,1509,3.105,1510,3.105,1511,3.105,1512,2.715,1513,3.105,1514,2.715,1515,2.715,1516,3.105,1517,3.105,1518,3.105,1519,3.105,1520,3.105,1521,3.105,1522,3.105,1523,3.105,1524,3.105,1525,3.105,1526,3.105,1527,3.105,1528,3.105,1529,3.105,1530,3.105,1531,3.105]],["title/components/EmptyComponent.html",[740,0.816,824,1.435]],["body/components/EmptyComponent.html",[3,0.092,4,0.092,5,0.075,8,0.247,9,0.505,10,0.636,12,1.447,13,1.01,14,0.583,15,1.478,23,0.892,24,1.18,27,1.497,29,0.949,30,0.012,31,0.967,32,0.709,33,0.774,34,0.698,35,1.074,36,1.108,47,1.097,53,0.766,54,1.19,55,1.115,56,0.528,58,0.21,59,0.155,63,0.092,67,0.101,72,0.698,75,0.511,87,0.006,88,0.006,111,0.379,112,0.816,113,0.636,116,1.217,123,1.256,124,1.928,126,1.217,127,1.531,132,0.898,133,1.841,135,1.618,145,0.816,146,1.256,148,0.791,155,1.108,156,0.928,178,1.103,182,0.96,189,1.531,190,0.96,194,2.412,201,1.351,202,1.351,204,0.87,214,1.828,215,0.993,232,0.96,235,1.01,236,2.146,239,1.828,240,1.529,242,2.503,246,1.828,247,2.229,248,2.229,249,2.229,250,2.229,251,1.828,252,2.229,253,2.229,254,1.828,255,1.828,256,1.828,257,2.229,259,1.828,260,1.828,261,1.828,262,1.76,263,1.76,264,1.828,265,1.828,266,1.828,267,1.828,268,1.76,269,1.76,272,2.534,273,1.235,274,1.188,275,1.235,276,1.235,277,1.188,278,1.188,279,1.188,280,1.103,281,1.188,282,1.064,283,1.064,284,1.235,285,1.235,286,1.235,287,1.235,288,1.235,289,1.235,290,1.188,291,1.103,292,1.188,293,1.188,294,1.144,295,1.188,296,1.188,297,1.144,298,1.064,299,1.235,300,1.235,301,1.064,302,1.235,305,0.842,308,2.628,318,1.188,319,1.285,320,1.34,321,1.235,322,1.235,323,1.235,324,1.188,325,1.235,326,1.235,327,1.256,328,1.235,329,1.235,330,1.34,331,1.235,332,1.188,333,1.235,334,1.188,335,1.188,336,1.235,337,1.188,338,1.235,339,1.285,343,1.235,344,1.235,355,1.637,359,0.928,361,2.811,364,1.4,365,0.928,390,0.928,410,0.766,423,0.898,430,0.96,452,1.4,470,0.842,472,0.928,504,3.09,538,0.928,602,0.96,604,0.96,616,1.528,643,0.898,664,1.027,690,0.96,693,1.956,740,0.99,743,0.928,744,0.928,745,0.928,746,0.928,747,0.928,748,0.928,765,0.928,766,1.383,767,1.064,770,0.842,772,2.896,773,2.698,774,1.027,776,1.581,781,1.34,782,1.188,786,0.58,787,1.581,788,2.242,789,1.064,790,2.242,791,0.928,792,1.027,793,1.637,794,0.928,795,1.064,796,0.96,797,0.993,798,2.82,799,0.928,800,1.027,801,1.064,802,0.96,803,1.027,804,0.96,805,1.856,806,1.064,807,0.96,808,1.064,809,0.96,810,1.064,811,0.96,812,1.064,813,0.96,814,0.96,815,1.064,816,0.96,817,1.027,818,0.928,819,1.064,820,0.928,821,1.027,822,1.064,823,1.064,824,1.956,825,1.064,826,0.928,827,1.064,828,0.96,829,0.993,830,0.96,831,1.862,832,2.82,833,0.928,834,0.96,835,0.928,836,1.027,837,0.96,838,0.96,839,1.064,840,0.96,841,0.928,842,1.637,843,0.96,844,2.242,845,0.928,846,0.928,847,1.027,848,1.637,849,0.928,850,1.027,851,0.96,852,0.993,853,0.96,854,0.993,855,0.928,856,1.064,857,0.87,858,1.064,859,0.993,860,0.993,861,0.993,862,0.96,863,1.027,864,0.96,865,1.027,866,0.96,867,0.96,868,0.96,869,1.528,870,0.96,871,0.96,872,1.027,873,0.96,874,1.027,875,1.064,876,1.064,877,0.898,878,0.96,879,1.064,880,0.898,881,1.58,882,1.064,883,0.898,884,1.064,885,0.87,886,1.064,887,0.898,888,0.96,889,1.027,890,1.064,1298,2.346,1532,2.346,1533,4.128,1534,2.682]],["title/components/FogComponent.html",[740,0.816,826,1.435]],["body/components/FogComponent.html",[3,0.113,4,0.113,5,0.092,8,0.303,9,0.588,12,1.476,14,0.68,15,1.244,23,1.04,24,1.08,27,1.073,29,0.68,30,0.012,31,0.945,32,0.612,33,0.681,34,0.856,35,0.909,47,1.018,53,0.94,54,1.05,55,0.985,56,0.647,58,0.215,59,0.191,63,0.113,67,0.124,75,0.627,87,0.007,88,0.007,111,0.465,112,1.001,113,0.78,116,1.418,118,2.971,123,1.464,126,1.418,127,1.001,132,1.102,133,1.988,135,1.396,145,1.464,146,1.905,148,1.418,154,2.097,155,1.292,156,1.139,169,1.99,171,2.307,190,1.177,194,2.727,195,2.52,201,1.681,202,1.681,204,1.067,214,2.131,215,1.218,219,3.079,232,1.177,236,0.83,240,1.141,305,1.033,359,1.139,365,1.139,390,1.139,410,0.94,422,3.594,423,1.102,426,3.514,430,1.177,470,1.033,472,1.139,504,3.111,538,1.139,558,2.877,602,1.177,604,1.177,616,1.781,643,1.102,657,5.476,664,1.26,690,1.177,693,2.167,695,3.269,740,1.119,743,1.139,744,1.139,745,1.139,746,1.139,747,1.139,748,1.139,765,1.139,766,1.612,767,1.305,770,1.033,772,2.923,773,2.728,774,1.26,776,1.26,786,0.711,787,1.843,788,2.484,789,1.305,790,2.484,791,1.139,792,1.26,793,1.909,794,1.139,795,1.305,796,1.177,797,1.218,798,2.982,799,1.139,800,1.26,801,1.305,802,1.177,803,1.26,804,1.177,805,2.027,806,1.305,807,1.177,808,1.305,809,1.177,810,1.305,811,1.177,812,1.305,813,1.177,814,1.177,815,1.305,816,1.177,817,1.26,818,1.139,819,1.305,820,1.139,821,1.26,822,1.305,823,1.305,824,1.139,825,1.305,826,2.167,827,1.305,828,1.177,829,1.218,830,1.177,831,2.106,832,2.982,833,1.139,834,1.177,835,1.139,836,1.26,837,1.177,838,1.177,839,1.305,840,1.177,841,1.139,842,1.909,843,1.177,844,2.484,845,1.139,846,1.139,847,1.26,848,1.909,849,1.139,850,1.26,851,1.177,852,1.218,853,1.177,854,1.218,855,1.139,856,1.305,857,2.16,858,1.305,859,1.218,860,1.218,861,1.218,862,1.177,863,1.26,864,1.177,865,1.26,866,1.177,867,1.177,868,1.177,869,1.781,870,1.177,871,1.177,872,1.26,873,1.177,874,1.26,875,1.305,876,1.305,877,1.102,878,1.177,879,1.305,880,1.102,881,1.787,882,1.305,883,1.102,884,1.305,885,1.067,886,1.305,887,1.102,888,1.177,889,1.26,890,1.305,1170,3.811,1216,3.811,1243,2.605,1535,2.877,1536,4.812,1537,6.261,1538,4.976,1539,5.476,1540,4.812,1541,4.812,1542,3.29,1543,3.079,1544,3.29,1545,3.29,1546,3.29,1547,3.29,1548,3.29,1549,3.29,1550,3.29,1551,3.29,1552,3.29,1553,4.812,1554,4.812,1555,3.29,1556,3.29,1557,3.29,1558,4.812,1559,3.29,1560,4.812,1561,3.29,1562,2.877,1563,2.877,1564,3.29,1565,3.29,1566,3.29]],["title/injectables/FontService.html",[0,1.148,1075,2.823]],["body/injectables/FontService.html",[0,1.931,2,2.629,3,0.196,4,0.196,5,0.16,8,0.526,9,0.852,10,1.355,12,1.533,14,0.986,15,1.247,24,1.064,27,1.793,29,0.986,30,0.012,31,0.821,32,0.614,33,0.759,35,0.951,50,4.004,53,1.631,54,1.054,55,0.988,56,1.482,58,0.259,59,0.331,60,1.913,63,0.196,67,0.215,75,1.088,87,0.01,88,0.01,89,5.236,92,5.093,93,5.093,94,4.463,95,4.75,97,5.093,99,4.819,100,4.17,235,1.706,272,2.291,470,1.793,1075,4.75,1567,4.995,1568,5.711,1569,4.523,1570,4.523,1571,4.523,1572,5.711,1573,6.975,1574,5.711,1575,5.711,1576,5.711,1577,4.995,1578,5.711]],["title/interfaces/GraphModel.html",[64,1.345,1154,2.38]],["body/interfaces/GraphModel.html",[3,0.196,4,0.196,5,0.16,8,0.524,9,0.851,27,1.889,30,0.012,31,0.67,32,0.72,33,0.91,34,1.482,58,0.196,63,0.276,64,2.606,87,0.01,88,0.01,135,1.269,235,1.84,327,2.562,410,1.627,596,2.973,691,2.729,695,2.973,699,3.268,805,2.118,993,4.738,1147,2.973,1148,4.497,1149,3.113,1150,3.643,1151,4.21,1152,3.877,1153,3.268,1154,3.996,1155,4.813,1156,5.335,1157,5.014,1158,4.738]],["title/components/GridHelperComponent.html",[740,0.816,833,1.435]],["body/components/GridHelperComponent.html",[3,0.091,4,0.091,5,0.074,8,0.243,9,0.498,10,0.625,12,1.441,13,0.996,14,0.575,15,1.475,23,0.88,24,1.182,27,1.487,29,0.943,30,0.012,31,0.965,32,0.714,33,0.77,34,0.686,35,1.071,36,1.093,47,1.092,53,0.753,54,1.181,55,1.107,56,0.518,58,0.208,59,0.153,63,0.091,67,0.099,72,0.686,75,0.502,87,0.006,88,0.006,111,0.372,112,0.802,113,0.625,123,1.239,124,1.906,126,1.2,127,1.514,132,0.883,133,1.828,135,1.705,145,0.802,146,1.239,148,0.777,154,1.667,155,1.093,156,0.912,178,1.083,182,0.943,189,1.514,190,0.943,201,1.336,202,1.336,204,0.855,214,1.804,215,0.975,232,0.943,235,0.996,236,2.143,239,1.804,240,1.518,242,2.48,246,1.804,247,2.204,248,2.204,249,2.204,250,2.204,251,1.804,252,2.204,253,2.204,254,1.804,255,1.804,256,1.804,257,2.204,259,1.804,260,1.804,261,1.804,262,1.737,263,1.737,264,1.804,265,1.804,266,1.804,267,1.804,268,1.737,269,1.737,272,2.529,273,1.213,274,1.167,275,1.213,276,1.875,277,1.167,278,1.167,279,1.167,280,1.083,281,1.167,282,1.045,283,1.045,284,1.213,285,1.213,286,1.213,287,1.213,288,1.213,289,1.213,290,1.167,291,1.083,292,1.167,293,1.167,294,1.124,295,1.167,296,1.167,297,1.124,298,1.045,299,1.213,300,1.213,301,1.045,302,1.213,305,0.828,318,1.167,319,1.263,320,1.317,321,1.213,322,1.213,323,1.213,324,1.167,325,1.213,326,1.213,327,1.239,328,1.213,329,1.213,330,1.317,331,1.213,332,1.167,333,1.213,334,1.167,335,1.167,336,1.213,337,1.167,338,1.213,339,1.263,343,1.213,344,1.213,355,1.615,359,0.912,364,1.376,365,0.912,390,0.912,410,0.753,423,0.883,430,0.943,452,1.376,469,3.225,470,0.828,472,0.912,504,3.061,538,0.912,602,0.943,604,0.943,616,1.507,643,0.883,664,1.009,690,0.943,693,1.938,740,0.979,743,0.912,744,0.912,745,0.912,746,0.912,747,0.912,748,0.912,765,0.912,766,1.364,767,1.045,770,0.828,772,2.894,773,2.695,774,1.009,776,1.56,781,1.317,782,1.167,786,0.57,787,1.56,788,2.221,789,1.045,790,2.221,791,0.912,792,1.009,793,1.615,794,0.912,795,1.045,796,0.943,797,0.975,798,2.805,799,0.912,800,1.009,801,1.045,802,0.943,803,1.009,804,0.943,805,1.841,806,1.045,807,0.943,808,1.045,809,0.943,810,1.045,811,0.943,812,1.045,813,0.943,814,0.943,815,1.045,816,0.943,817,1.009,818,0.912,819,1.045,820,0.912,821,1.009,822,1.045,823,1.045,824,0.912,825,1.045,826,0.912,827,1.045,828,0.943,829,0.975,830,0.943,831,2.24,832,2.805,833,1.938,834,0.943,835,0.912,836,1.009,837,0.943,838,0.943,839,1.045,840,0.943,841,0.912,842,1.615,843,0.943,844,2.221,845,0.912,846,0.912,847,1.009,848,1.615,849,0.912,850,1.009,851,0.943,852,0.975,853,0.943,854,0.975,855,0.912,856,1.045,857,0.855,858,1.045,859,0.975,860,0.975,861,0.975,862,0.943,863,1.009,864,0.943,865,1.009,866,0.943,867,0.943,868,0.943,869,1.507,870,0.943,871,0.943,872,1.009,873,0.943,874,1.009,875,1.045,876,1.045,877,0.883,878,0.943,879,1.045,880,0.883,881,1.563,882,1.045,883,0.883,884,1.045,885,0.855,886,1.045,887,0.883,888,0.943,889,1.009,890,1.045,1138,2.087,1140,3.942,1141,2.305,1579,4.897,1580,4.073,1581,4.353,1582,4.073,1583,4.073,1584,2.635,1585,2.635,1586,2.635]],["title/components/HemisphereLightComponent.html",[740,0.816,835,1.435]],["body/components/HemisphereLightComponent.html",[3,0.088,4,0.088,5,0.072,8,0.236,9,0.488,10,0.609,12,1.433,13,0.976,14,0.564,15,1.47,23,0.862,24,1.182,27,1.628,29,0.934,30,0.012,31,0.962,32,0.714,33,0.764,34,0.668,35,1.066,36,1.071,47,1.085,53,0.733,54,1.295,55,1.214,56,0.505,58,0.206,59,0.149,60,0.859,63,0.088,67,0.097,72,0.668,75,0.489,87,0.006,88,0.006,111,0.363,112,0.781,113,0.609,123,1.214,124,1.875,126,1.176,127,1.489,132,0.859,133,1.808,135,1.713,145,0.781,146,1.214,148,0.756,154,1.849,155,1.071,156,0.888,178,1.055,182,0.918,189,1.819,190,0.918,201,1.314,202,1.314,204,0.832,214,1.767,215,0.95,232,0.918,235,0.976,236,2.139,239,1.767,240,1.501,242,2.445,246,1.767,247,2.167,248,2.167,249,2.167,250,2.167,251,1.767,252,2.167,253,2.167,254,1.767,255,1.767,256,1.767,257,2.167,259,1.767,260,1.767,261,1.767,262,1.701,263,1.701,264,1.767,265,1.767,266,1.767,267,1.767,268,1.701,269,1.701,272,2.522,273,1.181,274,1.136,275,1.181,276,1.181,277,1.136,278,1.136,279,1.136,280,1.055,281,1.136,282,1.018,283,1.018,284,1.837,285,1.181,286,1.181,287,1.181,288,1.181,289,1.181,290,1.136,291,1.055,292,1.136,293,1.136,294,1.094,295,1.136,296,1.136,297,1.094,298,1.018,299,1.181,300,1.181,301,1.018,302,1.181,305,0.806,318,1.136,319,1.23,320,1.282,321,1.181,322,1.181,323,1.181,324,1.136,325,1.181,326,1.181,327,1.214,328,1.181,329,1.181,330,1.282,331,1.181,332,1.136,333,1.181,334,1.136,335,1.136,336,1.181,337,1.136,338,1.181,339,1.23,343,1.181,344,1.181,355,1.582,359,0.888,364,1.34,365,0.888,390,0.888,410,0.733,423,0.859,430,0.918,452,1.34,470,0.806,472,0.888,504,3.018,538,0.888,602,0.918,604,0.918,616,1.476,643,0.859,664,0.983,690,0.918,693,1.911,715,2.913,740,0.963,743,0.888,744,0.888,745,0.888,746,0.888,747,0.888,748,0.888,765,0.888,766,1.336,767,1.018,769,2.032,770,0.806,772,2.89,773,2.691,774,0.983,775,4.372,776,1.528,777,3.876,778,2.244,779,2.244,781,1.282,782,1.136,785,2.244,786,0.555,787,1.528,788,2.19,789,1.018,790,2.19,791,0.888,792,0.983,793,1.582,794,0.888,795,1.018,796,0.918,797,0.95,798,2.783,799,0.888,800,0.983,801,1.018,802,0.918,803,0.983,804,0.918,805,1.819,806,1.018,807,0.918,808,1.018,809,0.918,810,1.018,811,0.918,812,1.018,813,0.918,814,0.918,815,1.018,816,0.918,817,0.983,818,0.888,819,1.018,820,0.888,821,0.983,822,1.018,823,1.018,824,0.888,825,1.018,826,0.888,827,1.018,828,0.918,829,0.95,830,0.918,831,1.811,832,2.783,833,0.888,834,0.918,835,1.911,836,1.875,837,0.918,838,0.918,839,1.018,840,0.918,841,0.888,842,1.582,843,0.918,844,2.19,845,0.888,846,0.888,847,0.983,848,1.582,849,0.888,850,0.983,851,0.918,852,0.95,853,0.918,854,0.95,855,0.888,856,1.018,857,0.832,858,1.018,859,0.95,860,0.95,861,0.95,862,0.918,863,0.983,864,0.918,865,0.983,866,0.918,867,0.918,868,0.918,869,1.476,870,0.918,871,0.918,872,0.983,873,0.918,874,0.983,875,1.018,876,1.018,877,0.859,878,0.918,879,1.018,880,0.859,881,1.537,882,1.018,883,0.859,884,1.018,885,0.832,886,1.018,887,0.859,888,0.918,889,0.983,890,1.018,1587,5.229,1588,3.989,1589,4.894,1590,4.894,1591,3.989,1592,3.989,1593,2.566,1594,2.566,1595,2.566]],["title/injectables/IconService.html",[0,1.148,1076,2.653]],["body/injectables/IconService.html",[0,1.621,1,4.977,2,2.001,3,0.149,4,0.228,5,0.122,8,0.4,9,0.715,10,1.031,11,4.506,12,1.408,13,1.432,14,0.827,15,1.414,16,4.635,17,4.635,18,4.635,19,4.635,20,3.871,21,4.635,22,4.635,24,1.132,26,3.986,27,1.88,29,1.076,30,0.012,31,0.896,32,0.696,33,0.828,34,1.923,35,1.061,36,1.9,37,3.986,38,4.506,40,3.986,41,3.174,43,3.174,45,3.174,47,0.968,48,3.174,50,3.36,51,3.174,53,1.672,54,1.08,55,1.013,56,0.855,58,0.201,59,0.252,63,0.201,64,1.409,65,3.54,66,5.061,67,0.164,75,1.116,85,3.174,87,0.008,88,0.008,139,2.449,140,2.601,170,2.321,235,1.619,272,2.438,1076,3.745,1596,3.442,1597,4.347,1598,5.775,1599,4.347,1600,3.801,1601,3.801,1602,3.801,1603,3.801,1604,3.801,1605,5.119,1606,4.347,1607,3.801,1608,3.442,1609,6.917,1610,6.917,1611,6.917,1612,3.801,1613,3.801,1614,3.801,1615,3.801,1616,3.801,1617,3.801,1618,3.801,1619,3.801,1620,5.788,1621,3.801,1622,3.801,1623,3.801,1624,3.801,1625,3.801,1626,3.801,1627,3.801,1628,3.801,1629,3.801]],["title/interfaces/IconSource.html",[64,1.345,1598,3.028]],["body/interfaces/IconSource.html",[0,1.832,1,4.002,3,0.18,4,0.18,5,0.147,8,0.483,9,0.809,10,1.244,11,3.572,12,1,20,2.868,26,3.572,27,1.475,30,0.012,32,0.638,34,1.365,37,3.572,38,3.572,40,3.572,58,0.228,59,0.304,63,0.228,64,1.701,65,4.383,66,5.266,67,0.197,75,1.261,85,3.831,87,0.009,88,0.009,139,3.074,140,2.668,170,2.464,235,1.773,1076,3.357,1147,2.739,1596,4.155,1598,5.73,1605,4.588,1608,4.155,1609,7.361,1610,7.361,1611,7.361,1612,4.588,1613,4.588,1614,4.588,1615,4.588,1616,4.588,1617,4.588,1618,4.588,1619,4.588,1620,6.339,1621,4.588,1622,4.588,1623,4.588,1624,4.588,1625,4.588,1626,4.588,1627,4.588,1628,4.588,1629,4.588]],["title/components/MapControlsComponent.html",[740,0.816,841,1.435]],["body/components/MapControlsComponent.html",[3,0.088,4,0.088,5,0.072,8,0.235,9,0.486,10,0.605,12,1.39,14,0.561,15,0.872,23,0.859,24,1.15,29,0.561,30,0.012,31,0.903,32,0.7,33,0.432,34,0.664,35,0.861,36,0.685,47,0.965,53,1.393,54,1.386,55,1.299,56,0.502,58,0.235,59,0.148,63,0.088,67,0.096,72,1.034,75,0.486,87,0.006,88,0.006,111,0.361,112,0.776,113,0.605,116,1.171,118,2.547,123,1.209,126,1.171,127,0.776,132,0.855,133,1.804,135,1.596,139,1.805,140,2.071,145,1.209,146,1.674,148,0.752,154,2.544,156,0.883,165,1.276,170,0.801,171,1.904,189,0.776,190,0.913,195,2.16,201,1.309,202,1.477,204,0.828,215,0.945,232,0.913,235,0.972,236,0.644,240,0.942,244,1.421,272,2.131,305,0.801,340,3.863,345,1.864,355,2.183,356,2.232,359,0.883,365,0.883,390,0.883,410,0.729,421,2.232,423,0.855,430,0.913,460,1.864,470,0.801,472,0.883,538,0.883,602,2.687,604,1.745,606,3.146,607,4.723,608,2.705,609,3.863,610,4.359,611,3.146,612,3.139,614,1.864,616,2.037,617,2.021,618,2.021,619,1.738,620,2.021,621,1.864,622,2.542,623,1.544,624,2.021,625,1.864,626,1.864,627,2.021,628,2.021,629,2.021,630,2.021,631,1.864,632,2.021,638,2.021,639,2.705,640,2.021,641,2.021,643,1.331,644,2.021,645,1.633,649,1.864,650,2.021,652,2.021,662,3.146,664,0.978,671,2.232,687,2.021,690,0.913,693,1.905,740,0.96,743,0.883,744,0.883,745,0.883,746,0.883,747,0.883,748,0.883,765,0.883,766,1.331,767,1.012,770,0.801,772,2.889,773,2.69,774,0.978,776,1.522,782,1.13,786,0.552,787,1.522,788,2.183,789,1.012,790,2.183,791,0.883,792,0.978,793,1.576,794,0.883,795,1.012,796,0.913,797,0.945,798,2.778,799,0.883,800,0.978,801,1.012,802,0.913,803,0.978,804,0.913,805,1.814,806,1.012,807,0.913,808,1.012,809,0.913,810,1.012,811,0.913,812,1.012,813,0.913,814,0.913,815,1.012,816,0.913,817,0.978,818,0.883,819,1.012,820,0.883,821,0.978,822,1.012,823,1.012,824,0.883,825,1.012,826,0.883,827,1.012,828,0.913,829,0.945,830,0.913,831,1.805,832,2.778,833,0.883,834,0.913,835,0.883,836,0.978,837,0.913,838,0.913,839,1.012,840,0.913,841,1.905,842,1.576,843,0.913,844,2.183,845,0.883,846,0.883,847,0.978,848,1.576,849,0.883,850,0.978,851,0.913,852,0.945,853,0.913,854,0.945,855,0.883,856,1.012,857,0.828,858,1.012,859,0.945,860,0.945,861,0.945,862,0.913,863,0.978,864,0.913,865,0.978,866,0.913,867,0.913,868,0.913,869,1.47,870,0.913,871,0.913,872,0.978,873,0.913,874,0.978,875,1.012,876,1.012,877,0.855,878,0.913,879,1.012,880,0.855,881,1.532,882,1.012,883,0.855,884,1.012,885,0.828,886,1.012,887,0.855,888,0.913,889,0.978,890,1.012,891,4.124,893,3.863,947,1.905,1207,2.705,1224,2.172,1225,4.359,1343,1.633,1367,1.465,1382,2.232,1392,2.232,1394,2.232,1431,2.232,1445,2.901,1543,1.633,1630,2.021,1631,6.826,1632,2.021,1633,3.146,1634,4.266,1635,4.878,1636,4.878,1637,4.878,1638,4.878,1639,4.878,1640,4.878,1641,4.878,1642,4.266,1643,4.878,1644,4.878,1645,4.266,1646,4.878,1647,4.266,1648,3.973,1649,2.552,1650,3.146,1651,2.552,1652,2.552,1653,2.552,1654,3.973,1655,2.552,1656,2.552,1657,3.973,1658,2.552,1659,3.973,1660,2.552,1661,2.552,1662,4.814,1663,2.552,1664,2.552,1665,2.552,1666,2.552,1667,2.232,1668,2.552,1669,2.552,1670,2.552,1671,2.552,1672,2.232,1673,2.232,1674,2.232,1675,2.232,1676,2.232,1677,3.973,1678,2.552,1679,2.232,1680,3.474,1681,3.474,1682,2.232,1683,3.474,1684,3.474,1685,2.552,1686,2.232,1687,2.232,1688,2.552,1689,2.552,1690,2.552,1691,3.973,1692,2.552,1693,2.552,1694,2.552,1695,3.973,1696,2.552,1697,2.552,1698,2.552,1699,2.552,1700,2.552,1701,2.552,1702,2.552,1703,2.552,1704,2.552,1705,2.552,1706,2.552,1707,2.552,1708,2.552,1709,2.552,1710,3.973,1711,2.552,1712,2.552,1713,2.552,1714,1.864,1715,2.901]],["title/injectables/ModelService.html",[0,1.148,1077,2.823]],["body/injectables/ModelService.html",[0,1.72,1,5.046,2,2.189,3,0.164,4,0.238,5,0.133,8,0.437,9,0.759,10,1.128,11,4.711,12,1.451,13,1.52,14,0.878,15,1.442,16,4.919,17,4.919,18,4.919,19,4.919,20,4.011,21,4.919,22,4.919,24,1.153,26,4.23,27,1.898,29,1.103,30,0.012,31,0.919,32,0.71,33,0.85,34,1.981,35,1.085,36,1.969,37,4.23,38,4.711,40,4.23,41,3.472,43,3.472,45,3.472,47,1.012,48,3.472,50,3.566,51,3.472,53,1.774,54,1.147,55,1.075,56,0.935,58,0.214,59,0.276,63,0.164,65,4.878,66,4.427,67,0.179,75,1.184,87,0.009,88,0.009,182,2.223,198,2.376,235,1.52,272,2.481,305,1.493,396,2.875,397,3.042,577,3.237,578,3.237,1077,4.23,1289,3.472,1290,3.472,1600,4.158,1601,4.158,1602,4.158,1603,4.158,1604,4.158,1607,4.158,1608,3.765,1716,4.158,1717,4.754,1718,4.754,1719,4.754,1720,4.754,1721,4.754,1722,4.754]],["title/interfaces/NearestIntersection.html",[64,1.345,1723,3.028]],["body/interfaces/NearestIntersection.html",[0,1.517,3,0.136,4,0.136,5,0.111,8,0.363,9,0.67,15,1.321,23,0.853,30,0.012,32,0.482,56,1.078,58,0.246,59,0.229,60,2.277,63,0.136,64,1.279,67,0.148,72,1.638,75,1.473,87,0.008,88,0.008,112,1.914,116,1.163,119,3.729,135,1.221,139,1.46,140,2.135,155,1.47,170,1.72,172,3.505,182,1.412,189,1.666,195,2.426,198,1.972,199,2.265,202,1.059,229,3.124,236,1.382,240,1.753,244,2.92,282,2.173,283,2.697,298,1.565,308,3.729,327,1.2,378,2.684,487,4.983,612,1.816,651,2.686,704,3.124,881,2.135,897,2.265,906,3.124,916,3.124,926,5.384,1147,2.06,1223,2.686,1224,2.995,1232,2.686,1265,4.111,1266,4.35,1381,2.686,1424,3.124,1650,3.124,1723,5.398,1724,3.124,1725,5.864,1726,4.964,1727,2.686,1728,3.45,1729,4.791,1730,3.45,1731,5.503,1732,3.45,1733,4.595,1734,2.881,1735,5.503,1736,3.45,1737,3.45,1738,3.45,1739,3.45,1740,3.45,1741,3.45,1742,3.45,1743,3.45,1744,3.45,1745,3.45,1746,3.45,1747,3.45,1748,5.503,1749,3.45,1750,3.45,1751,3.124,1752,3.45,1753,3.45,1754,3.45,1755,3.45,1756,4.285,1757,3.45,1758,3.45,1759,4.791,1760,5.503,1761,5.503,1762,4.791,1763,4.791,1764,6.247,1765,6.247,1766,4.791,1767,3.45,1768,3.45,1769,5.503,1770,2.881,1771,3.45,1772,4.791,1773,4.791,1774,3.45,1775,3.45,1776,3.45,1777,3.45,1778,3.45,1779,3.45,1780,3.45,1781,4.338,1782,3.45,1783,3.45,1784,3.45,1785,3.45,1786,3.45,1787,3.45,1788,3.124,1789,4.791,1790,4.338,1791,3.45,1792,5.946,1793,4.791,1794,3.45,1795,3.45,1796,3.45,1797,4.791]],["title/interfaces/Node.html",[64,1.345,596,2.165]],["body/interfaces/Node.html",[3,0.198,4,0.198,5,0.161,8,0.53,9,0.856,27,1.93,30,0.012,31,0.677,32,0.737,33,0.892,34,2.046,58,0.198,63,0.277,64,2.614,87,0.01,88,0.01,135,1.283,235,1.924,327,2.298,410,2.246,596,3.659,691,2.758,695,3.004,699,3.303,805,2.132,993,3.48,1147,3.004,1148,4.627,1149,3.146,1150,3.682,1151,4.238,1152,3.918,1153,3.303,1154,3.303,1155,3.682,1156,3.918,1157,3.682,1158,3.48]],["title/injectables/ObjLoaderService.html",[0,1.148,1078,2.823]],["body/injectables/ObjLoaderService.html",[0,1.843,2,2.439,3,0.182,4,0.182,5,0.149,8,0.487,9,0.814,10,1.256,12,1.5,14,0.941,15,1.407,24,1.112,27,1.755,29,1.029,30,0.012,31,0.857,32,0.641,33,0.792,35,0.993,47,0.974,50,3.822,53,1.513,54,1.229,55,1.152,56,1.503,58,0.271,59,0.307,63,0.182,67,0.199,75,1.01,87,0.009,88,0.009,89,5.14,92,4.861,93,4.861,94,4.26,95,4.533,97,4.861,99,4.659,100,3.868,155,1.787,235,1.629,244,2.605,272,2.215,378,2.259,410,1.513,470,2.286,1078,4.533,1569,4.195,1570,4.195,1571,4.195,1798,6.368,1799,4.195,1800,6.658,1801,5.297,1802,6.658,1803,7.281,1804,5.297,1805,5.297,1806,6.368,1807,5.297,1808,5.297,1809,5.297,1810,5.297,1811,5.297,1812,4.633,1813,5.822,1814,5.297,1815,5.297,1816,5.297]],["title/components/OrbitControlsComponent.html",[740,0.816,845,1.435]],["body/components/OrbitControlsComponent.html",[3,0.11,4,0.11,5,0.09,8,0.294,9,0.575,10,0.757,12,1.357,14,0.665,23,1.017,24,1.1,29,0.665,30,0.012,31,0.941,32,0.643,33,0.512,34,0.83,35,0.897,36,0.856,47,0.963,53,0.911,54,0.869,55,0.814,56,0.628,58,0.226,59,0.185,63,0.11,67,0.12,75,0.608,87,0.007,88,0.007,111,0.451,112,0.971,113,0.757,116,1.387,118,2.919,123,1.431,126,1.387,127,0.971,132,1.069,133,1.966,135,1.049,140,1.002,145,1.431,146,1.877,148,0.94,154,1.872,156,1.104,170,1.002,189,0.971,190,1.142,201,1.5,202,1.5,204,1.035,215,1.181,232,1.142,235,1.151,236,0.805,240,1.116,244,1.684,272,2.269,305,1.002,355,2.217,359,1.104,365,1.104,390,1.104,410,0.911,423,1.069,430,1.142,460,2.33,470,1.002,472,1.104,538,1.104,602,2.814,604,2.354,606,3.726,607,5.21,608,3.204,609,4.427,610,4.886,611,3.726,612,3.364,614,2.33,616,2.283,617,2.527,618,2.527,619,2.172,620,2.527,621,2.33,622,3.011,623,1.929,624,2.527,625,2.33,626,2.33,627,2.527,628,2.527,629,2.527,630,2.527,631,2.33,632,2.527,638,2.527,639,3.204,640,2.527,641,2.527,643,1.576,644,2.527,645,2.042,649,3.436,650,2.527,652,2.527,662,3.726,664,1.222,687,2.527,690,1.142,693,2.135,740,1.1,743,1.104,744,1.104,745,1.104,746,1.104,747,1.104,748,1.104,765,1.104,766,1.576,767,1.266,770,1.002,772,2.919,773,2.724,774,1.222,776,1.802,782,1.413,786,0.69,787,1.802,788,2.447,789,1.266,790,2.447,791,1.104,792,1.222,793,1.866,794,1.104,795,1.266,796,1.142,797,1.181,798,2.959,799,1.104,800,1.222,801,1.266,802,1.142,803,1.222,804,1.142,805,2.001,806,1.266,807,1.142,808,1.266,809,1.142,810,1.266,811,1.142,812,1.266,813,1.142,814,1.142,815,1.266,816,1.142,817,1.222,818,1.104,819,1.266,820,1.104,821,1.222,822,1.266,823,1.266,824,1.104,825,1.266,826,1.104,827,1.266,828,1.142,829,1.181,830,1.142,831,2.069,832,2.959,833,1.104,834,1.142,835,1.104,836,1.222,837,1.142,838,1.142,839,1.266,840,1.142,841,1.104,842,1.866,843,1.142,844,2.447,845,2.135,846,1.104,847,1.222,848,1.866,849,1.104,850,1.222,851,1.142,852,1.181,853,1.142,854,1.181,855,1.104,856,1.266,857,1.035,858,1.266,859,1.181,860,1.181,861,1.181,862,1.142,863,1.222,864,1.142,865,1.222,866,1.142,867,1.142,868,1.142,869,1.741,870,1.142,871,1.142,872,1.222,873,1.142,874,1.222,875,1.266,876,1.266,877,1.069,878,1.142,879,1.266,880,1.069,881,1.755,882,1.266,883,1.069,884,1.266,885,1.035,886,1.266,887,1.069,888,1.142,889,1.222,890,1.266,1207,3.204,1343,2.042,1367,1.831,1543,2.042,1630,2.527,1632,2.527,1633,3.726,1634,4.889,1645,4.889,1647,4.889,1662,4.115,1667,2.79,1672,2.79,1673,2.79,1674,2.79,1675,2.79,1676,2.79,1679,2.79,1680,4.115,1681,4.115,1682,2.79,1683,4.115,1684,4.115,1686,2.79,1687,2.79,1714,2.33,1715,3.436,1817,5.396,1818,4.705,1819,3.191,1820,3.191,1821,3.191,1822,3.191]],["title/components/OrthographicCameraComponent.html",[740,0.816,846,1.435]],["body/components/OrthographicCameraComponent.html",[3,0.105,4,0.105,5,0.085,8,0.28,9,0.556,10,0.723,12,1.451,13,1.112,14,0.643,15,1.154,23,0.983,24,1.121,29,0.769,30,0.012,31,0.94,32,0.66,33,0.592,34,0.793,35,0.957,36,0.818,47,1.078,53,0.87,54,0.839,55,0.787,56,0.599,58,0.222,59,0.177,60,1.021,63,0.105,67,0.115,72,1.183,75,0.581,87,0.006,88,0.006,111,0.431,112,2.46,113,0.723,116,1.34,118,2.841,119,3.37,120,4.308,121,4.308,122,4.777,123,1.383,124,2.084,125,3.321,126,1.34,127,1.655,128,3.601,129,3.601,130,3.601,131,3.601,132,1.021,133,1.934,135,1.607,139,1.128,140,1.428,145,1.383,146,1.835,148,1.34,150,3.601,152,4.108,154,1.523,155,1.221,156,1.055,165,1.523,167,4.308,169,1.843,170,0.957,171,1.461,172,2.91,190,1.09,204,0.988,215,1.128,232,1.09,235,1.112,236,0.769,240,0.723,272,2.346,305,0.957,355,1.804,359,1.055,365,1.055,390,1.055,410,0.87,423,1.021,430,1.09,452,1.591,470,0.957,472,1.055,538,1.055,602,1.09,604,1.09,616,1.683,643,1.021,664,1.167,690,1.09,693,2.088,740,1.187,743,1.055,744,1.055,745,1.055,746,1.055,747,1.055,748,1.055,765,1.055,766,1.523,767,1.209,770,0.957,772,2.913,773,2.717,774,1.167,776,1.742,781,1.523,782,1.349,786,0.659,787,1.742,788,2.393,789,1.209,790,2.393,791,1.055,792,1.167,793,1.804,794,1.055,795,1.209,796,1.09,797,1.128,798,2.923,799,1.055,800,1.167,801,1.209,802,1.09,803,1.167,804,1.09,805,1.963,806,1.209,807,1.09,808,1.209,809,1.09,810,1.209,811,1.09,812,1.209,813,1.09,814,1.09,815,1.209,816,1.09,817,1.167,818,1.055,819,1.209,820,1.055,821,1.167,822,1.209,823,1.209,824,1.055,825,1.209,826,1.055,827,1.209,828,1.09,829,1.128,830,1.09,831,2.013,832,2.923,833,1.055,834,1.09,835,1.055,836,1.167,837,1.09,838,1.09,839,1.209,840,1.09,841,1.055,842,1.804,843,1.09,844,2.393,845,1.055,846,2.088,847,2.084,848,1.804,849,1.055,850,1.167,851,1.09,852,1.128,853,1.09,854,1.128,855,1.055,856,1.209,857,0.988,858,1.209,859,1.128,860,1.128,861,1.128,862,1.09,863,1.167,864,1.09,865,1.167,866,1.09,867,1.09,868,1.09,869,1.683,870,1.09,871,1.09,872,1.167,873,1.09,874,1.167,875,1.209,876,1.209,877,1.021,878,1.09,879,1.209,880,1.021,881,1.708,882,1.209,883,1.021,884,1.209,885,0.988,886,1.209,887,1.021,888,1.09,889,1.167,890,1.209,946,1.883,1223,3.097,1224,3.942,1225,2.413,1232,3.097,1478,3.321,1515,2.665,1823,5.276,1824,2.413,1825,4.548,1826,6.033,1827,3.977,1828,2.665,1829,2.665,1830,2.665,1831,2.665,1832,2.665,1833,3.047,1834,3.047,1835,3.047,1836,3.047,1837,2.665,1838,2.665,1839,2.665,1840,2.665,1841,3.047,1842,3.047,1843,3.047,1844,4.548,1845,3.047,1846,3.047,1847,3.047,1848,3.047,1849,6.454,1850,3.047,1851,3.047,1852,3.047,1853,3.047,1854,3.047,1855,2.665,1856,3.047,1857,3.047]],["title/components/PerspectiveCameraComponent.html",[740,0.816,849,1.435]],["body/components/PerspectiveCameraComponent.html",[3,0.11,4,0.11,5,0.09,8,0.295,9,0.578,10,0.761,12,1.395,13,1.156,14,0.668,15,1.179,23,1.021,24,1.138,29,0.793,30,0.012,31,0.948,32,0.686,33,0.61,34,0.835,35,0.941,36,0.861,47,1.044,53,0.917,54,0.592,55,0.555,56,0.631,58,0.227,59,0.186,63,0.11,67,0.121,87,0.007,88,0.007,111,0.453,112,2.478,113,0.761,119,3.443,120,4.442,121,4.442,122,4.9,123,1.438,124,2.148,125,3.451,126,1.393,127,1.706,128,3.742,129,3.742,130,3.742,131,3.742,132,1.075,133,1.971,135,1.755,139,1.188,140,1.008,145,0.976,146,1.438,148,0.946,150,3.742,152,3.819,154,2.072,155,1.268,156,1.111,172,2.054,190,1.148,204,1.041,215,1.188,232,1.148,235,1.156,236,0.81,240,0.761,272,2.371,305,1.008,312,2.542,355,1.273,359,1.111,365,1.111,378,2.015,390,1.111,410,0.917,423,1.075,430,1.148,452,1.676,470,1.008,472,1.111,538,1.111,602,1.148,604,1.148,616,1.749,643,1.075,664,1.229,690,1.148,693,2.141,740,1.103,743,1.111,744,1.111,745,1.111,746,1.111,747,1.111,748,1.111,765,1.111,766,1.583,767,1.273,770,1.008,772,2.92,773,2.724,774,1.229,776,1.81,781,1.604,782,1.421,786,0.694,787,1.81,788,2.454,789,1.273,790,2.454,791,1.111,792,1.229,793,1.874,794,1.111,795,1.273,796,1.148,797,1.188,798,2.963,799,1.111,800,1.229,801,1.273,802,1.148,803,1.229,804,1.148,805,2.006,806,1.273,807,1.148,808,1.273,809,1.148,810,1.273,811,1.148,812,1.273,813,1.148,814,1.148,815,1.273,816,1.148,817,1.229,818,1.111,819,1.273,820,1.111,821,1.229,822,1.273,823,1.273,824,1.111,825,1.273,826,1.111,827,1.273,828,1.148,829,1.188,830,1.148,831,2.076,832,2.963,833,1.111,834,1.148,835,1.111,836,1.229,837,1.148,838,1.148,839,1.273,840,1.148,841,1.111,842,1.874,843,1.148,844,2.454,845,1.111,846,1.111,847,1.229,848,1.874,849,2.141,850,2.148,851,1.148,852,1.188,853,1.148,854,1.188,855,1.111,856,1.273,857,1.041,858,1.273,859,1.188,860,1.188,861,1.188,862,1.148,863,1.229,864,1.148,865,1.229,866,1.148,867,1.148,868,1.148,869,1.749,870,1.148,871,1.148,872,1.229,873,1.148,874,1.229,875,1.273,876,1.273,877,1.075,878,1.148,879,1.273,880,1.075,881,1.761,882,1.273,883,1.075,884,1.273,885,1.041,886,1.273,887,1.075,888,1.148,889,1.229,890,1.273,1538,4.905,1539,4.905,1562,2.807,1563,2.807,1824,2.542,1827,2.807,1828,2.807,1829,2.807,1830,2.807,1831,2.807,1832,2.807,1837,2.807,1838,2.807,1839,4.133,1840,2.807,1855,2.807,1858,5.768,1859,4.726,1860,5.609,1861,4.726,1862,3.209,1863,3.209,1864,3.209,1865,3.209,1866,3.209,1867,3.209,1868,3.209,1869,3.209,1870,3.209,1871,3.209]],["title/pipes/Rad2DegPipe.html",[1100,2.823,1432,2.823]],["body/pipes/Rad2DegPipe.html",[3,0.21,4,0.21,5,0.171,14,0.861,24,0.861,29,0.861,30,0.012,31,0.911,32,0.536,33,0.663,35,0.831,58,0.21,59,0.353,63,0.21,67,0.229,75,1.162,87,0.01,88,0.01,116,1.797,135,1.826,280,3.451,468,3.9,770,1.914,1100,4.94,1432,4.94,1433,4.827,1436,4.827,1439,6.345,1440,6.345,1441,6.345,1442,4.827,1444,4.827,1445,4.451,1872,5.331,1873,7.255,1874,7.255,1875,6.096]],["title/directives/RaycasterCameraDirective.html",[111,0.586,880,1.389]],["body/directives/RaycasterCameraDirective.html",[3,0.205,4,0.205,5,0.167,8,0.549,14,1.012,23,1.547,24,1.012,29,0.842,30,0.012,31,0.702,32,0.525,33,0.649,35,0.813,47,1.047,58,0.264,59,0.346,63,0.205,67,0.224,87,0.01,88,0.01,111,0.842,112,2.421,113,1.414,116,2.11,119,4.006,194,3.677,201,2.136,244,2.562,612,3.848,651,4.059,770,1.872,772,1.997,773,2.248,880,2.398,881,2.248,1112,4.059,1365,4.721,1367,4.109,1383,3.815,1876,4.91,1877,5.214,1878,5.962,1879,5.962,1880,5.962]],["title/interfaces/RaycasterEmitEvent.html",[64,1.345,1881,3.028]],["body/interfaces/RaycasterEmitEvent.html",[3,0.172,4,0.172,5,0.14,8,0.461,9,0.785,23,1.082,30,0.012,32,0.565,33,0.699,47,0.94,56,1.395,58,0.266,59,0.29,60,2.151,63,0.221,64,1.623,67,0.188,87,0.009,88,0.009,111,0.707,116,1.475,155,1.724,182,1.791,194,3.078,195,2.844,201,1.343,202,1.343,236,1.952,240,1.187,244,2.88,301,2.967,423,2.375,534,5.462,612,3.265,622,3.202,623,3.026,740,1.584,766,2.151,773,2.017,881,2.429,885,1.623,897,4.07,1112,3.408,1147,2.613,1367,2.873,1381,3.408,1383,3.202,1388,5.615,1395,5.085,1725,5.78,1726,5.178,1727,3.408,1733,5.178,1734,3.654,1756,4.373,1770,3.654,1876,3.202,1881,4.689,1882,3.963,1883,4.377,1884,4.377,1885,4.377,1886,4.377,1887,4.377,1888,4.377,1889,4.377,1890,3.963,1891,3.963,1892,3.654,1893,6.201,1894,4.377,1895,6.201,1896,4.377,1897,4.377,1898,4.377,1899,4.377,1900,4.377,1901,4.377,1902,4.377,1903,4.377,1904,4.377,1905,4.377,1906,4.377,1907,4.377,1908,4.377,1909,4.377,1910,4.377,1911,4.377,1912,5.616,1913,4.377,1914,4.377,1915,4.377]],["title/directives/RaycasterEnableDirective.html",[111,0.586,883,1.389]],["body/directives/RaycasterEnableDirective.html",[3,0.209,4,0.209,5,0.17,8,0.558,14,1.022,23,1.563,24,1.022,29,0.857,30,0.012,31,0.714,32,0.534,33,0.66,35,0.827,47,1.058,58,0.249,59,0.352,63,0.209,67,0.228,87,0.01,88,0.01,111,0.857,113,1.439,116,2.132,194,3.705,199,4.152,201,2.148,244,2.171,612,3.821,770,1.905,772,2.032,773,2.272,881,2.272,883,2.423,1112,4.131,1383,3.882,1876,4.946,1916,5.305,1917,6.066,1918,6.066,1919,6.066,1920,6.066]],["title/directives/RaycasterGroupDirective.html",[111,0.586,885,1.345]],["body/directives/RaycasterGroupDirective.html",[3,0.146,4,0.146,5,0.119,8,0.39,14,0.813,23,1.244,24,1.15,29,0.923,30,0.012,31,0.769,32,0.665,33,0.711,35,1.054,47,1.166,56,1.285,58,0.252,59,0.246,60,1.928,63,0.198,64,1.375,67,0.16,87,0.008,88,0.008,111,0.599,113,1.006,116,1.697,155,1.545,182,1.517,194,3.132,195,2.894,201,1.881,202,1.881,236,1.849,240,1.006,244,3.008,268,2.455,301,3.066,423,2.189,468,2.713,534,5.118,612,3.559,622,3.683,623,3.481,696,4.558,740,1.379,766,2.347,770,1.331,772,1.42,773,2.201,881,2.504,885,1.866,897,4.206,1112,2.887,1365,3.358,1367,3.304,1381,2.887,1383,2.713,1388,5.175,1395,4.558,1725,4.771,1726,3.096,1727,2.887,1733,4.771,1734,3.096,1756,4.772,1770,4.203,1876,5.246,1881,3.096,1882,3.358,1883,5.034,1884,5.034,1885,5.034,1886,5.034,1887,5.034,1888,5.034,1889,5.034,1890,5.175,1891,5.175,1892,4.771,1893,5.715,1894,3.708,1895,5.715,1896,3.708,1897,3.708,1898,3.708,1899,6.129,1900,3.708,1901,3.708,1902,3.708,1903,6.129,1904,3.708,1905,3.708,1906,3.708,1907,6.129,1908,3.708,1909,5.034,1910,3.708,1911,3.708,1912,5.034,1913,3.708,1914,3.708,1915,3.708,1921,5.756,1922,5.756,1923,4.24,1924,4.24,1925,4.24,1926,4.24,1927,4.24,1928,4.24,1929,4.24,1930,4.24,1931,4.24]],["title/injectables/RaycasterService.html",[0,1.148,612,1.909]],["body/injectables/RaycasterService.html",[0,1.278,2,1.43,3,0.107,4,0.107,5,0.087,8,0.286,9,0.564,14,0.652,15,1.45,23,1.189,24,1.166,29,0.997,30,0.012,31,0.831,32,0.663,33,0.806,35,1.077,47,1.133,54,1.124,55,1.054,56,1.083,58,0.224,59,0.18,60,2.04,63,0.107,64,1.008,67,0.117,72,1.432,75,1.382,87,0.006,88,0.006,112,2.074,116,0.916,119,3.786,135,1.52,139,2.254,140,2.141,155,1.238,170,1.449,172,2.952,182,1.112,189,1.404,195,2.043,198,3.044,199,3.496,202,1.635,229,2.461,236,1.537,240,1.305,244,3.058,282,2.183,283,2.704,298,1.232,308,3.18,327,1.404,378,2.597,474,3.654,487,4.358,612,2.124,651,2.116,696,3.654,704,4.358,881,2.141,897,3.496,906,4.358,916,4.823,926,4.823,1223,2.116,1224,2.522,1232,2.116,1265,3.683,1266,3.897,1381,2.116,1424,2.461,1650,2.461,1723,4.979,1724,2.461,1725,5.295,1726,3.369,1727,2.116,1728,4.035,1729,5.327,1730,4.813,1731,4.813,1732,2.717,1733,4.019,1734,2.269,1735,4.813,1736,2.717,1737,2.717,1738,2.717,1739,2.717,1740,2.717,1741,2.717,1742,5.327,1743,2.717,1744,2.717,1745,2.717,1746,2.717,1747,5.327,1748,4.813,1749,5.327,1750,4.813,1751,3.654,1752,2.717,1753,4.035,1754,2.717,1755,2.717,1756,4.147,1757,2.717,1758,4.035,1759,4.035,1760,4.813,1761,4.813,1762,4.035,1763,4.035,1764,5.691,1765,5.691,1766,4.035,1767,2.717,1768,2.717,1769,4.813,1770,3.369,1771,2.717,1772,4.035,1773,4.035,1774,4.035,1775,4.813,1776,2.717,1777,2.717,1778,2.717,1779,4.035,1780,4.035,1781,3.654,1782,2.717,1783,2.717,1784,4.035,1785,2.717,1786,2.717,1787,2.717,1788,2.461,1789,4.035,1790,3.654,1791,2.717,1792,5.327,1793,4.035,1794,2.717,1795,2.717,1796,2.717,1797,4.035,1932,4.614,1933,4.614,1934,4.614,1935,4.614,1936,4.614,1937,4.035,1938,4.614,1939,3.107,1940,3.107,1941,3.107,1942,3.107,1943,3.107,1944,2.461,1945,3.107,1946,3.107,1947,3.107,1948,3.107,1949,3.107,1950,3.107,1951,3.107,1952,3.107,1953,3.107,1954,3.107,1955,3.107,1956,3.107,1957,3.107,1958,3.107,1959,3.107,1960,3.107]],["title/components/RendererCanvasComponent.html",[643,1.389,740,0.816]],["body/components/RendererCanvasComponent.html",[3,0.106,4,0.106,5,0.086,8,0.283,9,0.56,12,1.043,14,0.648,15,1.084,23,0.991,24,1.044,29,0.648,30,0.012,31,0.935,32,0.534,33,0.499,34,0.801,35,0.827,47,0.801,53,0.88,54,0.568,55,0.533,58,0.158,59,0.178,63,0.106,67,0.116,75,0.874,87,0.006,88,0.006,111,0.435,112,0.937,113,0.73,116,1.351,117,4.335,124,2.323,126,1.351,127,0.937,132,1.031,133,1.941,139,1.14,140,1.439,154,1.535,170,1.439,189,1.394,190,1.102,198,1.539,204,0.999,215,1.14,232,1.102,236,0.777,240,0.73,244,2.32,305,1.439,359,1.066,365,1.066,390,1.066,396,1.862,397,1.97,410,0.88,422,2.631,423,1.031,430,1.102,470,0.967,472,1.066,474,3.63,480,5.303,538,1.066,577,2.097,578,2.097,602,1.102,604,1.959,614,5.14,616,2.244,619,3.121,621,3.997,622,3.503,626,3.997,639,3.121,643,2.031,645,2.933,664,1.179,690,1.102,693,2.099,703,2.933,740,1.077,743,1.066,744,1.066,745,1.066,746,1.066,747,1.066,748,1.066,765,1.066,766,1.535,767,1.221,770,0.967,772,2.915,773,2.719,774,1.179,776,1.179,786,0.666,787,1.755,788,2.405,789,1.221,790,2.405,791,1.066,792,1.179,793,1.818,794,1.066,795,1.221,796,1.102,797,1.14,798,2.931,799,1.066,800,1.179,801,1.221,802,1.102,803,1.179,804,1.102,805,1.972,806,1.221,807,1.102,808,1.221,809,1.102,810,1.221,811,1.102,812,1.221,813,1.102,814,1.102,815,1.221,816,1.102,817,1.179,818,1.066,819,1.221,820,1.066,821,1.179,822,1.221,823,1.221,824,1.066,825,1.221,826,1.066,827,1.221,828,1.102,829,1.14,830,1.102,831,2.026,832,2.931,833,1.066,834,1.102,835,1.066,836,1.179,837,1.102,838,1.102,839,1.221,840,1.102,841,1.066,842,1.818,843,1.102,844,2.405,845,1.066,846,1.066,847,1.179,848,1.818,849,1.066,850,1.179,851,1.102,852,1.14,853,1.102,854,1.14,855,2.603,856,1.221,857,0.999,858,1.221,859,1.14,860,1.14,861,1.14,862,1.102,863,1.179,864,1.102,865,1.179,866,1.102,867,1.102,868,1.102,869,1.696,870,1.102,871,1.102,872,1.179,873,1.102,874,1.179,875,1.221,876,1.221,877,1.031,878,1.102,879,1.221,880,1.031,881,1.719,882,1.221,883,1.031,884,1.221,885,0.999,886,1.221,887,1.031,888,1.102,889,1.179,890,1.221,897,4.151,898,4.802,946,1.895,1065,2.693,1122,2.693,1289,2.249,1290,2.249,1300,2.693,1343,1.97,1367,1.768,1514,4.788,1543,4.148,1630,2.439,1633,3.63,1714,2.249,1715,4.428,1961,6.578,1962,2.693,1963,5.727,1964,5.474,1965,4.583,1966,4.583,1967,5.474,1968,4.583,1969,6.064,1970,4.788,1971,4.583,1972,4.583,1973,5.474,1974,4.583,1975,3.079,1976,3.079,1977,4.583,1978,3.079,1979,4.583,1980,4.583,1981,3.079,1982,4.583,1983,3.079,1984,3.079,1985,3.079,1986,6.483,1987,4.583,1988,4.583,1989,4.583,1990,4.583,1991,4.583,1992,4.583,1993,4.788,1994,5.474,1995,5.474,1996,4.583,1997,4.583,1998,3.079,1999,3.079,2000,3.079,2001,3.079,2002,3.079,2003,3.079,2004,3.079,2005,3.079,2006,3.079,2007,4.583,2008,3.079,2009,2.693,2010,3.079,2011,3.079,2012,3.079,2013,3.079,2014,3.079,2015,3.079,2016,3.079,2017,3.079,2018,3.079,2019,3.079,2020,4.583,2021,3.079,2022,3.079,2023,2.249]],["title/injectables/RendererService.html",[0,1.148,133,1.184]],["body/injectables/RendererService.html",[0,1.388,2,1.602,3,0.12,4,0.12,5,0.098,8,0.32,9,0.613,12,0.663,14,0.708,15,1.513,20,3.212,23,1.083,24,1.164,27,1.31,29,1.058,30,0.012,31,0.881,32,0.703,33,0.842,35,1.069,47,1.116,54,0.642,55,0.602,56,0.685,58,0.244,59,0.202,60,1.968,63,0.12,67,0.131,68,3.969,72,1.304,75,1.225,87,0.007,88,0.007,112,2.225,119,3.705,125,3.66,133,1.432,135,1.117,139,2.174,140,2.019,152,4,155,1.345,165,3.212,170,2.228,172,4.359,203,4.359,204,2.301,215,1.288,220,3.969,244,3.022,310,2.756,378,2.505,422,3.911,608,4,651,2.369,685,4.383,703,4.113,857,2.371,1119,2.227,1128,4.291,1140,5.395,1216,5.09,1224,1.902,1341,2.756,1343,4.113,1512,3.043,1751,3.969,1781,5.395,1937,4.383,1963,5.619,1970,5.958,2009,6.926,2023,2.541,2024,3.043,2025,6.428,2026,6.428,2027,6.428,2028,5.012,2029,5.012,2030,5.012,2031,5.012,2032,5.012,2033,3.043,2034,5.012,2035,3.48,2036,3.48,2037,3.48,2038,6.428,2039,5.012,2040,3.48,2041,3.48,2042,5.012,2043,3.48,2044,3.48,2045,5.012,2046,3.48,2047,5.012,2048,3.48,2049,5.012,2050,3.48,2051,5.012,2052,3.48,2053,3.48,2054,3.48,2055,3.48,2056,3.48,2057,3.48,2058,3.48,2059,3.48,2060,3.48,2061,5.012,2062,3.48,2063,5.875,2064,3.48,2065,3.48,2066,3.48,2067,5.012,2068,3.48,2069,3.48,2070,3.48,2071,3.48,2072,3.48,2073,3.48,2074,6.428,2075,3.48,2076,3.48,2077,3.48,2078,3.48,2079,3.48,2080,3.48,2081,3.48,2082,3.48,2083,3.48,2084,3.48,2085,5.012,2086,5.012,2087,3.48,2088,3.48,2089,3.48,2090,3.48,2091,3.48,2092,3.48,2093,5.012,2094,3.48,2095,3.48,2096,3.48]],["title/classes/SVGLoader.html",[67,0.156,2097,3.028]],["body/classes/SVGLoader.html",[3,0.043,4,0.043,5,0.035,8,0.115,9,0.359,14,0.311,23,0.476,24,0.784,27,0.28,29,0.716,30,0.012,31,0.562,32,0.311,33,0.626,35,0.726,47,0.184,54,0.817,55,0.509,56,1.511,58,0.043,60,2.779,63,0.043,66,2.261,67,0.047,72,2.067,75,1.273,87,0.003,88,0.003,90,0.916,95,2.002,135,0.656,140,1.11,155,0.337,170,1.263,178,0.516,180,1.607,189,2.328,198,0.627,235,0.538,240,0.697,262,1.254,263,1.254,282,1.166,283,1.166,291,0.905,294,0.939,305,0.394,327,1.969,373,0.994,378,2.527,388,0.916,396,0.759,470,1.11,476,1.607,495,1.097,579,4.553,596,3.811,619,0.854,625,0.916,645,3.679,660,1.097,672,1.097,695,2.646,737,1.097,797,1.088,821,0.843,852,0.464,854,1.766,867,0.788,869,1.308,908,1.097,918,0.916,947,0.434,985,4.174,1063,5.756,1157,0.803,1158,0.759,1202,1.743,1224,3.326,1243,3.506,1325,1.097,1341,4.217,1386,1.925,1436,4.014,1442,4.217,1444,2.328,1445,2.58,1476,1.925,1478,2.147,1581,1.097,1642,5.183,1788,0.994,1790,1.743,1944,1.743,2023,0.916,2097,2.58,2098,5.028,2099,1.097,2100,2.94,2101,2.94,2102,3.534,2103,2.201,2104,2.94,2105,2.94,2106,3.534,2107,2.94,2108,1.255,2109,2.201,2110,2.94,2111,2.94,2112,1.255,2113,3.534,2114,1.255,2115,1.255,2116,1.255,2117,2.571,2118,1.255,2119,5.068,2120,5.068,2121,5.068,2122,1.255,2123,2.201,2124,2.201,2125,2.201,2126,2.201,2127,2.201,2128,1.255,2129,3.534,2130,3.534,2131,4.427,2132,1.255,2133,1.255,2134,1.255,2135,4.021,2136,1.255,2137,1.255,2138,7.516,2139,5.749,2140,1.255,2141,6.581,2142,1.255,2143,5.749,2144,5.325,2145,5.325,2146,4.772,2147,1.255,2148,2.201,2149,2.94,2150,2.201,2151,3.534,2152,2.201,2153,7.516,2154,3.534,2155,1.255,2156,7.347,2157,1.255,2158,2.94,2159,1.255,2160,1.255,2161,1.255,2162,1.255,2163,1.255,2164,1.255,2165,1.255,2166,1.255,2167,1.255,2168,1.255,2169,1.255,2170,1.255,2171,2.201,2172,1.255,2173,1.255,2174,1.255,2175,1.255,2176,1.255,2177,1.255,2178,1.255,2179,1.255,2180,1.255,2181,1.255,2182,2.94,2183,1.255,2184,1.255,2185,2.201,2186,1.255,2187,1.255,2188,2.94,2189,1.255,2190,2.201,2191,6.77,2192,2.201,2193,5.325,2194,3.534,2195,3.534,2196,2.201,2197,1.255,2198,1.255,2199,1.255,2200,1.255,2201,1.255,2202,1.255,2203,1.097,2204,1.255,2205,1.255,2206,1.255,2207,1.255,2208,1.255,2209,2.328,2210,2.94,2211,1.255,2212,2.94,2213,1.255,2214,2.201,2215,1.255,2216,1.255,2217,1.255,2218,2.94,2219,2.94,2220,1.255,2221,1.255,2222,2.201,2223,2.94,2224,1.255,2225,1.255,2226,1.255,2227,2.201,2228,2.201,2229,2.201,2230,1.255,2231,2.201,2232,2.201,2233,2.201,2234,3.534,2235,1.255,2236,1.255,2237,2.201,2238,1.255,2239,1.255,2240,1.255,2241,1.255,2242,1.255,2243,1.255,2244,1.255,2245,1.255,2246,2.201,2247,2.201,2248,1.255,2249,1.255,2250,1.255,2251,2.201,2252,2.201,2253,1.255,2254,1.255,2255,2.201,2256,2.571,2257,3.534,2258,5.55,2259,5.55,2260,2.94,2261,2.94,2262,2.94,2263,1.255,2264,1.255,2265,2.201,2266,4.021,2267,2.201,2268,1.255,2269,2.201,2270,4.427,2271,3.534,2272,4.427,2273,3.534,2274,2.201,2275,3.506,2276,2.201,2277,5.325,2278,5.325,2279,2.201,2280,4.021,2281,2.201,2282,1.255,2283,1.255,2284,1.255,2285,1.255,2286,2.94,2287,2.94,2288,2.201,2289,1.255,2290,4.021,2291,4.021,2292,4.021,2293,4.021,2294,2.201,2295,1.255,2296,1.255,2297,1.255,2298,1.255,2299,1.255,2300,1.255,2301,1.255,2302,1.255,2303,2.201,2304,1.255,2305,1.255,2306,1.255,2307,4.021,2308,2.201,2309,4.021,2310,1.255,2311,2.201,2312,1.255,2313,3.534,2314,1.255,2315,2.201,2316,1.255,2317,1.255,2318,2.94,2319,1.255,2320,1.255,2321,1.255,2322,5.068,2323,1.255,2324,2.201,2325,3.534,2326,2.201,2327,2.201,2328,1.255,2329,1.255,2330,1.255,2331,2.201,2332,1.255,2333,1.255,2334,1.255,2335,1.255,2336,2.94,2337,2.201,2338,1.255,2339,1.255,2340,1.097,2341,1.097,2342,2.94,2343,1.255,2344,1.255,2345,1.255,2346,1.255,2347,1.255,2348,1.255,2349,1.255,2350,1.255,2351,1.255,2352,1.255,2353,1.255,2354,1.255,2355,1.255,2356,1.255,2357,1.255,2358,1.255,2359,1.255,2360,1.255,2361,1.255,2362,1.255,2363,1.255,2364,3.534,2365,1.255,2366,1.255,2367,1.255,2368,1.255,2369,1.255,2370,1.255,2371,1.255,2372,1.255,2373,2.201,2374,1.255,2375,1.255,2376,1.255,2377,1.255,2378,1.255,2379,1.255,2380,1.255,2381,1.255,2382,1.255,2383,1.255,2384,1.255,2385,2.94,2386,2.201,2387,3.534,2388,2.201,2389,1.255,2390,2.201,2391,1.255,2392,2.94,2393,1.255,2394,2.201,2395,1.255,2396,1.255,2397,1.255,2398,1.255,2399,1.255,2400,1.255,2401,1.255,2402,1.255,2403,1.255,2404,1.255,2405,2.201,2406,1.255,2407,4.021,2408,1.255,2409,3.872,2410,1.255,2411,2.201,2412,1.255,2413,1.255,2414,2.201,2415,2.201,2416,2.201,2417,2.201,2418,2.201,2419,1.255,2420,2.201,2421,3.534,2422,2.94,2423,4.772,2424,2.201,2425,2.201,2426,1.255,2427,2.201,2428,1.255,2429,1.255,2430,1.255,2431,2.201,2432,2.94,2433,1.255,2434,1.255,2435,2.94,2436,1.255,2437,1.255,2438,1.255,2439,1.255,2440,1.097,2441,1.255,2442,2.94,2443,2.94,2444,1.255,2445,2.201,2446,1.255,2447,3.534,2448,2.94,2449,2.201,2450,1.255,2451,1.255,2452,1.255,2453,1.255,2454,1.255,2455,1.255,2456,1.255,2457,3.534,2458,3.534,2459,2.201,2460,3.534,2461,3.534,2462,1.255,2463,2.94,2464,2.201,2465,1.255,2466,2.94,2467,1.255,2468,1.255,2469,1.255,2470,1.097,2471,2.201,2472,1.255,2473,1.255,2474,2.201,2475,1.255,2476,1.255,2477,2.201,2478,1.255,2479,1.255,2480,1.255,2481,1.255,2482,2.201,2483,1.255,2484,1.255,2485,1.255,2486,1.255,2487,1.255,2488,1.255,2489,2.94,2490,2.94,2491,1.255,2492,2.94,2493,1.255,2494,2.94,2495,1.255,2496,2.201,2497,1.255,2498,1.925,2499,1.255,2500,2.201,2501,1.255,2502,1.255,2503,1.255,2504,1.255,2505,1.255,2506,1.255,2507,1.255,2508,1.255,2509,1.255,2510,1.255,2511,2.201,2512,1.255,2513,1.255,2514,1.255,2515,1.255,2516,1.255,2517,1.255,2518,1.255,2519,1.255,2520,1.255,2521,1.255,2522,1.255,2523,2.201,2524,1.255,2525,2.201,2526,1.255,2527,1.255,2528,1.255,2529,1.255,2530,1.255,2531,1.255,2532,2.94,2533,1.255,2534,0.994,2535,1.255,2536,1.255,2537,4.021,2538,1.255,2539,1.255,2540,1.255,2541,2.201,2542,1.255,2543,2.201,2544,1.255,2545,1.255,2546,1.255,2547,1.255,2548,1.255,2549,1.255,2550,1.255,2551,1.255,2552,1.255,2553,1.255,2554,1.255,2555,1.255,2556,1.255,2557,1.255,2558,1.255,2559,1.255,2560,1.255,2561,1.255,2562,1.255,2563,1.255,2564,1.255,2565,1.255,2566,1.255,2567,0.916,2568,1.255,2569,1.255,2570,1.255,2571,1.255,2572,2.201,2573,2.201,2574,2.201,2575,1.255]],["title/components/SceneComponent.html",[740,0.816,857,1.345]],["body/components/SceneComponent.html",[3,0.088,4,0.088,5,0.071,8,0.234,9,0.485,10,0.604,12,1.43,13,0.97,14,0.56,15,1.477,23,0.857,24,1.176,27,1.561,29,0.931,30,0.012,31,0.961,32,0.707,33,0.762,34,0.663,35,1.064,36,1.065,47,1.083,53,0.728,54,1.216,55,1.14,56,0.958,58,0.205,59,0.148,60,0.853,63,0.088,67,0.096,72,0.663,75,0.756,87,0.006,88,0.006,111,0.56,112,0.775,113,0.604,116,1.169,118,2.543,123,1.207,124,1.866,126,1.169,127,1.482,132,0.853,133,1.803,135,1.651,140,0.8,145,1.207,146,1.673,148,1.169,154,1.329,155,1.065,156,0.882,165,1.273,169,1.54,170,0.8,171,1.221,178,1.047,182,0.911,189,1.482,190,0.911,201,1.308,202,1.308,204,0.826,214,1.757,215,0.943,232,0.911,235,0.97,236,2.138,239,1.757,240,1.497,242,2.435,246,1.757,247,2.157,248,2.157,249,2.157,250,2.157,251,1.757,252,2.157,253,2.157,254,1.757,255,1.757,256,1.757,257,2.435,259,1.757,260,1.757,261,1.757,262,1.692,263,1.692,264,1.757,265,1.757,266,1.757,267,1.757,268,1.692,269,1.692,272,2.52,273,1.173,274,1.128,275,1.173,276,1.173,277,1.128,278,1.128,279,1.128,280,1.047,281,1.128,282,1.01,283,1.01,284,1.826,285,1.173,286,1.173,287,1.173,288,1.173,289,1.826,290,1.128,291,1.047,292,1.128,293,1.128,294,1.086,295,1.128,296,1.128,297,1.086,298,1.01,299,1.173,300,1.173,301,1.01,302,1.173,305,0.8,318,1.128,319,1.221,320,1.273,321,1.173,322,1.173,323,1.173,324,1.128,325,1.173,326,1.173,327,1.207,328,1.173,329,1.173,331,1.173,332,1.128,333,1.173,334,1.128,335,1.128,336,1.173,337,1.128,338,1.173,343,1.173,344,1.173,355,2.181,359,0.882,364,1.33,365,0.882,390,0.882,410,0.728,422,3.42,423,0.853,430,0.911,452,1.33,460,1.86,470,0.8,472,0.882,502,2.017,504,3.258,538,0.882,542,3.858,602,0.911,604,0.911,616,1.468,643,0.853,664,0.976,690,0.911,693,1.903,715,2.896,740,0.958,743,0.882,744,0.882,745,0.882,746,0.882,747,0.882,748,0.882,765,0.882,766,1.329,767,1.01,770,0.8,772,2.889,773,2.69,774,0.976,776,1.519,781,1.273,782,1.128,786,0.551,787,1.519,788,2.181,789,1.01,790,2.181,791,0.882,792,0.976,793,1.573,794,0.882,795,1.01,796,0.911,797,0.943,798,2.777,799,0.882,800,0.976,801,1.01,802,0.911,803,0.976,804,0.911,805,1.813,806,1.01,807,0.911,808,1.01,809,0.911,810,1.01,811,0.911,812,1.01,813,0.911,814,0.911,815,1.01,816,0.911,817,0.976,818,0.882,819,1.01,820,0.882,821,0.976,822,1.01,823,1.01,824,0.882,825,1.01,826,0.882,827,1.01,828,0.911,829,0.943,830,0.911,831,1.803,832,2.777,833,0.882,834,0.911,835,0.882,836,0.976,837,0.911,838,0.911,839,1.01,840,0.911,841,0.882,842,1.573,843,0.911,844,2.181,845,0.882,846,0.882,847,0.976,848,1.573,849,0.882,850,0.976,851,0.911,852,0.943,853,0.911,854,0.943,855,0.882,856,1.01,857,1.783,858,1.01,859,0.943,860,0.943,861,0.943,862,0.911,863,0.976,864,0.911,865,0.976,866,0.911,867,0.911,868,0.911,869,1.468,870,0.911,871,0.911,872,0.976,873,0.911,874,0.976,875,1.01,876,1.01,877,0.853,878,0.911,879,1.01,880,0.853,881,1.53,882,1.01,883,0.853,884,1.01,885,0.826,886,1.01,887,0.853,888,0.911,889,0.976,890,1.01,1170,3.858,2576,2.228,2577,3.967,2578,4.871,2579,3.967,2580,2.547,2581,2.547,2582,2.547,2583,3.967,2584,2.547,2585,2.547,2586,2.547,2587,2.547]],["title/directives/StatsAutoShowDirective.html",[111,0.586,887,1.389]],["body/directives/StatsAutoShowDirective.html",[3,0.207,4,0.207,5,0.169,8,0.554,14,1.017,23,1.556,24,1.017,29,0.85,30,0.012,31,0.708,32,0.53,33,0.655,35,0.821,47,1.053,58,0.248,59,0.349,63,0.207,67,0.226,87,0.01,88,0.01,111,0.85,113,1.427,116,2.122,194,3.692,201,2.143,244,2.153,538,2.824,770,1.89,772,2.016,773,2.261,887,2.411,888,2.576,889,2.758,1128,5.01,1130,5.263,1383,3.851,2033,5.263,2588,6.737,2589,5.263,2590,6.018,2591,6.018,2592,6.018]],["title/injectables/StatsService.html",[0,1.148,1128,2.508]],["body/injectables/StatsService.html",[0,1.845,2,2.442,3,0.182,4,0.182,5,0.149,8,0.488,9,0.814,14,0.942,15,1.514,23,1.575,24,1.152,30,0.012,32,0.467,33,0.725,35,1.074,47,1.176,56,1.044,58,0.229,59,0.307,63,0.182,67,0.2,87,0.009,88,0.009,116,1.564,195,2.951,202,2.051,244,2.607,304,6.684,378,2.842,416,6.052,888,2.918,897,3.045,1128,4.03,1265,3.208,1266,3.394,2256,4.639,2534,6.052,2593,4.639,2594,7.642,2595,6.664,2596,5.305,2597,5.305,2598,5.305,2599,5.305,2600,5.305,2601,5.305,2602,5.305,2603,5.305,2604,5.305,2605,5.305,2606,8.036,2607,5.305,2608,6.664,2609,5.305,2610,5.305,2611,5.305,2612,5.305]],["title/injectables/SvgLoaderService.html",[0,1.148,1079,2.823]],["body/injectables/SvgLoaderService.html",[0,1.905,2,2.571,3,0.192,4,0.192,5,0.157,8,0.514,9,0.841,10,1.325,12,1.523,14,0.972,15,1.23,24,1.054,27,1.782,29,0.972,30,0.012,31,0.81,32,0.605,33,0.749,35,0.938,50,3.949,53,1.595,54,1.031,55,0.966,56,1.467,58,0.268,59,0.324,60,1.871,63,0.192,67,0.21,75,1.064,87,0.01,88,0.01,89,5.208,92,5.024,93,5.024,94,4.403,95,4.685,97,5.024,99,4.772,100,4.078,155,1.499,235,1.683,272,2.268,378,2.382,470,1.754,476,4.078,1079,4.685,1265,3.378,1266,3.574,1569,4.423,1570,4.423,1571,4.423,1577,4.885,1799,4.423,1812,4.885,1813,6.017,2097,5.024,2117,4.885,2613,4.885,2614,5.585,2615,5.585,2616,5.585,2617,5.585,2618,5.585]],["title/modules/UxActorModule.html",[937,0.842,2619,3.028]],["body/modules/UxActorModule.html",[3,0.199,4,0.199,5,0.162,13,1.414,30,0.012,58,0.278,59,0.335,63,0.199,67,0.217,87,0.01,88,0.01,470,1.815,786,1.249,840,3.065,868,3.065,937,1.174,939,2.001,940,1.936,941,2.802,942,2.139,943,2.802,946,2.432,947,2.001,948,2.068,951,2.691,959,2.889,960,2.293,962,2.691,983,4.963,986,5.055,988,5.055,989,5.055,2619,6.255,2620,5.055,2621,5.055,2622,5.78,2623,5.055,2624,5.78,2625,5.78]],["title/changelog.html",[2626,2.738,2627,2.738,2628,2.738]],["body/changelog.html",[5,0.181,30,0.011,87,0.011,88,0.011,148,1.903,155,1.733,398,4.715,471,5.114,775,5.114,777,5.114,2567,4.715,2628,5.114,2629,6.458,2630,5.648,2631,6.458,2632,5.648,2633,5.114,2634,6.458,2635,5.648,2636,5.648,2637,6.458,2638,6.458,2639,6.458,2640,7.505,2641,5.648,2642,6.458,2643,6.458,2644,6.458,2645,6.458,2646,6.458,2647,5.648,2648,6.458,2649,6.458]],["title/coverage.html",[2650,4.958]],["body/coverage.html",[0,2.096,1,1.694,5,0.079,6,4.237,7,4.221,30,0.012,32,0.246,34,0.729,56,0.551,61,2.045,62,2.045,64,2.334,65,1.694,67,0.194,72,2.246,87,0.006,88,0.006,89,1.792,91,2.449,111,1.104,112,0.852,114,2.449,115,2.449,133,0.8,190,1.002,191,2.449,192,1.907,193,2.449,204,0.908,232,1.002,233,2.449,234,2.449,236,0.707,240,1.012,306,2.218,359,0.969,360,3.775,361,1.907,362,2.449,365,0.969,366,2.218,367,3.775,390,0.969,410,0.8,426,3.116,430,1.002,431,2.449,451,2.218,466,2.449,467,2.449,472,0.969,538,0.969,579,5.192,596,1.462,602,1.002,603,2.449,604,1.002,605,2.449,612,1.289,643,0.938,690,1.002,691,3.991,692,2.449,693,0.969,694,2.449,724,1.907,725,2.449,726,2.449,740,1.685,743,0.969,744,0.969,745,0.969,746,0.969,747,0.969,748,0.969,765,0.969,768,2.449,769,4.578,781,1.4,791,0.969,794,0.969,796,1.002,799,0.969,802,1.002,804,1.002,807,1.002,809,1.002,811,1.002,813,1.002,814,1.002,816,1.002,818,0.969,820,0.969,824,0.969,826,0.969,828,1.002,830,1.002,833,0.969,834,1.002,835,0.969,837,1.002,838,1.002,840,1.002,841,0.969,843,1.002,845,0.969,846,0.969,849,0.969,851,1.002,853,1.002,857,0.908,859,1.036,860,1.036,861,1.036,862,1.002,864,1.002,866,1.002,868,1.002,870,1.002,871,1.002,873,1.002,877,0.938,880,0.938,883,0.938,885,0.908,887,0.938,891,1.694,892,2.449,1075,1.907,1076,1.792,1077,1.907,1078,1.907,1079,1.907,1099,1.907,1100,1.907,1119,1.792,1128,1.694,1137,2.449,1138,3.379,1148,1.607,1149,4.389,1150,3.981,1151,1.694,1153,1.607,1154,1.607,1159,4.578,1196,2.218,1198,2.218,1208,2.218,1224,1.531,1271,2.449,1292,2.449,1293,2.449,1309,2.218,1310,2.449,1342,3.379,1356,2.449,1357,2.449,1403,3.732,1432,2.905,1434,2.449,1446,2.449,1473,2.449,1474,2.449,1478,5.792,1484,2.449,1485,2.449,1532,2.449,1535,2.449,1543,1.792,1567,2.449,1579,2.449,1587,2.449,1596,3.379,1598,2.045,1631,2.449,1632,3.379,1716,2.449,1723,2.045,1724,3.379,1798,2.449,1799,3.379,1817,2.449,1823,2.449,1824,3.379,1858,2.449,1872,2.449,1876,3.699,1877,2.449,1881,2.045,1882,3.379,1916,2.449,1961,2.449,1962,2.449,2024,2.449,2097,2.045,2098,2.449,2099,2.449,2275,4.578,2340,4.521,2341,6.296,2409,2.449,2567,2.045,2576,2.449,2588,2.449,2589,2.449,2593,2.449,2613,2.449,2641,2.449,2650,2.449,2651,2.218,2652,2.8,2653,2.8,2654,7.343,2655,5.169,2656,2.8,2657,5.781,2658,2.8,2659,2.8,2660,2.449,2661,2.8,2662,6.296,2663,2.8,2664,7.813,2665,2.449,2666,8.144,2667,2.449,2668,2.449,2669,2.449,2670,2.449,2671,2.449,2672,2.449,2673,2.449,2674,6.556,2675,4.267,2676,4.267,2677,2.8,2678,2.8,2679,2.8,2680,2.8,2681,2.8,2682,6.222,2683,2.8,2684,5.781,2685,2.8,2686,4.267,2687,2.8,2688,2.8,2689,4.267,2690,2.8,2691,2.8,2692,2.8,2693,2.8,2694,2.8,2695,2.449,2696,2.8,2697,2.8,2698,5.169,2699,2.8,2700,5.781,2701,2.8,2702,5.781,2703,4.267,2704,2.8,2705,2.8,2706,4.267,2707,2.8,2708,4.267,2709,2.8,2710,2.449,2711,2.449,2712,2.8,2713,5.169,2714,4.267,2715,2.8,2716,4.267,2717,2.8,2718,2.8,2719,2.8,2720,2.8,2721,5.781,2722,2.8,2723,2.8,2724,2.8,2725,2.8,2726,2.8,2727,2.8,2728,2.8,2729,2.8,2730,2.8,2731,2.8,2732,7.199,2733,2.8,2734,2.8,2735,2.8,2736,4.267,2737,2.8,2738,2.8,2739,2.8,2740,2.8,2741,2.8,2742,2.8,2743,2.8,2744,2.8,2745,2.8,2746,2.8,2747,6.222,2748,2.8,2749,2.8,2750,4.267,2751,2.8,2752,2.449,2753,2.449,2754,2.8,2755,2.449,2756,2.449,2757,2.449,2758,2.449,2759,2.449,2760,2.449,2761,2.449,2762,2.449,2763,2.449,2764,2.449,2765,2.449,2766,2.449,2767,2.449,2768,3.732,2769,2.449,2770,2.449,2771,2.8,2772,2.8]],["title/dependencies.html",[940,1.671,2773,3.024]],["body/dependencies.html",[30,0.012,59,0.361,87,0.01,88,0.01,155,1.674,345,4.553,536,5.453,805,1.897,814,2.231,940,2.088,960,2.473,2647,5.453,2774,6.235,2775,8.494,2776,6.235,2777,6.235,2778,7.353,2779,5.823,2780,6.235,2781,6.235,2782,6.235,2783,6.235,2784,6.235,2785,6.235,2786,6.235,2787,6.235,2788,6.235,2789,6.235,2790,6.235,2791,6.235]],["title/miscellaneous/enumerations.html",[2792,2.213,2793,4.364]],["body/miscellaneous/enumerations.html",[8,0.554,30,0.012,55,1.489,87,0.01,88,0.01,305,2.261,691,2.885,878,2.153,1149,3.29,1385,5.263,1727,4.902,1876,3.851,1890,5.702,1891,5.702,1892,5.257,2023,5.257,2203,6.296,2470,6.296,2660,6.737,2710,5.263,2711,6.296,2792,3.851,2793,5.263,2794,7.2,2795,6.296,2796,7.2,2797,7.2,2798,6.018,2799,6.018,2800,7.2,2801,7.2,2802,7.2,2803,7.2,2804,7.2]],["title/miscellaneous/functions.html",[2792,2.213,2805,4.364]],["body/miscellaneous/functions.html",[8,0.517,27,1.667,29,1.152,30,0.012,31,0.959,32,0.658,33,0.887,35,1.064,36,1.854,47,1.01,87,0.01,88,0.01,139,2.556,187,6.039,199,3.225,327,2.274,436,6.039,437,5.469,438,4.913,449,4.449,451,5.469,468,3.595,616,2.556,695,2.933,699,3.225,740,1.105,781,3.451,1756,5.091,1944,5.921,2752,4.913,2753,6.039,2755,4.913,2756,6.039,2757,6.039,2758,4.913,2759,6.039,2760,6.039,2761,4.913,2762,6.039,2763,4.913,2764,6.039,2765,4.913,2766,6.039,2767,6.039,2792,3.595,2805,4.913,2806,5.618,2807,5.618,2808,5.618,2809,5.618,2810,5.618,2811,5.618,2812,5.618,2813,6.906,2814,5.618,2815,5.618,2816,5.618,2817,5.618,2818,5.618,2819,5.618,2820,5.618,2821,6.906,2822,5.618,2823,5.618]],["title/index.html",[8,0.318,2626,2.738,2627,2.738]],["body/index.html",[30,0.012,58,0.219,72,1.282,87,0.009,88,0.009,119,2.572,155,1.322,180,3.597,182,1.763,398,5.621,422,3.649,471,5.889,498,3.902,537,3.902,539,4.309,631,5.43,649,3.597,661,4.309,766,2.578,773,2.552,776,2.435,787,1.887,805,1.499,814,1.763,855,1.705,857,1.598,898,3.902,937,1,940,1.65,962,1.887,983,3.844,1291,3.902,1307,4.309,1343,4.068,1367,2.828,1475,4.309,1543,4.068,1714,3.597,1715,3.597,1806,4.309,1892,3.597,1963,3.902,1993,7.014,2209,3.902,2440,5.56,2498,4.309,2534,3.902,2628,5.574,2630,6.155,2632,4.309,2633,5.034,2635,4.309,2651,5.574,2779,3.902,2824,4.927,2825,4.927,2826,4.927,2827,4.927,2828,7.883,2829,4.927,2830,6.357,2831,4.927,2832,4.927,2833,4.927,2834,4.927,2835,4.927,2836,8.021,2837,7.883,2838,4.927,2839,4.927,2840,6.357,2841,4.927,2842,4.927,2843,4.927,2844,4.927,2845,4.927,2846,4.927,2847,4.927,2848,6.357,2849,6.357,2850,6.357,2851,6.357,2852,4.927,2853,4.927,2854,4.927,2855,4.927,2856,4.927,2857,4.927,2858,4.927,2859,4.927,2860,4.927,2861,4.927,2862,4.927,2863,4.927,2864,4.927,2865,4.927,2866,4.927,2867,4.927,2868,4.927,2869,4.927,2870,4.927,2871,4.927,2872,4.927,2873,4.927,2874,7.698,2875,4.927,2876,4.927,2877,4.927,2878,4.927,2879,4.927,2880,4.927,2881,4.927,2882,4.927,2883,4.927,2884,4.927,2885,6.357,2886,4.927,2887,4.927,2888,6.357,2889,4.927,2890,4.927,2891,4.927,2892,4.927,2893,4.927,2894,4.927,2895,4.927,2896,4.927,2897,4.309,2898,4.927,2899,4.927,2900,4.927,2901,4.927]],["title/license.html",[2626,2.738,2627,2.738,2902,2.738]],["body/license.html",[30,0.01,87,0.01,88,0.01,184,7.396,386,4.627,537,4.627,897,3.354,948,2.09,2209,5.601,2651,4.627,2897,5.11,2902,4.627,2903,5.11,2904,7.606,2905,5.843,2906,5.843,2907,5.843,2908,5.843,2909,7.073,2910,5.843,2911,5.843,2912,5.843,2913,5.843,2914,5.843,2915,7.073,2916,5.843,2917,5.843,2918,5.843,2919,7.606,2920,5.843,2921,7.073,2922,5.843,2923,5.843,2924,5.843,2925,5.843,2926,5.843,2927,5.843,2928,5.843,2929,5.843,2930,5.843,2931,7.073,2932,5.843,2933,5.843,2934,5.843,2935,5.843,2936,5.843,2937,5.843,2938,5.843,2939,7.073,2940,7.073,2941,5.843,2942,5.843,2943,5.843,2944,5.843,2945,5.843,2946,5.843,2947,5.843,2948,5.843,2949,5.843,2950,5.843,2951,5.843,2952,5.843,2953,5.843,2954,5.843,2955,5.843,2956,5.843,2957,5.843,2958,5.843,2959,5.843,2960,5.843,2961,5.843,2962,5.843,2963,5.843,2964,5.843,2965,5.843,2966,5.843,2967,5.843]],["title/modules.html",[939,1.962]],["body/modules.html",[30,0.01,87,0.01,88,0.01,867,3.114,938,3.991,939,2.028,953,3.991,963,3.991,970,3.991,977,4.279,983,3.544,994,3.991,1007,3.991,1015,3.991,1023,3.991,1030,3.991,1040,3.991,1041,3.991,1042,3.991,1043,3.991,1051,3.991,1074,3.991,2619,4.279,2779,6.892,2968,8.703,2969,8.703]],["title/overview.html",[2970,4.958]],["body/overview.html",[2,1.126,13,0.598,30,0.012,87,0.005,88,0.005,90,1.786,113,0.58,133,1.356,204,2.104,472,2.246,612,2.185,643,2.174,724,3.231,743,2.246,744,2.246,745,2.246,746,2.246,747,2.246,748,2.246,765,2.393,766,0.819,771,3.758,786,0.529,791,2.246,794,2.246,796,2.322,799,1.643,802,2.322,804,2.322,807,2.322,809,2.322,811,2.322,813,2.322,816,2.322,818,2.246,820,2.246,824,2.246,826,2.246,828,2.322,830,2.322,833,2.246,834,2.322,835,2.246,837,2.322,838,2.322,840,2.322,841,2.246,843,2.322,845,2.246,846,2.246,849,2.246,851,2.322,853,2.322,857,2.104,862,2.322,864,2.322,866,2.322,868,2.322,870,2.322,871,2.322,873,2.322,877,2.174,880,2.174,883,2.174,885,2.104,887,2.174,891,2.87,937,0.497,938,4.707,939,0.846,940,0.819,941,0.905,942,0.905,943,0.905,944,2.139,945,2.139,946,1.33,947,0.846,948,0.875,953,5.063,954,2.139,955,2.139,956,2.139,963,4.817,964,2.139,965,2.139,966,2.139,970,5.063,971,2.139,972,2.139,973,2.139,977,6.176,978,2.139,979,2.139,980,2.139,981,2.139,982,2.139,983,4.947,994,5.513,995,2.139,996,2.139,997,2.139,1007,5.229,1008,2.139,1009,2.139,1010,2.139,1015,5.35,1016,2.139,1017,2.139,1018,2.139,1019,2.139,1023,5.35,1024,2.139,1025,2.139,1026,2.139,1030,5.617,1031,2.139,1032,2.139,1033,2.139,1037,2.139,1038,2.139,1039,2.139,1040,5.719,1041,5.314,1042,5.125,1043,4.992,1051,4.576,1069,2.139,1070,2.139,1071,2.139,1072,2.139,1073,2.139,1074,4.817,1075,3.231,1076,3.037,1077,3.231,1078,3.231,1079,3.231,1096,2.139,1097,2.139,1098,2.139,1099,4.419,1100,4.419,1105,2.139,1106,2.139,1107,2.139,1108,2.139,1115,2.139,1116,2.139,1117,2.139,1118,2.139,1119,3.037,1124,2.139,1125,2.139,1126,2.139,1127,2.139,1128,2.87,1132,2.139,1133,2.139,1134,2.139,1147,1.277,1224,1.337,1342,1.937,1433,1.937,2275,1.937,2567,1.786,2619,5.166,2620,2.139,2621,2.139,2623,2.139,2695,2.139,2970,2.139,2971,2.446,2972,2.139]],["title/properties.html",[9,0.61,2773,3.024]],["body/properties.html",[9,0.823,30,0.012,87,0.011,88,0.011,2633,5.331,2636,5.888,2902,5.331,2903,5.888]],["title/miscellaneous/variables.html",[2792,2.213,2973,4.364]],["body/miscellaneous/variables.html",[6,3.377,7,5.155,8,0.456,27,1.72,30,0.012,32,0.739,47,0.934,54,1.564,55,1.466,61,4.661,62,4.661,72,1.661,87,0.009,88,0.009,135,1.761,170,1.557,189,1.508,691,2.377,918,3.621,934,5.055,1149,2.711,1159,3.927,1196,5.055,1198,5.055,1199,5.583,1200,5.583,1201,6.746,1202,3.927,1203,4.337,1204,4.337,1205,4.337,1206,5.583,1207,4.347,1208,5.055,1209,5.583,1210,5.583,1211,5.583,1212,5.583,1213,4.337,1214,5.583,1265,2.999,2662,7.19,2665,5.583,2667,5.583,2668,5.583,2669,5.583,2670,5.583,2671,5.583,2672,5.583,2673,5.583,2768,4.337,2769,5.583,2770,5.583,2792,3.173,2795,7.117,2972,6.174,2973,4.337,2974,6.384,2975,7.06,2976,6.384,2977,4.959,2978,4.959,2979,4.959,2980,4.959,2981,4.959]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":1416,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0.0.1",{"_index":2636,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.001",{"_index":2568,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0.01",{"_index":1455,"title":{},"body":{"components/DofComponent.html":{}}}],["0.025",{"_index":1452,"title":{},"body":{"components/DofComponent.html":{}}}],["0.1",{"_index":1225,"title":{},"body":{"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["0.14.2",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["0.158.0",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["0.159.0",{"_index":2647,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.5",{"_index":1650,"title":{},"body":{"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["0.8",{"_index":780,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["0.8.5",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":2503,"title":{},"body":{"classes/SVGLoader.html":{}}}],["0000aa",{"_index":1541,"title":{},"body":{"components/FogComponent.html":{}}}],["04",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":189,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1207,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["1.1.23",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1662,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1/1",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":426,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/DashedDrawDirective.html":{},"components/FogComponent.html":{},"coverage.html":{}}}],["100",{"_index":1543,"title":{},"body":{"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["1000",{"_index":1850,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["10000",{"_index":1843,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["100px",{"_index":2021,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["11",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2567,"title":{},"body":{"classes/SVGLoader.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["13",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2972,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2641,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["17.0.5",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1342,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{},"overview.html":{}}}],["180",{"_index":1444,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["2",{"_index":1224,"title":{},"body":{"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["2.3.0",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["2/32",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["2/34",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["2/35",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["2/36",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["2/37",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["2/40",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["2/41",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["2/43",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["2/44",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["2/45",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["2/46",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["2/49",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["2/51",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["2/53",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["2/56",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["2/74",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1659,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["200",{"_index":1654,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":2906,"title":{},"body":{"license.html":{}}}],["2023",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":2275,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{},"overview.html":{}}}],["373",{"_index":1760,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["3d",{"_index":182,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["3d.ts",{"_index":367,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["3d.ts:10",{"_index":442,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:111",{"_index":532,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:118",{"_index":518,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:127",{"_index":520,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:13",{"_index":444,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:135",{"_index":519,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:143",{"_index":516,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:156",{"_index":517,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:16",{"_index":440,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:160",{"_index":530,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:175",{"_index":523,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:179",{"_index":524,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:181",{"_index":525,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:185",{"_index":521,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:19",{"_index":383,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{}}}],["3d.ts:192",{"_index":529,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:202",{"_index":522,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:206",{"_index":531,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:22",{"_index":441,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:24",{"_index":379,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:25",{"_index":508,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:26",{"_index":509,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:28",{"_index":448,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:31",{"_index":372,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{}}}],["3d.ts:32",{"_index":513,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:33",{"_index":514,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:36",{"_index":510,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:37",{"_index":511,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:38",{"_index":512,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:39",{"_index":377,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["3d.ts:40",{"_index":507,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:42",{"_index":506,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:44",{"_index":515,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:46",{"_index":533,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:48",{"_index":505,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:50",{"_index":445,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["3d.ts:57",{"_index":526,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:86",{"_index":527,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3d.ts:97",{"_index":528,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["3ds",{"_index":186,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["4",{"_index":1478,"title":{},"body":{"components/DotScreenComponent.html":{},"components/OrthographicCameraComponent.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["4/39",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["4/46",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["4/55",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["4/57",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["442",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["444444",{"_index":1592,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["48",{"_index":2971,"title":{},"body":{"overview.html":{}}}],["5",{"_index":2341,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["5/36",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["5/40",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["5/43",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["5/49",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1142,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["57",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["5dade2",{"_index":443,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["6",{"_index":2340,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["6/45",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["7/38",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["71c3760",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1403,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["8/43",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["8/47",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2695,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9.0.1",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":2111,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_fillrule",{"_index":2423,"title":{},"body":{"classes/SVGLoader.html":{}}}],["_model",{"_index":473,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["a0",{"_index":2371,"title":{},"body":{"classes/SVGLoader.html":{}}}],["a1",{"_index":2372,"title":{},"body":{"classes/SVGLoader.html":{}}}],["above",{"_index":2938,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractassetservice",{"_index":1,"title":{"injectables/AbstractAssetService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["abstractassetservice:10",{"_index":1718,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:13",{"_index":1607,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:14",{"_index":1606,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:16",{"_index":1600,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:22",{"_index":1603,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:23",{"_index":1717,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractassetservice:26",{"_index":1604,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:30",{"_index":1601,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:43",{"_index":1602,"title":{},"body":{"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["abstractassetservice:49",{"_index":1597,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:58",{"_index":1599,"title":{},"body":{"injectables/IconService.html":{}}}],["abstractassetservice:8",{"_index":1719,"title":{},"body":{"injectables/ModelService.html":{}}}],["abstractcacheservice",{"_index":89,"title":{"classes/AbstractCacheService.html":{}},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["abstractcacheservice:10",{"_index":2614,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:13",{"_index":1801,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["abstractcacheservice:3",{"_index":1570,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:5",{"_index":1569,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["abstractcacheservice:8",{"_index":1568,"title":{},"body":{"injectables/FontService.html":{}}}],["abstractcamera",{"_index":112,"title":{"directives/AbstractCamera.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractcamera:10",{"_index":1829,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:11",{"_index":1830,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:12",{"_index":1831,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:14",{"_index":1832,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:16",{"_index":1828,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:22",{"_index":1833,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:24",{"_index":1839,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:35",{"_index":1863,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:36",{"_index":1834,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:45",{"_index":1864,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:56",{"_index":1835,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["abstractcamera:59",{"_index":1837,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:69",{"_index":1838,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcamera:8",{"_index":1840,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["abstractcomposeeffect",{"_index":190,"title":{"directives/AbstractComposeEffect.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractcomposeeffect:18",{"_index":1277,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:22",{"_index":1275,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:23",{"_index":1480,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:24",{"_index":1456,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:28",{"_index":1479,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:29",{"_index":1276,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:30",{"_index":1274,"title":{},"body":{"components/BlurComponent.html":{}}}],["abstractcomposeeffect:37",{"_index":1278,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:41",{"_index":1280,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:45",{"_index":1279,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractcomposeeffect:53",{"_index":1457,"title":{},"body":{"components/DofComponent.html":{}}}],["abstractcomposeeffect:9",{"_index":1281,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["abstractconnector",{"_index":232,"title":{"directives/AbstractConnector.html":{}},"body":{"directives/AbstractConnector.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractemptydirective",{"_index":359,"title":{"directives/AbstractEmptyDirective.html":{}},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d",{"_index":365,"title":{"directives/AbstractLazyObject3D.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractlazyobject3d:19",{"_index":492,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:24",{"_index":491,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:31",{"_index":488,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractlazyobject3d:39",{"_index":489,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["abstractmesh",{"_index":430,"title":{"directives/AbstractMesh.html":{}},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractmodelloader",{"_index":390,"title":{"directives/AbstractModelLoader.html":{}},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractmodelloader#afterinit",{"_index":402,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractobject3d",{"_index":236,"title":{"directives/AbstractObject3D.html":{}},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractobject3d#addchild",{"_index":403,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["abstractobject3d.renderer",{"_index":395,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:111",{"_index":339,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["abstractobject3d:118",{"_index":321,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:127",{"_index":323,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:135",{"_index":322,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:143",{"_index":319,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:156",{"_index":320,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:160",{"_index":336,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:175",{"_index":328,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:179",{"_index":450,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["abstractobject3d:18",{"_index":307,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["abstractobject3d:181",{"_index":329,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:185",{"_index":325,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:192",{"_index":333,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:202",{"_index":326,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:206",{"_index":338,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:21",{"_index":1298,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{}}}],["abstractobject3d:23",{"_index":1143,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{}}}],["abstractobject3d:24",{"_index":276,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:25",{"_index":284,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:26",{"_index":285,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:31",{"_index":289,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:32",{"_index":299,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:33",{"_index":300,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:35",{"_index":2580,"title":{},"body":{"components/SceneComponent.html":{}}}],["abstractobject3d:36",{"_index":286,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:37",{"_index":287,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:38",{"_index":288,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:40",{"_index":275,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:42",{"_index":273,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:44",{"_index":302,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:46",{"_index":343,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:48",{"_index":344,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:57",{"_index":330,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["abstractobject3d:62",{"_index":376,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:68",{"_index":375,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["abstractobject3d:8",{"_index":363,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractServerActor.html":{}}}],["abstractobject3d:86",{"_index":364,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractobject3d:97",{"_index":331,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["abstractorbitcontrols",{"_index":602,"title":{"directives/AbstractOrbitControls.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["abstractorbitcontrols:13",{"_index":1674,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:14",{"_index":1676,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:22",{"_index":1667,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:24",{"_index":1675,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:25",{"_index":1821,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:34",{"_index":1820,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:42",{"_index":1668,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:49",{"_index":1822,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:57",{"_index":1671,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractorbitcontrols:58",{"_index":1672,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:74",{"_index":1673,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractorbitcontrols:97",{"_index":1669,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["abstractserveractor",{"_index":690,"title":{"directives/AbstractServerActor.html":{}},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["accepted",{"_index":2164,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accepts",{"_index":2538,"title":{},"body":{"classes/SVGLoader.html":{}}}],["accessed",{"_index":393,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["accessors",{"_index":474,"title":{},"body":{"directives/AbstractModelLoader.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{}}}],["acquisition",{"_index":411,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["action",{"_index":2961,"title":{},"body":{"license.html":{}}}],["actor",{"_index":876,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["actor'},{'name",{"_index":832,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["actor.component",{"_index":988,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.component.ts",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["actor.module.ts",{"_index":986,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["actor.ts",{"_index":694,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:11",{"_index":710,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:14",{"_index":711,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:17",{"_index":709,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:20",{"_index":708,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:23",{"_index":705,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:25",{"_index":716,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:28",{"_index":707,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:30",{"_index":714,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:35",{"_index":713,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:40",{"_index":712,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actor.ts:8",{"_index":706,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actorclick",{"_index":701,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["actorrepositoryservice",{"_index":724,"title":{"injectables/ActorRepositoryService.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["actual_component",{"_index":890,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["add",{"_index":421,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/MapControlsComponent.html":{}}}],["addchild",{"_index":246,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["addchild(object",{"_index":318,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["addgroup",{"_index":1932,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1753,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["addpass",{"_index":1486,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["addpass(pass",{"_index":1495,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["advanced",{"_index":1711,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["afterinit",{"_index":247,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["afterviewinit",{"_index":194,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["akimenko",{"_index":2908,"title":{},"body":{"license.html":{}}}],["allintersections",{"_index":2390,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.push",{"_index":2408,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allintersections.sort",{"_index":2413,"title":{},"body":{"classes/SVGLoader.html":{}}}],["allowcoloroverride",{"_index":1609,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["allpaths",{"_index":2420,"title":{},"body":{"classes/SVGLoader.html":{}}}],["along",{"_index":2527,"title":{},"body":{"classes/SVGLoader.html":{}}}],["alpha",{"_index":2071,"title":{},"body":{"injectables/RendererService.html":{}}}],["alternating",{"_index":2452,"title":{},"body":{"classes/SVGLoader.html":{}}}],["always",{"_index":1991,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["ambient",{"_index":774,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["ambientlightcomponent",{"_index":765,"title":{"components/AmbientLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amiahole",{"_index":2476,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amiahole.ishole",{"_index":2478,"title":{},"body":{"classes/SVGLoader.html":{}}}],["amount",{"_index":2451,"title":{},"body":{"classes/SVGLoader.html":{}}}],["and/or",{"_index":2929,"title":{},"body":{"license.html":{}}}],["ang",{"_index":2295,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angle",{"_index":2325,"title":{},"body":{"classes/SVGLoader.html":{}}}],["angles",{"_index":279,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["angular",{"_index":398,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/ActorRepositoryService.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":960,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":905,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{}}}],["animated",{"_index":899,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animation",{"_index":893,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation.module",{"_index":1057,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":950,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":952,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":1382,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["animation/atft",{"_index":1056,"title":{},"body":{"modules/AtftModule.html":{}}}],["animations",{"_index":914,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":891,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":907,"title":{},"body":{"injectables/AnimationService.html":{}}}],["another",{"_index":2399,"title":{},"body":{"classes/SVGLoader.html":{}}}],["antialias",{"_index":2070,"title":{},"body":{"injectables/RendererService.html":{}}}],["anything",{"_index":658,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["aperture",{"_index":1448,"title":{},"body":{"components/DofComponent.html":{}}}],["aperture'].some(propname",{"_index":1465,"title":{},"body":{"components/DofComponent.html":{}}}],["api",{"_index":2885,"title":{},"body":{"index.html":{}}}],["app",{"_index":2825,"title":{},"body":{"index.html":{}}}],["appear",{"_index":2302,"title":{},"body":{"classes/SVGLoader.html":{}}}],["appliedmaterial",{"_index":451,"title":{},"body":{"directives/AbstractMesh.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":453,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applychanges",{"_index":197,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applychanges(changes",{"_index":206,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["applymaterial",{"_index":432,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applymatrix3",{"_index":2348,"title":{},"body":{"classes/SVGLoader.html":{}}}],["applyposition",{"_index":120,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["applyrotation",{"_index":248,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyscale",{"_index":249,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyshadowprops",{"_index":433,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applyshadowprops(mesh",{"_index":446,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["applytranslation",{"_index":250,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["applyzaxisup",{"_index":121,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["arc",{"_index":2518,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arcdivisions",{"_index":2139,"title":{},"body":{"classes/SVGLoader.html":{}}}],["area",{"_index":1994,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["args",{"_index":73,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["args[1",{"_index":77,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["arguments",{"_index":1975,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":2965,"title":{},"body":{"license.html":{}}}],["around",{"_index":2326,"title":{},"body":{"classes/SVGLoader.html":{}}}],["array",{"_index":327,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["array.length",{"_index":2322,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrays",{"_index":2536,"title":{},"body":{"classes/SVGLoader.html":{}}}],["arrow",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":152,"title":{},"body":{"directives/AbstractCamera.html":{},"components/DofComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1866,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["asset.service",{"_index":1608,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["asset.service.ts",{"_index":7,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asset.service.ts:13",{"_index":57,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:14",{"_index":25,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:20",{"_index":46,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:22",{"_index":49,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:26",{"_index":52,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:30",{"_index":42,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:43",{"_index":44,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:55",{"_index":39,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["asset.service.ts:57",{"_index":28,"title":{},"body":{"injectables/AbstractAssetService.html":{}}}],["assets/svg/?.svg",{"_index":1617,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["associated",{"_index":2916,"title":{},"body":{"license.html":{}}}],["association",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":94,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["atft",{"_index":773,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"index.html":{}}}],["atft.module",{"_index":989,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/UxActorModule.html":{}}}],["atftanimationmodule",{"_index":938,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":953,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":963,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":970,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":977,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":994,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":1007,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":1015,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":1023,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":1030,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":983,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":1040,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":1051,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":1041,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":1042,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":1043,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":1074,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attached",{"_index":1308,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["authors",{"_index":2955,"title":{},"body":{"license.html":{}}}],["auto",{"_index":538,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["automatically",{"_index":661,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"index.html":{}}}],["autorotate",{"_index":1635,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":1636,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":920,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":104,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["ax",{"_index":2376,"title":{},"body":{"classes/SVGLoader.html":{}}}],["axes",{"_index":792,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["axeshelpercomponent",{"_index":791,"title":{"components/AxesHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":179,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["b0",{"_index":2367,"title":{},"body":{"classes/SVGLoader.html":{}}}],["b1",{"_index":2368,"title":{},"body":{"classes/SVGLoader.html":{}}}],["background",{"_index":2578,"title":{},"body":{"components/SceneComponent.html":{}}}],["background'].some(propname",{"_index":2586,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":859,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["base",{"_index":580,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["baseassetsource",{"_index":65,"title":{"interfaces/BaseAssetSource.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"coverage.html":{}}}],["based",{"_index":2868,"title":{},"body":{"index.html":{}}}],["baseinfo",{"_index":1148,"title":{"interfaces/BaseInfo.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["baseinfo.foreach((node",{"_index":1338,"title":{},"body":{"classes/DagreUtils.html":{}}}],["baseintersections",{"_index":2431,"title":{},"body":{"classes/SVGLoader.html":{}}}],["baseintersections.push",{"_index":2436,"title":{},"body":{"classes/SVGLoader.html":{}}}],["basetexture",{"_index":1211,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["basic",{"_index":2839,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":2242,"title":{},"body":{"classes/SVGLoader.html":{}}}],["behaviour",{"_index":2015,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":2831,"title":{},"body":{"index.html":{}}}],["bevel",{"_index":2493,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bignumber",{"_index":2458,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bindings",{"_index":2838,"title":{},"body":{"index.html":{}}}],["black",{"_index":1181,"title":{},"body":{"injectables/BloomService.html":{}}}],["blender",{"_index":185,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["bloom",{"_index":2060,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloom.service",{"_index":1123,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["bloom_scene_layer",{"_index":1197,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomcomposer",{"_index":1160,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloominit",{"_index":2087,"title":{},"body":{"injectables/RendererService.html":{}}}],["bloomlayer",{"_index":1161,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass",{"_index":1220,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloompass.clear",{"_index":1226,"title":{},"body":{"injectables/BloomService.html":{}}}],["bloomservice",{"_index":1119,"title":{"injectables/BloomService.html":{}},"body":{"modules/AtftRendererModule.html":{},"injectables/BloomService.html":{},"injectables/RendererService.html":{},"coverage.html":{},"overview.html":{}}}],["bloomtexture",{"_index":1212,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":1272,"title":{},"body":{"components/BlurComponent.html":{}}}],["blur'},{'name",{"_index":795,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["blurcomponent",{"_index":794,"title":{"components/BlurComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2863,"title":{},"body":{"index.html":{}}}],["bokehpass",{"_index":1458,"title":{},"body":{"components/DofComponent.html":{}}}],["bokehpass(this.rendererservice.getscene().getobject",{"_index":1471,"title":{},"body":{"components/DofComponent.html":{}}}],["boolean",{"_index":139,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractServerActor.html":{},"components/BlurComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":942,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["border",{"_index":1152,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["bounding",{"_index":2392,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox",{"_index":2388,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boundingbox.getcenter",{"_index":2389,"title":{},"body":{"classes/SVGLoader.html":{}}}],["box",{"_index":797,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["box2",{"_index":2148,"title":{},"body":{"classes/SVGLoader.html":{}}}],["boxmeshcomponent",{"_index":796,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["break",{"_index":2191,"title":{},"body":{"classes/SVGLoader.html":{}}}],["browse",{"_index":2969,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2779,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bt",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffergeometry",{"_index":2149,"title":{},"body":{"classes/SVGLoader.html":{}}}],["buffers",{"_index":2537,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bug",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":2440,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["bump",{"_index":2892,"title":{},"body":{"index.html":{}}}],["butt",{"_index":2496,"title":{},"body":{"classes/SVGLoader.html":{}}}],["bx",{"_index":2377,"title":{},"body":{"classes/SVGLoader.html":{}}}],["c",{"_index":2905,"title":{},"body":{"license.html":{}}}],["c28180a",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":92,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service",{"_index":1571,"title":{},"body":{"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["cache.service.ts",{"_index":91,"title":{},"body":{"classes/AbstractCacheService.html":{},"coverage.html":{}}}],["cache.service.ts:22",{"_index":98,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:3",{"_index":96,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cache.service.ts:5",{"_index":101,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachehit",{"_index":102,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["cachemiss",{"_index":108,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["calculate",{"_index":314,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["calculatesize",{"_index":2757,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":388,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["camera",{"_index":119,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["camera'},{'name",{"_index":848,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["camera.component",{"_index":961,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":1824,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:14",{"_index":1827,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1862,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:16",{"_index":1861,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:52",{"_index":1836,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["camera.directive",{"_index":1113,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1877,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1879,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1878,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":1046,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":958,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.ts",{"_index":115,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["camera.ts:10",{"_index":136,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:11",{"_index":137,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:12",{"_index":138,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:14",{"_index":141,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:16",{"_index":134,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:24",{"_index":149,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:41",{"_index":144,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:43",{"_index":151,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:45",{"_index":147,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:59",{"_index":142,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:69",{"_index":143,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera.ts:8",{"_index":153,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["camera/abstract",{"_index":651,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":1045,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":882,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["can't",{"_index":2396,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cant",{"_index":1423,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["canvas",{"_index":1963,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":856,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["canvas.clientheight",{"_index":2074,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":2093,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":654,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":1966,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":1964,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":1962,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":1983,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:14",{"_index":1974,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:23",{"_index":1978,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:38",{"_index":1985,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":1999,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:48",{"_index":1977,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:52",{"_index":1981,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.style.border",{"_index":2092,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":2091,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":2090,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":2084,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":1967,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":1063,"title":{},"body":{"modules/AtftModule.html":{},"classes/SVGLoader.html":{}}}],["castshadow",{"_index":435,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["catch",{"_index":2181,"title":{},"body":{"classes/SVGLoader.html":{}}}],["catch(err",{"_index":427,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["center",{"_index":985,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{}}}],["center.ts",{"_index":2759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":984,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/grid",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["center/layer/layer",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["center/layout/dagre",{"_index":1149,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["center/server/abstract",{"_index":692,"title":{},"body":{"directives/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/model",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["center/server/server",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["center/server/workstation",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["center/service/actor",{"_index":725,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["centerboundingbox",{"_index":2425,"title":{},"body":{"classes/SVGLoader.html":{}}}],["centerboundingbox.y",{"_index":2427,"title":{},"body":{"classes/SVGLoader.html":{}}}],["change",{"_index":917,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":269,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["changelog",{"_index":2628,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":148,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"changelog.html":{}}}],["changes['listeningcontrolelement",{"_index":663,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["changes['rotatespeed",{"_index":1679,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":1682,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":2912,"title":{},"body":{"license.html":{}}}],["check",{"_index":2364,"title":{},"body":{"classes/SVGLoader.html":{}}}],["child",{"_index":1306,"title":{},"body":{"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{}}}],["child.children[0",{"_index":1399,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childcameras",{"_index":606,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["childlren",{"_index":239,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["children",{"_index":582,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["childs",{"_index":1885,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["circle",{"_index":2203,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["claim",{"_index":2958,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/AbstractCacheService.html":{},"classes/DagreUtils.html":{},"classes/SVGLoader.html":{},"overview.html":{}}}],["classifyresult.loc",{"_index":2374,"title":{},"body":{"classes/SVGLoader.html":{}}}],["click",{"_index":1892,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clone",{"_index":2871,"title":{},"body":{"index.html":{}}}],["closed",{"_index":2508,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closeparpos",{"_index":2320,"title":{},"body":{"classes/SVGLoader.html":{}}}],["closer",{"_index":2521,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cloud",{"_index":1623,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["cluster_atftanimationmodule",{"_index":944,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":945,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":954,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":955,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":956,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":964,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":965,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":966,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":971,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":972,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":973,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":978,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":979,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":981,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":980,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_providers",{"_index":982,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":995,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":996,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":997,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":1008,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":1009,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":1010,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":1016,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_ambientlightcomponent_providers",{"_index":1018,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":1017,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":1019,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":1024,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":1026,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":1025,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":1031,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":1033,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":1032,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":1037,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":1039,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":1038,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":1069,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":1071,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":1073,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":1072,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_providers",{"_index":1070,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":1096,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":1098,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":1097,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":1105,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":1108,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":1106,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":1107,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":1115,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":1117,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":1116,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":1118,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":1124,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":1126,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":1125,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":1127,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":1132,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":1133,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":1134,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_uxactormodule",{"_index":2620,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_declarations",{"_index":2623,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_exports",{"_index":2621,"title":{},"body":{"modules/UxActorModule.html":{},"overview.html":{}}}],["cluster_uxactormodule_imports",{"_index":2622,"title":{},"body":{"modules/UxActorModule.html":{}}}],["cm",{"_index":2167,"title":{},"body":{"classes/SVGLoader.html":{}}}],["colinear",{"_index":2363,"title":{},"body":{"classes/SVGLoader.html":{}}}],["color",{"_index":695,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":2894,"title":{},"body":{"index.html":{}}}],["command",{"_index":2245,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands",{"_index":2235,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commands.length",{"_index":2241,"title":{},"body":{"classes/SVGLoader.html":{}}}],["commit",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":2891,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":959,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["comp",{"_index":762,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["compact",{"_index":860,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["compodoc/compodoc",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":740,"title":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component_template",{"_index":789,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["componentfactory",{"_index":738,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["componentfactoryresolver",{"_index":732,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["components",{"_index":766,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":192,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"coverage.html":{}}}],["compose/blur.component",{"_index":1006,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dof.component",{"_index":1002,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/dot",{"_index":1003,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["compose/effect",{"_index":1005,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["composer",{"_index":203,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["composer'},{'name",{"_index":823,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["composer.component",{"_index":216,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"modules/AtftEffectModule.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["composer.component.ts",{"_index":1485,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["composer.component.ts:14",{"_index":1493,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:15",{"_index":1494,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:17",{"_index":1492,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:26",{"_index":1499,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:31",{"_index":1500,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:38",{"_index":1498,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:55",{"_index":1496,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:61",{"_index":1502,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:75",{"_index":1503,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composer.component.ts:81",{"_index":1497,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["composite",{"_index":1889,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["composition",{"_index":1151,"title":{"interfaces/Composition.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["composition'},{'name",{"_index":806,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["composition.component.ts",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["compositions",{"_index":1156,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["compound",{"_index":1330,"title":{},"body":{"classes/DagreUtils.html":{}}}],["compute",{"_index":2276,"title":{},"body":{"classes/SVGLoader.html":{}}}],["conditions",{"_index":2937,"title":{},"body":{"license.html":{}}}],["config",{"_index":2878,"title":{},"body":{"index.html":{}}}],["configurelisteners",{"_index":609,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["connection",{"_index":2966,"title":{},"body":{"license.html":{}}}],["connector'},{'name",{"_index":839,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["connector.component",{"_index":969,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":2711,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["connector.module",{"_index":1083,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":968,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.ts",{"_index":234,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["connector.ts:10",{"_index":270,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:13",{"_index":271,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:15",{"_index":341,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:16",{"_index":342,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:26",{"_index":317,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:46",{"_index":303,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector.ts:52",{"_index":309,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["connector/atft",{"_index":1082,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1886,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.error",{"_index":2183,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.error('contentprojectioncomponent",{"_index":1304,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["console.error(err",{"_index":428,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log",{"_index":2218,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.log('abstractassetservice.geturlbynamespace",{"_index":80,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["console.log('abstractcacheservice.cachehit",{"_index":105,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcacheservice.cachemiss",{"_index":107,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["console.log('abstractcamera.constructor",{"_index":157,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcamera.ngafterviewinit",{"_index":158,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["console.log('abstractcomposeeffect.constructor",{"_index":218,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.disable",{"_index":226,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractcomposeeffect.enable",{"_index":221,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["console.log('abstractlazyobject3d",{"_index":415,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractlazyobject3d.startloading",{"_index":407,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["console.log('abstractmodelloader.model",{"_index":500,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["console.log('abstractobject3d.addchild",{"_index":574,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.constructor",{"_index":540,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.findbyname",{"_index":588,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ngonchanges",{"_index":541,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ngoninit",{"_index":554,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.ondestroy",{"_index":550,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('abstractobject3d.removechild",{"_index":581,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["console.log('actorrepositoryservice.getcomponentfactory",{"_index":761,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('actorrepositoryservice.register",{"_index":757,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["console.log('add",{"_index":1752,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('animationservice.animationstep",{"_index":927,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('animationservice.start",{"_index":925,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":1145,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('bloomservice.init",{"_index":1215,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('change",{"_index":1462,"title":{},"body":{"components/DofComponent.html":{}}}],["console.log('dagreutils.layout",{"_index":1335,"title":{},"body":{"classes/DagreUtils.html":{}}}],["console.log('darkennonbloomed",{"_index":1264,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.log('dasheddrawdirective.ngafterviewinit",{"_index":1387,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('dasheddrawdirective.trytofindgeometry",{"_index":1413,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('disablefog",{"_index":1564,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('dofcomponent.constructor",{"_index":1504,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.addpass",{"_index":1522,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.initcomposer",{"_index":1510,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngafterviewinit",{"_index":1505,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.ngondestroy",{"_index":1507,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('effectcomposercomponent.removepass",{"_index":1524,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["console.log('enablefog",{"_index":1559,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent",{"_index":1556,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fogcomponent.constructor",{"_index":1551,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('fontservice.getvalue",{"_index":1575,"title":{},"body":{"injectables/FontService.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":1584,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('iconservice.geturlbynamespace",{"_index":1626,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["console.log('initialopacity",{"_index":1417,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('ngafterviewinit",{"_index":1552,"title":{},"body":{"components/FogComponent.html":{}}}],["console.log('objloaderservice.getvalue",{"_index":1811,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["console.log('onclick",{"_index":1913,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('orbitcontrolscomponent.constructor",{"_index":655,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orbitcontrolscomponent.ngafterviewinit",{"_index":680,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["console.log('orthographiccameracomponent.createcamera",{"_index":1841,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('orthographiccameracomponent.updateaspectratio",{"_index":1848,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1865,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1870,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycastergroupdirective.onmouseenter",{"_index":1910,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1754,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":2065,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercanvascomponent.resetcanvas",{"_index":2011,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.constructor",{"_index":2001,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":2069,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":2004,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":721,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":720,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":717,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["console.log('svgloaderservice.getvalue",{"_index":2617,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["console.log('unsubscribe",{"_index":1743,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(event",{"_index":1776,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["console.log(this.host.getobject().parentscene",{"_index":1425,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.warn",{"_index":2214,"title":{},"body":{"classes/SVGLoader.html":{}}}],["console.warn('bloomservice.init",{"_index":1255,"title":{},"body":{"injectables/BloomService.html":{}}}],["console.warn('icon",{"_index":82,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["const",{"_index":60,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractConnector.html":{},"directives/AbstractObject3D.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"injectables/FontService.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["constructor(host",{"_index":1365,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(manager",{"_index":2108,"title":{},"body":{"classes/SVGLoader.html":{}}}],["constructor(raycasterservice",{"_index":1917,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":132,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["constructor(resolver",{"_index":731,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["constructor(statsservice",{"_index":2033,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["content",{"_index":800,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["contentchild",{"_index":647,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchild(renderercanvascomponent",{"_index":644,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentchildren",{"_index":648,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["contentchildren(abstractcamera",{"_index":640,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["contentprojection",{"_index":1296,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["contentprojectioncomponent",{"_index":799,"title":{"components/ContentProjectionComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":2769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2317,"title":{},"body":{"classes/SVGLoader.html":{}}}],["contract",{"_index":2962,"title":{},"body":{"license.html":{}}}],["control",{"_index":619,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["control.module",{"_index":1050,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":975,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":1049,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":607,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":842,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["controls.component",{"_index":976,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":1634,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":1632,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:102",{"_index":1670,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":1819,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":1818,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":1664,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:19",{"_index":1666,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":1649,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":1651,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":1653,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:23",{"_index":1652,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":1665,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":1660,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":1655,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":1656,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":1663,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":1661,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":1658,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":1648,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.ts",{"_index":605,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["controls.ts:13",{"_index":642,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:14",{"_index":646,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:22",{"_index":615,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:24",{"_index":613,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:33",{"_index":635,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:49",{"_index":636,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:55",{"_index":637,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:58",{"_index":633,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["controls.ts:74",{"_index":634,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["conventional",{"_index":2890,"title":{},"body":{"index.html":{}}}],["converts",{"_index":1439,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":2524,"title":{},"body":{"classes/SVGLoader.html":{}}}],["copies",{"_index":2931,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2915,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2904,"title":{},"body":{"license.html":{}}}],["count",{"_index":2546,"title":{},"body":{"classes/SVGLoader.html":{}}}],["counting",{"_index":2450,"title":{},"body":{"classes/SVGLoader.html":{}}}],["coverage",{"_index":2650,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":2255,"title":{},"body":{"classes/SVGLoader.html":{}}}],["create",{"_index":304,"title":{},"body":{"directives/AbstractConnector.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":122,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["created",{"_index":666,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["createlinemesh",{"_index":241,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["creates",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createshapes",{"_index":2103,"title":{},"body":{"classes/SVGLoader.html":{}}}],["createshapes(shapepath",{"_index":2115,"title":{},"body":{"classes/SVGLoader.html":{}}}],["creation",{"_index":183,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["cross",{"_index":2454,"title":{},"body":{"classes/SVGLoader.html":{}}}],["css",{"_index":2016,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["current",{"_index":495,"title":{},"body":{"directives/AbstractModelLoader.html":{},"classes/SVGLoader.html":{}}}],["currently",{"_index":1988,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["currentnode",{"_index":334,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["currentnode.childlren.some(child",{"_index":597,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.name",{"_index":595,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentnode.object",{"_index":594,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["currentpointl",{"_index":2561,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currentpointr",{"_index":2562,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform",{"_index":2223,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.copy",{"_index":2227,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.identity",{"_index":2230,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.multiplymatrices",{"_index":2332,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.scale",{"_index":2334,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.set",{"_index":2336,"title":{},"body":{"classes/SVGLoader.html":{}}}],["currenttransform.translate",{"_index":2323,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cx",{"_index":2277,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cxp",{"_index":2270,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cy",{"_index":2278,"title":{},"body":{"classes/SVGLoader.html":{}}}],["cylinder",{"_index":803,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["cylindermeshcomponent",{"_index":802,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cyp",{"_index":2272,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d",{"_index":2195,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d.match",{"_index":2236,"title":{},"body":{"classes/SVGLoader.html":{}}}],["d8a9455",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["dagre",{"_index":805,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dagre.graphlabel",{"_index":1155,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["dagre.graphlib.graph",{"_index":1322,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagre.layout(g",{"_index":1336,"title":{},"body":{"classes/DagreUtils.html":{}}}],["dagrecompositioncomponent",{"_index":804,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreedgecomponent",{"_index":807,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrelayoutcomponent",{"_index":809,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagrenodecomponent",{"_index":811,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dagreutils",{"_index":1309,"title":{"classes/DagreUtils.html":{}},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["dagreyamlparsercomponent",{"_index":813,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["damages",{"_index":2959,"title":{},"body":{"license.html":{}}}],["dampingfactor",{"_index":1637,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["darkennonbloomed",{"_index":1165,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkennonbloomed(obj",{"_index":1167,"title":{},"body":{"injectables/BloomService.html":{}}}],["darkmaterial",{"_index":1162,"title":{},"body":{"injectables/BloomService.html":{}}}],["dash",{"_index":1385,"title":{},"body":{"directives/DashedDrawDirective.html":{},"miscellaneous/enumerations.html":{}}}],["dashcolor",{"_index":1360,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["dashed",{"_index":878,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dasheddrawdirective",{"_index":877,"title":{"directives/DashedDrawDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashincrement",{"_index":1361,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["data",{"_index":476,"title":{},"body":{"directives/AbstractModelLoader.html":{},"modules/AtftDataCenterActorModule.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["deal",{"_index":2918,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2967,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":941,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["decorators",{"_index":639,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/ContentProjectionComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["default",{"_index":54,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/variables.html":{}}}],["default_align",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_edgesep",{"_index":2667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_margin",{"_index":2668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_nodesep",{"_index":2669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_rankdir",{"_index":2670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranker",{"_index":2671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_ranksep",{"_index":2672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_sep",{"_index":2673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultdpi",{"_index":2100,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defaultid",{"_index":727,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["defaultifnotfound",{"_index":16,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["defaultifnotfound(icon",{"_index":26,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultprovider",{"_index":11,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["defaultunit",{"_index":2101,"title":{},"body":{"classes/SVGLoader.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["defines",{"_index":1245,"title":{},"body":{"injectables/BloomService.html":{}}}],["defs",{"_index":2102,"title":{},"body":{"classes/SVGLoader.html":{}}}],["deg2rad",{"_index":1435,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":1103,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":1099,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":1443,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":1440,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["delete",{"_index":1270,"title":{},"body":{"injectables/BloomService.html":{}}}],["delta",{"_index":2288,"title":{},"body":{"classes/SVGLoader.html":{}}}],["demo",{"_index":2832,"title":{},"body":{"index.html":{}}}],["denom",{"_index":2362,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dependencies",{"_index":940,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprecated",{"_index":750,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["depth",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["depthwrite",{"_index":436,"title":{},"body":{"directives/AbstractMesh.html":{},"miscellaneous/functions.html":{}}}],["depthwrite'].some(propname",{"_index":462,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["descendants",{"_index":641,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["description",{"_index":468,"title":{},"body":{"directives/AbstractModelLoader.html":{},"injectables/AnimationService.html":{},"classes/DagreUtils.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":702,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["details",{"_index":2887,"title":{},"body":{"index.html":{}}}],["detected",{"_index":1557,"title":{},"body":{"components/FogComponent.html":{}}}],["dev",{"_index":2854,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2847,"title":{},"body":{"index.html":{}}}],["development",{"_index":2869,"title":{},"body":{"index.html":{}}}],["df",{"_index":2237,"title":{},"body":{"classes/SVGLoader.html":{}}}],["directional",{"_index":817,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["directionallightcomponent",{"_index":816,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":111,"title":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["directive({selector",{"_index":1383,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directive.ts",{"_index":362,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"coverage.html":{}}}],["directives",{"_index":113,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"overview.html":{}}}],["disable",{"_index":198,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["disablefog",{"_index":1537,"title":{},"body":{"components/FogComponent.html":{}}}],["display",{"_index":1714,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1790,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["distribute",{"_index":2927,"title":{},"body":{"license.html":{}}}],["divisions",{"_index":1581,"title":{},"body":{"components/GridHelperComponent.html":{},"classes/SVGLoader.html":{}}}],["dl",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.addeventlistener('keydown",{"_index":2602,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":2610,"title":{},"body":{"injectables/StatsService.html":{}}}],["documentation",{"_index":2651,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["dof",{"_index":1447,"title":{},"body":{"components/DofComponent.html":{}}}],["dof'},{'name",{"_index":819,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["dofcomponent",{"_index":818,"title":{"components/DofComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":664,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["don't",{"_index":672,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["done",{"_index":293,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["dosetfirstpoint",{"_index":2233,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dot",{"_index":821,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["dots",{"_index":2160,"title":{},"body":{"classes/SVGLoader.html":{}}}],["dotscreencomponent",{"_index":820,"title":{"components/DotScreenComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dotscreenshader",{"_index":1481,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["dq",{"_index":2262,"title":{},"body":{"classes/SVGLoader.html":{}}}],["draw",{"_index":1358,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":1000,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":1357,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:10",{"_index":1369,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:11",{"_index":1370,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:12",{"_index":1372,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:13",{"_index":1373,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:14",{"_index":1371,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:16",{"_index":1378,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:17",{"_index":1379,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:18",{"_index":1380,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:19",{"_index":1366,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:27",{"_index":1375,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:36",{"_index":1377,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:69",{"_index":1374,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:94",{"_index":1376,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":879,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["duplicated",{"_index":2570,"title":{},"body":{"classes/SVGLoader.html":{}}}],["during",{"_index":297,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["dynamic",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2182,"title":{},"body":{"classes/SVGLoader.html":{}}}],["e.g",{"_index":2845,"title":{},"body":{"index.html":{}}}],["edge",{"_index":1153,"title":{"interfaces/Edge.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["edge'},{'name",{"_index":808,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["edge.component.ts",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edge.name",{"_index":1350,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge.to",{"_index":1349,"title":{},"body":{"classes/DagreUtils.html":{}}}],["edge1",{"_index":2370,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edge2",{"_index":2366,"title":{},"body":{"classes/SVGLoader.html":{}}}],["edges",{"_index":1158,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["edgesgeom",{"_index":1401,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgetype",{"_index":2794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":215,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["effect.module",{"_index":1062,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":999,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect.ts",{"_index":193,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["effect.ts:18",{"_index":209,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:29",{"_index":208,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:37",{"_index":211,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:41",{"_index":213,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:45",{"_index":212,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:54",{"_index":210,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:56",{"_index":207,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect.ts:9",{"_index":205,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["effect/atft",{"_index":1061,"title":{},"body":{"modules/AtftModule.html":{}}}],["effectcomposer",{"_index":1176,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["effectcomposer(renderer",{"_index":1235,"title":{},"body":{"injectables/BloomService.html":{}}}],["effectcomposer(this.rendererservice.getwebglrenderer",{"_index":1511,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["effectcomposercomponent",{"_index":204,"title":{"components/EffectComposerComponent.html":{}},"body":{"directives/AbstractComposeEffect.html":{},"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":616,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":614,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["elements/vertex",{"_index":2543,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ellipse",{"_index":2205,"title":{},"body":{"classes/SVGLoader.html":{}}}],["embedded",{"_index":1305,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["emit",{"_index":1884,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["emits",{"_index":895,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":933,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":936,"title":{},"body":{"injectables/AnimationService.html":{}}}],["empty",{"_index":361,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/EmptyComponent.html":{},"coverage.html":{}}}],["empty'},{'name",{"_index":825,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["empty.component",{"_index":1014,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":824,"title":{"components/EmptyComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":199,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/NearestIntersection.html":{},"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":1114,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":1916,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":1919,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":1918,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":884,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["enabled",{"_index":906,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":1638,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablefog",{"_index":657,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/FogComponent.html":{}}}],["end",{"_index":310,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"injectables/RendererService.html":{}}}],["end.x",{"_index":2283,"title":{},"body":{"classes/SVGLoader.html":{}}}],["end.y",{"_index":2285,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endcaps",{"_index":2520,"title":{},"body":{"classes/SVGLoader.html":{}}}],["endpoints",{"_index":2365,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ensure",{"_index":2569,"title":{},"body":{"classes/SVGLoader.html":{}}}],["entire",{"_index":2859,"title":{},"body":{"index.html":{}}}],["entire_scene_layer",{"_index":1196,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2793,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelop",{"_index":2397,"title":{},"body":{"classes/SVGLoader.html":{}}}],["enveloping",{"_index":2402,"title":{},"body":{"classes/SVGLoader.html":{}}}],["envelops",{"_index":2398,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equally",{"_index":2254,"title":{},"body":{"classes/SVGLoader.html":{}}}],["equals",{"_index":2510,"title":{},"body":{"classes/SVGLoader.html":{}}}],["error",{"_index":1064,"title":{},"body":{"modules/AtftModule.html":{},"components/ContentProjectionComponent.html":{}}}],["error('camera",{"_index":684,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["error('webglrenderer",{"_index":686,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["eslint",{"_index":396,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["eslint/directive",{"_index":399,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["eslint/no",{"_index":578,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["especially",{"_index":394,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["etc",{"_index":919,"title":{},"body":{"injectables/AnimationService.html":{}}}],["euler",{"_index":278,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["evenodd",{"_index":2446,"title":{},"body":{"classes/SVGLoader.html":{}}}],["event",{"_index":897,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"license.html":{}}}],["event.altkey",{"_index":2603,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.face",{"_index":1912,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["event.key",{"_index":2604,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1763,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1761,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1778,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":2800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":301,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{}}}],["events",{"_index":622,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":1993,"title":{},"body":{"components/RendererCanvasComponent.html":{},"index.html":{}}}],["examples",{"_index":2844,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":2502,"title":{},"body":{"classes/SVGLoader.html":{}}}],["execution",{"_index":921,"title":{},"body":{"injectables/AnimationService.html":{}}}],["existent",{"_index":2217,"title":{},"body":{"classes/SVGLoader.html":{}}}],["existing",{"_index":2535,"title":{},"body":{"classes/SVGLoader.html":{}}}],["exists",{"_index":418,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["explore",{"_index":2829,"title":{},"body":{"index.html":{}}}],["export",{"_index":63,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["exported",{"_index":1066,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":943,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["express",{"_index":2946,"title":{},"body":{"license.html":{}}}],["extends",{"_index":235,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["face",{"_index":1725,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["false",{"_index":140,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["far",{"_index":1538,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["far'].some(propname",{"_index":1566,"title":{},"body":{"components/FogComponent.html":{}}}],["features",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2896,"title":{},"body":{"index.html":{}}}],["ff0000",{"_index":1368,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ffa0a0",{"_index":722,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["fff0f0",{"_index":719,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ffffff",{"_index":715,"title":{},"body":{"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"coverage.html":{}}}],["fileloader",{"_index":2150,"title":{},"body":{"classes/SVGLoader.html":{}}}],["files",{"_index":2917,"title":{},"body":{"license.html":{}}}],["finalcomposer",{"_index":1163,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass",{"_index":1240,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalpass.needsswap",{"_index":1246,"title":{},"body":{"injectables/BloomService.html":{}}}],["finalurl",{"_index":40,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["find",{"_index":1424,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["findbyname",{"_index":251,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["findbyname(name",{"_index":324,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["findmesh",{"_index":1397,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.add(this.edges",{"_index":1422,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["findmesh.material",{"_index":1412,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["first",{"_index":2511,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstpoint",{"_index":2231,"title":{},"body":{"classes/SVGLoader.html":{}}}],["firstxofpath",{"_index":2438,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fit",{"_index":2858,"title":{},"body":{"index.html":{}}}],["fit.ts",{"_index":2766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":2951,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1067,"title":{},"body":{"modules/AtftModule.html":{}}}],["fixcenter",{"_index":2760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixes",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":384,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["flex",{"_index":1715,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["float32bufferattribute",{"_index":2151,"title":{},"body":{"classes/SVGLoader.html":{}}}],["floating",{"_index":2298,"title":{},"body":{"classes/SVGLoader.html":{}}}],["focus",{"_index":1449,"title":{},"body":{"components/DofComponent.html":{}}}],["focus'].some(propname",{"_index":1461,"title":{},"body":{"components/DofComponent.html":{}}}],["fog",{"_index":1536,"title":{},"body":{"components/FogComponent.html":{}}}],["fog'},{'name",{"_index":827,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["fog.component",{"_index":1001,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["fogcomponent",{"_index":826,"title":{"components/FogComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":2889,"title":{},"body":{"index.html":{}}}],["following",{"_index":2936,"title":{},"body":{"license.html":{}}}],["font",{"_index":1572,"title":{},"body":{"injectables/FontService.html":{}}}],["fontloader",{"_index":1573,"title":{},"body":{"injectables/FontService.html":{}}}],["fontservice",{"_index":1075,"title":{"injectables/FontService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/FontService.html":{},"coverage.html":{},"overview.html":{}}}],["fork/svgloader",{"_index":2616,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["fork/svgloader.ts",{"_index":2099,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["fork/svgloader.ts:1678",{"_index":2116,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2115",{"_index":2122,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2140",{"_index":2140,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:2169",{"_index":2147,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:26",{"_index":2112,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:27",{"_index":2114,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:28",{"_index":2109,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:42",{"_index":2132,"title":{},"body":{"classes/SVGLoader.html":{}}}],["fork/svgloader.ts:76",{"_index":2134,"title":{},"body":{"classes/SVGLoader.html":{}}}],["found",{"_index":83,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractOrbitControls.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{}}}],["fov",{"_index":1860,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["fragmentshader",{"_index":1208,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frame",{"_index":829,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["framemeshcomponent",{"_index":828,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":2897,"title":{},"body":{"index.html":{},"license.html":{}}}],["frustumsize",{"_index":1849,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["function",{"_index":579,"title":{},"body":{"directives/AbstractObject3D.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["functions",{"_index":2805,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2934,"title":{},"body":{"license.html":{}}}],["fxaapass",{"_index":1227,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.x",{"_index":1231,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaapass.material.uniforms['resolution'].value.y",{"_index":1233,"title":{},"body":{"injectables/BloomService.html":{}}}],["fxaashader",{"_index":1194,"title":{},"body":{"injectables/BloomService.html":{}}}],["g",{"_index":1325,"title":{},"body":{"classes/DagreUtils.html":{},"classes/SVGLoader.html":{}}}],["g.nodes",{"_index":1337,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setdefaultedgelabel(function",{"_index":1333,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setedge(edge.from",{"_index":1348,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setgraph(this.getlayout(model",{"_index":1332,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setnode(node.name",{"_index":1339,"title":{},"body":{"classes/DagreUtils.html":{}}}],["g.setparent(node.name",{"_index":1345,"title":{},"body":{"classes/DagreUtils.html":{}}}],["generate",{"_index":539,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{}}}],["generated",{"_index":2525,"title":{},"body":{"classes/SVGLoader.html":{}}}],["generates",{"_index":2504,"title":{},"body":{"classes/SVGLoader.html":{}}}],["geoetry",{"_index":311,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["geometry",{"_index":291,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["geometry.setattribute",{"_index":2532,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getcamera",{"_index":2025,"title":{},"body":{"injectables/RendererService.html":{}}}],["getcanvas",{"_index":1998,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getchildren",{"_index":252,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["getcomponentfactory",{"_index":729,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomponentfactory(id",{"_index":735,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["getcomposer",{"_index":1487,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["getfinalresult",{"_index":17,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getfinalresult(finalurl",{"_index":37,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["getfirstintersectedgroup",{"_index":1933,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1784,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["getintersections",{"_index":2404,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getisenabled",{"_index":1959,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getlayout",{"_index":1313,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getlayout(model",{"_index":1318,"title":{},"body":{"classes/DagreUtils.html":{}}}],["getmaterial",{"_index":434,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["getmodel",{"_index":493,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["getnodetransform",{"_index":2187,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getobject",{"_index":253,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["getrenderpane",{"_index":1984,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getscanlineintersections",{"_index":2386,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getscene",{"_index":2026,"title":{},"body":{"injectables/RendererService.html":{}}}],["getsource",{"_index":18,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsource(icon",{"_index":41,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace",{"_index":19,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getsourcebynamespace(namespace",{"_index":43,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["getstrokestyle",{"_index":2104,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getstrokestyle(width",{"_index":2118,"title":{},"body":{"classes/SVGLoader.html":{}}}],["getting",{"_index":2626,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getvalue",{"_index":93,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getvalue(key",{"_index":97,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["getwebglrenderer",{"_index":2027,"title":{},"body":{"injectables/RendererService.html":{}}}],["git",{"_index":2870,"title":{},"body":{"index.html":{}}}],["given",{"_index":2506,"title":{},"body":{"classes/SVGLoader.html":{}}}],["gl_fragcolor",{"_index":1213,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["gl_position",{"_index":1203,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":627,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["goals",{"_index":2834,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2911,"title":{},"body":{"license.html":{}}}],["graph",{"_index":585,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["graphmodel",{"_index":1154,"title":{"interfaces/GraphModel.html":{}},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["grid",{"_index":831,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["gridactorcomponent",{"_index":830,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridhelpercomponent",{"_index":833,"title":{"components/GridHelperComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":834,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":1589,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1756,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["group.directive",{"_index":1111,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1882,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:19",{"_index":1923,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:20",{"_index":1924,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:21",{"_index":1922,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:32",{"_index":1925,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":1930,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:44",{"_index":1931,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:53",{"_index":1929,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":1928,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:67",{"_index":1927,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:75",{"_index":1926,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1755,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":886,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["groups",{"_index":1729,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["guidelines",{"_index":2635,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["h",{"_index":2482,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.for",{"_index":2484,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.identifier",{"_index":2486,"title":{},"body":{"classes/SVGLoader.html":{}}}],["h.ishole",{"_index":2483,"title":{},"body":{"classes/SVGLoader.html":{}}}],["height",{"_index":1343,"title":{},"body":{"classes/DagreUtils.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["helper",{"_index":469,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":793,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["helper.component",{"_index":1013,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":1138,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:14",{"_index":1141,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:15",{"_index":1582,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":1085,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":1012,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":1084,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper/empty.component",{"_index":1301,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["helpers",{"_index":2842,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":836,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["hemispherelightcomponent",{"_index":835,"title":{"components/HemisphereLightComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":2910,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1384,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hidedash",{"_index":1362,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["hides",{"_index":481,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["hierarchy",{"_index":2441,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holder",{"_index":429,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["holders",{"_index":2956,"title":{},"body":{"license.html":{}}}],["hole",{"_index":2449,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes",{"_index":2480,"title":{},"body":{"classes/SVGLoader.html":{}}}],["holes.foreach",{"_index":2485,"title":{},"body":{"classes/SVGLoader.html":{}}}],["horizontalblurshader",{"_index":1284,"title":{},"body":{"components/BlurComponent.html":{}}}],["horizontally",{"_index":2860,"title":{},"body":{"index.html":{}}}],["host",{"_index":1367,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":2000,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":1980,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":1971,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":787,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":2009,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://github.com/dagrejs/dagre/wiki",{"_index":1312,"title":{},"body":{"classes/DagreUtils.html":{}}}],["https://github.com/makimenko/angular",{"_index":2872,"title":{},"body":{"index.html":{}}}],["https://github.com/mrdoob/three.js/pull/10315",{"_index":632,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/actor",{"_index":1721,"title":{},"body":{"injectables/ModelService.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/aws",{"_index":1625,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/azure",{"_index":1619,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/makimenko/files/master/google",{"_index":1622,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://raw.githubusercontent.com/material",{"_index":1613,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["https://stackoverflow.com/questions/70946038/replace",{"_index":749,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["i.e",{"_index":1997,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["i.face",{"_index":1769,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.identifier",{"_index":2434,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.name",{"_index":601,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["i.object",{"_index":1765,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.object.dispatchevent({type",{"_index":1772,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["i.t",{"_index":2378,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i.trim",{"_index":2251,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1",{"_index":2414,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i1.point.x",{"_index":2416,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2",{"_index":2415,"title":{},"body":{"classes/SVGLoader.html":{}}}],["i2.point.x",{"_index":2417,"title":{},"body":{"classes/SVGLoader.html":{}}}],["icon",{"_index":34,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["icon.indexof(separator",{"_index":71,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icon.split(separator",{"_index":74,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["icons/?.svg",{"_index":1620,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/master/svg/?/baseline.svg",{"_index":1615,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["icons/material",{"_index":1614,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iconservice",{"_index":1076,"title":{"injectables/IconService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{},"overview.html":{}}}],["iconsource",{"_index":1598,"title":{"interfaces/IconSource.html":{}},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["id",{"_index":737,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"classes/SVGLoader.html":{}}}],["ideas",{"_index":2899,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":2409,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["ignore",{"_index":1266,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["ignorepaused",{"_index":1780,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["implement",{"_index":1291,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"index.html":{}}}],["implementation",{"_index":1990,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":116,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["implied",{"_index":2947,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["imports",{"_index":962,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{}}}],["inch",{"_index":2162,"title":{},"body":{"classes/SVGLoader.html":{}}}],["included",{"_index":2941,"title":{},"body":{"license.html":{}}}],["including",{"_index":2921,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":1068,"title":{},"body":{"modules/AtftModule.html":{}}}],["infinity",{"_index":1657,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["information",{"_index":2884,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":272,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"injectables/RendererService.html":{}}}],["init(renderer",{"_index":1169,"title":{},"body":{"injectables/BloomService.html":{}}}],["initcomposer",{"_index":1488,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["initialize",{"_index":2028,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":2039,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialized",{"_index":413,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"injectables/BloomService.html":{}}}],["initialopacity",{"_index":1363,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["initpasses",{"_index":200,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/ActorRepositoryService.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"overview.html":{}}}],["innerpoint",{"_index":2565,"title":{},"body":{"classes/SVGLoader.html":{}}}],["input",{"_index":154,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["inputs",{"_index":126,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["inside",{"_index":2401,"title":{},"body":{"classes/SVGLoader.html":{}}}],["install",{"_index":2850,"title":{},"body":{"index.html":{}}}],["instance",{"_index":387,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["instanceof",{"_index":1398,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["integrated",{"_index":2843,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":777,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"changelog.html":{}}}],["interface",{"_index":64,"title":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{}},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["interfaces",{"_index":1147,"title":{},"body":{"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/IconSource.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"interfaces/RaycasterEmitEvent.html":{},"overview.html":{}}}],["intersect",{"_index":2360,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection",{"_index":2381,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.t",{"_index":2379,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.x",{"_index":2383,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection.y",{"_index":2384,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersection[0",{"_index":1796,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1795,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["intersectionlocationtype.right",{"_index":2375,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections",{"_index":2385,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.foreach",{"_index":2406,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersections.push",{"_index":2382,"title":{},"body":{"classes/SVGLoader.html":{}}}],["intersectionsraw.push",{"_index":2380,"title":{},"body":{"classes/SVGLoader.html":{}}}],["invalid",{"_index":486,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["isahole",{"_index":2471,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isahole.filter",{"_index":2481,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isccw",{"_index":1610,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["iscw",{"_index":2411,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isenabled",{"_index":1750,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isfirstpoint",{"_index":2232,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ishole",{"_index":2447,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholefor",{"_index":2448,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isholeto",{"_index":2418,"title":{},"body":{"classes/SVGLoader.html":{}}}],["isolation",{"_index":2830,"title":{},"body":{"index.html":{}}}],["isready",{"_index":1934,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1779,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["isrotated",{"_index":2352,"title":{},"body":{"classes/SVGLoader.html":{}}}],["issue",{"_index":630,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["istransformrotated",{"_index":2353,"title":{},"body":{"classes/SVGLoader.html":{}}}],["it's",{"_index":922,"title":{},"body":{"injectables/AnimationService.html":{}}}],["j",{"_index":2252,"title":{},"body":{"classes/SVGLoader.html":{}}}],["join",{"_index":2498,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{}}}],["joins",{"_index":2519,"title":{},"body":{"classes/SVGLoader.html":{}}}],["k",{"_index":1793,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["key",{"_index":50,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/FontService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["keyboard",{"_index":624,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["kind",{"_index":2945,"title":{},"body":{"license.html":{}}}],["known",{"_index":629,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["l",{"_index":2240,"title":{},"body":{"classes/SVGLoader.html":{}}}],["label",{"_index":699,"title":{},"body":{"directives/AbstractServerActor.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"miscellaneous/functions.html":{}}}],["large_arc_flag",{"_index":2268,"title":{},"body":{"classes/SVGLoader.html":{}}}],["last",{"_index":2509,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastcwvalue",{"_index":2455,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointl",{"_index":2557,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lastpointr",{"_index":2558,"title":{},"body":{"classes/SVGLoader.html":{}}}],["later",{"_index":1867,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":127,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["layer/grid",{"_index":992,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layer/layer",{"_index":987,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":837,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layout",{"_index":993,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{}}}],["layout'},{'name",{"_index":810,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["layout.component.ts",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":366,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["lazyobject",{"_index":368,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["left",{"_index":2529,"title":{},"body":{"classes/SVGLoader.html":{}}}],["legend",{"_index":786,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["len",{"_index":2294,"title":{},"body":{"classes/SVGLoader.html":{}}}],["length",{"_index":2247,"title":{},"body":{"classes/SVGLoader.html":{}}}],["leverage",{"_index":2824,"title":{},"body":{"index.html":{}}}],["liability",{"_index":2960,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2957,"title":{},"body":{"license.html":{}}}],["library",{"_index":2837,"title":{},"body":{"index.html":{}}}],["license",{"_index":2902,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["lies",{"_index":2369,"title":{},"body":{"classes/SVGLoader.html":{}}}],["light",{"_index":775,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":790,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["light.component",{"_index":1022,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":769,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":779,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light.component.ts:15",{"_index":778,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["light.component.ts:16",{"_index":1591,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["light.intensity",{"_index":784,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["light.module",{"_index":1087,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":1021,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light/atft",{"_index":1086,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":2841,"title":{},"body":{"index.html":{}}}],["limit",{"_index":2394,"title":{},"body":{"classes/SVGLoader.html":{}}}],["limitation",{"_index":2922,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2948,"title":{},"body":{"license.html":{}}}],["line",{"_index":305,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/enumerations.html":{}}}],["linecap",{"_index":2120,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lineconnectorcomponent",{"_index":838,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":1411,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["lineendtype",{"_index":2796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linejoin",{"_index":2119,"title":{},"body":{"classes/SVGLoader.html":{}}}],["lines",{"_index":1386,"title":{},"body":{"directives/DashedDrawDirective.html":{},"classes/SVGLoader.html":{}}}],["linetype",{"_index":2797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["link",{"_index":401,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["list",{"_index":728,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["listen",{"_index":620,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["listened",{"_index":626,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["listeningcontrolelement",{"_index":611,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["load",{"_index":95,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["load(key",{"_index":100,"title":{},"body":{"classes/AbstractCacheService.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["load(url",{"_index":2128,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loaded",{"_index":381,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["loader",{"_index":470,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["loader'},{'name",{"_index":844,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["loader.component",{"_index":1029,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["loader.load",{"_index":2179,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.load(key",{"_index":1577,"title":{},"body":{"injectables/FontService.html":{},"injectables/SvgLoaderService.html":{}}}],["loader.module",{"_index":1089,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":1028,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.service.ts",{"_index":1799,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":1807,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.service.ts:22",{"_index":1804,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["loader.setpath",{"_index":2173,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setrequestheader",{"_index":2175,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.setwithcredentials",{"_index":2177,"title":{},"body":{"classes/SVGLoader.html":{}}}],["loader.ts",{"_index":467,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["loader.ts:12",{"_index":490,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:21",{"_index":475,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader.ts:32",{"_index":494,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["loader/atft",{"_index":1088,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loaderactorcomponent",{"_index":840,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":374,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["loadlazyobject",{"_index":370,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["locally",{"_index":2877,"title":{},"body":{"index.html":{}}}],["logic",{"_index":900,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":298,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{}}}],["m",{"_index":2342,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ma",{"_index":2158,"title":{},"body":{"classes/SVGLoader.html":{}}}],["main",{"_index":934,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["makimenko",{"_index":2895,"title":{},"body":{"index.html":{}}}],["manager",{"_index":2110,"title":{},"body":{"classes/SVGLoader.html":{}}}],["map",{"_index":53,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["mapcontrols",{"_index":1677,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":841,"title":{"components/MapControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":2864,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1883,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["matching",{"_index":88,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":437,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{},"miscellaneous/functions.html":{}}}],["material.ts",{"_index":2753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":438,"title":{},"body":{"directives/AbstractMesh.html":{},"miscellaneous/functions.html":{}}}],["materialcreator",{"_index":1805,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["materialname",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["materials",{"_index":1164,"title":{},"body":{"injectables/BloomService.html":{}}}],["math.acos",{"_index":2296,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.cos",{"_index":2279,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.max",{"_index":2267,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.min",{"_index":2297,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.pi",{"_index":1445,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["math.sin",{"_index":2281,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.sqrt",{"_index":2257,"title":{},"body":{"classes/SVGLoader.html":{}}}],["math.tan",{"_index":2337,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix",{"_index":2339,"title":{},"body":{"classes/SVGLoader.html":{}}}],["matrix3",{"_index":2152,"title":{},"body":{"classes/SVGLoader.html":{}}}],["max",{"_index":187,"title":{},"body":{"directives/AbstractCamera.html":{},"miscellaneous/functions.html":{}}}],["maxblur",{"_index":1450,"title":{},"body":{"components/DofComponent.html":{}}}],["maxblur'].some(propname",{"_index":1468,"title":{},"body":{"components/DofComponent.html":{}}}],["maxdistance",{"_index":1639,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maximum",{"_index":2497,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxpolarangle",{"_index":1640,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxx",{"_index":2460,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxy",{"_index":2457,"title":{},"body":{"classes/SVGLoader.html":{}}}],["maxzoom",{"_index":1641,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["md",{"_index":1605,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["means",{"_index":485,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["merchantability",{"_index":2950,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2925,"title":{},"body":{"license.html":{}}}],["merged",{"_index":2522,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mesh",{"_index":306,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractMesh.html":{},"coverage.html":{}}}],["mesh'},{'name",{"_index":798,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["mesh.castshadow",{"_index":456,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["mesh.component",{"_index":1036,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["mesh.module",{"_index":1091,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":1035,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":458,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["mesh/atft",{"_index":1090,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["message",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":770,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["method",{"_index":373,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"classes/SVGLoader.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["mihail",{"_index":2907,"title":{},"body":{"license.html":{}}}],["mindistance",{"_index":1642,"title":{},"body":{"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["minimum",{"_index":2513,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minx",{"_index":2461,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miny",{"_index":2459,"title":{},"body":{"classes/SVGLoader.html":{}}}],["minzoom",{"_index":1643,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":2792,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2903,"title":{},"body":{"license.html":{},"properties.html":{}}}],["miter",{"_index":2494,"title":{},"body":{"classes/SVGLoader.html":{}}}],["miterlimit",{"_index":2121,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mm",{"_index":2166,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mode",{"_index":2886,"title":{},"body":{"index.html":{}}}],["model",{"_index":410,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["model(newmodelurl",{"_index":499,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["model.compositions",{"_index":1352,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges",{"_index":1346,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.edges.foreach((edge",{"_index":1347,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.layout",{"_index":1355,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.nodes",{"_index":1353,"title":{},"body":{"classes/DagreUtils.html":{}}}],["model.ts",{"_index":1150,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{}}}],["modelactorcomponent",{"_index":747,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["models/?.obj",{"_index":1722,"title":{},"body":{"injectables/ModelService.html":{}}}],["modelservice",{"_index":1077,"title":{"injectables/ModelService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/ModelService.html":{},"coverage.html":{},"overview.html":{}}}],["modeltograph",{"_index":1314,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modeltograph(model",{"_index":1320,"title":{},"body":{"classes/DagreUtils.html":{}}}],["modelviewmatrix",{"_index":1205,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["modified",{"_index":542,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/DofComponent.html":{},"components/SceneComponent.html":{}}}],["modify",{"_index":2924,"title":{},"body":{"license.html":{}}}],["module",{"_index":937,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":939,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2883,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":621,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mouseenter",{"_index":1890,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1891,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1785,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["move",{"_index":1514,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["mtlloader",{"_index":1809,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["mtlloader.materialcreator",{"_index":1803,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["multigraph",{"_index":1331,"title":{},"body":{"classes/DagreUtils.html":{}}}],["multiples",{"_index":2499,"title":{},"body":{"classes/SVGLoader.html":{}}}],["mustrerender",{"_index":167,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"components/OrthographicCameraComponent.html":{}}}],["n",{"_index":2356,"title":{},"body":{"classes/SVGLoader.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["name:string",{"_index":593,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["namespace",{"_index":45,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["native",{"_index":618,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["near",{"_index":1539,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1789,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1792,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1723,"title":{"interfaces/NearestIntersection.html":{}},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["nearestintersection.distance",{"_index":1794,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["nearestintersection.face",{"_index":1797,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["need",{"_index":656,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["network",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":56,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["newmodelurl",{"_index":497,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["newobject3dinstance",{"_index":242,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["newpoints",{"_index":2575,"title":{},"body":{"classes/SVGLoader.html":{}}}],["newpoints.push",{"_index":2574,"title":{},"body":{"classes/SVGLoader.html":{}}}],["next",{"_index":397,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["nextpointl",{"_index":2563,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nextpointr",{"_index":2564,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ng",{"_index":1307,"title":{},"body":{"components/ContentProjectionComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":201,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["ngmodule",{"_index":951,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{}}}],["ngonchanges",{"_index":123,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["ngonchanges(changes",{"_index":145,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["ngondestroy",{"_index":202,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["node",{"_index":596,"title":{"interfaces/Node.html":{}},"body":{"directives/AbstractObject3D.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{},"coverage.html":{}}}],["node'},{'name",{"_index":812,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["node.childnodes",{"_index":2226,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.component.ts",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["node.composition",{"_index":1344,"title":{},"body":{"classes/DagreUtils.html":{}}}],["node.getattribute",{"_index":2234,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.hasattribute",{"_index":2194,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.href.baseval.substring",{"_index":2211,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.label",{"_index":1340,"title":{},"body":{"classes/DagreUtils.html":{}}}],["node.nodename",{"_index":2190,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.nodetype",{"_index":2186,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet",{"_index":2248,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules",{"_index":2249,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.sheet.cssrules.length",{"_index":2250,"title":{},"body":{"classes/SVGLoader.html":{}}}],["node.viewportelement.getelementbyid",{"_index":2213,"title":{},"body":{"classes/SVGLoader.html":{}}}],["nodes",{"_index":1157,"title":{},"body":{"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"classes/SVGLoader.html":{}}}],["noholes",{"_index":1611,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["nom1",{"_index":2361,"title":{},"body":{"classes/SVGLoader.html":{}}}],["non",{"_index":2216,"title":{},"body":{"classes/SVGLoader.html":{}}}],["none",{"_index":2023,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":2954,"title":{},"body":{"license.html":{}}}],["nonzero",{"_index":2424,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normal",{"_index":2533,"title":{},"body":{"classes/SVGLoader.html":{}}}],["normals",{"_index":2144,"title":{},"body":{"classes/SVGLoader.html":{}}}],["notable",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":623,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":2939,"title":{},"body":{"license.html":{}}}],["now",{"_index":412,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["npm",{"_index":2836,"title":{},"body":{"index.html":{}}}],["null",{"_index":1243,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"classes/SVGLoader.html":{}}}],["number",{"_index":135,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["number.epsilon",{"_index":2373,"title":{},"body":{"classes/SVGLoader.html":{}}}],["numpoints",{"_index":2572,"title":{},"body":{"classes/SVGLoader.html":{}}}],["obj",{"_index":423,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["obj.addeventlistener(raycasterevent.click",{"_index":1902,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1900,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1901,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.ismesh",{"_index":1262,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.material",{"_index":1268,"title":{},"body":{"injectables/BloomService.html":{}}}],["obj.removeeventlistener(raycasterevent.click",{"_index":1906,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1904,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1905,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":240,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["object.module",{"_index":1048,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":1081,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":1396,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":1381,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["object/atft",{"_index":1047,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/scene.component",{"_index":2058,"title":{},"body":{"injectables/RendererService.html":{}}}],["object3d",{"_index":382,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["objectloader",{"_index":2846,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":843,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloader",{"_index":1806,"title":{},"body":{"injectables/ObjLoaderService.html":{},"index.html":{}}}],["objloadercomponent",{"_index":472,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloaderservice",{"_index":1078,"title":{"injectables/ObjLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/ObjLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["observers",{"_index":928,"title":{},"body":{"injectables/AnimationService.html":{}}}],["obtaining",{"_index":2914,"title":{},"body":{"license.html":{}}}],["official",{"_index":2881,"title":{},"body":{"index.html":{}}}],["offset",{"_index":2541,"title":{},"body":{"classes/SVGLoader.html":{}}}],["old",{"_index":417,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["once",{"_index":665,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{}}}],["onchanges",{"_index":118,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["onclick",{"_index":696,"title":{},"body":{"directives/AbstractServerActor.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onclick(event",{"_index":1770,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["ondeselected",{"_index":697,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ondestroy",{"_index":195,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/DashedDrawDirective.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["one",{"_index":294,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["onerror",{"_index":2131,"title":{},"body":{"classes/SVGLoader.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{},"components/RendererCanvasComponent.html":{}}}],["onload",{"_index":2129,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onmouseenter",{"_index":1921,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmouseenter(event",{"_index":1909,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1907,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":1935,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1758,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["onprogress",{"_index":2130,"title":{},"body":{"classes/SVGLoader.html":{}}}],["onresize",{"_index":1968,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onresize(event",{"_index":1979,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":698,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["ontouchstart",{"_index":1936,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1774,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["open",{"_index":2507,"title":{},"body":{"classes/SVGLoader.html":{}}}],["openparpos",{"_index":2318,"title":{},"body":{"classes/SVGLoader.html":{}}}],["operation",{"_index":296,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["optimization",{"_index":902,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2856,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":604,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["orbitcontrols",{"_index":649,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":845,"title":{"components/OrbitControlsComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":281,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["original",{"_index":1414,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["orthographic",{"_index":847,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["orthographiccameracomponent",{"_index":846,"title":{"components/OrthographicCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["oter",{"_index":2400,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections",{"_index":2432,"title":{},"body":{"classes/SVGLoader.html":{}}}],["otherintersections.push",{"_index":2437,"title":{},"body":{"classes/SVGLoader.html":{}}}],["others",{"_index":1685,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":2964,"title":{},"body":{"license.html":{}}}],["out",{"_index":948,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules/UxActorModule.html":{},"license.html":{},"overview.html":{}}}],["outerpoint",{"_index":2566,"title":{},"body":{"classes/SVGLoader.html":{}}}],["outline",{"_index":2022,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":534,"title":{},"body":{"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":268,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/SceneComponent.html":{}}}],["over",{"_index":2301,"title":{},"body":{"classes/SVGLoader.html":{}}}],["override",{"_index":355,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["overview",{"_index":2970,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":389,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["p",{"_index":2407,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.getpoints",{"_index":2456,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.identifier",{"_index":2477,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.points",{"_index":2479,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.x",{"_index":2464,"title":{},"body":{"classes/SVGLoader.html":{}}}],["p.y",{"_index":2463,"title":{},"body":{"classes/SVGLoader.html":{}}}],["package",{"_index":2773,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pairs",{"_index":2545,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pane",{"_index":1986,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":1644,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":2359,"title":{},"body":{"classes/SVGLoader.html":{}}}],["param",{"_index":1442,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["parameter",{"_index":2500,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2517,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parent",{"_index":504,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["parent.ts",{"_index":2762,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parentinitialized",{"_index":369,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["parentscene",{"_index":219,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"components/ContentProjectionComponent.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{}}}],["parenttype",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parse",{"_index":2105,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parse(text",{"_index":2133,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecirclenode",{"_index":2204,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsecssstylesheet",{"_index":2192,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsedefs(node",{"_index":2208,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parseellipsenode",{"_index":2206,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloats",{"_index":2246,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsefloatwithunits",{"_index":2308,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parselinenode",{"_index":2207,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenode",{"_index":2185,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsenodetransform",{"_index":2305,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepathnode",{"_index":2196,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolygonnode",{"_index":2200,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsepolylinenode",{"_index":2202,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parser'},{'name",{"_index":815,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["parser.component.ts",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["parserectnode",{"_index":2198,"title":{},"body":{"classes/SVGLoader.html":{}}}],["parsestyle",{"_index":2193,"title":{},"body":{"classes/SVGLoader.html":{}}}],["particular",{"_index":2952,"title":{},"body":{"license.html":{}}}],["pass",{"_index":196,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{}}}],["passes",{"_index":1526,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.indexof(pass",{"_index":1528,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.length",{"_index":1530,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["passes.splice(index",{"_index":1529,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["path",{"_index":2153,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.boundingbox.containspoint",{"_index":2403,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.color.setstyle",{"_index":2221,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.absellipse",{"_index":2289,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.currentpath.currentpoint.copy",{"_index":2244,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.identifier",{"_index":2410,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.iscw",{"_index":2412,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.points",{"_index":2405,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.subpaths",{"_index":2355,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata",{"_index":2225,"title":{},"body":{"classes/SVGLoader.html":{}}}],["path.userdata.style",{"_index":2516,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths",{"_index":2135,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.foreach",{"_index":2391,"title":{},"body":{"classes/SVGLoader.html":{}}}],["paths.push",{"_index":2224,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pause",{"_index":1747,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["paused",{"_index":1730,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["pc",{"_index":2169,"title":{},"body":{"classes/SVGLoader.html":{}}}],["per",{"_index":2161,"title":{},"body":{"classes/SVGLoader.html":{}}}],["performance",{"_index":901,"title":{},"body":{"injectables/AnimationService.html":{}}}],["permission",{"_index":2909,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2932,"title":{},"body":{"license.html":{}}}],["person",{"_index":2913,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2933,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":850,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["perspectivecameracomponent",{"_index":849,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pick",{"_index":659,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["pipe",{"_index":1432,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":1053,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":1102,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":1052,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":1433,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1441,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixelratio",{"_index":1229,"title":{},"body":{"injectables/BloomService.html":{}}}],["pixels",{"_index":2019,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":852,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["planemeshcomponent",{"_index":851,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plus",{"_index":2540,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point",{"_index":854,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["point.copy",{"_index":2243,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point.x",{"_index":2439,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0l",{"_index":2559,"title":{},"body":{"classes/SVGLoader.html":{}}}],["point0r",{"_index":2560,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointlightcomponent",{"_index":853,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["points",{"_index":2141,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.foreach(p",{"_index":2462,"title":{},"body":{"classes/SVGLoader.html":{}}}],["points.length",{"_index":2573,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke",{"_index":2106,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostroke(points",{"_index":2137,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers",{"_index":2107,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pointstostrokewithbuffers(points",{"_index":2142,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polygon",{"_index":2199,"title":{},"body":{"classes/SVGLoader.html":{}}}],["polyline",{"_index":2201,"title":{},"body":{"classes/SVGLoader.html":{}}}],["portions",{"_index":2943,"title":{},"body":{"license.html":{}}}],["position",{"_index":918,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["positions",{"_index":316,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["positionx",{"_index":128,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positiony",{"_index":129,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz",{"_index":130,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["positionz'].some(propname",{"_index":168,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["pq",{"_index":2265,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preallocate",{"_index":2549,"title":{},"body":{"classes/SVGLoader.html":{}}}],["precision",{"_index":2299,"title":{},"body":{"classes/SVGLoader.html":{}}}],["preservedrawingbuffer",{"_index":1970,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["previous",{"_index":482,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["private",{"_index":244,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["project",{"_index":2630,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projection",{"_index":1295,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projection'},{'name",{"_index":801,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["projection.component",{"_index":1095,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projection.component.ts",{"_index":1293,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projection.component.ts:14",{"_index":1297,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["projectionmatrix",{"_index":1204,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["projects/.../abstract",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../applied",{"_index":2806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../bloom.service.ts",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../calculate",{"_index":2807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dagre",{"_index":2795,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../fix",{"_index":2808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../line",{"_index":2798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../provide",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":2799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../removefromarray.ts",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../scale",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test.ts",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":691,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"modules/AtftDataCenterActorModule.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"classes/DagreUtils.html":{},"interfaces/Edge.html":{},"interfaces/GraphModel.html":{},"interfaces/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/actor/ux/loader/loader",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/text/text",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/actor/ux/ux",{"_index":2624,"title":{},"body":{"modules/UxActorModule.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":892,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":915,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":910,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":912,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:40",{"_index":913,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:46",{"_index":911,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":949,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":1044,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/abstract",{"_index":114,"title":{},"body":{"directives/AbstractCamera.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":957,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/orthographic",{"_index":1823,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":1858,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/abstract",{"_index":603,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":974,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":1631,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":1817,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":998,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/compose/abstract",{"_index":191,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts",{"_index":1271,"title":{},"body":{"components/BlurComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/blur.component.ts:13",{"_index":1273,"title":{},"body":{"components/BlurComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts",{"_index":1446,"title":{},"body":{"components/DofComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:13",{"_index":1454,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:14",{"_index":1453,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dof.component.ts:15",{"_index":1451,"title":{},"body":{"components/DofComponent.html":{}}}],["projects/atft/src/lib/effect/compose/dot",{"_index":1473,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/compose/effect",{"_index":1484,"title":{},"body":{"components/EffectComposerComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":1356,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts",{"_index":1535,"title":{},"body":{"components/FogComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:12",{"_index":1542,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:13",{"_index":1545,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:14",{"_index":1544,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:16",{"_index":1540,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:27",{"_index":1548,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:36",{"_index":1547,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:42",{"_index":1546,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:48",{"_index":1550,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/effect/fog.component.ts:53",{"_index":1549,"title":{},"body":{"components/FogComponent.html":{}}}],["projects/atft/src/lib/object/abstract",{"_index":360,"title":{},"body":{"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":1080,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/abstract",{"_index":233,"title":{},"body":{"directives/AbstractConnector.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":967,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":2710,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/object/content",{"_index":1292,"title":{},"body":{"components/ContentProjectionComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":1011,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":1137,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":1532,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:12",{"_index":1534,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":1579,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/ambient",{"_index":768,"title":{},"body":{"components/AmbientLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":1020,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":1587,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/abstract",{"_index":466,"title":{},"body":{"directives/AbstractModelLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":1027,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/abstract",{"_index":6,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/object/loader/services/font.service.ts",{"_index":1567,"title":{},"body":{"injectables/FontService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/icon.service.ts",{"_index":1596,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/model.service.ts",{"_index":1716,"title":{},"body":{"injectables/ModelService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/obj",{"_index":1798,"title":{},"body":{"injectables/ObjLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/services/svg",{"_index":2613,"title":{},"body":{"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/stl",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/abstract",{"_index":431,"title":{},"body":{"directives/AbstractMesh.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":1034,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/video",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":2576,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:14",{"_index":2579,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":1135,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":1101,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":1434,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":1438,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1872,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1875,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":1109,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1876,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1724,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:100",{"_index":1946,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:112",{"_index":1948,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:125",{"_index":1943,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:134",{"_index":1942,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":1957,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":1958,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:17",{"_index":1955,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:18",{"_index":1954,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:19",{"_index":1956,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:20",{"_index":1938,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:30",{"_index":1945,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:35",{"_index":1952,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:41",{"_index":1953,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":1941,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":1940,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":1949,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:60",{"_index":1950,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":1960,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:69",{"_index":1951,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:74",{"_index":1939,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:79",{"_index":1947,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":1120,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts",{"_index":1159,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:109",{"_index":1168,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:119",{"_index":1175,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:33",{"_index":1185,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:34",{"_index":1182,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:35",{"_index":1179,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:36",{"_index":1183,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:37",{"_index":1177,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:38",{"_index":1184,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:39",{"_index":1186,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:41",{"_index":1172,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/bloom.service.ts:93",{"_index":1173,"title":{},"body":{"injectables/BloomService.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":1961,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":2024,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:102",{"_index":2050,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:110",{"_index":2052,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:117",{"_index":2036,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":2055,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:121",{"_index":2035,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:125",{"_index":2037,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:129",{"_index":2046,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":2056,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":2054,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":2057,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":2053,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":2034,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:27",{"_index":2048,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:31",{"_index":2044,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:36",{"_index":2041,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:53",{"_index":2040,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:89",{"_index":2043,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":2588,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":1129,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":2593,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":2600,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":2599,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":2596,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":2598,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:45",{"_index":2597,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":2595,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/threejs",{"_index":2098,"title":{},"body":{"classes/SVGLoader.html":{},"coverage.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":2752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":2755,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":2758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/provide",{"_index":2761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/removefromarray.ts",{"_index":2763,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":2765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/test.ts",{"_index":2768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":99,"title":{},"body":{"classes/AbstractCacheService.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/FontService.html":{},"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["promise((resolve",{"_index":1812,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["promise(resolve",{"_index":1576,"title":{},"body":{"injectables/FontService.html":{}}}],["promise.reject(\"failed",{"_index":106,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"properties.html":{}}}],["property",{"_index":480,"title":{},"body":{"directives/AbstractModelLoader.html":{},"components/RendererCanvasComponent.html":{}}}],["propname",{"_index":169,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"components/DofComponent.html":{},"components/FogComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["props",{"_index":2077,"title":{},"body":{"injectables/RendererService.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["provided",{"_index":537,"title":{},"body":{"directives/AbstractObject3D.html":{},"index.html":{},"license.html":{}}}],["provideparent",{"_index":781,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provideparent(ambientlightcomponent",{"_index":771,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLightModule.html":{},"overview.html":{}}}],["provideparent(axeshelpercomponent",{"_index":1139,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["provideparent(component",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provideparent(contentprojectioncomponent",{"_index":1294,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["provideparent(emptycomponent",{"_index":1533,"title":{},"body":{"components/EmptyComponent.html":{}}}],["provideparent(gridhelpercomponent",{"_index":1580,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["provideparent(hemispherelightcomponent",{"_index":1588,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["provideparent(orthographiccameracomponent",{"_index":1825,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["provideparent(perspectivecameracomponent",{"_index":1859,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["provideparent(scenecomponent",{"_index":2577,"title":{},"body":{"components/SceneComponent.html":{}}}],["provider",{"_index":38,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{}}}],["provider.allowcoloroverride",{"_index":1627,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.isccw",{"_index":1628,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.noholes",{"_index":1629,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["provider.url.replace(replace_symbol",{"_index":84,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["providers",{"_index":13,"title":{},"body":{"injectables/AbstractAssetService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["pruning",{"_index":2393,"title":{},"body":{"classes/SVGLoader.html":{}}}],["pt",{"_index":2168,"title":{},"body":{"classes/SVGLoader.html":{}}}],["public",{"_index":15,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["publish",{"_index":2926,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2900,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2953,"title":{},"body":{"license.html":{}}}],["px",{"_index":2113,"title":{},"body":{"classes/SVGLoader.html":{}}}],["q",{"_index":2266,"title":{},"body":{"classes/SVGLoader.html":{}}}],["querylist",{"_index":638,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rad2deg",{"_index":1873,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":1104,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":1100,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radians",{"_index":280,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/SceneComponent.html":{}}}],["raycast",{"_index":673,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["raycaster",{"_index":881,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["raycaster.module",{"_index":1059,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":1110,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":1112,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":1058,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":652,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":880,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasteremitevent",{"_index":1881,"title":{"interfaces/RaycasterEmitEvent.html":{}},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["raycasterenabledirective",{"_index":883,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1727,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.click",{"_index":1773,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseenter",{"_index":1768,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1767,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":885,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":612,"title":{"injectables/RaycasterService.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"coverage.html":{},"overview.html":{}}}],["readonly",{"_index":904,"title":{},"body":{"injectables/AnimationService.html":{}}}],["receiveshadow",{"_index":439,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["recreate",{"_index":668,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rect",{"_index":2197,"title":{},"body":{"classes/SVGLoader.html":{}}}],["recursionbyname",{"_index":254,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["recursionbyname(currentnode",{"_index":332,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["reference",{"_index":380,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["references",{"_index":2215,"title":{},"body":{"classes/SVGLoader.html":{}}}],["register",{"_index":730,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["register(id",{"_index":739,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["registerprovider",{"_index":21,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["registerprovider(key",{"_index":48,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["reject",{"_index":1813,"title":{},"body":{"injectables/ObjLoaderService.html":{},"injectables/SvgLoaderService.html":{}}}],["release",{"_index":2888,"title":{},"body":{"index.html":{}}}],["releasecontributors",{"_index":2893,"title":{},"body":{"index.html":{}}}],["remove",{"_index":416,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{},"injectables/StatsService.html":{}}}],["removechild",{"_index":255,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechild(object",{"_index":335,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname",{"_index":256,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removechildbyname(name",{"_index":337,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["removed",{"_index":487,"title":{},"body":{"directives/AbstractModelLoader.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["removeduplicatedpoints",{"_index":2571,"title":{},"body":{"classes/SVGLoader.html":{}}}],["removefromarray",{"_index":2764,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["removefromarray(array",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["removepass",{"_index":1489,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["removepass(pass",{"_index":1501,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["render",{"_index":703,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["rendered",{"_index":1987,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":855,"title":{},"body":{"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["renderer.getpixelratio",{"_index":1230,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderer.module",{"_index":1055,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":1121,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":1122,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":1054,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer",{"_index":653,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["renderer/renderer.service",{"_index":156,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["renderercanvascomponent",{"_index":643,"title":{"components/RendererCanvasComponent.html":{}},"body":{"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice",{"_index":133,"title":{"injectables/RendererService.html":{}},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":2581,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":1995,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpane",{"_index":1973,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderpass",{"_index":1187,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["renderpass(scene",{"_index":1219,"title":{},"body":{"injectables/BloomService.html":{}}}],["renderpass(this.parentscene.getobject",{"_index":1516,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["renderscene",{"_index":1218,"title":{},"body":{"injectables/BloomService.html":{}}}],["rendertoscreen",{"_index":1490,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["replace_symbol",{"_index":62,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo",{"_index":2835,"title":{},"body":{"index.html":{}}}],["repository.service.ts",{"_index":726,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:14",{"_index":742,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":733,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":741,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["repository.service.ts:37",{"_index":736,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requestanimationframe",{"_index":903,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":931,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestid",{"_index":760,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["requests",{"_index":2901,"title":{},"body":{"index.html":{}}}],["require",{"_index":2770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":590,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["reset",{"_index":947,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/MapControlsComponent.html":{},"classes/SVGLoader.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["resetcanvas",{"_index":1969,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resettling",{"_index":2018,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":2029,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":2042,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":2014,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":1578,"title":{},"body":{"injectables/FontService.html":{}}}],["resolve(data.paths",{"_index":2618,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["resolve(model",{"_index":1815,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["resolver",{"_index":734,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["restorematerial",{"_index":1166,"title":{},"body":{"injectables/BloomService.html":{}}}],["restorematerial(obj",{"_index":1174,"title":{},"body":{"injectables/BloomService.html":{}}}],["restrict",{"_index":1996,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":2920,"title":{},"body":{"license.html":{}}}],["result",{"_index":592,"title":{},"body":{"directives/AbstractObject3D.html":{},"injectables/ActorRepositoryService.html":{},"classes/DagreUtils.html":{}}}],["results",{"_index":87,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1749,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["return",{"_index":75,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"classes/DagreUtils.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{}}}],["returned",{"_index":2490,"title":{},"body":{"classes/SVGLoader.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2530,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rights",{"_index":2923,"title":{},"body":{"license.html":{}}}],["rotate",{"_index":2324,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rotatespeed",{"_index":1645,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotatex",{"_index":259,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatey",{"_index":260,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez",{"_index":261,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotatez'].some(propname",{"_index":543,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["rotation",{"_index":277,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["rotation/damping/panning",{"_index":674,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["rotations",{"_index":2453,"title":{},"body":{"classes/SVGLoader.html":{}}}],["round",{"_index":2492,"title":{},"body":{"classes/SVGLoader.html":{}}}],["run",{"_index":2874,"title":{},"body":{"index.html":{}}}],["rx",{"_index":2258,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rx,ry",{"_index":2253,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rxjs",{"_index":345,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"dependencies.html":{}}}],["rxs",{"_index":2260,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ry",{"_index":2259,"title":{},"body":{"classes/SVGLoader.html":{}}}],["rys",{"_index":2261,"title":{},"body":{"classes/SVGLoader.html":{}}}],["s",{"_index":2256,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{}}}],["safely",{"_index":392,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["same",{"_index":2539,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sample",{"_index":2866,"title":{},"body":{"index.html":{}}}],["sampler2d",{"_index":1210,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["save",{"_index":2851,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1476,"title":{},"body":{"components/DotScreenComponent.html":{},"classes/SVGLoader.html":{}}}],["scaletofit",{"_index":2767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scalex",{"_index":262,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scaley",{"_index":263,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["scalez",{"_index":264,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["scalez'].some(propname",{"_index":547,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["scanline",{"_index":2387,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections",{"_index":2428,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.foreach",{"_index":2433,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineintersections.sort",{"_index":2430,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlinemaxx",{"_index":2422,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scanlineminx",{"_index":2421,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scene",{"_index":422,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["scene'},{'name",{"_index":858,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["scene.background",{"_index":2582,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":1094,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scenebackgroundtarget",{"_index":1491,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["scenecomponent",{"_index":857,"title":{"components/SceneComponent.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scope",{"_index":2171,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager",{"_index":2172,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.manager.itemerror",{"_index":2184,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.parse",{"_index":2180,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.path",{"_index":2174,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.requestheader",{"_index":2176,"title":{},"body":{"classes/SVGLoader.html":{}}}],["scope.withcredentials",{"_index":2178,"title":{},"body":{"classes/SVGLoader.html":{}}}],["screen",{"_index":1475,"title":{},"body":{"components/DotScreenComponent.html":{},"index.html":{}}}],["screen'},{'name",{"_index":822,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["screen.component",{"_index":1004,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["screen.component.ts",{"_index":1474,"title":{},"body":{"components/DotScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:14",{"_index":1477,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["screenspacepanning",{"_index":1646,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["search",{"_index":2395,"title":{},"body":{"classes/SVGLoader.html":{}}}],["searching",{"_index":589,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["see",{"_index":471,"title":{},"body":{"directives/AbstractModelLoader.html":{},"changelog.html":{},"index.html":{}}}],["selected",{"_index":704,"title":{},"body":{"directives/AbstractServerActor.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["selector",{"_index":772,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["sell",{"_index":2930,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1515,"title":{},"body":{"components/EffectComposerComponent.html":{},"components/OrthographicCameraComponent.html":{}}}],["separator",{"_index":61,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sequence",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":693,"title":{},"body":{"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":990,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":991,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":743,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":744,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servericonactorcomponent",{"_index":745,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverstandactorcomponent",{"_index":746,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":894,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftDataCenterActorModule.html":{}}}],["set",{"_index":498,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"index.html":{}}}],["setcamera",{"_index":1937,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1751,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcomposer",{"_index":2030,"title":{},"body":{"injectables/RendererService.html":{}}}],["setcomposer(composer",{"_index":2045,"title":{},"body":{"injectables/RendererService.html":{}}}],["setdefaultprovider",{"_index":22,"title":{},"body":{"injectables/AbstractAssetService.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setdefaultprovider(key",{"_index":51,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"injectables/ModelService.html":{}}}],["setmaterials",{"_index":1800,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmaterials(materialcreator",{"_index":1802,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["setmodel(newmodelurl",{"_index":496,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["setscene",{"_index":2031,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":2047,"title":{},"body":{"injectables/RendererService.html":{}}}],["settimeout",{"_index":425,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["settings",{"_index":479,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["settled",{"_index":1256,"title":{},"body":{"injectables/BloomService.html":{}}}],["setupcontrols",{"_index":610,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["shaderpass",{"_index":1192,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["shaderpass(dotscreenshader",{"_index":1483,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["shaderpass(fxaashader",{"_index":1228,"title":{},"body":{"injectables/BloomService.html":{}}}],["shaderpass(horizontalblurshader",{"_index":1288,"title":{},"body":{"components/BlurComponent.html":{}}}],["shaderpass(verticalblurshader",{"_index":1287,"title":{},"body":{"components/BlurComponent.html":{}}}],["shall",{"_index":2940,"title":{},"body":{"license.html":{}}}],["shape",{"_index":2154,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shape.holes.push",{"_index":2487,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapepath",{"_index":2117,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{}}}],["shapepath.userdata.style.fillrule",{"_index":2473,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn",{"_index":2474,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapestoreturn.push",{"_index":2488,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils",{"_index":2155,"title":{},"body":{"classes/SVGLoader.html":{}}}],["shapeutils.isclockwise",{"_index":2465,"title":{},"body":{"classes/SVGLoader.html":{}}}],["show",{"_index":889,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["show.directive",{"_index":1131,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":2589,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":2591,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":2590,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":700,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["signal",{"_index":385,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["similarly",{"_index":181,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["simple",{"_index":2827,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":146,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["simplepath",{"_index":2419,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox",{"_index":2429,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.boundingbox.getcenter",{"_index":2426,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepath.identifier",{"_index":2435,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths",{"_index":2466,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.filter",{"_index":2467,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.foreach",{"_index":2475,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplepaths.map",{"_index":2472,"title":{},"body":{"classes/SVGLoader.html":{}}}],["simplex",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["single",{"_index":2013,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":1140,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"injectables/RendererService.html":{}}}],["size.ts",{"_index":2756,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["skewx",{"_index":2335,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skewy",{"_index":2338,"title":{},"body":{"classes/SVGLoader.html":{}}}],["skip",{"_index":2584,"title":{},"body":{"components/SceneComponent.html":{}}}],["skipself",{"_index":214,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["skycolor",{"_index":1590,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["slightly",{"_index":2300,"title":{},"body":{"classes/SVGLoader.html":{}}}],["smaapass",{"_index":1247,"title":{},"body":{"injectables/BloomService.html":{}}}],["smaapass(window.innerwidth",{"_index":1248,"title":{},"body":{"injectables/BloomService.html":{}}}],["software",{"_index":184,"title":{},"body":{"directives/AbstractCamera.html":{},"license.html":{}}}],["solid",{"_index":2470,"title":{},"body":{"classes/SVGLoader.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"modules/UxActorModule.html":{}}}],["source/target",{"_index":315,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["sourcesub",{"_index":237,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["sp",{"_index":2468,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sp.points.length",{"_index":2469,"title":{},"body":{"classes/SVGLoader.html":{}}}],["sphere",{"_index":863,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["spheremeshcomponent",{"_index":862,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["split",{"_index":2312,"title":{},"body":{"classes/SVGLoader.html":{}}}],["square",{"_index":2495,"title":{},"body":{"classes/SVGLoader.html":{}}}],["src/app.component.html",{"_index":2855,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":2865,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":2880,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":2862,"title":{},"body":{"index.html":{}}}],["stack",{"_index":2442,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.length",{"_index":2443,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.pop",{"_index":2444,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stack.push",{"_index":2445,"title":{},"body":{"classes/SVGLoader.html":{}}}],["stand",{"_index":861,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{}}}],["standard",{"_index":2632,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start",{"_index":908,"title":{},"body":{"injectables/AnimationService.html":{},"classes/SVGLoader.html":{}}}],["start.x",{"_index":2282,"title":{},"body":{"classes/SVGLoader.html":{}}}],["start.y",{"_index":2284,"title":{},"body":{"classes/SVGLoader.html":{}}}],["started",{"_index":2627,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["startloading",{"_index":371,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["statements",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":645,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/DagreUtils.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{}}}],["stats",{"_index":888,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["stats.service",{"_index":1130,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":1060,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":2059,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":887,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"components/AmbientLightComponent.html":{},"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":1128,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["step",{"_index":2274,"title":{},"body":{"classes/SVGLoader.html":{}}}],["still",{"_index":625,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"classes/SVGLoader.html":{}}}],["stl",{"_index":865,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["stlloadercomponent",{"_index":864,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stop",{"_index":909,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{}}}],["stories",{"_index":2879,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":2828,"title":{},"body":{"index.html":{}}}],["storybook.js",{"_index":2882,"title":{},"body":{"index.html":{}}}],["strange",{"_index":2012,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"interfaces/Edge.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2489,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokecolor",{"_index":2123,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinecap",{"_index":2126,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokelinejoin",{"_index":2125,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokemiterlimit",{"_index":2127,"title":{},"body":{"classes/SVGLoader.html":{}}}],["strokewidth",{"_index":2124,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style",{"_index":2138,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill",{"_index":2219,"title":{},"body":{"classes/SVGLoader.html":{}}}],["style.fill!='currentcolor",{"_index":2220,"title":{},"body":{"classes/SVGLoader.html":{}}}],["styles",{"_index":1630,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":1633,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":2935,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2928,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2898,"title":{},"body":{"index.html":{}}}],["subpaths",{"_index":2354,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subpaths.length",{"_index":2357,"title":{},"body":{"classes/SVGLoader.html":{}}}],["subscribe",{"_index":916,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":935,"title":{},"body":{"injectables/AnimationService.html":{}}}],["subscribeevents",{"_index":1899,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["subscription",{"_index":340,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["substantial",{"_index":2942,"title":{},"body":{"license.html":{}}}],["successful",{"_index":484,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["suffix",{"_index":400,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super",{"_index":2159,"title":{},"body":{"classes/SVGLoader.html":{}}}],["super(rendererservice",{"_index":782,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["super.afterinit",{"_index":404,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().add(obj",{"_index":424,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.getobject().remove(this.lazyobject",{"_index":420,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["super.ngonchanges(changes",{"_index":460,"title":{},"body":{"directives/AbstractMesh.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/SceneComponent.html":{}}}],["super.ngondestroy",{"_index":356,"title":{},"body":{"directives/AbstractConnector.html":{},"components/MapControlsComponent.html":{}}}],["super.startloading",{"_index":503,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["super.updateparent",{"_index":2585,"title":{},"body":{"components/SceneComponent.html":{}}}],["support",{"_index":2968,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":867,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"modules.html":{}}}],["svgangle",{"_index":2287,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader",{"_index":2097,"title":{"classes/SVGLoader.html":{}},"body":{"classes/SVGLoader.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{}}}],["svgloader.getstrokestyle",{"_index":2514,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.parse",{"_index":2515,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloader.pointstostrokewithbuffers",{"_index":2531,"title":{},"body":{"classes/SVGLoader.html":{}}}],["svgloadercomponent",{"_index":866,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgloaderservice",{"_index":1079,"title":{"injectables/SvgLoaderService.html":{}},"body":{"modules/AtftObjectModule.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["svgurl",{"_index":85,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["sweep_flag",{"_index":2269,"title":{},"body":{"classes/SVGLoader.html":{}}}],["switch",{"_index":2189,"title":{},"body":{"classes/SVGLoader.html":{}}}],["t",{"_index":36,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{},"miscellaneous/functions.html":{}}}],["t2",{"_index":2358,"title":{},"body":{"classes/SVGLoader.html":{}}}],["table",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":258,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["targetopacity",{"_index":1364,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["targetsub",{"_index":238,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["template",{"_index":776,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1965,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["temptransform0",{"_index":2306,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1",{"_index":2331,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform1.identity().translate",{"_index":2327,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2",{"_index":2330,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform2.identity().rotate",{"_index":2328,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3",{"_index":2333,"title":{},"body":{"classes/SVGLoader.html":{}}}],["temptransform3.multiplymatrices",{"_index":2329,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_1",{"_index":2550,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_2",{"_index":2551,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_3",{"_index":2552,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_4",{"_index":2553,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_5",{"_index":2554,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_6",{"_index":2555,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv2_7",{"_index":2556,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.set",{"_index":2345,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.x",{"_index":2350,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tempv3.y",{"_index":2351,"title":{},"body":{"classes/SVGLoader.html":{}}}],["test",{"_index":2848,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2875,"title":{},"body":{"index.html":{}}}],["text",{"_index":869,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["text.module",{"_index":1093,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":1136,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":1092,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text/text",{"_index":2625,"title":{},"body":{"modules/UxActorModule.html":{}}}],["textactorcomponent",{"_index":868,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"modules/UxActorModule.html":{},"coverage.html":{},"overview.html":{}}}],["textmeshcomponent",{"_index":870,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture2d",{"_index":1214,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["theta",{"_index":2286,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this._model",{"_index":501,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["this.actorclick.emit",{"_index":723,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["this.addpass(renderpass",{"_index":1517,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.afterinit",{"_index":557,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.animate",{"_index":1390,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animate.bind(this",{"_index":1391,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animate.emit",{"_index":932,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers",{"_index":930,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":929,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animation",{"_index":1392,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animation?.unsubscribe",{"_index":1431,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":1712,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":1393,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animationservice.start",{"_index":1394,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{}}}],["this.animationstep",{"_index":923,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":924,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.aperture",{"_index":1466,"title":{},"body":{"components/DofComponent.html":{}}}],["this.applychanges(changes",{"_index":231,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.applymaterial",{"_index":463,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.applyposition",{"_index":164,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.applyrotation",{"_index":544,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyscale",{"_index":548,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applytranslation",{"_index":546,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.applyzaxisup",{"_index":163,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.aspect",{"_index":2095,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autorotate",{"_index":1691,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":1693,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bloom.init(this.webglrenderer",{"_index":2089,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.initialized",{"_index":2088,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloom.render",{"_index":2064,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomcomposer",{"_index":1234,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(bloompass",{"_index":1238,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(fxaapass",{"_index":1239,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.addpass(renderscene",{"_index":1237,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.render",{"_index":1259,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertarget2.texture",{"_index":1244,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomcomposer.rendertoscreen",{"_index":1236,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloominit",{"_index":2062,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.bloomlayer.set(bloom_scene_layer",{"_index":1217,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.bloomlayer.test(obj.layers",{"_index":1263,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.cache.get(key",{"_index":103,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.cache.set(key",{"_index":110,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.camera",{"_index":172,"title":{},"body":{"directives/AbstractCamera.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1871,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.bottom",{"_index":1854,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.camera",{"_index":1781,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.layers.enable(this.layer",{"_index":161,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.layers.enableall",{"_index":162,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.left",{"_index":1851,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.lookat(new",{"_index":1856,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.position.set",{"_index":173,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.right",{"_index":1852,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.top",{"_index":1853,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.camera.up.set(0",{"_index":188,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":2061,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1855,"title":{},"body":{"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.camera.zoom",{"_index":1846,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.canvasref",{"_index":2008,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":2010,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":457,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.changed.emit",{"_index":549,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childcameras",{"_index":681,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first",{"_index":682,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.childcameras.first.camera",{"_index":1686,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.childlren",{"_index":599,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.filter(i",{"_index":600,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.indexof(object",{"_index":583,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.push(object",{"_index":575,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.childlren.splice(index",{"_index":584,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.click.emit",{"_index":1914,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.color",{"_index":718,"title":{},"body":{"directives/AbstractServerActor.html":{}}}],["this.composer",{"_index":220,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.addpass(pass",{"_index":225,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.composer.passes",{"_index":1527,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.passes.length",{"_index":1525,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.removepass(pass",{"_index":227,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.composer.render",{"_index":2066,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.composer.render(0.1",{"_index":1531,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer.rendertoscreen",{"_index":1512,"title":{},"body":{"components/EffectComposerComponent.html":{},"injectables/RendererService.html":{}}}],["this.composer.writebuffer.texture",{"_index":1520,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.composer?.addpass(pass",{"_index":1523,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.configurelisteners",{"_index":689,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.constructor.name",{"_index":573,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.contentprojection",{"_index":1302,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.contentprojection.addchild(object",{"_index":1303,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["this.controls",{"_index":662,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":671,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{}}}],["this.controls.addeventlistener('end",{"_index":678,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.addeventlistener('start",{"_index":676,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.autorotate",{"_index":1690,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":1692,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":1696,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dispose",{"_index":669,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.controls.enabledamping",{"_index":1694,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":1702,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":1704,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxzoom",{"_index":1708,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":1700,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.minzoom",{"_index":1706,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":1688,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.reset",{"_index":1713,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":1680,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":1698,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":1710,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":1683,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":2609,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.createcamera",{"_index":159,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.createlinemesh",{"_index":346,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.dampingfactor",{"_index":1697,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.darkennonbloomed(i",{"_index":1258,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.darkmaterial",{"_index":1269,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.dashcolor",{"_index":1406,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.dashincrement",{"_index":1427,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.defaultdpi",{"_index":2163,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.defaultid",{"_index":758,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.defaultifnotfound(icon",{"_index":79,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultprovider",{"_index":70,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.defaultunit",{"_index":2170,"title":{},"body":{"classes/SVGLoader.html":{}}}],["this.depthwrite",{"_index":455,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.disable",{"_index":229,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.disablefog",{"_index":1565,"title":{},"body":{"components/FogComponent.html":{}}}],["this.divisions",{"_index":1586,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.edges",{"_index":1400,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":1407,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":1410,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":1408,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":1409,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.parent.children",{"_index":1429,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.enable",{"_index":228,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.enabled",{"_index":926,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":1695,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablefog",{"_index":1558,"title":{},"body":{"components/FogComponent.html":{}}}],["this.far",{"_index":1563,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.finalcomposer",{"_index":1249,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(finalpass",{"_index":1251,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(fxaapass",{"_index":1252,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(renderscene",{"_index":1250,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.addpass(smaapass",{"_index":1253,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.finalcomposer.render",{"_index":1261,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.focus",{"_index":1463,"title":{},"body":{"components/DofComponent.html":{}}}],["this.fov",{"_index":1869,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.getfinalresult(finalurl",{"_index":86,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1762,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1777,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.getmaterial",{"_index":465,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getobject",{"_index":461,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getobject().background",{"_index":2587,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.getobject().material",{"_index":464,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.getsourcebynamespace(args[0",{"_index":76,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getsourcebynamespace(this.defaultprovider",{"_index":78,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.getvalue(key",{"_index":109,"title":{},"body":{"classes/AbstractCacheService.html":{}}}],["this.groundcolor",{"_index":1595,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.groups",{"_index":1782,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1783,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1757,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.hidedash",{"_index":1428,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.host",{"_index":1388,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.host.getobject",{"_index":1395,"title":{},"body":{"directives/DashedDrawDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.init",{"_index":68,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/RendererService.html":{}}}],["this.initcomposer",{"_index":1506,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.initialized",{"_index":1254,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.initialopacity",{"_index":1415,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.initpasses",{"_index":223,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.intensity",{"_index":785,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/HemisphereLightComponent.html":{}}}],["this.isready",{"_index":1759,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1771,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.layer",{"_index":160,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractObject3D.html":{}}}],["this.lazyobject",{"_index":419,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.list.get(requestid",{"_index":763,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.list.set(id",{"_index":759,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.listeningcontrolelement",{"_index":687,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":1687,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(key",{"_index":1814,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":1816,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["this.loadlazyobject().then(obj",{"_index":414,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.material",{"_index":454,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{}}}],["this.material.depthwrite",{"_index":1419,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.needsupdate",{"_index":1420,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.opacity",{"_index":1421,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.material.transparent",{"_index":1418,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.materials[obj.uuid",{"_index":1267,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.maxblur",{"_index":1470,"title":{},"body":{"components/DofComponent.html":{}}}],["this.maxdistance",{"_index":1703,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":1705,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxzoom",{"_index":1709,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":1701,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.minzoom",{"_index":1707,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mouseenter.emit",{"_index":1911,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit",{"_index":1908,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.name",{"_index":408,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractObject3D.html":{}}}],["this.near",{"_index":1562,"title":{},"body":{"components/FogComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["this.newobject3dinstance",{"_index":555,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object",{"_index":502,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"components/SceneComponent.html":{}}}],["this.object.add(object.getobject",{"_index":576,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.layers.set(this.layer",{"_index":556,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent",{"_index":551,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.parent.remove(this.object",{"_index":553,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.position.set",{"_index":565,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.remove(object.getobject",{"_index":586,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.rotation.set",{"_index":560,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.object.scale.set",{"_index":569,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.onclick",{"_index":1733,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onclick.bind(this",{"_index":1734,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1893,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1894,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1895,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1896,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1731,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1732,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":2002,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":2003,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1735,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1736,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.panspeed",{"_index":1689,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.parent",{"_index":558,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/FogComponent.html":{}}}],["this.parent.addchild(this",{"_index":559,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parent.getobject",{"_index":1554,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.getobject().isscene",{"_index":1555,"title":{},"body":{"components/FogComponent.html":{}}}],["this.parent.removechild(this",{"_index":552,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.parentinitialized",{"_index":405,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.parentscene",{"_index":1553,"title":{},"body":{"components/FogComponent.html":{}}}],["this.pass",{"_index":230,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.foreach(pass",{"_index":224,"title":{},"body":{"directives/AbstractComposeEffect.html":{}}}],["this.pass.push(new",{"_index":1286,"title":{},"body":{"components/BlurComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{}}}],["this.pass[0",{"_index":1460,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['aperture'].value",{"_index":1467,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['focus'].value",{"_index":1464,"title":{},"body":{"components/DofComponent.html":{}}}],["this.pass[0].uniforms['maxblur'].value",{"_index":1469,"title":{},"body":{"components/DofComponent.html":{}}}],["this.paused",{"_index":1748,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.positionx",{"_index":174,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positiony",{"_index":175,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.positionz",{"_index":176,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.preservedrawingbuffer",{"_index":2006,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.providers.get(namespace",{"_index":81,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.providers.set(key",{"_index":69,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1787,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1897,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":1920,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.isenabled",{"_index":675,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.pause",{"_index":677,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.resume",{"_index":679,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1880,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":459,"title":{},"body":{"directives/AbstractMesh.html":{}}}],["this.recursionbyname(child",{"_index":598,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.recursionbyname(this",{"_index":591,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.register('barrel",{"_index":753,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('compact",{"_index":752,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('icon",{"_index":754,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('model",{"_index":756,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('stand",{"_index":751,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.register('workstation",{"_index":755,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.registerprovider('3d",{"_index":1720,"title":{},"body":{"injectables/ModelService.html":{}}}],["this.registerprovider('a",{"_index":1616,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('aws",{"_index":1624,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('az",{"_index":1618,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('g",{"_index":1621,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.registerprovider('md",{"_index":1612,"title":{},"body":{"injectables/IconService.html":{},"interfaces/IconSource.html":{}}}],["this.remove",{"_index":2608,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.render",{"_index":2086,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice",{"_index":222,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"directives/AbstractObject3D.html":{}}}],["this.rendererservice.getcamera().camera",{"_index":1472,"title":{},"body":{"components/DofComponent.html":{},"components/EffectComposerComponent.html":{}}}],["this.rendererservice.getwebglrenderer",{"_index":1509,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":2005,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":171,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"injectables/AnimationService.html":{},"components/EffectComposerComponent.html":{},"components/FogComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/SceneComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":2020,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.setcamera(this",{"_index":166,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.rendererservice.setcomposer(this",{"_index":1521,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendererservice.setcomposer(undefined",{"_index":1508,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.rendertarget.texture",{"_index":2076,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendertoscreen",{"_index":1513,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.resetcanvas",{"_index":2007,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolver.resolvecomponentfactory(comp",{"_index":764,"title":{},"body":{"injectables/ActorRepositoryService.html":{}}}],["this.restorematerial(i",{"_index":1260,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.rotatespeed",{"_index":1681,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.rotatex",{"_index":561,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatey",{"_index":562,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.rotatez",{"_index":563,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalex",{"_index":570,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scaley",{"_index":571,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scalez",{"_index":572,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.scene",{"_index":1216,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"injectables/RendererService.html":{}}}],["this.scene.background",{"_index":2075,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.fog",{"_index":1560,"title":{},"body":{"components/FogComponent.html":{}}}],["this.scene.getobject",{"_index":2063,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.scene.traverse(i",{"_index":1257,"title":{},"body":{"injectables/BloomService.html":{}}}],["this.scenebackgroundtarget",{"_index":1518,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.scenebackgroundtarget.getobject().background",{"_index":1519,"title":{},"body":{"components/EffectComposerComponent.html":{}}}],["this.screenspacepanning",{"_index":1699,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1764,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1766,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.setupcontrols",{"_index":670,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.skycolor",{"_index":1594,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["this.source",{"_index":347,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.source.changed.subscribe",{"_index":351,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub",{"_index":350,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.sourcesub?.unsubscribe",{"_index":357,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.startloading",{"_index":406,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["this.stats",{"_index":2606,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":2612,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":2611,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":2607,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":2592,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":2068,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.stop",{"_index":1426,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.subscribe",{"_index":1737,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.subscribeevents",{"_index":1898,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.target",{"_index":348,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.target.changed.subscribe",{"_index":354,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetopacity",{"_index":1430,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.targetsub",{"_index":353,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.targetsub?.unsubscribe",{"_index":358,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.toggle",{"_index":2605,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatex",{"_index":566,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.translatey",{"_index":567,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.translatez",{"_index":568,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.trytofindgeometry",{"_index":1389,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.unsubscribe",{"_index":1738,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":1915,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.updateaspectratio(canvas",{"_index":2096,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updatebaseinfo(g",{"_index":1351,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":2085,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.updateedges(g",{"_index":1354,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updategraph(g",{"_index":1334,"title":{},"body":{"classes/DagreUtils.html":{}}}],["this.updatelinegeometry",{"_index":352,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.updateparent",{"_index":587,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["this.updatezoom",{"_index":1844,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.watchobjects",{"_index":349,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["this.webglrenderer",{"_index":685,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":2083,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":2067,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.renderpane",{"_index":688,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":2082,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":2072,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":2073,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":2094,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":2079,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":2078,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":2080,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.zaxisup",{"_index":177,"title":{},"body":{"directives/AbstractCamera.html":{}}}],["this.zoom",{"_index":1847,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["this.zoomspeed",{"_index":1684,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":155,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["three.ambientlight(this.color",{"_index":783,"title":{},"body":{"components/AmbientLightComponent.html":{}}}],["three.axeshelper",{"_index":1144,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":1146,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.camera",{"_index":1171,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.color(this.background",{"_index":2583,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.color.getstyle",{"_index":2491,"title":{},"body":{"classes/SVGLoader.html":{}}}],["three.edgesgeometry(findmesh.geometry",{"_index":1402,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.face",{"_index":1726,"title":{},"body":{"interfaces/NearestIntersection.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["three.fog(this.color",{"_index":1561,"title":{},"body":{"components/FogComponent.html":{}}}],["three.gridhelper",{"_index":1583,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.gridhelper(this.size",{"_index":1585,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.hemispherelight",{"_index":1593,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1791,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.js",{"_index":631,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["three.layers",{"_index":1178,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.linedashedmaterial({color",{"_index":1405,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":1404,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":449,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":447,"title":{},"body":{"directives/AbstractMesh.html":{},"directives/DashedDrawDirective.html":{}}}],["three.meshbasicmaterial({color",{"_index":1180,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.object3d",{"_index":308,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractServerActor.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.orthographiccamera",{"_index":1842,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":2081,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1868,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.raycaster",{"_index":1728,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.scene",{"_index":1170,"title":{},"body":{"injectables/BloomService.html":{},"components/FogComponent.html":{},"components/SceneComponent.html":{}}}],["three.shadermaterial",{"_index":1241,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector2(window.innerwidth",{"_index":1222,"title":{},"body":{"injectables/BloomService.html":{}}}],["three.vector2(x",{"_index":1786,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["three.vector3",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(0",{"_index":1857,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["three.webglrenderer",{"_index":2038,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/mapcontrols",{"_index":1678,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":650,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":2601,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/fontloader.js",{"_index":1574,"title":{},"body":{"injectables/FontService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":1810,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":1808,"title":{},"body":{"injectables/ObjLoaderService.html":{}}}],["three/examples/jsm/postprocessing/bokehpass",{"_index":1459,"title":{},"body":{"components/DofComponent.html":{}}}],["three/examples/jsm/postprocessing/effectcomposer",{"_index":1191,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/pass",{"_index":217,"title":{},"body":{"directives/AbstractComposeEffect.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/renderpass",{"_index":1188,"title":{},"body":{"injectables/BloomService.html":{},"components/EffectComposerComponent.html":{}}}],["three/examples/jsm/postprocessing/shaderpass",{"_index":1193,"title":{},"body":{"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{}}}],["three/examples/jsm/postprocessing/unrealbloompass",{"_index":1190,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/dotscreenshader",{"_index":1482,"title":{},"body":{"components/DotScreenComponent.html":{}}}],["three/examples/jsm/shaders/fxaashader",{"_index":1195,"title":{},"body":{"injectables/BloomService.html":{}}}],["three/examples/jsm/shaders/horizontalblurshader",{"_index":1285,"title":{},"body":{"components/BlurComponent.html":{}}}],["three/examples/jsm/shaders/verticalblurshader",{"_index":1283,"title":{},"body":{"components/BlurComponent.html":{}}}],["threejs",{"_index":2615,"title":{},"body":{"injectables/SvgLoaderService.html":{}}}],["threejs.git",{"_index":2873,"title":{},"body":{"index.html":{}}}],["throw",{"_index":683,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["thus",{"_index":667,"title":{},"body":{"directives/AbstractOrbitControls.html":{}}}],["time",{"_index":295,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["tindex",{"_index":2313,"title":{},"body":{"classes/SVGLoader.html":{}}}],["todo",{"_index":165,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"injectables/ActorRepositoryService.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/MapControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":2594,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":2963,"title":{},"body":{"license.html":{}}}],["torus",{"_index":872,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["torusmeshcomponent",{"_index":871,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1775,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["transform",{"_index":1436,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"classes/SVGLoader.html":{}}}],["transform(degrees",{"_index":1437,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1874,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["transform.premultiply",{"_index":2303,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transform.translate",{"_index":2310,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformpath",{"_index":2222,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack",{"_index":2228,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.length",{"_index":2229,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstack.push",{"_index":2304,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts",{"_index":2311,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformstexts.length",{"_index":2314,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext",{"_index":2315,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.indexof",{"_index":2319,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transformtext.length",{"_index":2321,"title":{},"body":{"classes/SVGLoader.html":{}}}],["transfvec2",{"_index":2343,"title":{},"body":{"classes/SVGLoader.html":{}}}],["translate",{"_index":290,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatex",{"_index":265,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatey",{"_index":266,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez",{"_index":267,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["translatez'].some(propname",{"_index":545,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["traversechildnodes",{"_index":2188,"title":{},"body":{"classes/SVGLoader.html":{}}}],["tree",{"_index":767,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["triangles",{"_index":2523,"title":{},"body":{"classes/SVGLoader.html":{}}}],["trigger",{"_index":409,"title":{},"body":{"directives/AbstractLazyObject3D.html":{}}}],["trim",{"_index":2316,"title":{},"body":{"classes/SVGLoader.html":{}}}],["true",{"_index":170,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"injectables/BloomService.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/EffectComposerComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"miscellaneous/variables.html":{}}}],["truncated",{"_index":2501,"title":{},"body":{"classes/SVGLoader.html":{}}}],["try",{"_index":1788,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{}}}],["trytofindgeometry",{"_index":1359,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["ts",{"_index":1265,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":2307,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ty",{"_index":2309,"title":{},"body":{"classes/SVGLoader.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"interfaces/BaseInfo.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"interfaces/Composition.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"interfaces/Edge.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"interfaces/GraphModel.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"interfaces/NearestIntersection.html":{},"interfaces/Node.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/dagre",{"_index":2852,"title":{},"body":{"index.html":{}}}],["types/three",{"_index":2853,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":577,"title":{},"body":{"directives/AbstractObject3D.html":{},"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["typically",{"_index":292,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["u",{"_index":2526,"title":{},"body":{"classes/SVGLoader.html":{}}}],["undefined",{"_index":378,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{},"injectables/ActorRepositoryService.html":{},"modules/AtftModule.html":{},"classes/DagreUtils.html":{},"components/EffectComposerComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/ObjLoaderService.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"injectables/SvgLoaderService.html":{}}}],["underlying",{"_index":1992,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":1065,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["uniform",{"_index":1209,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["uniforms",{"_index":1242,"title":{},"body":{"injectables/BloomService.html":{}}}],["units",{"_index":2165,"title":{},"body":{"classes/SVGLoader.html":{}}}],["unless",{"_index":391,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{}}}],["unrealbloompass",{"_index":1189,"title":{},"body":{"injectables/BloomService.html":{}}}],["unrealbloompass(new",{"_index":1221,"title":{},"body":{"injectables/BloomService.html":{}}}],["unsubscribe",{"_index":1742,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1903,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["unused",{"_index":1289,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["up",{"_index":180,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{},"index.html":{}}}],["update",{"_index":2534,"title":{},"body":{"classes/SVGLoader.html":{},"injectables/StatsService.html":{},"index.html":{}}}],["updateanimation",{"_index":896,"title":{},"body":{"injectables/AnimationService.html":{}}}],["updateaspectratio",{"_index":125,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["updateaspectratio(aspect",{"_index":150,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(canvas",{"_index":2049,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatebaseinfo",{"_index":1315,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatebaseinfo(g",{"_index":1323,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatechildcamerasaspectratio",{"_index":2032,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":2051,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":312,"title":{},"body":{"directives/AbstractConnector.html":{},"injectables/AnimationService.html":{},"components/PerspectiveCameraComponent.html":{}}}],["updateedges",{"_index":1316,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updateedges(g",{"_index":1326,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph",{"_index":1317,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updategraph(g",{"_index":1328,"title":{},"body":{"classes/DagreUtils.html":{}}}],["updatelinegeometry",{"_index":243,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["updateparent",{"_index":257,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["updatezoom",{"_index":1826,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["upgrade",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":483,"title":{},"body":{"directives/AbstractModelLoader.html":{},"directives/AbstractOrbitControls.html":{}}}],["uri",{"_index":478,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["url",{"_index":66,"title":{},"body":{"injectables/AbstractAssetService.html":{},"interfaces/BaseAssetSource.html":{},"injectables/IconService.html":{},"interfaces/IconSource.html":{},"injectables/ModelService.html":{},"classes/SVGLoader.html":{}}}],["usage",{"_index":2840,"title":{},"body":{"index.html":{}}}],["use",{"_index":2209,"title":{},"body":{"classes/SVGLoader.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":898,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["usednode",{"_index":2212,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usednodeid",{"_index":2210,"title":{},"body":{"classes/SVGLoader.html":{}}}],["useful",{"_index":2548,"title":{},"body":{"classes/SVGLoader.html":{}}}],["usefull",{"_index":1888,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":2826,"title":{},"body":{"index.html":{}}}],["usually",{"_index":477,"title":{},"body":{"directives/AbstractModelLoader.html":{}}}],["util",{"_index":452,"title":{},"body":{"directives/AbstractMesh.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SceneComponent.html":{}}}],["utils.ts",{"_index":1310,"title":{},"body":{"classes/DagreUtils.html":{},"coverage.html":{}}}],["utils.ts:10",{"_index":1321,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:31",{"_index":1324,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:42",{"_index":1327,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:50",{"_index":1329,"title":{},"body":{"classes/DagreUtils.html":{}}}],["utils.ts:56",{"_index":1319,"title":{},"body":{"classes/DagreUtils.html":{}}}],["uuid",{"_index":536,"title":{},"body":{"directives/AbstractObject3D.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":274,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/SceneComponent.html":{}}}],["uv",{"_index":1202,"title":{},"body":{"injectables/BloomService.html":{},"classes/SVGLoader.html":{},"miscellaneous/variables.html":{}}}],["uvs",{"_index":2145,"title":{},"body":{"classes/SVGLoader.html":{}}}],["ux",{"_index":2290,"title":{},"body":{"classes/SVGLoader.html":{}}}],["uxactormodule",{"_index":2619,"title":{"modules/UxActorModule.html":{}},"body":{"modules/UxActorModule.html":{},"modules.html":{},"overview.html":{}}}],["uy",{"_index":2291,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v",{"_index":2528,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2",{"_index":2344,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.set",{"_index":2349,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.x",{"_index":2346,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v2.y",{"_index":2347,"title":{},"body":{"classes/SVGLoader.html":{}}}],["v4",{"_index":535,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["valid",{"_index":2547,"title":{},"body":{"classes/SVGLoader.html":{}}}],["value",{"_index":55,"title":{},"body":{"injectables/AbstractAssetService.html":{},"classes/AbstractCacheService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/AxesHelperComponent.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"injectables/FontService.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"injectables/SvgLoaderService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":660,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"classes/SVGLoader.html":{}}}],["var",{"_index":788,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["variable",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2973,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1290,"title":{},"body":{"components/BlurComponent.html":{},"components/DotScreenComponent.html":{},"injectables/ModelService.html":{},"components/RendererCanvasComponent.html":{}}}],["varying",{"_index":1199,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec2",{"_index":1200,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vec4",{"_index":1206,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vect",{"_index":2867,"title":{},"body":{"index.html":{}}}],["vector2",{"_index":2156,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector2d",{"_index":2512,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vector3",{"_index":2157,"title":{},"body":{"classes/SVGLoader.html":{}}}],["version",{"_index":2633,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["vertexoffset",{"_index":2146,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vertexshader",{"_index":1198,"title":{},"body":{"injectables/BloomService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalblurshader",{"_index":1282,"title":{},"body":{"components/BlurComponent.html":{}}}],["vertically",{"_index":2861,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":2143,"title":{},"body":{"classes/SVGLoader.html":{}}}],["very",{"_index":1887,"title":{},"body":{"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":2849,"title":{},"body":{"index.html":{}}}],["video",{"_index":874,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["videomeshcomponent",{"_index":873,"title":{},"body":{"components/AmbientLightComponent.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewchild",{"_index":1300,"title":{},"body":{"components/ContentProjectionComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":1982,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('contentprojection",{"_index":1299,"title":{},"body":{"components/ContentProjectionComponent.html":{}}}],["void",{"_index":47,"title":{},"body":{"injectables/AbstractAssetService.html":{},"directives/AbstractCamera.html":{},"directives/AbstractComposeEffect.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractOrbitControls.html":{},"directives/AbstractServerActor.html":{},"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"interfaces/BaseAssetSource.html":{},"injectables/BloomService.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"classes/DagreUtils.html":{},"directives/DashedDrawDirective.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"injectables/IconService.html":{},"components/MapControlsComponent.html":{},"injectables/ModelService.html":{},"injectables/ObjLoaderService.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"interfaces/RaycasterEmitEvent.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vuv",{"_index":1201,"title":{},"body":{"injectables/BloomService.html":{},"miscellaneous/variables.html":{}}}],["vx",{"_index":2292,"title":{},"body":{"classes/SVGLoader.html":{}}}],["vy",{"_index":2293,"title":{},"body":{"classes/SVGLoader.html":{}}}],["want",{"_index":2857,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2949,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2944,"title":{},"body":{"license.html":{}}}],["watch",{"_index":2876,"title":{},"body":{"index.html":{}}}],["watchobjects",{"_index":245,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["web",{"_index":2833,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":1989,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":608,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"injectables/BloomService.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"injectables/RendererService.html":{}}}],["well",{"_index":313,"title":{},"body":{"directives/AbstractConnector.html":{}}}],["whether",{"_index":386,"title":{},"body":{"directives/AbstractLazyObject3D.html":{},"directives/AbstractModelLoader.html":{},"license.html":{}}}],["whose",{"_index":617,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["width",{"_index":1341,"title":{},"body":{"classes/DagreUtils.html":{},"injectables/RendererService.html":{},"classes/SVGLoader.html":{}}}],["wiki",{"_index":1311,"title":{},"body":{"classes/DagreUtils.html":{}}}],["window",{"_index":628,"title":{},"body":{"directives/AbstractOrbitControls.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["window.addeventlistener('click",{"_index":1740,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1739,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1741,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":1223,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.innerwidth",{"_index":1232,"title":{},"body":{"injectables/BloomService.html":{},"components/DofComponent.html":{},"interfaces/NearestIntersection.html":{},"components/OrthographicCameraComponent.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('click",{"_index":1745,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1744,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1746,"title":{},"body":{"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":1972,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":1976,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["witdh",{"_index":2505,"title":{},"body":{"classes/SVGLoader.html":{}}}],["without",{"_index":2919,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":2017,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":875,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{}}}],["workstationactorcomponent",{"_index":748,"title":{},"body":{"injectables/ActorRepositoryService.html":{},"components/AmbientLightComponent.html":{},"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["writing",{"_index":2542,"title":{},"body":{"classes/SVGLoader.html":{}}}],["written",{"_index":2544,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x",{"_index":282,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["x1p",{"_index":2273,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x1ps",{"_index":2264,"title":{},"body":{"classes/SVGLoader.html":{}}}],["x_axis_rotation",{"_index":2280,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xml",{"_index":2136,"title":{},"body":{"classes/SVGLoader.html":{}}}],["xyz",{"_index":564,"title":{},"body":{"directives/AbstractObject3D.html":{}}}],["y",{"_index":283,"title":{},"body":{"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"interfaces/NearestIntersection.html":{},"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["y1p",{"_index":2271,"title":{},"body":{"classes/SVGLoader.html":{}}}],["y1ps",{"_index":2263,"title":{},"body":{"classes/SVGLoader.html":{}}}],["yaml",{"_index":814,"title":{},"body":{"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/BlurComponent.html":{},"components/ContentProjectionComponent.html":{},"components/DofComponent.html":{},"components/DotScreenComponent.html":{},"components/EffectComposerComponent.html":{},"components/EmptyComponent.html":{},"components/FogComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["yes",{"_index":1944,"title":{},"body":{"injectables/RaycasterService.html":{},"classes/SVGLoader.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":178,"title":{},"body":{"directives/AbstractCamera.html":{},"directives/AbstractConnector.html":{},"directives/AbstractEmptyDirective.html":{},"directives/AbstractLazyObject3D.html":{},"directives/AbstractMesh.html":{},"directives/AbstractModelLoader.html":{},"directives/AbstractObject3D.html":{},"directives/AbstractServerActor.html":{},"components/AmbientLightComponent.html":{},"components/AxesHelperComponent.html":{},"components/ContentProjectionComponent.html":{},"components/EmptyComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"classes/SVGLoader.html":{},"components/SceneComponent.html":{}}}],["z]*/ig",{"_index":2239,"title":{},"body":{"classes/SVGLoader.html":{}}}],["z][^a",{"_index":2238,"title":{},"body":{"classes/SVGLoader.html":{}}}],["zaxisup",{"_index":131,"title":{},"body":{"directives/AbstractCamera.html":{},"components/OrthographicCameraComponent.html":{},"components/PerspectiveCameraComponent.html":{}}}],["zone.js",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":946,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/OrthographicCameraComponent.html":{},"components/RendererCanvasComponent.html":{},"modules/UxActorModule.html":{},"overview.html":{}}}],["zoom'].some(propname",{"_index":1845,"title":{},"body":{"components/OrthographicCameraComponent.html":{}}}],["zoomspeed",{"_index":1647,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AbstractAssetService.html":{"url":"injectables/AbstractAssetService.html","title":"injectable - AbstractAssetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractAssetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                defaultIfNotFound\n                            \n                            \n                                    Public\n                                    Abstract\n                                getFinalResult\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Protected\n                                    Abstract\n                                init\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFinalResult(finalUrl: string, provider: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-asset.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider: string;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init(): void;\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractCacheService.html":{"url":"classes/AbstractCacheService.html","title":"class - AbstractCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/abstract-cache.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class AbstractCacheService {\n\n  protected cache = new Map>();\n\n  public async load(key: string): Promise {\n    const cacheHit = this.cache.get(key);\n    if (await cacheHit) {\n      // console.log('AbstractCacheService.cacheHit', key);\n      if (cacheHit) {\n        return cacheHit;\n      } else {\n        return Promise.reject(\"Failed to get value from cache\")\n      }\n    } else {\n      // console.log('AbstractCacheService.cacheMiss', key);\n      const cacheMiss = this.getValue(key);\n      this.cache.set(key, cacheMiss);\n      return cacheMiss;\n    }\n  }\n\n  protected abstract getValue(key: string): Promise;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractCamera.html":{"url":"directives/AbstractCamera.html","title":"directive - AbstractCamera","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractCamera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/camera/abstract-camera.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createCamera\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/abstract-camera.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/abstract-camera.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/camera/abstract-camera.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\n\n@Directive()\nexport abstract class AbstractCamera implements OnInit, OnChanges {\n\n  camera!: T;\n\n  @Input() positionX!: number;\n  @Input() positionY!: number;\n  @Input() positionZ!: number;\n\n  @Input() zAxisUp = false;\n\n  @Input() layer!: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    // console.log('AbstractCamera.constructor');\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractCamera.ngAfterViewInit');\n    this.createCamera();\n\n    if (this.layer) {\n      this.camera.layers.enable(this.layer);\n    } else {\n      this.camera.layers.enableAll();\n    }\n\n    this.applyZAxisUp();\n    this.applyPosition();\n\n    // TODO: Directive?\n    this.rendererService.setCamera(this);\n  }\n\n  protected abstract createCamera(): void;\n\n  public abstract updateAspectRatio(aspect: number) : void;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let mustRerender = false;\n\n    if (['positionX', 'positionY', 'positionZ'].some(propName => propName in changes)) {\n      this.applyPosition();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n\n  }\n\n  protected applyPosition() {\n    if (this.camera) {\n      this.camera.position.set(\n        this.positionX || 0,\n        this.positionY || 0,\n        this.positionZ || 0,\n      );\n    }\n  }\n\n  protected applyZAxisUp() {\n    if (this.camera && this.zAxisUp) {\n      // Z axis up (similarly to 3D Creation Software: Blender, 3DS Max)\n      this.camera.up.set(0, 0, 1);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractComposeEffect.html":{"url":"directives/AbstractComposeEffect.html","title":"directive - AbstractComposeEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractComposeEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                applyChanges\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Abstract\n                                initPasses\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        applyChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        initPasses\n                        \n                    \n                \n            \n            \n                \n                        \n                    initPasses()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/abstract-compose-effect.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Directive()\nexport abstract class AbstractComposeEffect implements AfterViewInit, OnDestroy, OnChanges {\n\n  protected pass: T[] = [];\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected composer: EffectComposerComponent\n  ) {\n    // console.log('AbstractComposeEffect.constructor', parentScene);\n  }\n\n  protected enable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.enable', this.rendererService);\n\n      this.initPasses();\n\n      this.pass.forEach(pass => this.composer.addPass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  protected disable() {\n    if (this.composer) {\n      // console.log('AbstractComposeEffect.disable');\n      this.pass.forEach(pass => this.composer.removePass(pass));\n      this.rendererService.render();\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.enable();\n  }\n\n  ngOnDestroy(): void {\n    this.disable();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.pass) {\n      return;\n    }\n    if (this.applyChanges(changes)) {\n      this.rendererService.render();\n    }\n  }\n\n  abstract initPasses() : void;\n\n  abstract applyChanges(changes: SimpleChanges): boolean;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractConnector.html":{"url":"directives/AbstractConnector.html","title":"directive - AbstractConnector","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractConnector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/abstract-connector.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                sourceSub\n                            \n                            \n                                    Protected\n                                targetSub\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createLineMesh\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Abstract\n                                updateLineGeometry\n                            \n                            \n                                    Private\n                                watchObjects\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                source\n                            \n                            \n                                target\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        source\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createLineMesh\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLineMesh()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:46\n                        \n                    \n\n\n            \n                \n                        Create line mesh\n\n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateLineGeometry\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLineGeometry()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:52\n                        \n                    \n\n\n            \n                \n                        If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n// TODO: Calculate only when source/target positions were changed\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        watchObjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    watchObjects()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sourceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        targetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/connector/abstract-connector.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {Subscription} from 'rxjs';\n\n@Directive()\nexport abstract class AbstractConnector extends AbstractObject3D implements OnDestroy {\n\n  @Input()\n  source!: AbstractObject3D;\n\n  @Input()\n  target!: AbstractObject3D;\n\n  protected sourceSub!: Subscription;\n  protected targetSub!: Subscription;\n\n  protected newObject3DInstance(): THREE.Object3D {\n    const line = this.createLineMesh();\n    if (this.source && this.target) {\n      this.watchObjects();\n    }\n    return line;\n  }\n\n  private watchObjects() {\n    this.sourceSub = this.source.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n\n    this.targetSub = this.target.changed.subscribe(() => {\n      this.updateLineGeometry();\n    });\n  }\n\n  public override ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.sourceSub?.unsubscribe();\n    this.targetSub?.unsubscribe();\n  }\n\n  /**\n   * Create line mesh\n   */\n  abstract createLineMesh(): T;\n\n  /**\n   * If at least one line end (source or target object)  changed, then line geoetry should be updated as well\n   * // TODO: Calculate only when source/target positions were changed\n   */\n  abstract updateLineGeometry(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractEmptyDirective.html":{"url":"directives/AbstractEmptyDirective.html","title":"directive - AbstractEmptyDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractEmptyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-empty-directive.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:8\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Directive()\nexport abstract class AbstractEmptyDirective extends AbstractObject3D {\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractLazyObject3D.html":{"url":"directives/AbstractLazyObject3D.html","title":"directive - AbstractLazyObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractLazyObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLazyObject()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:31\n                        \n                    \n\n\n            \n                \n                        Abstract method for lazy loading\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:68\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:24\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-lazy-object-3d.ts:19\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, OnDestroy} from '@angular/core';\n\nimport {AbstractObject3D} from './abstract-object-3d';\n\nimport * as THREE from 'three';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AbstractLazyObject3D extends AbstractObject3D implements OnDestroy {\n\n  /**\n   * Flag to signal whether the parentScene class instance AbstractObject3D called the\n   * overwritten method {@link AbstractModelLoader#afterInit} yet.\n   *\n   * Unless that method was called, no methods and properties of {@link AbstractObject3D}\n   * may be safely accessed, especially {@link AbstractObject3D#addChild} and\n   * {@link AbstractObject3D.renderer}.\n   */\n  private parentInitialized = false;\n\n  /**\n   * This is reference to lazy loaded Object3D (async after init)\n   */\n  protected lazyObject: THREE.Object3D | undefined;\n\n\n  /**\n   * Abstract method for lazy loading\n   *\n   */\n  protected abstract loadLazyObject(): Promise;\n\n  protected override afterInit() {\n    super.afterInit();\n    this.parentInitialized = true;\n    this.startLoading();\n  }\n\n  protected startLoading() {\n    // console.log('AbstractLazyObject3D.startLoading', this.name + ' / '+this.parentInitialized);\n    // Trigger model acquisition now that the parentScene has been initialized.\n    this.loadLazyObject().then(obj => {\n      // console.log('AbstractLazyObject3D loaded');\n      // remove old if exists\n      if (this.lazyObject) {\n        super.getObject().remove(this.lazyObject);\n      }\n\n      // add lazy object to scene\n      this.lazyObject = obj;\n      super.getObject().add(obj);\n\n      this.rendererService.render();\n      setTimeout(() => {\n        this.rendererService.render();\n      }, 10);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  override ngOnDestroy(): void {\n    if (this.lazyObject) {\n      super.getObject().remove(this.lazyObject);\n    }\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    // Just empty object (holder of lazy object)\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractMesh.html":{"url":"directives/AbstractMesh.html","title":"directive - AbstractMesh","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractObject3D\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyMaterial\n                            \n                            \n                                    Protected\n                                applyShadowProps\n                            \n                            \n                                    Protected\n                                getMaterial\n                            \n                            \n                                    Public\n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#5DADE2'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyMaterial()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyShadowProps\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyShadowProps(mesh: THREE.Mesh)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mesh\n                                            \n                                                        THREE.Mesh\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMaterial()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Material\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:179\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Input, OnChanges, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedMaterial} from '../../util';\n\n@Directive()\nexport abstract class AbstractMesh extends AbstractObject3D implements OnChanges {\n\n  @Input()\n  material!: string;\n\n  @Input()\n  materialColor: string | number = '#5DADE2';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  protected getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected applyShadowProps(mesh: THREE.Mesh) {\n    mesh.castShadow = this.castShadow;\n    mesh.receiveShadow = this.receiveShadow;\n  }\n\n  public override ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.getObject()) {\n      return;\n    }\n\n    let mustRerender = false;\n    if (['material', 'materialColor', 'depthWrite'].some(propName => propName in changes)) {\n      this.applyMaterial();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  public applyMaterial() {\n    this.getObject().material = this.getMaterial();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractModelLoader.html":{"url":"directives/AbstractModelLoader.html","title":"directive - AbstractModelLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractModelLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/abstract-model-loader.ts\n        \n\n\n            \n                Description\n            \n            \n                Helper parentScene class for model loader.\nSee ObjLoaderComponent\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractLazyObject3D\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _model\n                            \n                            \n                                    Protected\n                                lazyObject\n                            \n                            \n                                    Private\n                                parentInitialized\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                afterInit\n                            \n                            \n                                    Protected\n                                    Abstract\n                                loadLazyObject\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                startLoading\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                            \n                        \n                \n                    \n                        The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:33\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        loadLazyObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadLazyObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractLazyObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractLazyObject3D:31\n\n                        \n                    \n\n\n            \n                \n                        Abstract method for lazy loading\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:68\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:62\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        startLoading\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoading()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractLazyObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractLazyObject3D:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lazyObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:24\n\n                        \n                    \n\n            \n                \n                    This is reference to lazy loaded Object3D (async after init)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parentInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         AbstractLazyObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractLazyObject3D:19\n\n                        \n                    \n\n            \n                \n                    Flag to signal whether the parentScene class instance AbstractObject3D called the\noverwritten method AbstractModelLoader yet.\nUnless that method was called, no methods and properties of AbstractObject3D\nmay be safely accessed, especially AbstractObject3D and\nAbstractObject3D.renderer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:32\n                                \n                            \n                    \n                        \n                                The current model data source (usually a URI).\n\n\n                        \n                    \n\n                \n                    \n                        setmodel(newModelUrl: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/abstract-model-loader.ts:21\n                                \n                            \n                    \n                        \n                                The model data source (usually a URI).\nSettings this property only hides the previous model upon successful\nloading of the new one. This especially means that if the new data source\nis invalid, the old model will not be removed from the scene.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newModelUrl\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, Input} from '@angular/core';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\n\n/**\n * Helper parentScene class for model loader.\n *\n * @see ObjLoaderComponent\n */\n@Directive()\nexport abstract class AbstractModelLoader extends AbstractLazyObject3D {\n\n  protected _model!: string;\n\n  /**\n   * The model data source (usually a URI).\n   * Settings this property only hides the previous model upon successful\n   * loading of the new one. This especially means that if the new data source\n   * is invalid, the old model will *not* be removed from the scene.\n   */\n  @Input()\n  public set model(newModelUrl: string) {\n    // console.log('AbstractModelLoader.model', newModelUrl);\n    this._model = newModelUrl;\n    if (this.object) {\n      super.startLoading();\n    }\n  }\n\n  /**\n   * The current model data source (usually a URI).\n   */\n  public get model() {\n    return this._model;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractObject3D.html":{"url":"directives/AbstractObject3D.html","title":"directive - AbstractObject3D","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractObject3D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/abstract-object-3d.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n                        OnDestroy\n                        OnInit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Protected\n                                    Abstract\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:24\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:31\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/abstract-object-3d.ts:44\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/abstract-object-3d.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/abstract-object-3d.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {v4 as uuidv4} from 'uuid';\n\n@Directive()\nexport abstract class AbstractObject3D implements AfterViewInit, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateX!: number;\n  @Input() rotateY!: number;\n  @Input() rotateZ!: number;\n\n  /**\n   * Translate the geometry. This is typically done as a one time operation, and not during a loop.\n   */\n  @Input() translateX!: number;\n  @Input() translateY!: number;\n  @Input() translateZ!: number;\n\n\n  @Input() scaleX = 1;\n  @Input() scaleY = 1;\n  @Input() scaleZ = 1;\n\n  @Input() name: string = uuidv4(); // if not provided, then auto-generate\n\n  @Input() layer = 0;\n\n  @Output() changed = new EventEmitter();\n\n  protected childlren: Array> = [];\n\n  protected object!: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    // console.log('AbstractObject3D.constructor', this.name);\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    // console.log('AbstractObject3D.ngOnChanges', this.name);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['rotateX', 'rotateY', 'rotateZ'].some(propName => propName in changes)) {\n      this.applyRotation();\n      modified = true;\n    }\n    if (['translateX', 'translateY', 'translateZ'].some(propName => propName in changes)) {\n      this.applyTranslation();\n      modified = true;\n    }\n\n    if (['scaleX', 'scaleY', 'scaleZ'].some(propName => propName in changes)) {\n      this.applyScale();\n      modified = true;\n    }\n\n    if (modified) {\n      this.changed.emit();\n      this.rendererService.render();\n    }\n\n  }\n\n  public ngOnDestroy() {\n    // console.log('AbstractObject3D.OnDestroy', this.name);\n    if (this.object && this.object.parent) {\n      this.parent.removeChild(this);\n      // this.object.parent.remove(this.object);\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  public ngOnInit(): void {\n    // console.log('AbstractObject3D.ngOnInit', this.name);\n    this.object = this.newObject3DInstance();\n    if (this.layer) {\n      this.object.layers.set(this.layer);\n    }\n\n    this.applyTranslation();\n    this.applyRotation();\n    this.applyScale();\n\n    this.afterInit();\n  }\n\n  public updateParent(): void {\n    if (this.parent) {\n      this.parent.addChild(this);\n      this.rendererService.render();\n    }\n  }\n\n  public applyRotation(): void {\n    this.object.rotation.set(\n      this.rotateX || 0,\n      this.rotateY || 0,\n      this.rotateZ || 0,\n      'XYZ'\n    );\n  }\n\n  public applyTranslation(): void {\n    this.object.position.set(\n      this.translateX || 0,\n      this.translateY || 0,\n      this.translateZ || 0\n    );\n  }\n\n  public applyScale(): void {\n    this.object.scale.set(\n      this.scaleX || 0,\n      this.scaleY || 0,\n      this.scaleZ || 0\n    );\n  }\n\n  public addChild(object: AbstractObject3D): void {\n    // (this.constructor.name + ' addChild ' + object, this.object);\n    if (this.object) {\n      // console.log('AbstractObject3D.addChild', this.name);\n      this.childlren.push(object);\n      this.object.add(object.getObject());\n      if (this.rendererService) {\n        this.rendererService.render();\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected afterInit() {\n    // Base abstract class\n  }\n\n  public removeChild(object: AbstractObject3D): void {\n    if (this.object && object) {\n      // console.log('AbstractObject3D.removeChild', this.name);\n\n      // Remove from children:\n      const index = this.childlren.indexOf(object, 0);\n      if (index > -1) {\n        this.childlren.splice(index, 1);\n      }\n\n      // Remove from THREE graph:\n      this.object.remove(object.getObject());\n    }\n  }\n\n  public getObject(): T {\n    return this.object;\n  }\n\n  protected abstract newObject3DInstance(): T;\n\n  public ngAfterViewInit(): void {\n    this.updateParent();\n  }\n\n  public findByName(name: string) {\n    // console.log('AbstractObject3D.findByName: Searching name', name);\n    const res = this.recursionByName(this, name);\n    // console.log('AbstractObject3D.findByName: result', res);\n    return res;\n  }\n\n  protected recursionByName(currentNode: AbstractObject3D, name:string) {\n    if (currentNode.object && currentNode.name === name) {\n      return currentNode;\n    }\n    let node;\n    currentNode.childlren.some(child => node = this.recursionByName(child, name));\n    return node;\n  }\n\n\n  public getChildren() {\n    return this.childlren;\n  }\n\n  public removeChildByName(name: string) {\n    this.childlren = this.childlren.filter(i => i.name !== name);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractOrbitControls.html":{"url":"directives/AbstractOrbitControls.html","title":"directive - AbstractOrbitControls","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractOrbitControls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/control/abstract-orbit-controls.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n                        OnDestroy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:22\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/abstract-orbit-controls.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, ContentChild, ContentChildren, ElementRef, Input, OnChanges, OnDestroy, QueryList, SimpleChanges, Directive } from '@angular/core';\nimport * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {RendererCanvasComponent} from '../renderer/renderer-canvas.component';\n\n\n@Directive()\nexport abstract class AbstractOrbitControls implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ContentChildren(AbstractCamera, {descendants: true}) childCameras!: QueryList>;\n  @ContentChild(RendererCanvasComponent, {static: false}) webGlRenderer!: RendererCanvasComponent;\n  /**\n   * The element on whose native element the orbit control will listen for mouse events.\n   *\n   * Note that keyboard events are still listened for on the global window object, this is\n   * a known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n   */\n  @Input()\n  public listeningControlElement!: ElementRef;\n\n  protected controls!: T;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    // console.log('OrbitControlsComponent.constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the THREE.js OrbitControls are not set up yet, we do not need to enableFog\n    // anything as they will pick the new values from the @Input properties automatically\n    // upon creation.\n    if (!this.controls) {\n      return;\n    }\n\n    if (changes['listeningControlElement']) {\n      // The DOM element the OrbitControls listen on cannot be changed once an\n      // OrbitControls object is created. We thus need to recreate it.\n      this.controls.dispose();\n      this.setUpControls();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.controls) {\n      this.controls.dispose();\n    }\n  }\n\n  protected abstract setUpControls() : void;\n\n\n  private configureListeners() {\n    this.controls.addEventListener('change', () => {\n      this.rendererService.render();\n    });\n\n    // don't raycast during rotation/damping/panning\n    if (this.raycasterService.isEnabled) {\n      this.controls.addEventListener('start', () => {\n        this.raycasterService.pause();\n      });\n      this.controls.addEventListener('end', () => {\n        this.raycasterService.resume();\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('OrbitControlsComponent.ngAfterViewInit');\n    if (this.childCameras === undefined || this.childCameras.first === undefined) {\n      throw new Error('Camera is not found');\n    }\n    if (!this.webGlRenderer) {\n      throw new Error('webGlRenderer is not found');\n    }\n    this.listeningControlElement = this.webGlRenderer.renderPane;\n    this.setUpControls();\n    this.configureListeners();\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AbstractServerActor.html":{"url":"directives/AbstractServerActor.html","title":"directive - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractEmptyDirective\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actorClick\n                            \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        actorClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDeselected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeselected()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:8\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {AbstractEmptyDirective} from '../../../object';\n\n@Directive()\nexport abstract class AbstractServerActor extends AbstractEmptyDirective {\n\n  @Input()\n  label!: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Output()\n  actorClick = new EventEmitter();\n\n  @Input()\n  icon?: string;\n\n  color: string | number = '#ffffff';\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = '#fff0f0';\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = '#ffffff';\n  }\n\n  public onClick() {\n    console.log('ServerActorComponent.onClick');\n    this.color = '#ffa0a0';\n    this.actorClick.emit();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActorRepositoryService.html":{"url":"injectables/ActorRepositoryService.html","title":"injectable - ActorRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActorRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                defaultId\n                            \n                            \n                                    Protected\n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComponentFactory\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getComponentFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getComponentFactory(id: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ComponentFactory | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(id: string, component: Type)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                component\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        defaultId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        list\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {ComponentFactory, ComponentFactoryResolver, Injectable, Type} from '@angular/core';\nimport {\n  ServerBarrelActorComponent,\n  ServerCompactActorComponent,\n  ServerIconActorComponent,\n  ServerStandActorComponent, ModelActorComponent,\n  WorkstationActorComponent\n} from '../server';\n\n\n@Injectable()\nexport class ActorRepositoryService {\n\n  protected list = new Map>();\n  protected defaultId!: string;\n\n  constructor(\n    //TODO: https://stackoverflow.com/questions/70946038/replace-deprecated-angular-componentfactoryresolver-componentfactory\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.register('stand', ServerStandActorComponent);\n    this.register('compact', ServerCompactActorComponent);\n    this.register('barrel', ServerBarrelActorComponent);\n    this.register('icon', ServerIconActorComponent);\n    this.register('workstation', WorkstationActorComponent);\n    this.register('model', ModelActorComponent);\n  }\n\n  public register(id: string, component: Type): void {\n    // console.log('ActorRepositoryService.register', id);\n    if (!this.defaultId) {\n      this.defaultId = id;\n    }\n    this.list.set(id, component);\n  }\n\n  public getComponentFactory(id: string | undefined): ComponentFactory | undefined {\n    const requestId :string = id ? id : this.defaultId\n    // console.log('ActorRepositoryService.getComponentFactory requestId:', requestId);\n    const comp = this.list.get(requestId);\n    if (comp) {\n      const result = this.resolver.resolveComponentFactory(comp);\n      // console.log('ActorRepositoryService.getComponentFactory result', result);\n      return result;\n    } else {\n      // console.log('ActorRepositoryService.getComponentFactory undefined result');\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmbientLightComponent.html":{"url":"components/AmbientLightComponent.html","title":"component - AmbientLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AmbientLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/ambient-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AmbientLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-ambient-light\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FFFFFF'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/ambient-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-ambient-light',\n  providers: [provideParent(AmbientLightComponent)],\n  template: ''\n})\nexport class AmbientLightComponent extends AbstractObject3D {\n\n  @Input() color: string | number = '#FFFFFF';\n  @Input() intensity = 0.8;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.AmbientLight(this.color);\n    light.intensity = this.intensity;\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AmbientLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationStep\n                        \n                    \n                \n            \n            \n                \n                        \n                    animationStep()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Start the animationService loop.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/animation/animation.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Stop all animations.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        animate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                        \n                    \n\n            \n                \n                    Subscribe for animationService frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animationService frame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits updateAnimation event, which should be used by animated components for animationService logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animationService frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animationService frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animationService loop.\n   */\n  public start() {\n    // console.log('AnimationService.start');\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    // console.log('AnimationService.animationStep (enabled=' + this.enabled + ', observers=' + this.animate.observers.length + ')');\n    if (this.enabled && this.animate.observers) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animationService, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrthographicCameraComponent\n                        \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\nimport {OrthographicCameraComponent} from './orthographic-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent,\n    OrthographicCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ActorRepositoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DagreCompositionComponent\n                        \n                        \n                            DagreEdgeComponent\n                        \n                        \n                            DagreLayoutComponent\n                        \n                        \n                            DagreNodeComponent\n                        \n                        \n                            DagreYamlParserComponent\n                        \n                        \n                            GridActorComponent\n                        \n                        \n                            LayerActorComponent\n                        \n                        \n                            ModelActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\nimport {GridActorComponent} from './layer/grid-actor.component';\nimport {DagreCompositionComponent, DagreEdgeComponent, DagreLayoutComponent, DagreNodeComponent, DagreYamlParserComponent} from './layout';\nimport {ActorRepositoryService} from './service';\nimport {ModelActorComponent} from './server';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent,\n    GridActorComponent,\n    DagreLayoutComponent,\n    DagreEdgeComponent,\n    DagreCompositionComponent,\n    DagreNodeComponent,\n    DagreYamlParserComponent,\n    ModelActorComponent\n  ],\n  providers: [\n    ActorRepositoryService\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlurComponent\n                        \n                        \n                            DashedDrawDirective\n                        \n                        \n                            DofComponent\n                        \n                        \n                            DotScreenComponent\n                        \n                        \n                            EffectComposerComponent\n                        \n                        \n                            FogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\nimport {FogComponent} from './fog.component';\nimport {DofComponent} from './compose/dof.component';\nimport {DotScreenComponent} from './compose/dot-screen.component';\nimport {EffectComposerComponent} from './compose/effect-composer.component';\nimport {BlurComponent} from './compose/blur.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ],\n  exports: [\n    DashedDrawDirective,\n    FogComponent,\n    DofComponent,\n    DotScreenComponent,\n    EffectComposerComponent,\n    BlurComponent\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AmbientLightComponent\n                        \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\nimport {AmbientLightComponent} from './ambient-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent,\n    AmbientLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                        \n                            StlLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\nimport {StlLoaderComponent} from './stl-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent,\n    StlLoaderComponent,\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                        \n                            VideoMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\nimport {VideoMeshComponent} from './video-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    GridMeshComponent,\n    VideoMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentProjectionComponent\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FontService\n                        \n                        \n                            IconService\n                        \n                        \n                            ModelService\n                        \n                        \n                            ObjLoaderService\n                        \n                        \n                            SvgLoaderService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\nimport {ContentProjectionComponent} from './content-projection.component';\nimport {FontService, IconService, ModelService, ObjLoaderService, SvgLoaderService} from './loader';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent,\n    ContentProjectionComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ], providers: [\n    FontService,\n    SvgLoaderService,\n    IconService,\n    ObjLoaderService,\n    ModelService\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BloomService\n                        \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\nimport {BloomService} from './bloom.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService,\n    BloomService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(AxesHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:23\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.AxesHelper\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [provideParent(AxesHelperComponent)],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size = 50;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseAssetSource.html":{"url":"interfaces/BaseAssetSource.html","title":"interface - BaseAssetSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseAssetSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nconst SEPARATOR = ':';\nconst REPLACE_SYMBOL = '?';\n\nexport interface BaseAssetSource {\n  url: string;\n}\n\n@Injectable()\nexport abstract class AbstractAssetService {\n\n  protected providers: Map = new Map();\n  abstract defaultProvider: string;\n\n  constructor() {\n    this.init();\n  }\n\n  protected abstract init(): void;\n\n  public registerProvider(key: string, source: T) {\n    this.providers.set(key, source);\n  }\n\n  public setDefaultProvider(key: string) {\n    this.defaultProvider = key;\n  }\n\n  public getSource(icon: string): T {\n    if (icon) {\n      if (icon.indexOf(SEPARATOR) > 0) {\n        const args = icon.split(SEPARATOR);\n        return this.getSourceByNamespace(args[0], args[1]);\n      } else {\n        return this.getSourceByNamespace(this.defaultProvider, icon);\n      }\n    } else {\n      return this.defaultIfNotFound(icon);\n    }\n  }\n\n  public getSourceByNamespace(namespace: string, icon: string): T {\n    // console.log('AbstractAssetService.getUrlByNamespace', namespace + ', ' + icon);\n    const provider = this.providers.get(namespace);\n    if (!provider) {\n      console.warn('Icon provider not found', provider);\n      return this.defaultIfNotFound(icon);\n    }\n    const finalUrl = provider.url.replace(REPLACE_SYMBOL, icon);\n    // console.log('AbstractAssetService.getUrlByNamespace url', svgUrl);\n    return this.getFinalResult(finalUrl, provider);\n  }\n\n  public abstract getFinalResult(finalUrl: string, provider: T): T;\n\n  public abstract defaultIfNotFound(icon: string): T;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInfo.html":{"url":"interfaces/BaseInfo.html","title":"interface - BaseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            composition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        composition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        composition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BloomService.html":{"url":"injectables/BloomService.html","title":"injectable - BloomService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BloomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/bloom.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bloomComposer\n                            \n                            \n                                    Protected\n                                bloomLayer\n                            \n                            \n                                    Protected\n                                darkMaterial\n                            \n                            \n                                    Private\n                                finalComposer\n                            \n                            \n                                    Public\n                                initialized\n                            \n                            \n                                    Protected\n                                materials\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                darkenNonBloomed\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Protected\n                                restoreMaterial\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        darkenNonBloomed\n                        \n                    \n                \n            \n            \n                \n                        \n                    darkenNonBloomed(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                renderer\n                                            \n                                                        WebGLRenderer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                scene\n                                            \n                                                        THREE.Scene\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                camera\n                                            \n                                                        THREE.Camera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        restoreMaterial\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreMaterial(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/bloom.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bloomComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bloomLayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Layers()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        darkMaterial\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.MeshBasicMaterial({color: 'black'})\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        finalComposer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        materials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/bloom.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as THREE from 'three';\nimport {WebGLRenderer} from 'three';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {UnrealBloomPass} from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {FXAAShader} from 'three/examples/jsm/shaders/FXAAShader';\n\n\nexport const ENTIRE_SCENE_LAYER = 0, BLOOM_SCENE_LAYER = 1;\n\nconst vertexShader = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`;\n\n\nconst fragmentShader = `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`;\n\n\n@Injectable()\nexport class BloomService {\n\n  protected materials: Array = [];\n  protected darkMaterial = new THREE.MeshBasicMaterial({color: 'black'});\n  protected bloomLayer = new THREE.Layers();\n  private finalComposer!: EffectComposer;\n  private bloomComposer!: EffectComposer;\n  public initialized = false;\n  protected scene!: THREE.Scene;\n\n  public init(renderer: WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {\n    if (renderer && scene && camera) {\n      // console.log('BloomService.init');\n      this.scene = scene;\n\n      this.bloomLayer.set(BLOOM_SCENE_LAYER);\n      const renderScene = new RenderPass(scene, camera);\n\n      const bloomPass = new UnrealBloomPass(new THREE.Vector2(window.innerWidth, window.innerHeight), 2, 0.1, 0.1);\n      bloomPass.clear = true;\n\n      const fxaaPass = new ShaderPass(FXAAShader);\n      const pixelRatio = renderer.getPixelRatio();\n      fxaaPass.material.uniforms['resolution'].value.x = 1 / (window.innerWidth * pixelRatio);\n      fxaaPass.material.uniforms['resolution'].value.y = 1 / (window.innerHeight * pixelRatio);\n\n      this.bloomComposer = new EffectComposer(renderer);\n      this.bloomComposer.renderToScreen = false; // TODO: false\n      this.bloomComposer.addPass(renderScene);\n      this.bloomComposer.addPass(bloomPass);\n      // this.bloomComposer.addPass(fxaaPass);\n\n\n      const finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n          uniforms: {\n            baseTexture: {value: null},\n            bloomTexture: {value: this.bloomComposer.renderTarget2.texture}\n          },\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          defines: {}\n        }), 'baseTexture'\n      );\n      finalPass.needsSwap = true;\n\n      // const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\n\n      this.finalComposer = new EffectComposer(renderer);\n      this.finalComposer.addPass(renderScene);\n      this.finalComposer.addPass(finalPass);\n      this.finalComposer.addPass(fxaaPass);\n      // this.finalComposer.addPass(smaaPass);\n\n\n      this.initialized = true;\n\n    } else {\n      console.warn('BloomService.init not all parameters settled');\n    }\n  }\n\n  public render() {\n    if (this.initialized) {\n      this.scene.traverse(i => {\n        this.darkenNonBloomed(i);\n      });\n      this.bloomComposer.render();\n\n\n      this.scene.traverse(i => {\n        this.restoreMaterial(i);\n      });\n      this.finalComposer.render();\n    }\n  }\n\n\n  protected darkenNonBloomed(obj : any): void {\n    if (this.initialized && obj.isMesh && this.bloomLayer.test(obj.layers) === false) {\n      // console.log('darkenNonBloomed');\n      // @ts-ignore\n      this.materials[obj.uuid] = obj.material;\n      obj.material = this.darkMaterial;\n\n    }\n  }\n\n  protected restoreMaterial(obj : any): void {\n    if (this.initialized && obj.isMesh && this.materials[obj.uuid]) {\n      obj.material = this.materials[obj.uuid];\n      delete this.materials[obj.uuid];\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlurComponent.html":{"url":"components/BlurComponent.html","title":"component - BlurComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlurComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/blur.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-blur\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/blur.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {VerticalBlurShader} from 'three/examples/jsm/shaders/VerticalBlurShader';\nimport {HorizontalBlurShader} from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-blur',\n  template: ''\n})\nexport class BlurComponent extends AbstractComposeEffect {\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n    this.pass.push(new ShaderPass(VerticalBlurShader));\n    this.pass.push(new ShaderPass(HorizontalBlurShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges) {\n    // TODO: implement changes\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlurComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Composition.html":{"url":"interfaces/Composition.html","title":"interface - Composition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Composition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            border\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        border:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentProjectionComponent.html":{"url":"components/ContentProjectionComponent.html","title":"component - ContentProjectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentProjectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/content-projection.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(ContentProjectionComponent)\n                \n            \n\n\n            \n                selector\n                atft-content-projection\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contentProjection\n                            \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addChild\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:21\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contentProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractObject3D\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('contentProjection')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/content-projection.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Optional, SkipSelf, ViewChild} from '@angular/core';\nimport {EmptyComponent} from './helper/empty.component';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\n\n@Component({\n  selector: 'atft-content-projection',\n  providers: [provideParent(ContentProjectionComponent)],\n  template: ''\n})\nexport class ContentProjectionComponent extends EmptyComponent {\n\n  @ViewChild('contentProjection') contentProjection!: AbstractObject3D;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  override addChild(object: AbstractObject3D) {\n    if (this.contentProjection) {\n      this.contentProjection.addChild(object);\n    } else {\n      console.error('ContentProjectionComponent error: #contentProjection name not found! Embedded child object in \"ng-content\" can not be attached to parentScene object');\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContentProjectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DagreUtils.html":{"url":"classes/DagreUtils.html","title":"class - DagreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DagreUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                WIKI: https://github.com/dagrejs/dagre/wiki\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getLayout\n                            \n                            \n                                    Static\n                                modelToGraph\n                            \n                            \n                                    Static\n                                updateBaseInfo\n                            \n                            \n                                    Static\n                                updateEdges\n                            \n                            \n                                    Static\n                                updateGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getLayout\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLayout(model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        modelToGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    modelToGraph(model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     dagre.graphlib.Graph\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateBaseInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                baseInfo\n                                            \n                                                            Array | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateEdges\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEdges(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        updateGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateGraph(g: dagre.graphlib.Graph, model: GraphModel)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        dagre.graphlib.Graph\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            GraphModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dagre from 'dagre';\nimport {BaseInfo, Edge, GraphModel, Node} from './dagre-model';\n\n\n/**\n * WIKI: https://github.com/dagrejs/dagre/wiki\n */\nexport class DagreUtils {\n\n  public static modelToGraph(model: GraphModel): dagre.graphlib.Graph {\n    const g = new dagre.graphlib.Graph({\n      compound: true,\n      multigraph: true\n    });\n\n    g.setGraph(this.getLayout(model))\n\n    g.setDefaultEdgeLabel(function () {\n      return {};\n    });\n\n    this.updateGraph(g, model);\n\n    // console.log('DagreUtils.layout model', model);\n    // console.log('DagreUtils.layout g', g);\n    dagre.layout(g);\n    // console.log('DagreUtils.layout result (g.nodes())', g.nodes());\n    return g;\n  }\n\n  public static updateBaseInfo(g: dagre.graphlib.Graph, baseInfo: Array | undefined ) {\n    if (baseInfo) {\n      baseInfo.forEach((node: Node) => {\n        g.setNode(node.name, {label: node.label, width: 18, height: 18});\n        if (node.composition) {\n          g.setParent(node.name, node.composition);\n        }\n      });\n    }\n  }\n\n  public static updateEdges(g: dagre.graphlib.Graph, model: GraphModel) {\n    if (model.edges) {\n      model.edges.forEach((edge: Edge) => {\n        g.setEdge(edge.from, edge.to, {name: edge.name});\n      });\n    }\n  }\n\n  public static updateGraph(g: dagre.graphlib.Graph, model: GraphModel) {\n      this.updateBaseInfo(g, model.compositions);\n      this.updateBaseInfo(g, model.nodes);\n      this.updateEdges(g, model);\n  }\n\n  public static getLayout(model: GraphModel): any {\n    const layout: dagre.GraphLabel | undefined = model.layout;\n    return layout;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    Private\n                                edges\n                            \n                            \n                                    Private\n                                material\n                            \n                            \n                                    Private\n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                tryToFindGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dashColor\n                            \n                            \n                                dashIncrement\n                            \n                            \n                                hideDash\n                            \n                            \n                                initialOpacity\n                            \n                            \n                                targetOpacity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dashColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#FF0000'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dashIncrement\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDash\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        targetOpacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animate\n                        \n                    \n                \n            \n            \n                \n                        \n                    animate()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tryToFindGeometry\n                        \n                    \n                \n            \n            \n                \n                        \n                    tryToFindGeometry()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        edges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Material\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, Input, OnDestroy} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\nimport {Subscription} from 'rxjs';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit, OnDestroy {\n\n  @Input() dashColor: string | number = '#FF0000';\n  @Input() dashIncrement = 10;\n  @Input() initialOpacity! : number;\n  @Input() targetOpacity! : number;\n  @Input() hideDash = false; // hide dash lines at the end of animation\n\n  private edges: any;\n  private material!: THREE.Material;\n  private stop = false;\n  protected animation!: Subscription;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animationService: AnimationService\n  ) {\n  }\n\n  ngAfterViewInit(): void {\n    // console.log('DashedDrawDirective.ngAfterViewInit: Dashed draw for', this.host);\n    this.tryToFindGeometry();\n    this.animate = this.animate.bind(this);\n    this.animation = this.animationService.animate.subscribe(this.animate);\n    this.animationService.start();\n  }\n\n\n  private tryToFindGeometry() {\n    const object = this.host.getObject() as THREE.Object3D;\n    object.traverse(child => {\n      const findMesh = (child instanceof THREE.Mesh ? child : child.children[0]);\n\n      if (findMesh && findMesh instanceof THREE.Mesh && !this.edges) {\n        // console.log('DashedDrawDirective.ngAfterViewInit: child', findMesh);\n\n        const edgesGeom = new THREE.EdgesGeometry(findMesh.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: this.dashColor}));\n        this.edges.computeLineDistances();\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n        this.material = findMesh.material as THREE.Material;\n        console.log('DashedDrawDirective.tryToFindGeometry original material', this.material);\n\n        if (this.initialOpacity >= 0.0) {\n          // console.log('initialOpacity', this.initialOpacity);\n          if (!this.material.transparent) {\n            this.material.transparent = true;\n            this.material.depthWrite = true;\n            this.material.needsUpdate = true;\n          }\n          this.material.opacity = this.initialOpacity;\n        }\n        findMesh.add(this.edges);\n      } else {\n        // console.log('DashedDrawDirective.ngAfterViewInit: cant find geometry yet');\n      }\n    });\n  }\n\n  private animate() {\n    // console.log(this.host.getObject().parentScene);\n    if (!this.stop) {\n      if (this.edges) {\n        this.edges.material.dashSize += this.dashIncrement;\n        if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n\n          if (this.hideDash) {\n            this.edges.parent.children = [];\n          }\n          if (this.targetOpacity >= 0.0) {\n            this.material.opacity = this.targetOpacity;\n            if (this.targetOpacity === 1) {\n              this.material.transparent = false;\n            }\n          }\n          this.stop = true;\n        }\n      } else {\n        this.tryToFindGeometry();\n      }\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.animation?.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                        \n                    \n\n\n            \n                \n                        Converts degrees to radians\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                degrees\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DofComponent.html":{"url":"components/DofComponent.html","title":"component - DofComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DofComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dof.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dof\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aperture\n                            \n                            \n                                focus\n                            \n                            \n                                maxblur\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aperture\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.025\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxblur\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.01\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dof.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:53\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {BokehPass} from 'three/examples/jsm/postprocessing/BokehPass';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dof',\n  template: ''\n})\nexport class DofComponent extends AbstractComposeEffect {\n\n  @Input() focus = 1.0;\n  @Input() aperture = 0.025;\n  @Input() maxblur = 0.01;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  applyChanges(changes: SimpleChanges) {\n    let modified = false;\n\n    if (this.pass[0]) {\n      if (['focus'].some(propName => propName in changes)) {\n        // console.log('change focus', this.focus);\n        // @ts-ignore\n        this.pass[0].uniforms['focus'].value = this.focus;\n        modified = true;\n      }\n\n      if (['aperture'].some(propName => propName in changes)) {\n        // console.log('change aperture', this.aperture);\n        // @ts-ignore\n        this.pass[0].uniforms['aperture'].value = this.aperture;\n        modified = true;\n      }\n\n      if (['maxblur'].some(propName => propName in changes)) {\n        // console.log('change maxblur');\n        // @ts-ignore\n        this.pass[0].uniforms['maxblur'].value = this.maxblur;\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  initPasses() {\n    this.pass.push(new BokehPass(this.rendererService.getScene().getObject(), this.rendererService.getCamera().camera, {\n        focus: this.focus,\n        aperture: this.aperture,\n        maxblur: this.maxblur,\n        aspect :  window.innerWidth / window.innerHeight\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DofComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DotScreenComponent.html":{"url":"components/DotScreenComponent.html","title":"component - DotScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DotScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/dot-screen.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractComposeEffect\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-dot-screen\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                pass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyChanges\n                            \n                            \n                                initPasses\n                            \n                            \n                                    Protected\n                                disable\n                            \n                            \n                                    Protected\n                                enable\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scale\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, composer: EffectComposerComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        composer\n                                                  \n                                                        \n                                                                        EffectComposerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/dot-screen.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyChanges\n                        \n                    \n                \n            \n            \n                \napplyChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initPasses\n                        \n                    \n                \n            \n            \n                \ninitPasses()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:23\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:29\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractComposeEffect\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractComposeEffect:41\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractComposeEffect\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractComposeEffect:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {EffectComposerComponent} from './effect-composer.component';\nimport {ShaderPass} from 'three/examples/jsm/postprocessing/ShaderPass';\nimport {DotScreenShader} from 'three/examples/jsm/shaders/DotScreenShader';\nimport {AbstractComposeEffect} from './abstract-compose-effect';\n\n@Component({\n  selector: 'atft-dot-screen',\n  template: ''\n})\nexport class DotScreenComponent extends AbstractComposeEffect {\n\n  @Input() scale = 4;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override composer: EffectComposerComponent\n  ) {\n    super(rendererService, composer);\n  }\n\n  initPasses() {\n    this.pass.push(new ShaderPass(DotScreenShader));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  applyChanges(changes: SimpleChanges): boolean {\n    // TODO: Implement\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DotScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Edge.html":{"url":"interfaces/Edge.html","title":"interface - Edge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Edge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EffectComposerComponent.html":{"url":"components/EffectComposerComponent.html","title":"component - EffectComposerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EffectComposerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/compose/effect-composer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-effect-composer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                composer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPass\n                            \n                            \n                                    Public\n                                getComposer\n                            \n                            \n                                    Public\n                                initComposer\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                removePass\n                            \n                            \n                                    Public\n                                render\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                renderToScreen\n                            \n                            \n                                sceneBackgroundTarget\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parentScene: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentScene\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        renderToScreen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sceneBackgroundTarget\n                    \n                \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addPass\n                        \n                    \n                \n            \n            \n                \n                        \n                    addPass(pass: Pass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pass\n                                            \n                                                        Pass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getComposer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     EffectComposer\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    initComposer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removePass\n                        \n                    \n                \n            \n            \n                \n                        \n                    removePass(pass: Pass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pass\n                                            \n                                                        Pass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EffectComposer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/compose/effect-composer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {RendererService} from '../../renderer/renderer.service';\nimport {SceneComponent} from '../../object';\nimport {EffectComposer} from 'three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from 'three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from 'three/examples/jsm/postprocessing/Pass';\n\n@Component({\n  selector: 'atft-effect-composer',\n  template: ''\n})\nexport class EffectComposerComponent implements AfterViewInit, OnDestroy {\n\n  @Input() renderToScreen = true;\n  @Input() sceneBackgroundTarget!: SceneComponent;\n\n  protected composer?: EffectComposer;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parentScene: SceneComponent\n  ) {\n    // console.log('DofComponent.constructor', parentScene);\n  }\n\n  public ngAfterViewInit() {\n    // console.log('EffectComposerComponent.ngAfterViewInit');\n    this.initComposer();\n  }\n\n  ngOnDestroy(): void {\n    // console.log('EffectComposerComponent.ngOnDestroy');\n    this.rendererService.setComposer(undefined);\n    this.composer = undefined;\n    this.rendererService.render();\n  }\n\n  public initComposer() {\n    if (!this.composer && this.rendererService.getWebGlRenderer()) {\n      // console.log('EffectComposerComponent.initComposer');\n      this.composer = new EffectComposer(this.rendererService.getWebGlRenderer());\n      this.composer.renderToScreen = this.renderToScreen;\n\n      // TODO: move renderPass to separate component?\n      const renderPass = new RenderPass(this.parentScene.getObject(), this.rendererService.getCamera().camera);\n      this.addPass(renderPass);\n\n      if (this.sceneBackgroundTarget) {\n        this.sceneBackgroundTarget.getObject().background = this.composer.writeBuffer.texture;\n      }\n      this.rendererService.setComposer(this);\n    }\n  }\n\n  public addPass(pass: Pass) {\n    // console.log('EffectComposerComponent.addPass', pass);\n    this.initComposer();\n    this.composer?.addPass(pass);\n  }\n\n  public removePass(pass: Pass) {\n    // console.log('EffectComposerComponent.removePass', pass);\n    if (this.composer && this.composer.passes.length > 1) {\n      const passes = this.composer.passes;\n      const index = passes.indexOf(pass, 0);\n      if (index > -1) {\n        passes.splice(index, 1);\n      }\n      if (passes.length === 1) {\n        this.composer = undefined;\n      }\n    }\n  }\n\n  public render() {\n    if (this.composer) {\n      this.composer.render(0.1);\n    }\n  }\n\n  public getComposer() {\n    return this.composer;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EffectComposerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(EmptyComponent)\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:21\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Object3D\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [provideParent(EmptyComponent)],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FogComponent.html":{"url":"components/FogComponent.html","title":"component - FogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/effect/fog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-fog\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                disableFog\n                            \n                            \n                                    Protected\n                                enableFog\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                far\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: SceneComponent)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        SceneComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#0000AA'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/fog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        disableFog\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableFog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        enableFog\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableFog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/effect/fog.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/effect/fog.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnChanges, OnDestroy, Optional, SimpleChanges, SkipSelf} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\nimport {SceneComponent} from '../object';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'atft-fog',\n  template: ''\n})\nexport class FogComponent implements AfterViewInit, OnDestroy, OnChanges {\n\n  @Input() color: string | number = '#0000AA';\n  @Input() near = 10;\n  @Input() far = 100;\n\n  protected scene!: THREE.Scene;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: SceneComponent\n  ) {\n    // console.log('FogComponent.constructor', parentScene);\n\n  }\n\n\n  public ngAfterViewInit() {\n    // console.log('ngAfterViewInit', this.parentScene);\n    if (this.parent && this.parent.getObject() && this.parent.getObject().isScene) {\n      // console.log('FogComponent detected parentScene scene', this.parentScene);\n      this.scene = this.parent.getObject();\n      this.enableFog();\n    }\n  }\n\n  protected enableFog() {\n    // console.log('enableFog');\n    this.scene.fog = new THREE.Fog(this.color, this.near, this.far);\n    this.rendererService.render();\n  }\n\n  protected disableFog() {\n    // console.log('disableFog');\n    this.scene.fog = null;\n    this.rendererService.render();\n  }\n\n  ngOnDestroy(): void {\n    this.disableFog();\n  }\n\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.scene) {\n      return;\n    }\n\n    if (['color', 'near', 'far'].some(propName => propName in changes)) {\n      this.enableFog();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FontService.html":{"url":"injectables/FontService.html","title":"injectable - FontService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FontService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/font.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:8\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {Font, FontLoader} from 'three/examples/jsm/loaders/FontLoader.js';\n\n@Injectable()\nexport class FontService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('FontService.getValue');\n    return new Promise(resolve => {\n      const loader = new FontLoader();\n      loader.load(key, resolve);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphModel.html":{"url":"interfaces/GraphModel.html","title":"interface - GraphModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compositions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            edges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compositions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compositions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:     dagre.GraphLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     dagre.GraphLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(GridHelperComponent)\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.GridHelper\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [provideParent(GridHelperComponent)],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size!: number;\n  @Input() divisions!: number;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.GridHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(HemisphereLightComponent)\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                            \n                                    Public\n                                updateParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#444444'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:57\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../../renderer/renderer.service';\nimport { provideParent } from '../../util';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [provideParent(HemisphereLightComponent)],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor: string | number = '#ffffff';\n  @Input() groundColor: string | number = '#444444';\n  @Input() intensity = 1;\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      this.skyColor,\n      this.groundColor,\n      this.intensity\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IconSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: IconSource)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:58\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            IconSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IconSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconSource.html":{"url":"interfaces/IconSource.html","title":"interface - IconSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/icon.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAssetSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowColorOverride\n                                        \n                                \n                                \n                                        \n                                            isCCW\n                                        \n                                \n                                \n                                        \n                                            noHoles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowColorOverride\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowColorOverride:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCCW\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCCW:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noHoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noHoles:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\nexport interface IconSource extends BaseAssetSource {\n  allowColorOverride: boolean;\n  isCCW: boolean;\n  noHoles: boolean;\n}\n\n@Injectable()\nexport class IconService extends AbstractAssetService {\n\n  defaultProvider = 'md';\n\n  protected init() {\n    this.registerProvider('md', {\n      url: 'https://raw.githubusercontent.com/material-icons/material-icons/master/svg/?/baseline.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('a', {\n      url: 'assets/svg/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('az', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/azure-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('g', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/google-cloud-icons/?.svg',\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    });\n    this.registerProvider('aws', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/aws-icons/?.svg',\n      allowColorOverride: false,\n      isCCW: false,\n      noHoles: true\n    });\n  }\n\n  defaultIfNotFound(icon: string): IconSource {\n    return {\n      url: icon,\n      allowColorOverride: true,\n      isCCW: false,\n      noHoles: false\n    };\n  }\n\n  getFinalResult(finalUrl: string, provider: IconSource): IconSource {\n    // console.log('IconService.getUrlByNamespace url', svgUrl);\n    return {\n      url: finalUrl,\n      allowColorOverride: provider.allowColorOverride,\n      isCCW: provider.isCCW,\n      noHoles: provider.noHoles\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n\n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                animation\n                            \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                maxZoom\n                            \n                            \n                                minDistance\n                            \n                            \n                                minZoom\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxZoom\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : Infinity\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minZoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/control/map-controls.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:57\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:58\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:74\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        animation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\nimport {Subscription} from 'rxjs';\nimport {MapControls} from \"three/examples/jsm/controls/MapControls\";\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n    `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges, OnDestroy {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n  @Input() autoRotate = false;\n  @Input() autoRotateSpeed = 0.5;\n  @Input() enableDamping = false;\n  @Input() dampingFactor = 0.1;\n  @Input() screenSpacePanning = false;\n  @Input() minDistance = 20;\n  @Input() maxDistance = 200;\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n  @Input() panSpeed = 1.2;\n  @Input() minZoom = 0;\n  @Input() maxZoom = Infinity;\n\n  protected animation!: Subscription;\n\n  constructor(\n    protected override rendererService: RendererService,\n    protected override raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  override ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping;\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.minZoom = this.minZoom;\n    this.controls.maxZoom = this.maxZoom;\n\n    this.controls.update();\n\n    // Advanced animationService:\n    if (this.autoRotate || this.enableDamping) {\n\n      this.animation = this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.animation?.unsubscribe();\n  }\n\n  public reset(): void {\n    this.controls.reset();\n  }\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelService.html":{"url":"injectables/ModelService.html","title":"injectable - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/model.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractAssetService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultProvider\n                            \n                            \n                                    Protected\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultIfNotFound\n                            \n                            \n                                getFinalResult\n                            \n                            \n                                    Protected\n                                init\n                            \n                            \n                                    Public\n                                getSource\n                            \n                            \n                                    Public\n                                getSourceByNamespace\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                setDefaultProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultIfNotFound\n                        \n                    \n                \n            \n            \n                \ndefaultIfNotFound(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseAssetSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalResult\n                        \n                    \n                \n            \n            \n                \ngetFinalResult(finalUrl: string, provider: BaseAssetSource)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                finalUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                provider\n                                            \n                                                            BaseAssetSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         BaseAssetSource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSource(icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSourceByNamespace\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceByNamespace(namespace: string, icon: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                icon\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerProvider(key: string, source: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setDefaultProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    setDefaultProvider(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractAssetService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractAssetService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '3d'\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractAssetService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractAssetService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractAssetService, BaseAssetSource} from './abstract-asset.service';\n\n\n@Injectable()\nexport class ModelService extends AbstractAssetService {\n\n  defaultProvider = '3d';\n\n  protected init() {\n    this.registerProvider('3d', {\n      url: 'https://raw.githubusercontent.com/makimenko/files/master/actor-models/?.obj'\n    });\n  }\n\n  defaultIfNotFound(icon: string): BaseAssetSource {\n    return {\n      url: icon\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFinalResult(finalUrl: string, provider: BaseAssetSource): BaseAssetSource {\n    return {\n      url: finalUrl\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NearestIntersection.html":{"url":"interfaces/NearestIntersection.html","title":"interface - NearestIntersection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NearestIntersection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            face\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     THREE.Object3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Object3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected?: THREE.Object3D;\n  private enabled = false;\n  private camera!: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event: any) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if ((i && (!this.selected || this.selected !== i.object)) || !i) {\n      if (this.selected) {\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = undefined;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event : any) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x : number, y : number): NearestIntersection | undefined {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y/*, 0.5*/);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face!: THREE.Face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection!: THREE.Intersection;\n    let nearestGroup!: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        if (nearestIntersection.face) {\n          face = nearestIntersection.face;\n        }\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as dagre from 'dagre';\n\nexport interface BaseInfo {\n  name: string;\n  label?: string;\n  composition?: string;\n}\n\nexport interface Node extends BaseInfo {\n  type?: string;\n  icon?: string;\n  model?: string;\n}\n\nexport interface Composition extends BaseInfo {\n  border?: string;\n}\n\nexport interface Edge extends BaseInfo {\n  from: string;\n  to: string;\n  type?: string;\n  color?: number;\n}\n\nexport interface GraphModel {\n  layout?: dagre.GraphLabel;\n  compositions?: Array;\n  nodes?: Array;\n  edges?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjLoaderService.html":{"url":"injectables/ObjLoaderService.html","title":"injectable - ObjLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                setMaterials\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMaterials\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMaterials(materialCreator: MTLLoader.MaterialCreator)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                materialCreator\n                                            \n                                                        MTLLoader.MaterialCreator\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OBJLoader()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/object/loader/services/obj-loader.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\n\n\n@Injectable()\nexport class ObjLoaderService extends AbstractCacheService {\n\n  private loader = new OBJLoader();\n\n  protected getValue(key: string): Promise {\n    // console.log('ObjLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      this.loader.load(key, model => {\n        resolve(model);\n      }, undefined, reject);\n    });\n  }\n\n  public setMaterials(materialCreator: MTLLoader.MaterialCreator): void {\n    this.loader.setMaterials(materialCreator);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n\n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                childCameras\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    \n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                            \n                                    Private\n                                configureListeners\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                            \n                                listeningControlElement\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listeningControlElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractOrbitControls\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractOrbitControls:22\n\n                            \n                        \n                \n                    \n                        The element on whose native element the orbit control will listen for mouse events.\nNote that keyboard events are still listened for on the global window object, this is\na known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setUpControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUpControls()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configureListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    configureListeners()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:58\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:74\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractOrbitControls\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractOrbitControls:49\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        childCameras\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(AbstractCamera, {descendants: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RendererCanvasComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(RendererCanvasComponent, {static: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractOrbitControls\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractOrbitControls:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected override rendererService: RendererService,\n    protected override raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  override ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrthographicCameraComponent.html":{"url":"components/OrthographicCameraComponent.html","title":"component - OrthographicCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrthographicCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/orthographic-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractCamera\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(OrthographicCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-orthographic-camera\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                updateZoom\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                zoom\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        updateZoom\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateZoom()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/camera/orthographic-camera.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:59\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:69\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\nimport {provideParent} from '../util';\nimport {AbstractCamera} from './abstract-camera';\n\n@Component({\n  selector: 'atft-orthographic-camera',\n  providers: [provideParent(OrthographicCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class OrthographicCameraComponent extends AbstractCamera implements OnChanges {\n\n  @Input() zoom = 4;\n\n  constructor(\n    protected override rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('OrthographicCameraComponent.createCamera');\n\n    this.camera = new THREE.OrthographicCamera(\n      window.innerWidth / -2,\n      window.innerWidth / 2,\n      window.innerHeight / -2,\n      window.innerHeight / 2,\n      0.1,\n      10000\n    );\n    this.updateZoom();\n  }\n\n  override ngOnChanges(changes: SimpleChanges): void {\n    if (!this.camera) {\n      return;\n    }\n    let mustRerender = false;\n\n    if (['zoom'].some(propName => propName in changes)) {\n      this.updateZoom();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rendererService.render();\n    }\n  }\n\n  protected updateZoom() {\n    this.camera.zoom = this.zoom;\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('OrthographicCameraComponent.updateAspectRatio: ' + aspect);\n    const frustumSize = 1000;\n    this.camera.left = -frustumSize * aspect / 2;\n    this.camera.right = frustumSize * aspect / 2;\n    this.camera.top = frustumSize / 2;\n    this.camera.bottom = -frustumSize / 2;\n    this.camera.updateProjectionMatrix();\n\n    // TODO: separate component:\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrthographicCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(PerspectiveCameraComponent, AbstractCamera)\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camera\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                            \n                                    Protected\n                                applyPosition\n                            \n                            \n                                    Protected\n                                applyZAxisUp\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                            \n                                layer\n                            \n                            \n                                positionX\n                            \n                            \n                                positionY\n                            \n                            \n                                positionZ\n                            \n                            \n                                zAxisUp\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:11\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        positionZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:12\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zAxisUp\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractCamera\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCamera:14\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        createCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCamera()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                aspect\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyPosition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:59\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        applyZAxisUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyZAxisUp()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:69\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCamera\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCamera:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCamera\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCamera:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractCamera } from './abstract-camera';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [provideParent(PerspectiveCameraComponent, AbstractCamera)],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov!: number;\n  @Input() near!: number;\n  @Input() far!: number;\n\n  constructor(\n    protected override rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                        \n                    \n\n\n            \n                \n                        Converts radians to degrees\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                radians\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Radians\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RaycasterEmitEvent.html":{"url":"interfaces/RaycasterEmitEvent.html","title":"interface - RaycasterEmitEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RaycasterEmitEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            face\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         AbstractObject3D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AbstractObject3D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        face:     THREE.Face\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     THREE.Face\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event : any) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event : any) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseExit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unSubscribeEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    unSubscribeEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\nimport * as THREE from 'three';\n\nexport interface RaycasterEmitEvent {\n  component: AbstractObject3D;\n  face?: THREE.Face;\n}\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter();\n  @Output() mouseExit = new EventEmitter();\n  @Output() click = new EventEmitter();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.click, this.onClick);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  private onMouseEnter(event : any) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  private onClick(event : any) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                    Optional\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onClick\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disable\n                        \n                    \n                \n            \n            \n                \n                        \n                    disable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enable\n                        \n                    \n                \n            \n            \n                \n                        \n                    enable()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFirstIntersectedGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFirstIntersectedGroup(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         NearestIntersection | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ignorePaused\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onMouseMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseMove(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onTouchStart\n                        \n                    \n                \n            \n            \n                \n                        \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        TouchEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pause\n                        \n                    \n                \n            \n            \n                \n                        \n                    pause()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resume\n                        \n                    \n                \n            \n            \n                \n                        \n                    resume()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                camera\n                                            \n                                                            AbstractCamera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        paused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        raycaster\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new THREE.Raycaster()\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Object3D\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\ninterface NearestIntersection {\n  object: THREE.Object3D;\n  face: THREE.Face;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected?: THREE.Object3D;\n  private enabled = false;\n  private camera!: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('click', this.onClick);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('click', this.onClick);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event: any) {\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if ((i && (!this.selected || this.selected !== i.object)) || !i) {\n      if (this.selected) {\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = undefined;\n      }\n      if (i && i.object) {\n        this.selected = i.object;\n        // @ts-ignore\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter, face: i.face});\n      }\n    }\n\n  }\n\n  private onClick(event : any) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    // #373: removed: event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i && i.object) {\n      // @ts-ignore\n      i.object.dispatchEvent({type: RaycasterEvent.click, face: i.face});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x : number, y : number): NearestIntersection | undefined {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y/*, 0.5*/);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n    let face!: THREE.Face;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection!: THREE.Intersection;\n    let nearestGroup!: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        if (nearestIntersection.face) {\n          face = nearestIntersection.face;\n        }\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        object: nearestGroup,\n        face: face\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n\n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                    Public\n                                onResize\n                            \n                            \n                                    Protected\n                                resetCanvas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                preserveDrawingBuffer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        preserveDrawingBuffer\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        resetCanvas\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:38\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\nExample :area which is listened for mouse move and zoom events) to the rendering pane\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements OnInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef!: ElementRef;\n\n  @Input() preserveDrawingBuffer = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngOnInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.preserveDrawingBuffer);\n    this.resetCanvas();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public onResize(event: Event) {\n    this.resetCanvas();\n  }\n\n  protected resetCanvas() {\n    // console.log('RendererCanvasComponent.resetCanvas');\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                    Optional\n                                composer\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCamera\n                            \n                            \n                                    Public\n                                getScene\n                            \n                            \n                                    Public\n                                getWebGlRenderer\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setComposer\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateAspectRatio\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCamera()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AbstractCamera\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScene()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SceneComponent\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getWebGlRenderer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWebGlRenderer()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.WebGLRenderer\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preserveDrawingBuffer\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resize\n                        \n                    \n                \n            \n            \n                \n                        \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setCamera\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                camera\n                                            \n                                                            AbstractCamera\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setComposer\n                        \n                    \n                \n            \n            \n                \n                        \n                    setComposer(composer: EffectComposerComponent | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                composer\n                                            \n                                                            EffectComposerComponent | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setScene\n                        \n                    \n                \n            \n            \n                \n                        \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n                                            \n                                                            SceneComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateChildCamerasAspectRatio\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/renderer/renderer.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                canvas\n                                            \n                                                        HTMLCanvasElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        aspect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AbstractCamera\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        composer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EffectComposerComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        webGlRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {StatsService} from '../stats/stats.service';\nimport {EffectComposerComponent} from '../effect';\n\n\n@Injectable()\nexport class RendererService {\n\n  private init = false;\n  private scene!: SceneComponent;\n  private camera!: AbstractCamera;\n  private webGlRenderer!: THREE.WebGLRenderer;\n  private aspect!: number;\n\n  private composer?: EffectComposerComponent;\n\n  constructor(\n    private statsService: StatsService,\n    // TODO: private bloom: BloomService\n  ) {\n\n  }\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    // TODO: this.bloomInit();\n    if (this.init && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      // TODO: this.bloom.render();\n      // console.log('render');\n      if (this.composer) {\n        this.composer.render();\n        if (!this.composer.renderToScreen) {\n          this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n        }\n      } else {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, preserveDrawingBuffer : boolean) {\n    // console.log('RendererComponent.initialize');\n    this.webGlRenderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    });\n    this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n    this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n    // this.scene.background = this.renderTarget.texture;\n\n    // TODO: props\n    this.webGlRenderer.shadowMap.enabled = false;\n    this.webGlRenderer.shadowMap.autoUpdate = false;\n    this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.webGlRenderer.setClearColor(0x000000, 0);\n    this.webGlRenderer.autoClear = true;\n    canvas.style.zIndex = '2';\n\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n  /*\n  protected bloomInit() {\n    if (!this.bloom.initialized && this.scene && this.scene.getObject() && this.camera && this.camera.camera) {\n      this.bloom.init(this.webGlRenderer, this.scene.getObject(), this.camera.camera);\n    }\n  }\n  */\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    this.webGlRenderer.setSize(width, height, true);\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private updateAspectRatio(canvas: HTMLCanvasElement): void  {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.updateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n  public getScene() {\n    return this.scene;\n  }\n\n  public getCamera() {\n    return this.camera;\n  }\n\n  public getWebGlRenderer() {\n    return this.webGlRenderer;\n  }\n\n  public setComposer(composer: EffectComposerComponent | undefined) {\n    this.composer = composer;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGLoader.html":{"url":"classes/SVGLoader.html","title":"class - SVGLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/threejs-fork/SVGLoader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Loader\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDPI\n                            \n                            \n                                defaultUnit\n                            \n                            \n                                defs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createShapes\n                            \n                            \n                                    Static\n                                getStrokeStyle\n                            \n                            \n                                load\n                            \n                            \n                                parse\n                            \n                            \n                                    Static\n                                pointsToStroke\n                            \n                            \n                                    Static\n                                pointsToStrokeWithBuffers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(manager?)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manager\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultDPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultUnit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'px'\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        createShapes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createShapes(shapePath)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:1678\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shapePath\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getStrokeStyle\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStrokeStyle(width, color, lineJoin, lineCap, miterLimit)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lineJoin\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lineCap\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                miterLimit\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { strokeColor: any; strokeWidth: any; strokeLineJoin: any; strokeLineCap: any; strokeMiterLimit: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(url, onLoad, onProgress, onError)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onLoad\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onProgress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                onError\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(text)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { paths: {}; xml: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pointsToStroke\n                        \n                    \n                \n            \n            \n                \n                        \n                    pointsToStroke(points, style, arcDivisions, minDistance)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                points\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                style\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arcDivisions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minDistance\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pointsToStrokeWithBuffers\n                        \n                    \n                \n            \n            \n                \n                        \n                    pointsToStrokeWithBuffers(points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset?)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/threejs-fork/SVGLoader.ts:2169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                points\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                style\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                arcDivisions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minDistance\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vertices\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                normals\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uvs\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                vertexOffset\n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Box2,\n  BufferGeometry,\n  FileLoader,\n  Float32BufferAttribute,\n  Loader,\n  Matrix3,\n  Path,\n  Shape,\n  ShapePath,\n  ShapeUtils,\n  Vector2,\n  Vector3\n} from 'three';\n\n/* eslint-disable */\nclass SVGLoader extends Loader {\n\n  defaultDPI = 90; // MA:\n  defaultUnit = 'px'; // MA:\n  defs = []; // MA:\n\n  constructor( manager? ) {\n\n    super( manager );\n\n    // Default dots per inch\n    this.defaultDPI = 90;\n\n    // Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n    this.defaultUnit = 'px';\n\n  }\n\n  load( url, onLoad, onProgress, onError ) {\n\n    const scope = this;\n\n    const loader = new FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.setRequestHeader( scope.requestHeader );\n    loader.setWithCredentials( scope.withCredentials );\n    loader.load( url, function ( text ) {\n\n      try {\n\n        onLoad( scope.parse( text ) );\n\n      } catch ( e ) {\n\n        if ( onError ) {\n\n          onError( e );\n\n        } else {\n\n          console.error( e );\n\n        }\n\n        scope.manager.itemError( url );\n\n      }\n\n    }, onProgress, onError );\n\n  }\n\n  parse( text ) {\n\n    const scope = this;\n\n    function parseNode( node, style ) {\n\n      if ( node.nodeType !== 1 ) return;\n\n      const transform = getNodeTransform( node );\n\n      let traverseChildNodes = true;\n\n      let path = null;\n\n      switch ( node.nodeName ) {\n\n        case 'svg':\n          break;\n\n        case 'style':\n          parseCSSStylesheet( node );\n          break;\n\n        case 'g':\n          style = parseStyle( node, style );\n          break;\n\n        case 'path':\n          style = parseStyle( node, style );\n          if ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n          break;\n\n        case 'rect':\n          style = parseStyle( node, style );\n          path = parseRectNode( node );\n          break;\n\n        case 'polygon':\n          style = parseStyle( node, style );\n          path = parsePolygonNode( node );\n          break;\n\n        case 'polyline':\n          style = parseStyle( node, style );\n          path = parsePolylineNode( node );\n          break;\n\n        case 'circle':\n          style = parseStyle( node, style );\n          path = parseCircleNode( node );\n          break;\n\n        case 'ellipse':\n          style = parseStyle( node, style );\n          path = parseEllipseNode( node );\n          break;\n\n        case 'line':\n          style = parseStyle( node, style );\n          path = parseLineNode( node );\n          break;\n\n        case 'defs':\n          traverseChildNodes = false;\n          parseDefs(node);\n          break;\n\n        case 'use':\n          style = parseStyle( node, style );\n          const usedNodeId = node.href.baseVal.substring( 1 );\n          const usedNode = node.viewportElement.getElementById( usedNodeId );\n          if ( usedNode ) {\n\n            parseNode( usedNode, style );\n\n          } else {\n\n            console.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n          }\n\n          break;\n\n        default:\n        // console.log( node );\n\n      }\n\n      if ( path ) {\n\n        if ( style.fill !== undefined && style.fill !== 'none' && style.fill!='currentColor') {\n\n          path.color.setStyle( style.fill );\n\n        }\n\n        transformPath( path, currentTransform );\n\n        paths.push( path );\n\n        path.userData = { node: node, style: style };\n\n      }\n\n      if ( traverseChildNodes ) {\n\n        const nodes = node.childNodes;\n\n        for ( let i = 0; i  0 ) {\n\n          currentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n        } else {\n\n          currentTransform.identity();\n\n        }\n\n      }\n\n    }\n\n    function parsePathNode( node ) {\n\n      const path = new ShapePath();\n\n      const point = new Vector2();\n      const control = new Vector2();\n\n      const firstPoint = new Vector2();\n      let isFirstPoint = true;\n      let doSetFirstPoint = false;\n\n      const d = node.getAttribute( 'd' );\n\n      // console.log( d );\n\n      const commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n      for ( let i = 0, l = commands.length; i  0 ) {\n\n              // Reset point to beginning of Path\n              point.copy( firstPoint );\n              path.currentPath.currentPoint.copy( point );\n              isFirstPoint = true;\n\n            }\n\n            break;\n\n          default:\n            console.warn( command );\n\n        }\n\n        // console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n        doSetFirstPoint = false;\n\n      }\n\n      return path;\n\n    }\n\n    function parseCSSStylesheet( node ) {\n\n      if ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n      for ( let i = 0; i  i.trim() );\n\n        for ( let j = 0; j  1 ) {\n\n        // scale up rx,ry equally so cr == 1\n        const s = Math.sqrt( cr );\n        rx = s * rx;\n        ry = s * ry;\n        rxs = rx * rx;\n        rys = ry * ry;\n\n      }\n\n      const dq = ( rxs * y1ps + rys * x1ps );\n      const pq = ( rxs * rys - dq ) / dq;\n      let q = Math.sqrt( Math.max( 0, pq ) );\n      if ( large_arc_flag === sweep_flag ) q = - q;\n      const cxp = q * rx * y1p / ry;\n      const cyp = - q * ry * x1p / rx;\n\n      // Step 3: Compute (cx, cy) from (cx', cy')\n      const cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n      const cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n      // Step 4: Compute θ1 and Δθ\n      const theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n      const delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n      path.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n    }\n\n    function svgAngle( ux, uy, vx, vy ) {\n\n      const dot = ux * vx + uy * vy;\n      const len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n      let ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n      if ( ( ux * vy - uy * vx )  i.trim() );\n\n        for ( let i = 0; i  0 ) {\n\n        transform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n      }\n\n      currentTransform.copy( transform );\n      transformStack.push( transform );\n\n      return transform;\n\n    }\n\n    function parseNodeTransform( node ) {\n\n      const transform = new Matrix3();\n      const currentTransform = tempTransform0;\n\n      if ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n        const tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n        const ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n        transform.translate( tx, ty );\n\n      }\n\n      if ( node.hasAttribute( 'transform' ) ) {\n\n        const transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n        for ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n          const transformText = transformsTexts[ tIndex ].trim();\n\n          if ( transformText === '' ) continue;\n\n          const openParPos = transformText.indexOf( '(' );\n          const closeParPos = transformText.length;\n\n          if ( openParPos > 0 && openParPos = 1 ) {\n\n                  const tx = array[ 0 ];\n                  let ty = tx;\n\n                  if ( array.length >= 2 ) {\n\n                    ty = array[ 1 ];\n\n                  }\n\n                  currentTransform.translate( tx, ty );\n\n                }\n\n                break;\n\n              case 'rotate':\n\n                if ( array.length >= 1 ) {\n\n                  let angle = 0;\n                  let cx = 0;\n                  let cy = 0;\n\n                  // Angle\n                  angle = - array[ 0 ] * Math.PI / 180;\n\n                  if ( array.length >= 3 ) {\n\n                    // Center x, y\n                    cx = array[ 1 ];\n                    cy = array[ 2 ];\n\n                  }\n\n                  // Rotate around center (cx, cy)\n                  tempTransform1.identity().translate( - cx, - cy );\n                  tempTransform2.identity().rotate( angle );\n                  tempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n                  tempTransform1.identity().translate( cx, cy );\n                  currentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n                }\n\n                break;\n\n              case 'scale':\n\n                if ( array.length >= 1 ) {\n\n                  const scaleX = array[ 0 ];\n                  let scaleY = scaleX;\n\n                  if ( array.length >= 2 ) {\n\n                    scaleY = array[ 1 ];\n\n                  }\n\n                  currentTransform.scale( scaleX, scaleY );\n\n                }\n\n                break;\n\n              case 'skewX':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n                    0, 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'skewY':\n\n                if ( array.length === 1 ) {\n\n                  currentTransform.set(\n                    1, 0, 0,\n                    Math.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n              case 'matrix':\n\n                if ( array.length === 6 ) {\n\n                  currentTransform.set(\n                    array[ 0 ], array[ 2 ], array[ 4 ],\n                    array[ 1 ], array[ 3 ], array[ 5 ],\n                    0, 0, 1\n                  );\n\n                }\n\n                break;\n\n            }\n\n          }\n\n          transform.premultiply( currentTransform );\n\n        }\n\n      }\n\n      return transform;\n\n    }\n\n    function transformPath( path, m ) {\n\n      function transfVec2( v2 ) {\n\n        tempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n        v2.set( tempV3.x, tempV3.y );\n\n      }\n\n      const isRotated = isTransformRotated( m );\n\n      const subPaths = path.subPaths;\n\n      for ( let i = 0, n = subPaths.length; i = 1 ) || ( t2  1 ) ) {\n\n        //1. lines are parallel or edges don't intersect\n\n        return null;\n\n      } else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n        //2. lines are colinear\n\n        //check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n        for ( let i = 0; i  Number.EPSILON ) {\n\n        classifyResult.loc = IntersectionLocationType.RIGHT;\n        return;\n\n\n      }\n\n      if ( ( ( ax * bx )  i.t = intersection.t - Number.EPSILON ) === undefined ) {\n\n            intersectionsRaw.push( intersection );\n            intersections.push( new Vector2( intersection.x, intersection.y ) );\n\n          }\n\n        }\n\n      }\n\n      return intersections;\n\n    }\n\n    function getScanlineIntersections( scanline, boundingBox, paths ) {\n\n      const center = new Vector2();\n      boundingBox.getCenter( center );\n\n      const allIntersections = [];\n\n      paths.forEach( path => {\n\n        // check if the center of the bounding box is in the bounding box of the paths.\n        // this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n        // if a path envelops another path. The center of that oter path, has to be inside the bounding box of the enveloping path.\n        if ( path.boundingBox.containsPoint( center ) ) {\n\n          const intersections = getIntersections( scanline, path.points );\n\n          intersections.forEach( p => {\n\n            allIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n          } );\n\n        }\n\n      } );\n\n      allIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      return allIntersections;\n\n    }\n\n    function isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n      if ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n        _fillRule = 'nonzero';\n\n      }\n\n      const centerBoundingBox = new Vector2();\n      simplePath.boundingBox.getCenter( centerBoundingBox );\n\n      const scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n      const scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n      scanlineIntersections.sort( ( i1, i2 ) => {\n\n        return i1.point.x - i2.point.x;\n\n      } );\n\n      const baseIntersections = [];\n      const otherIntersections = [];\n\n      scanlineIntersections.forEach( i => {\n\n        if ( i.identifier === simplePath.identifier ) {\n\n          baseIntersections.push( i );\n\n        } else {\n\n          otherIntersections.push( i );\n\n        }\n\n      } );\n\n      const firstXOfPath = baseIntersections[ 0 ].point.x;\n\n      // build up the path hierarchy\n      const stack = [];\n      let i = 0;\n\n      while ( i  0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n          stack.pop();\n\n        } else {\n\n          stack.push( otherIntersections[ i ].identifier );\n\n        }\n\n        i ++;\n\n      }\n\n      stack.push( simplePath.identifier );\n\n      if ( _fillRule === 'evenodd' ) {\n\n        const isHole = stack.length % 2 === 0 ? true : false;\n        const isHoleFor = stack[ stack.length - 2 ];\n\n        return { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n      } else if ( _fillRule === 'nonzero' ) {\n\n        // check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n        let isHole = true;\n        let isHoleFor = null;\n        let lastCWValue = null;\n\n        for ( let i = 0; i  {\n\n      const points = p.getPoints();\n      let maxY = - BIGNUMBER;\n      let minY = BIGNUMBER;\n      let maxX = - BIGNUMBER;\n      let minX = BIGNUMBER;\n\n      //points.forEach(p => p.y *= -1);\n\n      for ( let i = 0; i  maxY ) {\n\n          maxY = p.y;\n\n        }\n\n        if ( p.y  maxX ) {\n\n          maxX = p.x;\n\n        }\n\n        if ( p.x = minX ) {\n\n        scanlineMinX = minX - 1;\n\n      }\n\n      return { points: points, isCW: ShapeUtils.isClockWise( points ), identifier: identifier ++, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n    } );\n\n    simplePaths = simplePaths.filter( sp => sp.points.length > 0 );\n\n    // check if path is solid or a hole\n    const isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, shapePath.userData.style.fillRule ) );\n\n\n    const shapesToReturn = [];\n    simplePaths.forEach( p => {\n\n      const amIAHole = isAHole[ p.identifier ];\n\n      if ( ! amIAHole.isHole ) {\n\n        const shape = new Shape( p.points );\n        const holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n        holes.forEach( h => {\n\n          const path = simplePaths[ h.identifier ];\n          shape.holes.push( new Path( path.points ) );\n\n        } );\n        shapesToReturn.push( shape );\n\n      }\n\n    } );\n\n    return shapesToReturn;\n\n  }\n\n  static getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n    // Param width: Stroke width\n    // Param color: As returned by THREE.Color.getStyle()\n    // Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n    // Param lineCap: One of \"round\", \"square\" or \"butt\"\n    // Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n    // Returns style object\n\n    width = width !== undefined ? width : 1;\n    color = color !== undefined ? color : '#000';\n    lineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n    lineCap = lineCap !== undefined ? lineCap : 'butt';\n    miterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n    return {\n      strokeColor: color,\n      strokeWidth: width,\n      strokeLineJoin: lineJoin,\n      strokeLineCap: lineCap,\n      strokeMiterLimit: miterLimit\n    };\n\n  }\n\n  static pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n    // Generates a stroke with some witdh around the given path.\n    // The path can be open or closed (last point equals to first point)\n    // Param points: Array of Vector2D (the path). Minimum 2 points.\n    // Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n    // Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n    // Param minDistance: Points closer to this distance will be merged. (Optional)\n    // Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    if ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n      return null;\n\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n    geometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n    geometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n    return geometry;\n\n  }\n\n  static pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset? ) {\n\n    // This function can be called to update existing arrays or buffers.\n    // Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n    // Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n    // Returns number of written vertices / normals / uvs pairs\n    // if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n    // 'normals' and 'uvs' buffers are optional\n\n    const tempV2_1 = new Vector2();\n    const tempV2_2 = new Vector2();\n    const tempV2_3 = new Vector2();\n    const tempV2_4 = new Vector2();\n    const tempV2_5 = new Vector2();\n    const tempV2_6 = new Vector2();\n    const tempV2_7 = new Vector2();\n    const lastPointL = new Vector2();\n    const lastPointR = new Vector2();\n    const point0L = new Vector2();\n    const point0R = new Vector2();\n    const currentPointL = new Vector2();\n    const currentPointR = new Vector2();\n    const nextPointL = new Vector2();\n    const nextPointR = new Vector2();\n    const innerPoint = new Vector2();\n    const outerPoint = new Vector2();\n\n    arcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n    minDistance = minDistance !== undefined ? minDistance : 0.001;\n    vertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n    // First ensure there are no duplicated points\n    points = removeDuplicatedPoints( points );\n\n    const numPoints = points.length;\n\n    if ( numPoints = minDistance ) {\n\n          newPoints.push( points[ i ] );\n\n        }\n\n      }\n\n      newPoints.push( points[ points.length - 1 ] );\n\n      return newPoints;\n\n    }\n\n  }\n\n\n}\n\nexport { SVGLoader };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                provideParent(SceneComponent)\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                childlren\n                            \n                            \n                                    Protected\n                                object\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                            \n                                    Public\n                                    \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    \n                                updateParent\n                            \n                            \n                                    Public\n                                addChild\n                            \n                            \n                                    Protected\n                                afterInit\n                            \n                            \n                                    Public\n                                applyRotation\n                            \n                            \n                                    Public\n                                applyScale\n                            \n                            \n                                    Public\n                                applyTranslation\n                            \n                            \n                                    Public\n                                findByName\n                            \n                            \n                                    Public\n                                getChildren\n                            \n                            \n                                    Public\n                                getObject\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Protected\n                                recursionByName\n                            \n                            \n                                    Public\n                                removeChild\n                            \n                            \n                                    Public\n                                removeChildByName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                layer\n                            \n                            \n                                name\n                            \n                            \n                                rotateX\n                            \n                            \n                                rotateY\n                            \n                            \n                                rotateZ\n                            \n                            \n                                scaleX\n                            \n                            \n                                scaleY\n                            \n                            \n                                scaleZ\n                            \n                            \n                                translateX\n                            \n                            \n                                translateY\n                            \n                            \n                                translateZ\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : '#ffffff'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uuidv4()\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:24\n\n                            \n                        \n                \n                    \n                        Rotation in Euler angles (radians) with order X, Y, Z.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scaleZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:31\n\n                            \n                        \n                \n                    \n                        Translate the geometry. This is typically done as a one time operation, and not during a loop.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translateY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        translateZ\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:33\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractObject3D\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractObject3D:44\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        newObject3DInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    newObject3DInstance()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     THREE.Scene\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        updateParent\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParent()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:31\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:143\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:156\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyRotation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyRotation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:118\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyScale()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:135\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        applyTranslation\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyTranslation()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:127\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:185\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Array>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObject()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:86\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:97\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        recursionByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    recursionByName(currentNode: AbstractObject3D, name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:192\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentNode\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChild\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChild(object: AbstractObject3D)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:160\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            AbstractObject3D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeChildByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeChildByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractObject3D\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractObject3D:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        childlren\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractObject3D\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractObject3D:48\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Optional, SimpleChanges, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport { RendererService } from '../renderer/renderer.service';\nimport { provideParent } from '../util';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [provideParent(SceneComponent)],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D implements OnChanges {\n\n  @Input() background: number | string = '#ffffff';\n\n  constructor(\n    protected override rendererService: RendererService,\n    @SkipSelf() @Optional() protected override parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(this.background);\n    return scene;\n  }\n\n  public override updateParent() {\n    // No Parent for scene. Skip: super.updateParent();\n  }\n\n  public override ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n    if (!this.object) {\n      return;\n    }\n\n    let modified = false;\n\n    if (['background'].some(propName => propName in changes)) {\n      this.getObject().background = new THREE.Color(this.background);\n      modified = true;\n    }\n\n    if (modified) {\n      this.rendererService.render();\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmbientLightComponent', 'selector': 'atft-ambient-light'},{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BlurComponent', 'selector': 'atft-blur'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'ContentProjectionComponent', 'selector': 'atft-content-projection'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DagreCompositionComponent', 'selector': 'atft-dagre-composition'},{'name': 'DagreEdgeComponent', 'selector': 'atft-dagre-edge'},{'name': 'DagreLayoutComponent', 'selector': 'atft-dagre-layout'},{'name': 'DagreNodeComponent', 'selector': 'atft-dagre-node'},{'name': 'DagreYamlParserComponent', 'selector': 'atft-dagre-yaml-parser'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'DofComponent', 'selector': 'atft-dof'},{'name': 'DotScreenComponent', 'selector': 'atft-dot-screen'},{'name': 'EffectComposerComponent', 'selector': 'atft-effect-composer'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FogComponent', 'selector': 'atft-fog'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridActorComponent', 'selector': 'atft-grid-actor'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'LoaderActorComponent', 'selector': 'atft-loader-actor'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'ModelActorComponent', 'selector': 'atft-model-actor'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'OrthographicCameraComponent', 'selector': 'atft-orthographic-camera'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'StlLoaderComponent', 'selector': 'atft-stl-loader'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextActorComponent', 'selector': 'atft-text-actor'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'VideoMeshComponent', 'selector': 'atft-video-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'AbstractCamera', 'selector': ''},{'name': 'AbstractComposeEffect', 'selector': ''},{'name': 'AbstractConnector', 'selector': ''},{'name': 'AbstractEmptyDirective', 'selector': ''},{'name': 'AbstractLazyObject3D', 'selector': ''},{'name': 'AbstractMesh', 'selector': ''},{'name': 'AbstractModelLoader', 'selector': ''},{'name': 'AbstractObject3D', 'selector': ''},{'name': 'AbstractOrbitControls', 'selector': ''},{'name': 'AbstractServerActor', 'selector': ''},{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggle()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        stats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stats\n\n                    \n                \n                    \n                        \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats?: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = new Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      // @ts-ignore\n      this.stats.dom = undefined;\n      this.stats = undefined;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgLoaderService.html":{"url":"injectables/SvgLoaderService.html","title":"injectable - SvgLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SvgLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractCacheService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getValue\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:10\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractCacheService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractCacheService:5\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                        \n                            \n                                Inherited from         AbstractCacheService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractCacheService:3\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ShapePath} from 'three';\nimport {AbstractCacheService} from './abstract-cache.service';\nimport {SVGLoader} from '../../../threejs-fork/SVGLoader';\n\n\n@Injectable()\nexport class SvgLoaderService extends AbstractCacheService {\n\n  protected getValue(key: string): Promise {\n    // console.log('SvgLoaderService.getValue');\n    return new Promise((resolve, reject) => {\n      const loader = new SVGLoader();\n      // @ts-ignore\n      loader.load(key, data => {\n          resolve(data.paths);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UxActorModule.html":{"url":"modules/UxActorModule.html","title":"module - UxActorModule","body":"\n                   \n\n\n\n\n    Modules\n    UxActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_exports\n\n\n\ncluster_UxActorModule_imports\n\n\n\ncluster_UxActorModule_declarations\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/ux/ux-actor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderActorComponent\n                        \n                        \n                            TextActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {TextActorComponent} from './text/text-actor.component';\nimport {LoaderActorComponent} from './loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    TextActorComponent,\n    LoaderActorComponent\n  ],\n  exports: [\n    TextActorComponent,\n    LoaderActorComponent\n  ]\n})\nexport class UxActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.1 (2023-12-04)\nFeatures\n\nUpgrade to Angular 17 (c28180a)\n\nBug Fixes\n\nlight intensity (d8a9455)\nupgrade three from 0.158.0 to 0.159.0 (#442) (71c3760)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/grid-actor.component.ts\n            \n            component\n            GridActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-composition.component.ts\n            \n            component\n            DagreCompositionComponent\n            \n                3 %\n                (2/53)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n            \n            component\n            DagreEdgeComponent\n            \n                2 %\n                (2/74)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            component\n            DagreLayoutComponent\n            \n                3 %\n                (2/51)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_ALIGN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_EDGESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_MARGIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_NODESEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKDIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_RANKSEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n            \n            variable\n            DEFAULT_SEP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            BaseInfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Composition\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Edge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            GraphModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-model.ts\n            \n            interface\n            Node\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-node.component.ts\n            \n            component\n            DagreNodeComponent\n            \n                4 %\n                (2/41)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-utils.ts\n            \n            class\n            DagreUtils\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layout/dagre-yaml-parser.component.ts\n            \n            component\n            DagreYamlParserComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            directive\n            AbstractServerActor\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/model-actor.component.ts\n            \n            component\n            ModelActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/service/actor-repository.service.ts\n            \n            injectable\n            ActorRepositoryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/loader/loader-actor.component.ts\n            \n            component\n            LoaderActorComponent\n            \n                4 %\n                (2/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/ux/text/text-actor.component.ts\n            \n            component\n            TextActorComponent\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/abstract-camera.ts\n            \n            directive\n            AbstractCamera\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/orthographic-camera.component.ts\n            \n            component\n            OrthographicCameraComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/abstract-orbit-controls.ts\n            \n            directive\n            AbstractOrbitControls\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/abstract-compose-effect.ts\n            \n            directive\n            AbstractComposeEffect\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/blur.component.ts\n            \n            component\n            BlurComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dof.component.ts\n            \n            component\n            DofComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/dot-screen.component.ts\n            \n            component\n            DotScreenComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/compose/effect-composer.component.ts\n            \n            component\n            EffectComposerComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/fog.component.ts\n            \n            component\n            FogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-empty-directive.ts\n            \n            directive\n            AbstractEmptyDirective\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-lazy-object-3d.ts\n            \n            directive\n            AbstractLazyObject3D\n            \n                13 %\n                (5/36)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/abstract-object-3d.ts\n            \n            directive\n            AbstractObject3D\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/abstract-connector.ts\n            \n            directive\n            AbstractConnector\n            \n                10 %\n                (4/39)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                3 %\n                (2/56)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/content-projection.component.ts\n            \n            component\n            ContentProjectionComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/ambient-light.component.ts\n            \n            component\n            AmbientLightComponent\n            \n                5 %\n                (2/35)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/abstract-model-loader.ts\n            \n            directive\n            AbstractModelLoader\n            \n                18 %\n                (7/38)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                18 %\n                (8/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                12 %\n                (5/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            injectable\n            AbstractAssetService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            interface\n            BaseAssetSource\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            REPLACE_SYMBOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n            \n            variable\n            SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/abstract-cache.service.ts\n            \n            class\n            AbstractCacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/font.service.ts\n            \n            injectable\n            FontService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            injectable\n            IconService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/icon.service.ts\n            \n            interface\n            IconSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/model.service.ts\n            \n            injectable\n            ModelService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/obj-loader.service.ts\n            \n            injectable\n            ObjLoaderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/services/svg-loader.service.ts\n            \n            injectable\n            SvgLoaderService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/stl-loader.component.ts\n            \n            component\n            StlLoaderComponent\n            \n                11 %\n                (5/43)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                10 %\n                (5/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/abstract-mesh-3d.ts\n            \n            directive\n            AbstractMesh\n            \n                5 %\n                (2/40)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                17 %\n                (8/47)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                4 %\n                (2/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                13 %\n                (6/45)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                4 %\n                (2/44)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                8 %\n                (4/46)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/video-mesh.component.ts\n            \n            component\n            VideoMeshComponent\n            \n                7 %\n                (4/55)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                7 %\n                (4/57)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            interface\n            RaycasterEmitEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            interface\n            NearestIntersection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            injectable\n            BloomService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            ENTIRE_SCENE_LAYER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            fragmentShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/bloom.service.ts\n            \n            variable\n            vertexShader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/threejs-fork/SVGLoader.ts\n            \n            class\n            SVGLoader\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/provide-parent.ts\n            \n            function\n            provideParent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/removeFromArray.ts\n            \n            function\n            removeFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.5\n        \n            @angular/common : ^17.0.5\n        \n            @angular/compiler : ^17.0.5\n        \n            @angular/core : ^17.0.5\n        \n            @angular/forms : ^17.0.5\n        \n            @angular/platform-browser : ^17.0.5\n        \n            @angular/platform-browser-dynamic : ^17.0.5\n        \n            @angular/router : ^17.0.5\n        \n            @compodoc/compodoc : ^1.1.23\n        \n            dagre : ^0.8.5\n        \n            rxjs : ~7.8.0\n        \n            three : ^0.159.0\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            yaml : ^2.3.4\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EdgeType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineEndType   (projects/.../dagre-edge.component.ts)\n                        \n                        \n                            LineType   (projects/.../line-connector.component.ts)\n                        \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/actor/data-center/layout/dagre-edge.component.ts\n    \n        \n            \n                \n                    \n                        \n                        EdgeType\n                    \n                \n                        \n                            \n                                 sequence\n                            \n                        \n                        \n                            \n                                Value : sequence\n                            \n                        \n                        \n                            \n                                 association\n                            \n                        \n                        \n                            \n                                Value : association\n                            \n                        \n                        \n                            \n                                 message\n                            \n                        \n                        \n                            \n                                Value : message\n                            \n                        \n                        \n                            \n                                 line\n                            \n                        \n                        \n                            \n                                Value : line\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LineEndType\n                    \n                \n                        \n                            \n                                 none\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 circle\n                            \n                        \n                        \n                            \n                                Value : circle\n                            \n                        \n                        \n                            \n                                 arrow\n                            \n                        \n                        \n                            \n                                Value : arrow\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LineType\n                    \n                \n                        \n                            \n                                 dashed\n                            \n                        \n                        \n                            \n                                Value : dash\n                            \n                        \n                        \n                            \n                                 solid\n                            \n                        \n                        \n                            \n                                Value : solid\n                            \n                        \n            \n        \n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 click\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            provideParent   (projects/.../provide-parent.ts)\n                        \n                        \n                            removeFromArray   (projects/.../removeFromArray.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appliedMaterial\n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?: string, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                        Creates material\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                materialColor\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    color\n\n                                            \n                                        \n                                        \n                                                materialName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    material label as string\n\n                                            \n                                        \n                                        \n                                                depthWrite\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    enable depth write\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     THREE.Material\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateSize\n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     THREE.Vector3\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fixCenter\n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/provide-parent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideParent\n                        \n                    \n                \n            \n            \n                \nprovideParent(component: any, parentType?: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentType\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/removeFromArray.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        removeFromArray\n                        \n                    \n                \n            \n            \n                \nremoveFromArray(array: Array, element: T)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                element\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scaleToFit\n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                max\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\nExample :\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:\nExample :npm i three dagre atft yaml --save\nnpm i @types/dagre @types/three --save-dev\nImport library into your module:\nExample :import { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\nExample :\n  \n    \n    \n    \n      \n      \n    \n  \n\n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\nExample : html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\nExample : :host {\n     height: 100%;\n     display: flex;\n } \n\nUsed by\nSample vect project, which is based on atft library:\n\n\n\n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nRelease and Changelog\n\nFollow Conventional Commits.\nSee standard-version guidelines for release and changelog update.\n\nTo automatically generate changelog and bump atft version:\nExample :npm run releaseContributors\n\n ComFreek\n makimenko\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UxActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftDataCenterActorModule_providers\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_AmbientLightComponent_providers\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftObjectModule_providers\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\ncluster_UxActorModule\n\n\n\ncluster_UxActorModule_declarations\n\n\n\ncluster_UxActorModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nOrthographicCameraComponent\n\nOrthographicCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nOrthographicCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nOrthographicCameraComponent \n\nOrthographicCameraComponent \n\nOrthographicCameraComponent  -->\n\nAtftCameraModule->OrthographicCameraComponent \n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nDagreCompositionComponent\n\nDagreCompositionComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nDagreCompositionComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreEdgeComponent\n\nDagreEdgeComponent\n\nAtftDataCenterActorModule -->\n\nDagreEdgeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreLayoutComponent\n\nDagreLayoutComponent\n\nAtftDataCenterActorModule -->\n\nDagreLayoutComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreNodeComponent\n\nDagreNodeComponent\n\nAtftDataCenterActorModule -->\n\nDagreNodeComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreYamlParserComponent\n\nDagreYamlParserComponent\n\nAtftDataCenterActorModule -->\n\nDagreYamlParserComponent->AtftDataCenterActorModule\n\n\n\n\n\nGridActorComponent\n\nGridActorComponent\n\nAtftDataCenterActorModule -->\n\nGridActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nModelActorComponent\n\nModelActorComponent\n\nAtftDataCenterActorModule -->\n\nModelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nDagreCompositionComponent \n\nDagreCompositionComponent \n\nDagreCompositionComponent  -->\n\nAtftDataCenterActorModule->DagreCompositionComponent \n\n\n\n\n\nDagreEdgeComponent \n\nDagreEdgeComponent \n\nDagreEdgeComponent  -->\n\nAtftDataCenterActorModule->DagreEdgeComponent \n\n\n\n\n\nDagreLayoutComponent \n\nDagreLayoutComponent \n\nDagreLayoutComponent  -->\n\nAtftDataCenterActorModule->DagreLayoutComponent \n\n\n\n\n\nDagreNodeComponent \n\nDagreNodeComponent \n\nDagreNodeComponent  -->\n\nAtftDataCenterActorModule->DagreNodeComponent \n\n\n\n\n\nDagreYamlParserComponent \n\nDagreYamlParserComponent \n\nDagreYamlParserComponent  -->\n\nAtftDataCenterActorModule->DagreYamlParserComponent \n\n\n\n\n\nGridActorComponent \n\nGridActorComponent \n\nGridActorComponent  -->\n\nAtftDataCenterActorModule->GridActorComponent \n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nModelActorComponent \n\nModelActorComponent \n\nModelActorComponent  -->\n\nAtftDataCenterActorModule->ModelActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nUxActorModule\n\nUxActorModule\n\nUxActorModule -->\n\nAtftModule->UxActorModule\n\n\n\n\n\nActorRepositoryService\n\nActorRepositoryService\n\nAtftDataCenterActorModule -->\n\nActorRepositoryService->AtftDataCenterActorModule\n\n\n\n\n\nBlurComponent\n\nBlurComponent\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nBlurComponent->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDofComponent\n\nDofComponent\n\nAtftEffectModule -->\n\nDofComponent->AtftEffectModule\n\n\n\n\n\nDotScreenComponent\n\nDotScreenComponent\n\nAtftEffectModule -->\n\nDotScreenComponent->AtftEffectModule\n\n\n\n\n\nEffectComposerComponent\n\nEffectComposerComponent\n\nAtftEffectModule -->\n\nEffectComposerComponent->AtftEffectModule\n\n\n\n\n\nFogComponent\n\nFogComponent\n\nAtftEffectModule -->\n\nFogComponent->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nBlurComponent \n\nBlurComponent \n\nBlurComponent  -->\n\nAtftEffectModule->BlurComponent \n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nDofComponent \n\nDofComponent \n\nDofComponent  -->\n\nAtftEffectModule->DofComponent \n\n\n\n\n\nDotScreenComponent \n\nDotScreenComponent \n\nDotScreenComponent  -->\n\nAtftEffectModule->DotScreenComponent \n\n\n\n\n\nEffectComposerComponent \n\nEffectComposerComponent \n\nEffectComposerComponent  -->\n\nAtftEffectModule->EffectComposerComponent \n\n\n\n\n\nFogComponent \n\nFogComponent \n\nFogComponent  -->\n\nAtftEffectModule->FogComponent \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAmbientLightComponent\n\nAmbientLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nAmbientLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nAmbientLightComponent \n\nAmbientLightComponent \n\nAmbientLightComponent  -->\n\nAtftLightModule->AmbientLightComponent \n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nprovideParent(AmbientLightComponent)\n\nprovideParent(AmbientLightComponent)\n\nAmbientLightComponent -->\n\nprovideParent(AmbientLightComponent)->AmbientLightComponent\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nStlLoaderComponent\n\nStlLoaderComponent\n\nAtftLoaderModule -->\n\nStlLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\nStlLoaderComponent \n\nStlLoaderComponent \n\nStlLoaderComponent  -->\n\nAtftLoaderModule->StlLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nVideoMeshComponent\n\nVideoMeshComponent\n\nAtftMeshModule -->\n\nVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\nVideoMeshComponent \n\nVideoMeshComponent \n\nVideoMeshComponent  -->\n\nAtftMeshModule->VideoMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nContentProjectionComponent\n\nContentProjectionComponent\n\nAtftObjectModule -->\n\nContentProjectionComponent->AtftObjectModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nFontService\n\nFontService\n\nAtftObjectModule -->\n\nFontService->AtftObjectModule\n\n\n\n\n\nIconService\n\nIconService\n\nAtftObjectModule -->\n\nIconService->AtftObjectModule\n\n\n\n\n\nModelService\n\nModelService\n\nAtftObjectModule -->\n\nModelService->AtftObjectModule\n\n\n\n\n\nObjLoaderService\n\nObjLoaderService\n\nAtftObjectModule -->\n\nObjLoaderService->AtftObjectModule\n\n\n\n\n\nSvgLoaderService\n\nSvgLoaderService\n\nAtftObjectModule -->\n\nSvgLoaderService->AtftObjectModule\n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nBloomService\n\nBloomService\n\nAtftRendererModule -->\n\nBloomService->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nLoaderActorComponent\n\nLoaderActorComponent\n\nUxActorModule -->\n\nLoaderActorComponent->UxActorModule\n\n\n\n\n\nTextActorComponent\n\nTextActorComponent\n\nUxActorModule -->\n\nTextActorComponent->UxActorModule\n\n\n\n\n\nLoaderActorComponent \n\nLoaderActorComponent \n\nLoaderActorComponent  -->\n\nUxActorModule->LoaderActorComponent \n\n\n\n\n\nTextActorComponent \n\nTextActorComponent \n\nTextActorComponent  -->\n\nUxActorModule->TextActorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    48 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_ALIGN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_EDGESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_MARGIN   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_NODESEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKDIR   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKER   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_RANKSEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            DEFAULT_SEP   (projects/.../dagre-layout.component.ts)\n                        \n                        \n                            ENTIRE_SCENE_LAYER   (projects/.../bloom.service.ts)\n                        \n                        \n                            fragmentShader   (projects/.../bloom.service.ts)\n                        \n                        \n                            REPLACE_SYMBOL   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            SEPARATOR   (projects/.../abstract-asset.service.ts)\n                        \n                        \n                            vertexShader   (projects/.../bloom.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/actor/data-center/layout/dagre-layout.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ALIGN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DL'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_EDGESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MARGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_NODESEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKDIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'network-simplex'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_RANKSEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/renderer/bloom.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTIRE_SCENE_LAYER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fragmentShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  uniform sampler2D baseTexture;\n  uniform sampler2D bloomTexture;\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = ( texture2D( baseTexture, vUv ) + vec4( 1.0 ) * texture2D( bloomTexture, vUv ) );\n  }`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vertexShader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }`\n                    \n                \n\n\n        \n    \n\n    projects/atft/src/lib/object/loader/services/abstract-asset.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REPLACE_SYMBOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '?'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
